"project","className","benchmarkName","sameConfig","sameCode","bothSame","neverSameBenchmark"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_intstream_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_intstream_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_intstream_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_intstream_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_eager_reverse_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SetAddAllTest","jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SetAddAllTest","ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.ListEqualTest","jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.ListEqualTest","ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokePut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_eager_guava","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_eager_guava","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_eager_guava","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_not","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_streams_ec_lambda_not","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_negate","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_streams_ec_lambda_negate","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_eager_ec_select_predicates_not","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_eager_forkjoin_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.ListAddAllTest","jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.ListAddAllTest","ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.EcMutableMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.KolobokeMutableMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaAnyRefMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","mutableEcPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","mutableScalaPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","immutableScalaPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaMutableMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.HppcMutableMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.TroveMutableMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.KolobokeMapPutTest","koloboke","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.EcImmutableMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","hppc","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaImmutableMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.JdkMutableMapGetTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.TroveMapPutTest","trove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaAnyRefMapPutTest","scalaAnyRef","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","put","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","presizedPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","remove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_eager_fixed_pool_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokePut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.BagAddAllTest","guava","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.BagAddAllTest","ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_eager_forkjoin_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokePut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_ec_hand_coded","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_ec_hand_coded","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_ec_hand_coded","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala_hand_coded","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_mapToStringJoining_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_mapToStringJoining_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_mapToStringJoining_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_mapToStringJoining_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_collectToStringJoining_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_collectToStringJoining_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_makeString_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_makeString_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_primitiveMakeString_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_guava","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_guava","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_guava","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecGet","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokePut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeRemove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToIntSum_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToIntSum_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToLongSum_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToLongSum_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToIntSum_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToIntSum_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToLongSum_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToLongSum_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_directSumOfInt_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_collectIntSum_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_collectIntSum_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_sumOfInt_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_sumOfInt_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_sum_intList","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_intstream_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_intstream_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_intstream_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_intstream_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_eager_reverse_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterECBoxedEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterECBoxedLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterECParallelEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterECParallelLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterECPrimitiveEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterECPrimitiveLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterJDKBoxedParallelStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterJDKBoxedStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterJDKIntStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterJDKIntStreamParallel","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterJDKIntStreamToEC","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterJDKIntStreamParallelToEC","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumECBoxedEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumECBoxedLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumECOptimizedParallelEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumECOptimizedParallelLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumECParallelLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumECPrimitiveEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumECPrimitiveLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumJDKBoxedParallelStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumJDKBoxedStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumJDKIntStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","filterMapSumJDKIntStreamParallel","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapECBoxedEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapECBoxedLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapECParallelEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapECParallelLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapECPrimitiveEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapECPrimitiveLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapJDKBoxedParallelStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapJDKBoxedStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapJDKIntStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapJDKIntStreamParallel","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapJDKIntStreamToEC","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","mapJDKIntStreamParallelToEC","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumECBoxedEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumECBoxedLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumECParallelEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumECParallelLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumECPrimitiveEager","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumECPrimitiveLazy","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumJDKBoxedParallelStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumJDKBoxedStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumJDKIntStreamParallel","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest","sumJDKIntStream","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","get","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","put","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","presizedPut","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","remove","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","copyTest","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_mutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_immutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_mutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_immutable_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_mutable_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_mutable_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_eager_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_scala","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_eager_forkjoin_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_eager_directSumOfDouble_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_eager_collectDoubleSum_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_directSumOfDouble_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_directSumOfDouble_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_eager_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_mapToIntSum_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_mapToIntSum_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","parallel_lazy_mapToIntSum_jdk","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","parallel_lazy_mapToIntSum_streams_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_summarizeInt_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_collectIntSummaryStatistics_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_collectIntSummaryStatistics_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_summarizeInt_ec","true","true","true","false"
"motlin/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_summaryStatistics_intList","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_intstream_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_intstream_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_intstream_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_intstream_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_eager_reverse_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SetAddAllTest","jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SetAddAllTest","ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.ListEqualTest","jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.ListEqualTest","ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokePut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_eager_guava","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_eager_guava","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_eager_guava","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_not","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_streams_ec_lambda_not","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_negate","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_streams_ec_lambda_negate","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_eager_ec_select_predicates_not","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_eager_forkjoin_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.ListAddAllTest","jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.ListAddAllTest","ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.EcMutableMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.KolobokeMutableMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaAnyRefMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","mutableEcPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","mutableScalaPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","immutableScalaPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaMutableMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.HppcMutableMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.TroveMutableMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.KolobokeMapPutTest","koloboke","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.EcImmutableMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","hppc","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaImmutableMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.JdkMutableMapGetTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.TroveMapPutTest","trove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaAnyRefMapPutTest","scalaAnyRef","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","put","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","presizedPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","remove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_eager_fixed_pool_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokePut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.BagAddAllTest","guava","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.BagAddAllTest","ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_eager_forkjoin_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokePut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_ec_hand_coded","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_ec_hand_coded","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_ec_hand_coded","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala_hand_coded","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_mapToStringJoining_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_mapToStringJoining_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_mapToStringJoining_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_mapToStringJoining_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_collectToStringJoining_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_collectToStringJoining_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_makeString_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_makeString_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_primitiveMakeString_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_guava","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_guava","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_guava","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecGet","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokePut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeRemove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToIntSum_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToIntSum_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToLongSum_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToLongSum_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToIntSum_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToIntSum_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToLongSum_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToLongSum_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_directSumOfInt_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_collectIntSum_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_collectIntSum_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_sumOfInt_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_sumOfInt_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_sum_intList","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_intstream_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_intstream_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_intstream_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_intstream_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_eager_reverse_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","get","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","put","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","presizedPut","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","remove","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","copyTest","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_mutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_immutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_mutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_immutable_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_mutable_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_mutable_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_eager_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_scala","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_eager_forkjoin_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_eager_directSumOfDouble_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_eager_collectDoubleSum_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_directSumOfDouble_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_directSumOfDouble_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_eager_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_mapToIntSum_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_mapToIntSum_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","parallel_lazy_mapToIntSum_jdk","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","parallel_lazy_mapToIntSum_streams_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_summarizeInt_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_collectIntSummaryStatistics_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_collectIntSummaryStatistics_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_summarizeInt_ec","true","true","true","false"
"g-votte/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_summaryStatistics_intList","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_intstream_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_intstream_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_intstream_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_intstream_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_eager_reverse_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","serial_lazy_reverse_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest","parallel_lazy_reverse_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SetAddAllTest","jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SetAddAllTest","ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.ListEqualTest","jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.ListEqualTest","ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokePut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","ecRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","jdkRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_eager_guava","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_eager_guava","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_eager_guava","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_not","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_streams_ec_lambda_not","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_negate","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_streams_ec_lambda_negate","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_eager_ec_select_predicates_not","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_eager_forkjoin_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.ListAddAllTest","jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.ListAddAllTest","ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.EcMutableMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.KolobokeMutableMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaAnyRefMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","mutableEcPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","mutableScalaPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest","immutableScalaPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaMutableMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.HppcMutableMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.TroveMutableMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.KolobokeMapPutTest","koloboke","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.EcImmutableMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","hppc","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest","scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaImmutableMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.JdkMutableMapGetTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.TroveMapPutTest","trove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaAnyRefMapPutTest","scalaAnyRef","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","put","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","presizedPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest","remove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_eager_fixed_pool_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest","parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokePut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","ecRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","jdkRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.BagAddAllTest","guava","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.BagAddAllTest","ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_eager_forkjoin_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokePut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","ecRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_ec_hand_coded","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_ec_hand_coded","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_ec_hand_coded","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala_hand_coded","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_mapToStringJoining_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_mapToStringJoining_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_mapToStringJoining_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_mapToStringJoining_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_collectToStringJoining_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_lazy_collectToStringJoining_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_makeString_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","parallel_lazy_makeString_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest","serial_eager_primitiveMakeString_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_guava","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_guava","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_guava","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecGet","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokePut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","ecRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeRemove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToIntSum_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToIntSum_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToLongSum_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_mapToLongSum_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToIntSum_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToIntSum_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToLongSum_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_mapToLongSum_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_directSumOfInt_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_collectIntSum_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_collectIntSum_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","parallel_lazy_sumOfInt_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_lazy_sumOfInt_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest","serial_eager_sum_intList","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_intstream_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_intstream_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_intstream_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_intstream_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_eager_reverse_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","serial_lazy_reverse_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest","parallel_lazy_reverse_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","get","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","put","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","presizedPut","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","remove","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest","copyTest","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_mutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_immutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_mutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_immutable_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","serial_mutable_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest","parallel_mutable_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_eager_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","serial_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest","parallel_lazy_scala","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_eager_forkjoin_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest","parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_eager_directSumOfDouble_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_eager_collectDoubleSum_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_directSumOfDouble_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest","serial_lazy_directSumOfDouble_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_eager_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_mapToIntSum_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_mapToIntSum_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","parallel_lazy_mapToIntSum_jdk","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","parallel_lazy_mapToIntSum_streams_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_summarizeInt_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_collectIntSummaryStatistics_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_collectIntSummaryStatistics_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_lazy_summarizeInt_ec","true","true","true","false"
"bhav0904/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest","serial_eager_summaryStatistics_intList","true","true","true","false"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_reverse_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_reverse_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_intstream_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_intstream_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_reverse_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_reverse_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_intstream_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_intstream_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_eager_reverse_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_reverse_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_reverse_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SetAddAllTest","jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SetAddAllTest","gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.ListEqualTest","jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.ListEqualTest","gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","jdkGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","gscGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","jdkPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","kolobokePut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","gscPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","gscRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","jdkRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_eager_guava","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_eager_guava","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_eager_guava","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_not","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_lazy_streams_gsc_lambda_not","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_negate","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_lazy_streams_gsc_lambda_negate","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_eager_gsc_select_predicates_not","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","parallel_eager_forkjoin_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_none_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.ListAddAllTest","jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.ListAddAllTest","gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.KolobokeMutableMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.ScalaAnyRefMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.MapGrowthTest","mutableGscPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.MapGrowthTest","mutableScalaPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.MapGrowthTest","immutableScalaPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.ScalaMutableMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.HppcMutableMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.TroveMutableMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.KolobokeMapPutTest","koloboke","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.ChainMapPutTest","gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.ChainMapPutTest","hppc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.ChainMapPutTest","jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.ChainMapPutTest","scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.ScalaImmutableMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.JdkMutableMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.GscImmutableMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.GscMutableMapGetTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.TroveMapPutTest","trove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.map.ScalaAnyRefMapPutTest","scalaAnyRef","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapTest","put","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapTest","presizedPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapTest","remove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_eager_fixed_pool_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","jdkGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","gscGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","jdkPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","kolobokePut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","gscPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","gscRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","jdkRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.BagAddAllTest","guava","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.BagAddAllTest","gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_methodref_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_lambda_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_eager_forkjoin_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","gscGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","kolobokePut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","gscPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","gscRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_gsc_hand_coded","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_gsc_hand_coded","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_gsc_hand_coded","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala_hand_coded","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.PartitionTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.PartitionTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.PartitionTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.PartitionTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_guava","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_guava","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_guava","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","gscGet","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","kolobokePut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","gscPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","gscRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeRemove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_collectIntSum_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_collectIntSum_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_collectLongSum_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_collectLongSum_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","parallel_lazy_collectIntSum_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","parallel_lazy_collectIntSum_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","parallel_lazy_collectLongSum_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","parallel_lazy_collectLongSum_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_eager_directSumOfInt_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_eager_collectIntSum_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_collectIntSum_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","parallel_lazy_directSumOfInt_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_directSumOfInt_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_reverse_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_reverse_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_intstream_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_intstream_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_reverse_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_reverse_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_intstream_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_intstream_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_eager_reverse_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_reverse_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_reverse_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SelectTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SelectTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SelectTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SelectTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SelectTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SelectTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SelectTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SelectTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","get","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","put","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","presizedPut","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","remove","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","copyTest","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","serial_mutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","serial_immutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","parallel_mutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","parallel_immutable_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","serial_mutable_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","parallel_mutable_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FlatCollectTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FlatCollectTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FlatCollectTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.FlatCollectTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_eager_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_lazy_scala","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_eager_forkjoin_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_eager_directSumOfDouble_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_eager_collectDoubleSum_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_directSumOfDouble_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_lazy_directSumOfDouble_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_serial_eager_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_jdk","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_streams_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_gsc","","","","true"
"goldmansachs/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_gsc","","","","true"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_reverse_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_intstream_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_reverse_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_intstream_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_eager_reverse_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","serial_lazy_reverse_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinTest","parallel_lazy_reverse_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SetAddAllTest","jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SetAddAllTest","gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalProduct_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalAccount_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByBigDecimalTest","sumByBigDecimalCategory_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_direct_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_collect_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByIntTest","maxByQuantity_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.ListEqualTest","jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.ListEqualTest","gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_mutable_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetContainsTest","contains_immutable_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_mutable_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","serial_immutable_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_mutable_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.set.sorted.SortedSetIterationTest","parallel_immutable_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeGet","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","gscGet","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","kolobokePut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","gscPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","gscRemove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapLargeStressTest","kolobokeRemove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","short_circuit_middle_parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnySatisfyTest","process_all_parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByProduct_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByAccount_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateByCategory_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByProduct_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByAccount_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AggregateByTest","aggregateInPlaceByCategory_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_eager_guava","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_eager_guava","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_eager_guava","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_2_keys_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_100_keys_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_unordered_lists_10000_keys_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_2_keys_parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_100_keys_parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupBySetTest","groupBy_10000_keys_parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_not","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_lazy_jdk_lambda_negate","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_eager_gsc_select_predicates_not","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.RejectTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","parallel_eager_forkjoin_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramListTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceSetTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_direct_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_collect_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByIntTest","minByQuantity_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_none_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_none_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","short_circuit_middle_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.NoneSatisfyTest","process_all_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.ListAddAllTest","jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.ListAddAllTest","gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.KolobokeMutableMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.ScalaAnyRefMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.MapGrowthTest","mutableGscPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.MapGrowthTest","mutableScalaPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.MapGrowthTest","immutableScalaPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.ScalaMutableMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.HppcMutableMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.TroveMutableMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.KolobokeMapPutTest","koloboke","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.ChainMapPutTest","gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.ChainMapPutTest","hppc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.ChainMapPutTest","jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.ChainMapPutTest","scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.ScalaImmutableMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.JdkMutableMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.GscImmutableMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.GscMutableMapGetTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.TroveMapPutTest","trove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.map.ScalaAnyRefMapPutTest","scalaAnyRef","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapTest","put","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapTest","presizedPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapTest","remove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_eager_fixed_pool_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CollectIfTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_direct_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_collect_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxByDoubleTest","maxByMarketValue_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountTest","parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeGet","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","gscGet","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","kolobokePut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","gscPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","gscRemove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.IntIntMapSmallStressTest","kolobokeRemove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.BagAddAllTest","guava","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.BagAddAllTest","gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByProduct_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByAccount_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumByDoubleTest","sumByCategory_parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_direct_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_collect_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_direct_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_methodref_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_collect_lambda_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MinByDoubleTest","minByMarketValue_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_eager_forkjoin_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramSetTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeGet","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","gscGet","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","kolobokePut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","gscPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","gscRemove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapSmallStressTest","kolobokeRemove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_gsc_hand_coded","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_eager_gsc_hand_coded","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_gsc_hand_coded","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FunctionalInterfaceTest","parallel_lazy_scala_hand_coded","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.PartitionTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.PartitionTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.PartitionTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_guava","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_guava","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_guava","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_2_keys_serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_100_keys_serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.GroupByListTest","groupBy_10000_keys_serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeGet","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","gscGet","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","kolobokePut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","gscPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","gscRemove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongLongMapLargeStressTest","kolobokeRemove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_collectIntSum_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_collectLongSum_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","parallel_lazy_collectIntSum_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","parallel_lazy_collectLongSum_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_eager_directSumOfInt_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_eager_collectIntSum_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_collectIntSum_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","parallel_lazy_directSumOfInt_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfIntTest","serial_lazy_directSumOfInt_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_reverse_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_intstream_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_reverse_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_intstream_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_eager_reverse_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","serial_lazy_reverse_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.MaxTest","parallel_lazy_reverse_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SelectTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SelectTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SelectTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SelectTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SelectTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SelectTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","get","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","put","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","presizedPut","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","remove","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.LongIntMapTest","copyTest","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","serial_mutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","serial_immutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","parallel_mutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","parallel_immutable_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","serial_mutable_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.list.ListIterationTest","parallel_mutable_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FlatCollectTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FlatCollectTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.FlatCollectTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_eager_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","serial_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.CountSetTest","parallel_lazy_scala","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_eager_forkjoin_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AnagramBagTest","parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_collectDoubleSum_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_eager_directSumOfDouble_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_eager_collectDoubleSum_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_lazy_collectDoubleSum_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","parallel_lazy_directSumOfDouble_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.SumOfDoubleTest","serial_lazy_directSumOfDouble_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_serial_eager_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_serial_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_jdk","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","short_circuit_middle_parallel_lazy_gsc","true","true","true","false"
"xingguang2013/gs-collections","com.gs.collections.impl.jmh.AllSatisfyTest","process_all_parallel_lazy_gsc","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemCurrentTimeMillis","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemClock","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","cachedClock","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","oldCachedClock","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","coarseCachedClock","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedClock","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedFinalClock","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1LocationBenchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format0","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","formatStringArgs","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format0_inlined2","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","synchronizedSimpleDateFmt","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","threadLocalSimpleDateFmt","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","cachedThrdLocalSimpleDateFmt","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","cachedThrdLocalCustomFormat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","fastDateFormat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","fixedDateFormat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","atomicFastFormat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","atomicFixedFormat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","newInstance","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","threadLocal","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","objectPool","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringNewInstance","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringThreadLocal","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringObjectPool","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","testBaseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutException","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutExceptionUsingBuilder","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithExceptionUsingBuilder","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","getSourceLocationOfLogEvent","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithoutException","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithoutExceptionWithLocation","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithException","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","stringGetBytes","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","textEncoderEncode","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","byteArrayMCD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","serializableMCD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","toStringMCD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","encodeMCD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineThroughput","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledThroughput","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelThroughput","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledThroughput","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugMessageDisabledThroughput","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineResponseTime","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledResponseTime","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelResponseTime","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledResponseTime","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledMessageResponseTime","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark","log4j2RAF","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark","log4j2File","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark","logbackFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark","log4j1File","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","putAllArrayContextData","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","putAllHashContextData","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","putAllMap","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","cloneArrayContextData","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","cloneHashContextData","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","cloneMap","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","iterateArrayContextDataTriConsumer","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","iterateHashContextDataTriConsumer","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","iterateArrayContextDataBiConsumer","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","iterateHashContextDataBiConsumer","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","iterateMap","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","getValueArrayContextData","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","getValueHashContextData","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","getValueMap","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","putArrayContextData","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","putHashContextData","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark","putMap","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","base","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","randomUUID","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","timeBasedUUID","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2LocationBenchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jIsDebugEnabled","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jIsDebugEnabled","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicIsDebugEnabled","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugStringConcatenation","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugStringConcatenation","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicDebugStringConcatenation","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugParameterizedString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugParameterizedString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark","log4jThreadContextFilter","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark","slf4jMDCFilter","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","testBaseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersAndLock","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersNoLocks","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithoutCountersOrLocks","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersRetryAfterReconfig","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","stringGetBytes","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayM","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArraySpace","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMC","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMDEx","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMEx","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCDEx","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayC","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMDNoSpace","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCNoSpace","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableM","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableSpace","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMC","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMDEx","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMEx","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCDEx","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableC","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableD","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMDNoSpace","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCNoSpace","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput1Param","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput2Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput3Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput4Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput5Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput6Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput7Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput8Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput9Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput10Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput11Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark","logback","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark","log4j2","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","classicGetFormattedMsg","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","refactoredGetFormattedMsg","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","refactoredFormatTo","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput1Param","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput2Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput3Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput4Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput5Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput6Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput7Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput8Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput9Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput10Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput11Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput1Param","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput2Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput3Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput4Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput5Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput6Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput7Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput8Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput9Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput10Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput11Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.GelfLayoutBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.GelfLayoutBenchmark","log4j2Gelf","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","testBaseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterMap1Element","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArraySet1Element","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArrayList1Element","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterMap3Elements","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArraySet3Element","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArrayList3Element","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","usAsciiGetBytes","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","usAsciiEncode","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","iso8859_1GetBytes","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","iso8859_1Encode","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","utf8GetBytes","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","utf8Encode","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","utf16GetBytes","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","utf16Encode","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AnnotationVsMarkerInterface","annotationMissing","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AnnotationVsMarkerInterface","annotationPresent","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AnnotationVsMarkerInterface","interfaceNotImpl","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AnnotationVsMarkerInterface","interfaceImplemented","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ConfiguratorInitializeBenchmark","initializeLoggerContext","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endRAF","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderRAF","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endMMap","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderMMap","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endNoop","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderNoop","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endRewrite","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderRewrite","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endConsole","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderConsole","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endDirectConsole","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderDirectConsole","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","latency_nanotime","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","granularity_nanotime","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULLocationBenchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark","get","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark","putAndRemove","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark","injectWithoutProperties","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark","injectWithProperties","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark","legacyInjectWithoutProperties","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark","legacyInjectWithProperties","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","varargParams","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","individualParams","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark","boxBoolean","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark","boxInt","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark","boxLong","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark","boxDouble","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark","boxFloat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark","boxShort","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytes","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1StringGetBytesString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1StringGetBytesCharSet","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","usAsciiStringGetBytesString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","usAsciiStringGetBytesCharSet","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytesString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytesCharSet","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisStringGetBytesString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisStringGetBytesCharSet","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisEncoder","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1Encoder","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomCastToByte","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomVerifyAndCast","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomPortedJDK8","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomPortedJDK8CopyArray","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","newInstance","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","threadLocal","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","concurrentHashMap","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2RAF","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2MMF","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2AsyncAppender","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2AsyncDisruptor","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2AsyncLogger","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2File","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","logbackFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","logbackAsyncFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j1File","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","julFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput1Param","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput2Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput3Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput4Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput5Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput6Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput7Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput8Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput9Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput10Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput11Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test01_getCallerClassNameFromStackTrace","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test02_getCallerClassNameFromThreadStackTrace","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test03_getCallerClassNameReflectively","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test05_getStackTraceClassForClassName","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test06_getThreadStackTraceClassForClassName","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test07_getReflectiveCallerClassUtility","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test09_getMessageUsingNew","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test10_getMessageUsingReflection","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test11_getClassContextViaCallerClass","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test12_getClassContextViaSecurityManager","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","reflectionUtilGetClass","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","locationLocatorGetMethod","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fastDateFormatCreateNewStringBuilder","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fastDateFormatReuseStringBuilder","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedBitFiddlingReuseCharArray","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedDateFormatCreateNewCharArray","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedDateFormatReuseCharArray","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedFormatReuseStringBuilder","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput1Param","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput2Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput3Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput4Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput5Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput6Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput7Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput8Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput9Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput10Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput11Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","baseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","log4jParentMarker","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","log4jSimpleMarker","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","log4jTooFine","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","logbackParentMarker","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","logbackSimpleMarker","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","logbackTooFine","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersLocationBenchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackLocationBenchmark","throughputSimple","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1Log4j1Concat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3Log4j1Concat","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1Log4j2RAF","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3Log4j2RAF","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1Log4j2File","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3Log4j2File","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1LogbackFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3LogbackFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1JulFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3JulFile","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputBaseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedDouble","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatDouble","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyBaseline","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedDouble","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatString","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatDouble","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3ParamsV3","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5ParamsV3","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7ParamsV3","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9ParamsV3","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3ParamsV2","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5ParamsV2","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7ParamsV2","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9ParamsV2","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7Params","true","true","true","false"
"xnslong/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemCurrentTimeMillis","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemClock","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","cachedClock","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","oldCachedClock","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","coarseCachedClock","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedClock","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedFinalClock","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1LocationBenchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format0","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","formatStringArgs","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format0_inlined2","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","synchronizedSimpleDateFmt","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","threadLocalSimpleDateFmt","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","cachedThrdLocalSimpleDateFmt","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","cachedThrdLocalCustomFormat","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","fastDateFormat","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","fixedDateFormat","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","atomicFastFormat","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","atomicFixedFormat","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","newInstance","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","threadLocal","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","objectPool","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringNewInstance","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringThreadLocal","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringObjectPool","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","testBaseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutException","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutExceptionUsingBuilder","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithExceptionUsingBuilder","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","getSourceLocationOfLogEvent","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithoutException","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithException","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","stringGetBytes","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","textEncoderEncode","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","byteArrayMCD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","serializableMCD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","toStringMCD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","encodeMCD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineThroughput","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledThroughput","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelThroughput","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledThroughput","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugMessageDisabledThroughput","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineResponseTime","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledResponseTime","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelResponseTime","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledResponseTime","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledMessageResponseTime","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","base","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","randomUUID","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","timeBasedUUID","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2LocationBenchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jIsDebugEnabled","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jIsDebugEnabled","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicIsDebugEnabled","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugStringConcatenation","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugStringConcatenation","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicDebugStringConcatenation","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugParameterizedString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugParameterizedString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark","log4jThreadContextFilter","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark","slf4jMDCFilter","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","testBaseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersAndLock","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersNoLocks","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithoutCountersOrLocks","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersRetryAfterReconfig","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","stringGetBytes","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayM","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArraySpace","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMC","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMDEx","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMEx","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCDEx","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayC","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMDNoSpace","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCNoSpace","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableM","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableSpace","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMC","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMDEx","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMEx","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCDEx","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableC","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableD","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMDNoSpace","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCNoSpace","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput1Param","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput2Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput3Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput4Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput5Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput6Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput7Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput8Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput9Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput10Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput11Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark","logback","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark","log4j2","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","classicGetFormattedMsg","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","refactoredGetFormattedMsg","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","refactoredFormatTo","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput1Param","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput2Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput3Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput4Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput5Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput6Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput7Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput8Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput9Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput10Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput11Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput1Param","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput2Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput3Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput4Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput5Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput6Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput7Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput8Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput9Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput10Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput11Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.GelfLayoutBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.GelfLayoutBenchmark","log4j2Gelf","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","testBaseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterMap1Element","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArraySet1Element","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArrayList1Element","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterMap3Elements","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArraySet3Element","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArrayList3Element","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","usAsciiGetBytes","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","usAsciiEncode","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","iso8859_1GetBytes","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","iso8859_1Encode","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","utf8GetBytes","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","utf8Encode","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","utf16GetBytes","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark","utf16Encode","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ConfiguratorInitializeBenchmark","initializeLoggerContext","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endRAF","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderRAF","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endFile","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderFile","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endMMap","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderMMap","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endNoop","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderNoop","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endRewrite","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderRewrite","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","end2endConsole","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark","appenderConsole","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","latency_nanotime","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","granularity_nanotime","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULLocationBenchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","varargParams","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","individualParams","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytes","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1StringGetBytesString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1StringGetBytesCharSet","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","usAsciiStringGetBytesString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","usAsciiStringGetBytesCharSet","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytesString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytesCharSet","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisStringGetBytesString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisStringGetBytesCharSet","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisEncoder","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1Encoder","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomCastToByte","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomVerifyAndCast","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomPortedJDK8","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomPortedJDK8CopyArray","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","newInstance","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","threadLocal","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","concurrentHashMap","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2RAF","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2File","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","logbackFile","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j1File","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","julFile","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput1Param","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput2Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput3Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput4Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput5Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput6Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput7Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput8Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput9Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput10Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput11Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test01_getCallerClassNameFromStackTrace","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test02_getCallerClassNameFromThreadStackTrace","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test03_getCallerClassNameReflectively","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test04_getCallerClassNameSunReflection","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test05_getStackTraceClassForClassName","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test06_getThreadStackTraceClassForClassName","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test07_getReflectiveCallerClassUtility","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test08_getDirectSunReflection","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test09_getMessageUsingNew","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test10_getMessageUsingReflection","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test11_getClassContextViaCallerClass","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test12_getClassContextViaSecurityManager","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormat","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fastDateFormatCreateNewStringBuilder","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fastDateFormatReuseStringBuilder","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedBitFiddlingReuseCharArray","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedDateFormatCreateNewCharArray","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedDateFormatReuseCharArray","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedFormatReuseStringBuilder","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput1Param","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput2Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput3Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput4Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput5Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput6Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput7Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput8Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput9Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput10Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark","throughput11Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","baseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","log4jParentMarker","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","log4jSimpleMarker","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","log4jTooFine","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","logbackParentMarker","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","logbackSimpleMarker","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark","logbackTooFine","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersLocationBenchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackLocationBenchmark","throughputSimple","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1Log4j1Concat","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3Log4j1Concat","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1Log4j2RAF","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3Log4j2RAF","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1Log4j2File","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3Log4j2File","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1LogbackFile","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3LogbackFile","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param1JulFile","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark","param3JulFile","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputBaseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedDouble","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatDouble","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyBaseline","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedDouble","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatString","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatDouble","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3ParamsV3","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5ParamsV3","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7ParamsV3","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9ParamsV3","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3ParamsV2","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5ParamsV2","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7ParamsV2","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9ParamsV2","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7Params","true","true","true","false"
"lqbweb/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9Params","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAndNot","pairwiseAndNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIOr","pairwiseIOr","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideAndNaive","wideAnd_naive","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkCardinality","iterate","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrPq","wideOr_pq","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkXor","pairwiseXor","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","bufferBackedDataInput","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","streamBackedDataInputWithBuffer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","streamBackedDataInput","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","directToBuffer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","viaImmutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkForEach","forEach","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIterate","iterate","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkContains","contains","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkReverseIterate","reverseIterate","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","parallelOr","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","parallelXor","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","groupByKey","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","fastOr","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","fastXor","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferParallelOr","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferParallelXor","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferGroupByKey","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferFastOr","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferFastXor","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkInot","flipLargeRange","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.BufferUtilBenchmark","galloping","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.buffer.BufferUtilBenchmark","local","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","orBitmapContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","orBitmapContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part2_orRunContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part2_orBitmapContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part3_orArrayContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part3_orArrayContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorRunContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorConcise","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBound1281","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBound1282","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsAdjustment","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBoundThreshold1000","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","runOptimize","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","runOptimize1","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","andBitmapContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","andBitmapContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part2_andRunContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part2_andBitmapContainerVSBitmapContainer2","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part3_andArrayContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part3_andArrayContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","OrRunContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","OrBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","AndConcise","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","andNotBitmapContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","andNotBitmapContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","reverseAndNotBitmapContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","reverseAndNotBitmapContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_andNotRunContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_andNotBitmapContainerVSBitmapContainer2","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_reverseAndNotRunContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_reverseAndNotBitmapContainerVSBitmapContainer2","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_andNotArrayContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part4_andNotArrayContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_andNotArrayContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_reverseAndNotArrayContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_reverseAndNotArrayContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndRunContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndConcise","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotRunContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotConcise","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.ArrayContainerAndNotRunContainerBenchmark","pairwiseACAndNotRC","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.ArrayContainerAndNotRunContainerBenchmark","immutablePairwiseACAndNotRC","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrRunContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrRunContainer_withconversion","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark","iteratorRunContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark","iteratorBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","xorBitmapContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","xorBitmapContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part2_xorRunContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part2_xorBitmapContainerVSBitmapContainer2","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part3_xorArrayContainerVSRunContainerContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part3_xorArrayContainerVSBitmapContainer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_clone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_cloneAndrunOptimize","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSFromClone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSNoClone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSNoClonePreOpti","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_runOptimizeAndserializeToBAOSFromClone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","clone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","cloneAndrunOptimize","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSFromClone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSNoClone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSFromClonePreOpti","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSNoClonePreOpti","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","runOptimizeAndserializeToBAOSFromClone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrConcise","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrImmutableConcise","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrWAH","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_Roaringwithrun","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_Roaring","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_EWAH","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_EWAH32","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.range.ContainsRange","contains","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.range.ContainsRange","containsViaRank","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testDeserialize","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testMutableDeserializeMutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testSerialize","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testMutableSerialize","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.map.MapBenchmark","testMap","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.map.MapBenchmark","testMapViaBitset","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","tointUnsignedTime","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","tointUnsignedTimeAvg","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTime","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeAvg","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeShort","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeShortAvg","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark","onefunction","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark","manyfunctions","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","runVsArrayEquals_FewRuns","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","runVsArrayEquals_ManyRuns","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","arrayVsArrayEquals","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","equalBitmaps","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark","iterate","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark","batchIterate","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark","batchIterateAsIntIterator","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.Concatenation","bitset","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.Concatenation","roaringNaive","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.Concatenation","roaringOffset","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.Concatenation","roaringBatchOrderedWriter","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BitmapNextBenchmark","bitset_count","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BitmapNextBenchmark","roaring_count","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testBoxed_a","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testStandard_a","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testFlyweight_a","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testBoxed_b","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testStandard_b","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testFlyweight_b","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testBoxed_c","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testStandard_c","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testFlyweight_c","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseStandard_a","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseFlyweight_a","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseStandard_b","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseFlyweight_b","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseStandard_c","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseFlyweight_c","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark","forwards","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark","backwards","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark","forwardsBuffer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark","backwardsBuffer","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testBoxed_a","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testStandard_a","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testBoxed_b","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testStandard_b","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testBoxed_c","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testStandard_c","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testReverseStandard_a","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testReverseStandard_b","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testReverseStandard_c","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate1","RoaringWithRun","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate3","RoaringWithRun","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate1","RoaringWithRun","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.needwork.RandomAccess","binarySearch","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate2","RoaringWithRun","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate2","RoaringWithRun","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","getCardinalityWithCache_Small","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","getCardinalityWithCache_Big","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","getCardinalityWithoutCache_Small","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","getCardinalityWithoutCache_Big","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","selectLastWithCache_Small","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","selectLastWithCache_Big","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","selectLastWithoutCache_Small","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","selectLastWithoutCache_Big","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.writer.WriteSequential","buildRoaringBitmap","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.writer.WriteSequential","incrementalNativeAdd","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.writer.WriteSequential","incrementalUseOrderedWriter","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","setupCost","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","bitmapOfUnordered","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","sortThenBitmapOf","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","bitmapOf","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","partialSortThenBitmapOf","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_standard","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_mutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_immutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_standard","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_mutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_immutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_standard","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_mutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_immutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapOrdered_standard","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapOrdered_mutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapUnordered_standard","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapRange_standard","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapRange_mutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapUnordered_mutable","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createSparseBitSetOrdered","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createSparseBitSetUnordered","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.UtilBenchmark","galloping","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.UtilBenchmark","local","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","computeCardinality","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","updateCardinality","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iadd","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iandNot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iand","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","ior","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","ixor","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iremove","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inot","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inotFull","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inotBig","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark","BitSetToRoaringByAddingBitByBit","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark","BitSetToRoaringUsingBitSetUtil","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.arraycontainer.AddBenchmark","add","true","true","true","false"
"lemire/RoaringBitmap","org.roaringbitmap.arraycontainer.AddBenchmark","addBuffer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAndNot","pairwiseAndNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIOr","pairwiseIOr","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideAndNaive","wideAnd_naive","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkCardinality","iterate","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrPq","wideOr_pq","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkXor","pairwiseXor","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","bufferBackedDataInput","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","streamBackedDataInputWithBuffer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","streamBackedDataInput","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","directToBuffer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark","viaImmutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkForEach","forEach","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIterate","iterate","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkContains","contains","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkReverseIterate","reverseIterate","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","parallelOr","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","parallelXor","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","groupByKey","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","fastOr","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","fastXor","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferParallelOr","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferParallelXor","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferGroupByKey","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferFastOr","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark","bufferFastXor","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkInot","flipLargeRange","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.BufferUtilBenchmark","galloping","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.buffer.BufferUtilBenchmark","local","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","orBitmapContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","orBitmapContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part2_orRunContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part2_orBitmapContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part3_orArrayContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part3_orArrayContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorRunContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorConcise","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBound1281","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBound1282","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsAdjustment","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBoundThreshold1000","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","runOptimize","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","runOptimize1","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","andBitmapContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","andBitmapContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part2_andRunContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part2_andBitmapContainerVSBitmapContainer2","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part3_andArrayContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part3_andArrayContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","OrRunContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","OrBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","AndConcise","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","andNotBitmapContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","andNotBitmapContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","reverseAndNotBitmapContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","reverseAndNotBitmapContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_andNotRunContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_andNotBitmapContainerVSBitmapContainer2","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_reverseAndNotRunContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_reverseAndNotBitmapContainerVSBitmapContainer2","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_andNotArrayContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part4_andNotArrayContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_andNotArrayContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_reverseAndNotArrayContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_reverseAndNotArrayContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndRunContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndConcise","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotRunContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotConcise","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.ArrayContainerAndNotRunContainerBenchmark","pairwiseACAndNotRC","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.ArrayContainerAndNotRunContainerBenchmark","immutablePairwiseACAndNotRC","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrRunContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrRunContainer_withconversion","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark","iteratorRunContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark","iteratorBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","xorBitmapContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","xorBitmapContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part2_xorRunContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part2_xorBitmapContainerVSBitmapContainer2","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part3_xorArrayContainerVSRunContainerContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part3_xorArrayContainerVSBitmapContainer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_clone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_cloneAndrunOptimize","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSFromClone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSNoClone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSNoClonePreOpti","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_runOptimizeAndserializeToBAOSFromClone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","clone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","cloneAndrunOptimize","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSFromClone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSNoClone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSFromClonePreOpti","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSNoClonePreOpti","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","runOptimizeAndserializeToBAOSFromClone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrConcise","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrImmutableConcise","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrWAH","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_Roaringwithrun","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_Roaring","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_EWAH","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_EWAH32","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.range.ContainsRange","contains","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.range.ContainsRange","containsViaRank","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testDeserialize","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testMutableDeserializeMutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testSerialize","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testMutableSerialize","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.map.MapBenchmark","testMap","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.map.MapBenchmark","testMapViaBitset","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","tointUnsignedTime","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","tointUnsignedTimeAvg","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTime","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeAvg","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeShort","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeShortAvg","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark","onefunction","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark","manyfunctions","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","runVsArrayEquals_FewRuns","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","runVsArrayEquals_ManyRuns","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","arrayVsArrayEquals","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","equalBitmaps","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark","iterate","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark","batchIterate","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark","batchIterateAsIntIterator","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.Concatenation","bitset","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.Concatenation","roaringNaive","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.Concatenation","roaringOffset","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.Concatenation","roaringBatchOrderedWriter","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BitmapNextBenchmark","bitset_count","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BitmapNextBenchmark","roaring_count","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testBoxed_a","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testStandard_a","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testFlyweight_a","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testBoxed_b","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testStandard_b","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testFlyweight_b","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testBoxed_c","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testStandard_c","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testFlyweight_c","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseStandard_a","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseFlyweight_a","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseStandard_b","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseFlyweight_b","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseStandard_c","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32","testReverseFlyweight_c","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark","forwards","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark","backwards","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark","forwardsBuffer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark","backwardsBuffer","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testBoxed_a","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testStandard_a","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testBoxed_b","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testStandard_b","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testBoxed_c","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testStandard_c","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testReverseStandard_a","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testReverseStandard_b","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64","testReverseStandard_c","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate1","RoaringWithRun","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate3","RoaringWithRun","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate1","RoaringWithRun","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.needwork.RandomAccess","binarySearch","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate2","RoaringWithRun","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate2","RoaringWithRun","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","getCardinalityWithCache_Small","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","getCardinalityWithCache_Big","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","getCardinalityWithoutCache_Small","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","getCardinalityWithoutCache_Big","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","selectLastWithCache_Small","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","selectLastWithCache_Big","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","selectLastWithoutCache_Small","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark","selectLastWithoutCache_Big","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.writer.WriteSequential","buildRoaringBitmap","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.writer.WriteSequential","incrementalNativeAdd","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.writer.WriteSequential","incrementalUseOrderedWriter","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","setupCost","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","bitmapOfUnordered","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","sortThenBitmapOf","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","bitmapOf","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered","partialSortThenBitmapOf","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_standard","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_mutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_immutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_standard","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_mutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_immutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_standard","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_mutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_immutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapOrdered_standard","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapOrdered_mutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapUnordered_standard","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapRange_standard","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapRange_mutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapUnordered_mutable","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createSparseBitSetOrdered","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createSparseBitSetUnordered","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.UtilBenchmark","galloping","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.UtilBenchmark","local","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","computeCardinality","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","updateCardinality","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iadd","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iandNot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iand","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","ior","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","ixor","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iremove","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inot","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inotFull","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inotBig","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark","BitSetToRoaringByAddingBitByBit","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark","BitSetToRoaringUsingBitSetUtil","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.arraycontainer.AddBenchmark","add","true","true","true","false"
"marshallpierce/RoaringBitmap","org.roaringbitmap.arraycontainer.AddBenchmark","addBuffer","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.hive.statistics.BenchmarkGetPartitionsSample","selectSample","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.connector.informationschema.BenchmarkInformationSchema","queryInformationSchema","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.tdigest.BenchmarkTDigest","benchmarkInsertsT","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.tdigest.BenchmarkTDigest","benchmarkQuantilesT","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.tdigest.BenchmarkTDigest","benchmarkCopyT","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.tdigest.BenchmarkTDigest","benchmarkMergeT","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.tdigest.BenchmarkTDigest","benchmarkDeserializeT","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.tdigest.BenchmarkTDigest","benchmarkSerializeT","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.block.BenchmarkMapCopy","benchmarkMapCopy","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkHashAndStreamingAggregationOperators","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkPartitionedOutputOperator","addPage","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToMapCast","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkArrayIntersect","arrayIntersect","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToArrayCast","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkMapToMapCast","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkRowToRowCast","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.scalar.BenchmarkEqualsOperator","processPage","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.aggregation.BenchmarkArrayAggregation","arrayAggregation","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.aggregation.BenchmarkGroupedTypedHistogram","testSharedGroupWithLargeBlocksRunner","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkWindowOperator","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkGroupedTopNBuilder","topN","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.project.BenchmarkDictionaryBlockGetSizeInBytes","getSizeInBytes","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkBlockFlattener","benchmarkWithFlatten","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkBlockFlattener","benchmarkWithoutFlatten","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.sql.planner.BenchmarkPlanner","planQueries","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderChainedJoins","benchmarkReorderJoins","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins","benchmarkReorderJoins","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.util.PagesSortBenchmark","runPagesIndexSortBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.util.PagesSortBenchmark","runPagesMergeSortBenchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.BenchmarkBoxedBoolean","primitive","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.BenchmarkBoxedBoolean","unboxing","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.BenchmarkBoxedBoolean","identity","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.BenchmarkBoxedBoolean","booleanEquals","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.BenchmarkBoxedBoolean","object","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.BenchmarkBoxedBoolean","booleanEqualsNotNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","nanoTime","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","cpuTime","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","userTime","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithArithmeticInPredicate","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithFunctionPredicate","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkRangePredicateJoin","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","geometryToBingTiles","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","envelopeToBingTiles","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin","benchmarkJoin","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin","benchmarkUserOptimizedJoin","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeEnvelopeSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointDeserialized","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeDeserialized","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeDeserialized","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","benchmarkDeserialize","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","benchmarkDeserializeEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection","envelopes","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection","geometries","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope","simpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope","complexGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkArrayUnion","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkUnion","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkConvexHull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLine","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLineSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLine","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLineSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelopeSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelopeSimpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea","stSphericalArea","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea","stSphericalArea500k","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea","stArea","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea","stArea500k","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkBingTilesAround","benchmark","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin","simpleGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin","complexGeometry","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithFloorMod","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithMod","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithMask","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithBitShifting","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithDivision","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readBooleanNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readBooleanWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readAllNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readByteNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readByteWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readShortDecimalNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readShortDecimalWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readLongDecimalNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readLongDecimalWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readDoubleNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readDoubleWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readFloatNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readFloatWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readLongDirectNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readLongDirectWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readSliceDictionaryNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readSliceDictionaryWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readTimestampNoNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders","readTimestampWithNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkSelectiveStreamReaders","readAllNull","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkSelectiveStreamReaders","read","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.orc.BenchmarkSelectiveStreamReaders","readWithFilter","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.array.BenchmarkReferenceCountMap","benchmarkInserts","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializePoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializePoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializePointEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipointEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipointEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineStringEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineStringEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineStringEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineStringEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimplePolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygonEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygonEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygonEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygonEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollectionEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollectionEnvelope","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializePoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializePoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimplePolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"nezihyigitbasi/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.hive.statistics.BenchmarkGetPartitionsSample","selectSample","true","true","true","false"
"wyukawa/presto","io.prestosql.connector.informationschema.BenchmarkInformationSchema","queryInformationSchema","true","true","true","false"
"wyukawa/presto","io.prestosql.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.block.BenchmarkMapCopy","benchmarkMapCopy","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkHashAndStreamingAggregationOperators","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkPartitionedOutputOperator","addPage","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkScanFilterAndProjectOperator","benchmarkColumnOriented","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkJsonToMapCast","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkArrayIntersect","arrayIntersect","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkJsonToArrayCast","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkMapToMapCast","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkRowToRowCast","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.scalar.BenchmarkEqualsOperator","processPage","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkUnnestOperator","unnest","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.aggregation.BenchmarkArrayAggregation","arrayAggregation","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.aggregation.BenchmarkGroupedTypedHistogram","testSharedGroupWithLargeBlocksRunner","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkTopNOperator","topN","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkWindowOperator","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkGroupedTopNBuilder","topN","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.project.BenchmarkDictionaryBlockGetSizeInBytes","getSizeInBytes","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"wyukawa/presto","io.prestosql.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"wyukawa/presto","io.prestosql.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"wyukawa/presto","io.prestosql.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"wyukawa/presto","io.prestosql.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"wyukawa/presto","io.prestosql.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"wyukawa/presto","io.prestosql.sql.planner.BenchmarkPlanner","planQueries","true","true","true","false"
"wyukawa/presto","io.prestosql.sql.planner.iterative.rule.BenchmarkReorderChainedJoins","benchmarkReorderJoins","true","true","true","false"
"wyukawa/presto","io.prestosql.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins","benchmarkReorderJoins","true","true","true","false"
"wyukawa/presto","io.prestosql.util.PagesSortBenchmark","runPagesIndexSortBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.util.PagesSortBenchmark","runPagesMergeSortBenchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.execution.resourcegroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.BenchmarkBoxedBoolean","primitive","true","true","true","false"
"wyukawa/presto","io.prestosql.BenchmarkBoxedBoolean","unboxing","true","true","true","false"
"wyukawa/presto","io.prestosql.BenchmarkBoxedBoolean","identity","true","true","true","false"
"wyukawa/presto","io.prestosql.BenchmarkBoxedBoolean","booleanEquals","true","true","true","false"
"wyukawa/presto","io.prestosql.BenchmarkBoxedBoolean","object","true","true","true","false"
"wyukawa/presto","io.prestosql.BenchmarkBoxedBoolean","booleanEqualsNotNull","true","true","true","false"
"wyukawa/presto","io.prestosql.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"wyukawa/presto","io.prestosql.benchmark.BenchmarkCPUCounters","nanoTime","true","true","true","false"
"wyukawa/presto","io.prestosql.benchmark.BenchmarkCPUCounters","cpuTime","true","true","true","false"
"wyukawa/presto","io.prestosql.benchmark.BenchmarkCPUCounters","userTime","true","true","true","false"
"wyukawa/presto","io.prestosql.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"wyukawa/presto","io.prestosql.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithArithmeticInPredicate","true","true","true","false"
"wyukawa/presto","io.prestosql.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithFunctionPredicate","true","true","true","false"
"wyukawa/presto","io.prestosql.benchmark.BenchmarkInequalityJoin","benchmarkRangePredicateJoin","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryToBingTiles","geometryToBingTiles","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryToBingTiles","envelopeToBingTiles","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSpatialJoin","benchmarkJoin","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSpatialJoin","benchmarkUserOptimizedJoin","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","deserializeSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","deserializeEnvelopeSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsInnerPoint","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointDeserialized","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeDeserialized","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeDeserialized","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","benchmarkDeserialize","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","benchmarkDeserializeEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkEnvelopeIntersection","envelopes","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkEnvelopeIntersection","geometries","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTEnvelope","simpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTEnvelope","complexGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkArrayUnion","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkUnion","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkConvexHull","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLine","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLineSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLine","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLineSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelopeSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelopeSimpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTArea","stSphericalArea","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTArea","stSphericalArea500k","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTArea","stArea","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTArea","stArea500k","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkBingTilesAround","benchmark","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTXMin","simpleGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.plugin.geospatial.BenchmarkSTXMin","complexGeometry","true","true","true","false"
"wyukawa/presto","io.prestosql.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"wyukawa/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithFloorMod","true","true","true","false"
"wyukawa/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithMod","true","true","true","false"
"wyukawa/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithMask","true","true","true","false"
"wyukawa/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithBitShifting","true","true","true","false"
"wyukawa/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithDivision","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readBooleanNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readBooleanWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readAllNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readByteNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readByteWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readShortDecimalNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readShortDecimalWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readLongDecimalNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readLongDecimalWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readDoubleNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readDoubleWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readFloatNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readFloatWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readLongNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readLongWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readIntNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readIntWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readShortNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readShortWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readSliceDirectNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readSliceDirectWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readSliceDictionaryNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readSliceDictionaryWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readTimestampNoNull","true","true","true","false"
"wyukawa/presto","io.prestosql.orc.BenchmarkStreamReaders","readTimestampWithNull","true","true","true","false"
"wyukawa/presto","io.prestosql.array.BenchmarkReferenceCountMap","benchmarkInserts","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializePoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializePoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializePointEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipointEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipointEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineStringEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineStringEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineStringEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineStringEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimplePolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygonEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygonEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygonEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygonEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollectionEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollectionEnvelope","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializePoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializePoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimplePolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"wyukawa/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"ptkool/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"ptkool/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"ptkool/presto","com.facebook.presto.hive.statistics.BenchmarkGetPartitionsSample","selectSample","true","true","true","false"
"ptkool/presto","com.facebook.presto.connector.informationschema.BenchmarkInformationSchema","queryInformationSchema","true","true","true","false"
"ptkool/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.block.BenchmarkMapCopy","benchmarkMapCopy","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkHashAndStreamingAggregationOperators","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkPartitionedOutputOperator","addPage","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToMapCast","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkArrayIntersect","arrayIntersect","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToArrayCast","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkMapToMapCast","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkRowToRowCast","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.scalar.BenchmarkEqualsOperator","processPage","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.aggregation.BenchmarkArrayAggregation","arrayAggregation","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.aggregation.BenchmarkGroupedTypedHistogram","testSharedGroupWithLargeBlocksRunner","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkWindowOperator","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkGroupedTopNBuilder","topN","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.project.BenchmarkDictionaryBlockGetSizeInBytes","getSizeInBytes","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"ptkool/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"ptkool/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"ptkool/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"ptkool/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"ptkool/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"ptkool/presto","com.facebook.presto.sql.planner.BenchmarkPlanner","planQueries","true","true","true","false"
"ptkool/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderChainedJoins","benchmarkReorderJoins","true","true","true","false"
"ptkool/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins","benchmarkReorderJoins","true","true","true","false"
"ptkool/presto","com.facebook.presto.util.PagesSortBenchmark","runPagesIndexSortBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.util.PagesSortBenchmark","runPagesMergeSortBenchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.BenchmarkBoxedBoolean","primitive","true","true","true","false"
"ptkool/presto","com.facebook.presto.BenchmarkBoxedBoolean","unboxing","true","true","true","false"
"ptkool/presto","com.facebook.presto.BenchmarkBoxedBoolean","identity","true","true","true","false"
"ptkool/presto","com.facebook.presto.BenchmarkBoxedBoolean","booleanEquals","true","true","true","false"
"ptkool/presto","com.facebook.presto.BenchmarkBoxedBoolean","object","true","true","true","false"
"ptkool/presto","com.facebook.presto.BenchmarkBoxedBoolean","booleanEqualsNotNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"ptkool/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","nanoTime","true","true","true","false"
"ptkool/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","cpuTime","true","true","true","false"
"ptkool/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","userTime","true","true","true","false"
"ptkool/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"ptkool/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithArithmeticInPredicate","true","true","true","false"
"ptkool/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithFunctionPredicate","true","true","true","false"
"ptkool/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkRangePredicateJoin","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","geometryToBingTiles","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","envelopeToBingTiles","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin","benchmarkJoin","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin","benchmarkUserOptimizedJoin","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeEnvelopeSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointDeserialized","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeDeserialized","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeDeserialized","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","benchmarkDeserialize","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","benchmarkDeserializeEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection","envelopes","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection","geometries","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope","simpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope","complexGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkArrayUnion","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkUnion","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkConvexHull","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLine","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLineSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLine","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLineSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelopeSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelopeSimpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea","stSphericalArea","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea","stSphericalArea500k","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea","stArea","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea","stArea500k","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkBingTilesAround","benchmark","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin","simpleGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin","complexGeometry","true","true","true","false"
"ptkool/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"ptkool/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithFloorMod","true","true","true","false"
"ptkool/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithMod","true","true","true","false"
"ptkool/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithMask","true","true","true","false"
"ptkool/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithBitShifting","true","true","true","false"
"ptkool/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithDivision","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readBooleanNoNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readBooleanWithNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readByteNoNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readByteWithNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readDecimalNoNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readDecimalWithNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readDoubleNoNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readDoubleWithNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readFloatNoNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readFloatWithNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readLongDirectNoNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readLongDirectWithNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readSliceDictionaryNoNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readSliceDictionaryWithNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readTimestampNoNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readTimestampWithNull","true","true","true","false"
"ptkool/presto","com.facebook.presto.array.BenchmarkReferenceCountMap","benchmarkInserts","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializePoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializePoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializePointEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipointEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipointEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineStringEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineStringEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineStringEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineStringEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimplePolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygonEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygonEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygonEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygonEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollectionEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollectionEnvelope","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializePoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializePoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimplePolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"ptkool/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.hive.statistics.BenchmarkGetPartitionsSample","selectSample","true","true","true","false"
"smartnews/presto","io.prestosql.connector.informationschema.BenchmarkInformationSchema","queryInformationSchema","true","true","true","false"
"smartnews/presto","io.prestosql.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.block.BenchmarkMapCopy","benchmarkMapCopy","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkHashAndStreamingAggregationOperators","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"smartnews/presto","io.prestosql.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkPartitionedOutputOperator","addPage","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkJsonToMapCast","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkArrayIntersect","arrayIntersect","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkJsonToArrayCast","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkMapToMapCast","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkRowToRowCast","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.scalar.BenchmarkEqualsOperator","processPage","true","true","true","false"
"smartnews/presto","io.prestosql.operator.aggregation.BenchmarkArrayAggregation","arrayAggregation","true","true","true","false"
"smartnews/presto","io.prestosql.operator.aggregation.BenchmarkGroupedTypedHistogram","testSharedGroupWithLargeBlocksRunner","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkWindowOperator","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkGroupedTopNBuilder","topN","true","true","true","false"
"smartnews/presto","io.prestosql.operator.project.BenchmarkDictionaryBlockGetSizeInBytes","getSizeInBytes","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"smartnews/presto","io.prestosql.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"smartnews/presto","io.prestosql.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"smartnews/presto","io.prestosql.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"smartnews/presto","io.prestosql.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"smartnews/presto","io.prestosql.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"smartnews/presto","io.prestosql.sql.planner.BenchmarkPlanner","planQueries","true","true","true","false"
"smartnews/presto","io.prestosql.sql.planner.iterative.rule.BenchmarkReorderChainedJoins","benchmarkReorderJoins","true","true","true","false"
"smartnews/presto","io.prestosql.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins","benchmarkReorderJoins","true","true","true","false"
"smartnews/presto","io.prestosql.util.PagesSortBenchmark","runPagesIndexSortBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.util.PagesSortBenchmark","runPagesMergeSortBenchmark","true","true","true","false"
"smartnews/presto","io.prestosql.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.BenchmarkBoxedBoolean","primitive","true","true","true","false"
"smartnews/presto","io.prestosql.BenchmarkBoxedBoolean","unboxing","true","true","true","false"
"smartnews/presto","io.prestosql.BenchmarkBoxedBoolean","identity","true","true","true","false"
"smartnews/presto","io.prestosql.BenchmarkBoxedBoolean","booleanEquals","true","true","true","false"
"smartnews/presto","io.prestosql.BenchmarkBoxedBoolean","object","true","true","true","false"
"smartnews/presto","io.prestosql.BenchmarkBoxedBoolean","booleanEqualsNotNull","true","true","true","false"
"smartnews/presto","io.prestosql.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"smartnews/presto","io.prestosql.benchmark.BenchmarkCPUCounters","nanoTime","true","true","true","false"
"smartnews/presto","io.prestosql.benchmark.BenchmarkCPUCounters","cpuTime","true","true","true","false"
"smartnews/presto","io.prestosql.benchmark.BenchmarkCPUCounters","userTime","true","true","true","false"
"smartnews/presto","io.prestosql.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"smartnews/presto","io.prestosql.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithArithmeticInPredicate","true","true","true","false"
"smartnews/presto","io.prestosql.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithFunctionPredicate","true","true","true","false"
"smartnews/presto","io.prestosql.benchmark.BenchmarkInequalityJoin","benchmarkRangePredicateJoin","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryToBingTiles","geometryToBingTiles","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryToBingTiles","envelopeToBingTiles","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSpatialJoin","benchmarkJoin","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSpatialJoin","benchmarkUserOptimizedJoin","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","deserializeSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","deserializeEnvelopeSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsInnerPoint","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointDeserialized","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeDeserialized","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeDeserialized","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","benchmarkDeserialize","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains","benchmarkDeserializeEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkEnvelopeIntersection","envelopes","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkEnvelopeIntersection","geometries","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTEnvelope","simpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTEnvelope","complexGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkArrayUnion","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkUnion","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkConvexHull","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLine","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLineSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLine","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLineSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelopeSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelopeSimpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkBingTilesAround","benchmark","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTXMin","simpleGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.plugin.geospatial.BenchmarkSTXMin","complexGeometry","true","true","true","false"
"smartnews/presto","io.prestosql.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"smartnews/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithFloorMod","true","true","true","false"
"smartnews/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithMod","true","true","true","false"
"smartnews/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithMask","true","true","true","false"
"smartnews/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithBitShifting","true","true","true","false"
"smartnews/presto","io.prestosql.spi.block.BenchmarkComputePosition","computePositionWithDivision","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"smartnews/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readBooleanNoNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readBooleanWithNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readByteNoNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readByteWithNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readDecimalNoNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readDecimalWithNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readDoubleNoNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readDoubleWithNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readFloatNoNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readFloatWithNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readLongDirectNoNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readLongDirectWithNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readSliceDictionaryNoNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readSliceDictionaryWithNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readTimestampNoNull","true","true","true","false"
"smartnews/presto","io.prestosql.orc.BenchmarkStreamReaders","readTimestampWithNull","true","true","true","false"
"smartnews/presto","io.prestosql.array.BenchmarkReferenceCountMap","benchmarkInserts","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializePoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializePoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializePointEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipointEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipointEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineStringEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineStringEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineStringEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineStringEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimplePolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygonEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygonEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygonEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygonEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollectionEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollectionEnvelope","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializePoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializePoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimplePolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"smartnews/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"martint/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"martint/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"martint/presto","com.facebook.presto.hive.statistics.BenchmarkGetPartitionsSample","selectSample","true","true","true","false"
"martint/presto","com.facebook.presto.connector.informationschema.BenchmarkInformationSchema","queryInformationSchema","true","true","true","false"
"martint/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.block.BenchmarkMapCopy","benchmarkMapCopy","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkHashAndStreamingAggregationOperators","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"martint/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkPartitionedOutputOperator","addPage","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToMapCast","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkArrayIntersect","arrayIntersect","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToArrayCast","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkMapToMapCast","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkRowToRowCast","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.scalar.BenchmarkEqualsOperator","processPage","true","true","true","false"
"martint/presto","com.facebook.presto.operator.aggregation.BenchmarkArrayAggregation","arrayAggregation","true","true","true","false"
"martint/presto","com.facebook.presto.operator.aggregation.BenchmarkGroupedTypedHistogram","testSharedGroupWithLargeBlocksRunner","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkWindowOperator","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkGroupedTopNBuilder","topN","true","true","true","false"
"martint/presto","com.facebook.presto.operator.project.BenchmarkDictionaryBlockGetSizeInBytes","getSizeInBytes","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"martint/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"martint/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"martint/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"martint/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"martint/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"martint/presto","com.facebook.presto.sql.planner.BenchmarkPlanner","planQueries","true","true","true","false"
"martint/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderChainedJoins","benchmarkReorderJoins","true","true","true","false"
"martint/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins","benchmarkReorderJoins","true","true","true","false"
"martint/presto","com.facebook.presto.util.PagesSortBenchmark","runPagesIndexSortBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.util.PagesSortBenchmark","runPagesMergeSortBenchmark","true","true","true","false"
"martint/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.BenchmarkBoxedBoolean","primitive","true","true","true","false"
"martint/presto","com.facebook.presto.BenchmarkBoxedBoolean","unboxing","true","true","true","false"
"martint/presto","com.facebook.presto.BenchmarkBoxedBoolean","identity","true","true","true","false"
"martint/presto","com.facebook.presto.BenchmarkBoxedBoolean","booleanEquals","true","true","true","false"
"martint/presto","com.facebook.presto.BenchmarkBoxedBoolean","object","true","true","true","false"
"martint/presto","com.facebook.presto.BenchmarkBoxedBoolean","booleanEqualsNotNull","true","true","true","false"
"martint/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"martint/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","nanoTime","true","true","true","false"
"martint/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","cpuTime","true","true","true","false"
"martint/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters","userTime","true","true","true","false"
"martint/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"martint/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithArithmeticInPredicate","true","true","true","false"
"martint/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithFunctionPredicate","true","true","true","false"
"martint/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkRangePredicateJoin","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","geometryToBingTiles","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","envelopeToBingTiles","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin","benchmarkJoin","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin","benchmarkUserOptimizedJoin","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeEnvelopeSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPoint","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointDeserialized","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeDeserialized","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeDeserialized","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","benchmarkDeserialize","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","benchmarkDeserializeEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection","envelopes","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection","geometries","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope","simpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope","complexGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkArrayUnion","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkUnion","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations","benchmarkConvexHull","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLine","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLineSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLine","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLineSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelopeSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelopeSimpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkBingTilesAround","benchmark","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin","simpleGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin","complexGeometry","true","true","true","false"
"martint/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"martint/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithFloorMod","true","true","true","false"
"martint/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithMod","true","true","true","false"
"martint/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithMask","true","true","true","false"
"martint/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithBitShifting","true","true","true","false"
"martint/presto","com.facebook.presto.spi.block.BenchmarkComputePosition","computePositionWithDivision","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"martint/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readBooleanNoNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readBooleanWithNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readByteNoNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readByteWithNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readDecimalNoNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readDecimalWithNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readDoubleNoNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readDoubleWithNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readFloatNoNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readFloatWithNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readLongDirectNoNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readLongDirectWithNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readSliceDictionaryNoNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readSliceDictionaryWithNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readTimestampNoNull","true","true","true","false"
"martint/presto","com.facebook.presto.orc.BenchmarkStreamReaders","readTimestampWithNull","true","true","true","false"
"martint/presto","com.facebook.presto.array.BenchmarkReferenceCountMap","benchmarkInserts","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializePoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializePoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializePointEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipointEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipointEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineStringEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineStringEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineStringEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineStringEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimplePolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygonEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygonEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygonEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygonEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollectionEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollectionEnvelope","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializePoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializePoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimplePolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"martint/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","baseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemCurrentTimeMillis","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemClock","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","cachedClock","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","oldCachedClock","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","coarseCachedClock","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedClock","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedFinalClock","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format0","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","formatStringArgs","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark","format0_inlined2","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","baseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","synchronizedSimpleDateFmt","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","threadLocalSimpleDateFmt","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","cachedThrdLocalSimpleDateFmt","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","cachedThrdLocalCustomFormat","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","fastDateFormat","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","fixedDateFormat","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","atomicFastFormat","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","atomicFixedFormat","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","newInstance","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","threadLocal","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","objectPool","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringNewInstance","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringThreadLocal","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark","_stringObjectPool","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","testBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutException","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutExceptionUsingBuilder","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithExceptionUsingBuilder","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","getSourceLocationOfLogEvent","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithoutException","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithException","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","stringGetBytes","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","textEncoderEncode","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","charBufferEncode","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","charBufferCopyAndEncode","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","textHelperCopyAndEncode","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","byteArrayMCD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","serializableMCD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","toStringMCD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark","encodeMCD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineThroughput","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledThroughput","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelThroughput","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledThroughput","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugMessageDisabledThroughput","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineResponseTime","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledResponseTime","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelResponseTime","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledResponseTime","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledMessageResponseTime","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","base","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","randomUUID","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","timeBasedUUID","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","baseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jIsDebugEnabled","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jIsDebugEnabled","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicIsDebugEnabled","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugStringConcatenation","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugStringConcatenation","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicDebugStringConcatenation","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugParameterizedString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugParameterizedString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","testBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersAndLock","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersNoLocks","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithoutCountersOrLocks","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersRetryAfterReconfig","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","stringGetBytes","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayM","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArraySpace","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMC","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMDEx","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMEx","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCDEx","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayC","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMDNoSpace","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","byteArrayMCNoSpace","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableM","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableSpace","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMC","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMDEx","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMEx","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCDEx","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableC","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableD","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMDNoSpace","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","serializableMCNoSpace","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughputSimple","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput3Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput5Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput7Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput9Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latencySimple","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latency3Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latency5Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latency7Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latency9Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark","logback","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark","log4j2","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","classicGetFormattedMsg","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","refactoredGetFormattedMsg","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","refactoredFormatTo","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughputBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latencyBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latency","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughputBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latencyBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latency","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","testBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterMap1Element","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArraySet1Element","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArrayList1Element","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterMap3Elements","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArraySet3Element","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArrayList3Element","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ConfiguratorInitializeBenchmark","initializeLoggerContext","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","baseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","latency_nanotime","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","granularity_nanotime","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","baseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","varargParams","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","individualParams","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytes","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1StringGetBytesString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1StringGetBytesCharSet","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","usAsciiStringGetBytesString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","usAsciiStringGetBytesCharSet","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytesString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","defaultStringGetBytesCharSet","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisStringGetBytesString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisStringGetBytesCharSet","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","shiftJisEncoder","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1Encoder","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomCastToByte","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomVerifyAndCast","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomPortedJDK8","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","iso8859_1CustomPortedJDK8CopyArray","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","newInstance","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","threadLocal","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark","concurrentHashMap","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","baseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2RAFStringConcatenation","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2StringConcatenation","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","slf4jStringConcatenation","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j1StringConcatenation","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2RAFParameterizedString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2ParameterizedString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","slf4jParameterizedString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughputBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latencyBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latency","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","baseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test01_getCallerClassNameFromStackTrace","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test02_getCallerClassNameFromThreadStackTrace","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test03_getCallerClassNameReflectively","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test04_getCallerClassNameSunReflection","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test05_getStackTraceClassForClassName","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test06_getThreadStackTraceClassForClassName","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test07_getReflectiveCallerClassUtility","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test08_getDirectSunReflection","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test09_getMessageUsingNew","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test10_getMessageUsingReflection","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test11_getClassContextViaCallerClass","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test12_getClassContextViaSecurityManager","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormat","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fastDateFormatCreateNewStringBuilder","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fastDateFormatReuseStringBuilder","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedBitFiddlingReuseCharArray","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedDateFormatCreateNewCharArray","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedDateFormatReuseCharArray","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedFormatReuseStringBuilder","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedDouble","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatDouble","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyBaseline","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedDouble","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatString","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatDouble","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3ParamsV3","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5ParamsV3","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7ParamsV3","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9ParamsV3","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3ParamsV2","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5ParamsV2","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7ParamsV2","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9ParamsV2","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency3Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency5Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency7Params","true","true","true","false"
"lburgazzoli/apache-logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark","latency9Params","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.hive.statistics.BenchmarkGetPartitionsSample","selectSample","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.connector.informationschema.BenchmarkInformationSchema","queryInformationSchema","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.block.BenchmarkMapCopy","benchmarkMapCopy","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkHashAndStreamingAggregationOperators","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkPartitionedOutputOperator","addPage","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToMapCast","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToArrayCast","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkMapToMapCast","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkRowToRowCast","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.scalar.BenchmarkEqualsOperator","processPage","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.aggregation.BenchmarkArrayAggregation","arrayAggregation","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.aggregation.BenchmarkGroupedTypedHistogram","testSharedGroupWithLargeBlocksRunner","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkGroupedTopNBuilder","topN","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.sql.planner.BenchmarkPlanner","planQueries","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderChainedJoins","benchmarkReorderJoins","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins","benchmarkReorderJoins","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.util.PagesSortBenchmark","runPagesIndexSortBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.util.PagesSortBenchmark","runPagesMergeSortBenchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.BenchmarkBoxedBoolean","primitive","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.BenchmarkBoxedBoolean","unboxing","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.BenchmarkBoxedBoolean","identity","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.BenchmarkBoxedBoolean","booleanEquals","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.BenchmarkBoxedBoolean","object","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.BenchmarkBoxedBoolean","booleanEqualsNotNull","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithArithmeticInPredicate","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithFunctionPredicate","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkRangePredicateJoin","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","geometryToBingTiles","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","envelopeToBingTiles","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin","benchmarkJoin","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin","benchmarkUserOptimizedJoin","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeEnvelopeSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointDeserialized","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeDeserialized","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeDeserialized","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","benchmarkDeserialize","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","benchmarkDeserializeEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection","envelopes","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection","geometries","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope","simpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope","complexGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLine","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsInnerLineSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLine","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsCrossingLineSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineInEnvelopeSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects","stIntersectsOuterLineNotInEnvelopeSimpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkBingTilesAround","benchmark","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin","simpleGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin","complexGeometry","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.array.BenchmarkReferenceCountMap","benchmarkInserts","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializePoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializePoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializePointEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultipointEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultipointEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleLineStringEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexLineStringEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiLineStringEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiLineStringEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimplePolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimplePolygonEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexPolygonEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleMultiPolygonEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexMultiPolygonEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeSimpleGeometryCollectionEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde","deserializeComplexGeometryCollectionEnvelope","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializePoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializePoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultipoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultipoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultipoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultipoint","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiLineString","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimplePolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimplePolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleMultiPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleMultiPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexMultiPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexMultiPolygon","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeSimpleGeometryCollection","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeSimpleGeometryCollection","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","serializeComplexGeometryCollection","true","true","true","false"
"twitter-forks/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde","deserializeComplexGeometryCollection","true","true","true","false"
"nurkiewicz/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"nurkiewicz/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"nurkiewicz/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"nurkiewicz/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"nurkiewicz/RxJava","rx.subjects.PublishSubjectPerf","benchmark","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","justDirect","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","justStarted","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","justUsual","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","rangeDirect","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","rangeStarted","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","rangeUsual","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","justDirectUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","justStartedUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","justUsualUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","rangeDirectUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","rangeStartedUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf","rangeUsualUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.SubscribingPerf$Chain","mapped","true","true","true","false"
"nurkiewicz/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"nurkiewicz/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"nurkiewicz/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"nurkiewicz/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"nurkiewicz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"nurkiewicz/RxJava","rx.DeferredScalarPerf","reduce","true","true","true","false"
"nurkiewicz/RxJava","rx.DeferredScalarPerf","reduceSeed","true","true","true","false"
"nurkiewicz/RxJava","rx.DeferredScalarPerf","last","true","true","true","false"
"nurkiewicz/RxJava","rx.DeferredScalarPerf","collect","true","true","true","false"
"nurkiewicz/RxJava","rx.observables.SyncOnSubscribePerf","benchSyncOnSubscribe2","true","true","true","false"
"nurkiewicz/RxJava","rx.observables.SyncOnSubscribePerf","benchFromIterable2","true","true","true","false"
"nurkiewicz/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"nurkiewicz/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"nurkiewicz/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"nurkiewicz/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"nurkiewicz/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"nurkiewicz/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"nurkiewicz/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ZipPerf","baseline","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ZipPerf","syncSync","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ZipPerf","syncAsync","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ZipPerf","asyncSync","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ZipPerf","asyncAsync","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatPerf","normal","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatPerf","baseline","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FlatMapPerf","rxFlatMap","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FlatMapPerf","rxFlatMap2","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatMapInterablePerf","justPlain","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatMapInterablePerf","justIterable","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatMapInterablePerf","rangePlain","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatMapInterablePerf","rangeIterable","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatMapInterablePerf","xrangePlain","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatMapInterablePerf","xrangeIterable","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatMapInterablePerf","chainPlain","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.ConcatMapInterablePerf","chainIterable","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromComparison","fastpathIterable","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromComparison","fastpathArray","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromComparison","slowpathIterable","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromComparison","slowpathArray","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromComparison","slowpathIterable2","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromComparison","slowpathArray2","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.RedoPerf","baseline","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.RedoPerf","repeatCounted","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.RedoPerf","retryCounted","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.RedoPerf","repeatWhen","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.RedoPerf","retryWhen","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FlatMapAsFilterPerf","justEmptyFlatMap","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FlatMapAsFilterPerf","rangeEmptyFlatMap","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FlatMapAsFilterPerf","justEmptyConcatMap","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FlatMapAsFilterPerf","rangeEmptyConcatMap","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromIterablePerf","from","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromIterablePerf","fromUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FromIterablePerf","direct","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FlatMapRangePerf","rangeFlatMapJust","true","true","true","false"
"nurkiewicz/RxJava","rx.operators.FlatMapRangePerf","rangeFlatMapRange","true","true","true","false"
"nurkiewicz/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"nurkiewicz/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"nurkiewicz/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","scalar","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","scalarHidden","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","one","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","single","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","singleHidden","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","scalarConcat","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","scalarHiddenConcat","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","oneConcat","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","scalarMerge","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","scalarHiddenMerge","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","oneMerge","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","singleMerge","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","singleHiddenMerge","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","scalarSwitch","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","scalarHiddenSwitch","true","true","true","false"
"nurkiewicz/RxJava","rx.OneItemPerf","oneSwitch","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","simple","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","simpleEscape","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","simpleEscapeAll","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","observeOn","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","observeOnIO","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","subscribeOn","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","subscribeOnIO","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","justFlatMapJust","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","justFlatMapJustEscape","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","justFlatMapRange","true","true","true","false"
"nurkiewicz/RxJava","rx.ScalarJustPerf","justFlatMapRangeEscape","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"nurkiewicz/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","direct","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","flatmap","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","flatmapConst","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","observeOn","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","observeOnExec","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","subscribeOn","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","subscribeOnExec","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","subscribeOnSchExec","true","true","true","false"
"nurkiewicz/RxJava","rx.SingleSourcePerf","observeOnSchExec","true","true","true","false"
"davidmoten/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"davidmoten/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"davidmoten/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"davidmoten/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"davidmoten/RxJava","rx.subjects.PublishSubjectPerf","benchmark","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","justDirect","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","justStarted","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","justUsual","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","rangeDirect","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","rangeStarted","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","rangeUsual","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","justDirectUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","justStartedUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","justUsualUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","rangeDirectUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","rangeStartedUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf","rangeUsualUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.SubscribingPerf$Chain","mapped","true","true","true","false"
"davidmoten/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"davidmoten/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"davidmoten/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"davidmoten/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"davidmoten/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"davidmoten/RxJava","rx.DeferredScalarPerf","reduce","true","true","true","false"
"davidmoten/RxJava","rx.DeferredScalarPerf","reduceSeed","true","true","true","false"
"davidmoten/RxJava","rx.DeferredScalarPerf","last","true","true","true","false"
"davidmoten/RxJava","rx.DeferredScalarPerf","collect","true","true","true","false"
"davidmoten/RxJava","rx.observables.SyncOnSubscribePerf","benchSyncOnSubscribe2","true","true","true","false"
"davidmoten/RxJava","rx.observables.SyncOnSubscribePerf","benchFromIterable2","true","true","true","false"
"davidmoten/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"davidmoten/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"davidmoten/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"davidmoten/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"davidmoten/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"davidmoten/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"davidmoten/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"davidmoten/RxJava","rx.operators.ZipPerf","baseline","true","true","true","false"
"davidmoten/RxJava","rx.operators.ZipPerf","syncSync","true","true","true","false"
"davidmoten/RxJava","rx.operators.ZipPerf","syncAsync","true","true","true","false"
"davidmoten/RxJava","rx.operators.ZipPerf","asyncSync","true","true","true","false"
"davidmoten/RxJava","rx.operators.ZipPerf","asyncAsync","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatPerf","normal","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatPerf","baseline","true","true","true","false"
"davidmoten/RxJava","rx.operators.FlatMapPerf","rxFlatMap","true","true","true","false"
"davidmoten/RxJava","rx.operators.FlatMapPerf","rxFlatMap2","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatMapInterablePerf","justPlain","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatMapInterablePerf","justIterable","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatMapInterablePerf","rangePlain","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatMapInterablePerf","rangeIterable","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatMapInterablePerf","xrangePlain","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatMapInterablePerf","xrangeIterable","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatMapInterablePerf","chainPlain","true","true","true","false"
"davidmoten/RxJava","rx.operators.ConcatMapInterablePerf","chainIterable","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromComparison","fastpathIterable","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromComparison","fastpathArray","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromComparison","slowpathIterable","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromComparison","slowpathArray","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromComparison","slowpathIterable2","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromComparison","slowpathArray2","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"davidmoten/RxJava","rx.operators.RedoPerf","baseline","true","true","true","false"
"davidmoten/RxJava","rx.operators.RedoPerf","repeatCounted","true","true","true","false"
"davidmoten/RxJava","rx.operators.RedoPerf","retryCounted","true","true","true","false"
"davidmoten/RxJava","rx.operators.RedoPerf","repeatWhen","true","true","true","false"
"davidmoten/RxJava","rx.operators.RedoPerf","retryWhen","true","true","true","false"
"davidmoten/RxJava","rx.operators.FlatMapAsFilterPerf","justEmptyFlatMap","true","true","true","false"
"davidmoten/RxJava","rx.operators.FlatMapAsFilterPerf","rangeEmptyFlatMap","true","true","true","false"
"davidmoten/RxJava","rx.operators.FlatMapAsFilterPerf","justEmptyConcatMap","true","true","true","false"
"davidmoten/RxJava","rx.operators.FlatMapAsFilterPerf","rangeEmptyConcatMap","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromIterablePerf","from","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromIterablePerf","fromUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.operators.FromIterablePerf","direct","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"davidmoten/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"davidmoten/RxJava","rx.operators.FlatMapRangePerf","rangeFlatMapJust","true","true","true","false"
"davidmoten/RxJava","rx.operators.FlatMapRangePerf","rangeFlatMapRange","true","true","true","false"
"davidmoten/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"davidmoten/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"davidmoten/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","scalar","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","scalarHidden","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","one","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","single","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","singleHidden","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","scalarConcat","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","scalarHiddenConcat","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","oneConcat","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","scalarMerge","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","scalarHiddenMerge","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","oneMerge","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","singleMerge","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","singleHiddenMerge","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","scalarSwitch","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","scalarHiddenSwitch","true","true","true","false"
"davidmoten/RxJava","rx.OneItemPerf","oneSwitch","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","simple","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","simpleEscape","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","simpleEscapeAll","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","observeOn","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","observeOnIO","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","subscribeOn","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","subscribeOnIO","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","justFlatMapJust","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","justFlatMapJustEscape","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","justFlatMapRange","true","true","true","false"
"davidmoten/RxJava","rx.ScalarJustPerf","justFlatMapRangeEscape","true","true","true","false"
"davidmoten/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"davidmoten/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"davidmoten/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"davidmoten/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"davidmoten/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"davidmoten/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"davidmoten/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"davidmoten/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"davidmoten/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"davidmoten/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"davidmoten/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","direct","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","flatmap","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","flatmapConst","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","observeOn","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","observeOnExec","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","subscribeOn","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","subscribeOnExec","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","subscribeOnSchExec","true","true","true","false"
"davidmoten/RxJava","rx.SingleSourcePerf","observeOnSchExec","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAndNot","pairwiseAndNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIOr","pairwiseIOr","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideAndNaive","wideAnd_naive","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrPq","wideOr_pq","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkXor","pairwiseXor","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkForEach","forEach","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIterate","iterate","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkContains","contains","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkReverseIterate","reverseIterate","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkInot","flipLargeRange","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.BufferUtilBenchmark","galloping","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.buffer.BufferUtilBenchmark","local","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","orBitmapContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","orBitmapContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part2_orRunContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part2_orBitmapContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part3_orArrayContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part3_orArrayContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorRunContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorConcise","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBound1281","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBound1282","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsAdjustment","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBoundThreshold1000","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","runOptimize","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","runOptimize1","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","andBitmapContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","andBitmapContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part2_andRunContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part2_andBitmapContainerVSBitmapContainer2","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part3_andArrayContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part3_andArrayContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","OrRunContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","OrBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","AndConcise","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","andNotBitmapContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","andNotBitmapContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","reverseAndNotBitmapContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","reverseAndNotBitmapContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_andNotRunContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_andNotBitmapContainerVSBitmapContainer2","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_reverseAndNotRunContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_reverseAndNotBitmapContainerVSBitmapContainer2","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_andNotArrayContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_andNotArrayContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_reverseAndNotArrayContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_reverseAndNotArrayContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndRunContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndConcise","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotRunContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotConcise","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrRunContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrRunContainer_withconversion","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark","iteratorRunContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark","iteratorBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","xorBitmapContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","xorBitmapContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part2_xorRunContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part2_xorBitmapContainerVSBitmapContainer2","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part3_xorArrayContainerVSRunContainerContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part3_xorArrayContainerVSBitmapContainer","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_clone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_cloneAndrunOptimize","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSFromClone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSNoClone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSNoClonePreOpti","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_runOptimizeAndserializeToBAOSFromClone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","clone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","cloneAndrunOptimize","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSFromClone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSNoClone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSFromClonePreOpti","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSNoClonePreOpti","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","runOptimizeAndserializeToBAOSFromClone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrConcise","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrImmutableConcise","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrWAH","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_Roaringwithrun","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_Roaring","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_EWAH","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_EWAH32","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testDeserialize","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testMutableDeserializeMutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testSerialize","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testMutableSerialize","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.map.MapBenchmark","testMap","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.map.MapBenchmark","testMapViaBitset","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","tointUnsignedTime","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","tointUnsignedTimeAvg","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTime","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeAvg","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeShort","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeShortAvg","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark","onefunction","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark","manyfunctions","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","runVsArrayEquals_FewRuns","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark","runVsArrayEquals_ManyRuns","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testBoxed_a","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testStandard_a","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testFlyweight_a","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testBoxed_b","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testStandard_b","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testFlyweight_b","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testBoxed_c","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testStandard_c","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testFlyweight_c","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseStandard_a","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseFlyweight_a","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseStandard_b","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseFlyweight_b","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseStandard_c","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseFlyweight_c","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate1","RoaringWithRun","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate3","RoaringWithRun","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate1","RoaringWithRun","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.needwork.RandomAccess","binarySearch","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate2","RoaringWithRun","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate2","RoaringWithRun","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_standard","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_mutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_immutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_standard","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_mutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_immutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_standard","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_mutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_immutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapOrdered_standard","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapOrdered_mutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapUnordered_standard","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapUnordered_mutable","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createSparseBitSetOrdered","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createSparseBitSetUnordered","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.UtilBenchmark","galloping","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.UtilBenchmark","local","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","computeCardinality","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","updateCardinality","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iadd","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iandNot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iand","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","ior","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","ixor","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","iremove","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inot","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inotFull","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark","inotBig","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark","BitSetToRoaringByAddingBitByBit","true","true","true","false"
"okrische/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark","BitSetToRoaringUsingBitSetUtil","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlattenJustPerf","flowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlattenJustPerf","observable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapIterable1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapIterable0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapFlowable0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapFlowable1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapSingle1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapMaybe1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapMaybe0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapCompletable0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapIterableAsFlow1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapIterableAsFlow0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapSingleAsFlow1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapMaybeAsFlow1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapMaybeAsFlow0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","flowFlatMapCompletableAsFlow0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapIterable0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapIterable1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapObservable0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapObservable1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapSingle1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapMaybe1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapMaybe0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapCompletable0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapIterableAsObs1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapIterableAsObs0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapSingleAsObs1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapMaybeAsObs1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapMaybeAsObs0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.XMapYPerf","obsFlatMapCompletableAsObs0","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlowableFlatMapCompletableAsyncPerf","flatMapCompletable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.parallel.ParallelPerf","flatMap","true","true","true","false"
"akarnokd/RxJava","io.reactivex.parallel.ParallelPerf","groupBy","true","true","true","false"
"akarnokd/RxJava","io.reactivex.parallel.ParallelPerf","parallel","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlattenRangePerf","flowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlattenRangePerf","observable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingGetPerf","flowableBlockingFirst","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingGetPerf","flowableBlockingLast","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingGetPerf","observableBlockingLast","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingGetPerf","observableBlockingFirst","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingGetPerf","single","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingGetPerf","maybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingGetPerf","completable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ToFlowablePerf","flowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ToFlowablePerf","flowableInner","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ToFlowablePerf","observable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ToFlowablePerf","observableInner","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingPerf","flowableBlockingFirst","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingPerf","flowableBlockingLast","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingPerf","observableBlockingLast","true","true","true","false"
"akarnokd/RxJava","io.reactivex.BlockingPerf","observableBlockingFirst","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ObservableFlatMapPerf","flatMapXRange","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"akarnokd/RxJava","io.reactivex.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.EachTypeFlatMapPerf","bpRange","true","true","true","false"
"akarnokd/RxJava","io.reactivex.EachTypeFlatMapPerf","bpRangeMapJust","true","true","true","false"
"akarnokd/RxJava","io.reactivex.EachTypeFlatMapPerf","bpRangeMapRange","true","true","true","false"
"akarnokd/RxJava","io.reactivex.EachTypeFlatMapPerf","nbpRange","true","true","true","false"
"akarnokd/RxJava","io.reactivex.EachTypeFlatMapPerf","nbpRangeMapJust","true","true","true","false"
"akarnokd/RxJava","io.reactivex.EachTypeFlatMapPerf","nbpRangeMapRange","true","true","true","false"
"akarnokd/RxJava","io.reactivex.EachTypeFlatMapPerf","singleJust","true","true","true","false"
"akarnokd/RxJava","io.reactivex.EachTypeFlatMapPerf","singleJustMapJust","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlatMapJustPerf","flowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlatMapJustPerf","observable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlattenCrossMapPerf","flowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlattenCrossMapPerf","observable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlowableFlatMapCompletableSyncPerf","flatMap","true","true","true","false"
"akarnokd/RxJava","io.reactivex.FlowableFlatMapCompletableSyncPerf","flatMapCompletable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapCompletablePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapCompletablePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapCompletablePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapCompletablePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapCompletablePerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapCompletablePerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapCompletablePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapCompletablePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapCompletablePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybeEmptyPerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybeEmptyPerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybeEmptyPerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapSinglePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapSinglePerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapSinglePerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapSinglePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapSinglePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapSinglePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapSinglePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapSinglePerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapSinglePerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybeEmptyPerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybeEmptyPerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybeEmptyPerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapCompletablePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapCompletablePerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapCompletablePerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybePerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybePerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybeEmptyPerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybeEmptyPerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybeEmptyPerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapSinglePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapSinglePerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapSinglePerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapCompletablePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapCompletablePerf","switchMapToObservableEmpty","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableSwitchMapCompletablePerf","switchMapCompletableEmpty","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybeEmptyPerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybeEmptyPerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybeEmptyPerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybePerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybePerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapSinglePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapSinglePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableFlatMapSinglePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapSinglePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapSinglePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapSinglePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybeEmptyPerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybeEmptyPerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybeEmptyPerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybeEmptyPerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybeEmptyPerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybeEmptyPerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybePerf","observablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybePerf","observableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybePerf","observableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapCompletablePerf","flowablePlain","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapCompletablePerf","flowableConvert","true","true","true","false"
"akarnokd/RxJava","io.reactivex.xmapz.FlowableSwitchMapCompletablePerf","flowableDedicated","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","subscribeOnFlowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","observeOnFlowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","pipelineFlowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","subscribeOnObservable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","observeOnObservable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","pipelineObservable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","observeOnSingle","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","subscribeOnSingle","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","pipelineSingle","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","observeOnCompletable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","subscribeOnCompletable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","pipelineCompletable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","observeOnMaybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","subscribeOnMaybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.JustAsyncPerf","pipelineMaybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnFlowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","observeOnFlowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","pipelineFlowable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnObservable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","observeOnObservable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","pipelineObservable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","observeOnSingle","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnSingle","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","pipelineSingle","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","observeOnCompletable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnCompletable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","pipelineCompletable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","observeOnMaybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnMaybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.CallableAsyncPerf","pipelineMaybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ReducePerf","obsSingle","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ReducePerf","flowSingle","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ReducePerf","obsMaybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.ReducePerf","flowMaybe","true","true","true","false"
"akarnokd/RxJava","io.reactivex.StrictPerf","internal","true","true","true","false"
"akarnokd/RxJava","io.reactivex.StrictPerf","external","true","true","true","false"
"akarnokd/RxJava","io.reactivex.RxVsStreamPerf","range","true","true","true","false"
"akarnokd/RxJava","io.reactivex.RxVsStreamPerf","rangeObservable","true","true","true","false"
"akarnokd/RxJava","io.reactivex.RxVsStreamPerf","rangeFlatMap","true","true","true","false"
"akarnokd/RxJava","io.reactivex.RxVsStreamPerf","rangeObservableFlatMap","true","true","true","false"
"akarnokd/RxJava","io.reactivex.RxVsStreamPerf","rangeFlatMapJust","true","true","true","false"
"akarnokd/RxJava","io.reactivex.RxVsStreamPerf","rangeObservableFlatMapJust","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","unbounded1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","unbounded1k","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","unbounded1m","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","bounded1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","bounded1k","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","bounded1m","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","subject1","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","subject1k","true","true","true","false"
"akarnokd/RxJava","io.reactivex.PublishProcessorPerf","subject1m","true","true","true","false"
"akarnokd/RxJava","io.reactivex.RangePerf","rangeSync","true","true","true","false"
"jacek-rzrz/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"jacek-rzrz/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"jacek-rzrz/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"jacek-rzrz/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"jacek-rzrz/RxJava","rx.SubscribingPerf","justDirect","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","justStarted","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","justUsual","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","rangeDirect","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","rangeStarted","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","rangeUsual","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","justDirectUnsafe","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","justStartedUnsafe","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","justUsualUnsafe","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","rangeDirectUnsafe","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","rangeStartedUnsafe","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf","rangeUsualUnsafe","","","","true"
"jacek-rzrz/RxJava","rx.SubscribingPerf$Chain","mapped","","","","true"
"jacek-rzrz/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"jacek-rzrz/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"jacek-rzrz/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"jacek-rzrz/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"jacek-rzrz/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"jacek-rzrz/RxJava","rx.observables.SyncOnSubscribePerf","benchSyncOnSubscribe2","","","","true"
"jacek-rzrz/RxJava","rx.observables.SyncOnSubscribePerf","benchFromIterable2","","","","true"
"jacek-rzrz/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"jacek-rzrz/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"jacek-rzrz/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"jacek-rzrz/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"jacek-rzrz/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"jacek-rzrz/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"jacek-rzrz/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"jacek-rzrz/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"jacek-rzrz/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.ZipPerf","baseline","","","","true"
"jacek-rzrz/RxJava","rx.operators.ZipPerf","syncSync","","","","true"
"jacek-rzrz/RxJava","rx.operators.ZipPerf","syncAsync","","","","true"
"jacek-rzrz/RxJava","rx.operators.ZipPerf","asyncSync","","","","true"
"jacek-rzrz/RxJava","rx.operators.ZipPerf","asyncAsync","","","","true"
"jacek-rzrz/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.ConcatPerf","normal","","","","true"
"jacek-rzrz/RxJava","rx.operators.ConcatPerf","baseline","","","","true"
"jacek-rzrz/RxJava","rx.operators.FlatMapPerf","rxFlatMap","","","","true"
"jacek-rzrz/RxJava","rx.operators.FlatMapPerf","rxFlatMap2","","","","true"
"jacek-rzrz/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.ConcatMapInterablePerf","justPlain","","","","true"
"jacek-rzrz/RxJava","rx.operators.ConcatMapInterablePerf","justIterable","","","","true"
"jacek-rzrz/RxJava","rx.operators.ConcatMapInterablePerf","rangePlain","","","","true"
"jacek-rzrz/RxJava","rx.operators.ConcatMapInterablePerf","rangeIterable","","","","true"
"jacek-rzrz/RxJava","rx.operators.ConcatMapInterablePerf","xrangePlain","","","","true"
"jacek-rzrz/RxJava","rx.operators.ConcatMapInterablePerf","xrangeIterable","","","","true"
"jacek-rzrz/RxJava","rx.operators.ConcatMapInterablePerf","chainPlain","","","","true"
"jacek-rzrz/RxJava","rx.operators.ConcatMapInterablePerf","chainIterable","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromComparison","fastpathIterable","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromComparison","fastpathArray","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromComparison","slowpathIterable","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromComparison","slowpathArray","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromComparison","slowpathIterable2","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromComparison","slowpathArray2","","","","true"
"jacek-rzrz/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.RedoPerf","baseline","","","","true"
"jacek-rzrz/RxJava","rx.operators.RedoPerf","repeatCounted","","","","true"
"jacek-rzrz/RxJava","rx.operators.RedoPerf","retryCounted","","","","true"
"jacek-rzrz/RxJava","rx.operators.RedoPerf","repeatWhen","","","","true"
"jacek-rzrz/RxJava","rx.operators.RedoPerf","retryWhen","","","","true"
"jacek-rzrz/RxJava","rx.operators.FlatMapAsFilterPerf","justEmptyFlatMap","","","","true"
"jacek-rzrz/RxJava","rx.operators.FlatMapAsFilterPerf","rangeEmptyFlatMap","","","","true"
"jacek-rzrz/RxJava","rx.operators.FlatMapAsFilterPerf","justEmptyConcatMap","","","","true"
"jacek-rzrz/RxJava","rx.operators.FlatMapAsFilterPerf","rangeEmptyConcatMap","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromIterablePerf","from","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromIterablePerf","fromUnsafe","","","","true"
"jacek-rzrz/RxJava","rx.operators.FromIterablePerf","direct","","","","true"
"jacek-rzrz/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","false","false","false"
"jacek-rzrz/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"jacek-rzrz/RxJava","rx.operators.FlatMapRangePerf","rangeFlatMapJust","","","","true"
"jacek-rzrz/RxJava","rx.operators.FlatMapRangePerf","rangeFlatMapRange","","","","true"
"jacek-rzrz/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"jacek-rzrz/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"jacek-rzrz/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"jacek-rzrz/RxJava","rx.OneItemPerf","scalar","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","scalarHidden","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","one","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","single","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","singleHidden","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","scalarConcat","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","scalarHiddenConcat","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","oneConcat","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","scalarMerge","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","scalarHiddenMerge","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","oneMerge","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","singleMerge","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","singleHiddenMerge","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","scalarSwitch","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","scalarHiddenSwitch","","","","true"
"jacek-rzrz/RxJava","rx.OneItemPerf","oneSwitch","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","simple","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","simpleEscape","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","simpleEscapeAll","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","observeOn","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","observeOnIO","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","subscribeOn","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","subscribeOnIO","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","justFlatMapJust","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","justFlatMapJustEscape","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","justFlatMapRange","","","","true"
"jacek-rzrz/RxJava","rx.ScalarJustPerf","justFlatMapRangeEscape","","","","true"
"jacek-rzrz/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"jacek-rzrz/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","direct","","","","true"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","flatmap","","","","true"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","flatmapConst","","","","true"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","observeOn","","","","true"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","observeOnExec","","","","true"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","subscribeOn","","","","true"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","subscribeOnExec","","","","true"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","subscribeOnSchExec","","","","true"
"jacek-rzrz/RxJava","rx.SingleSourcePerf","observeOnSchExec","","","","true"
"zsxwing/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"zsxwing/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"zsxwing/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"zsxwing/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","justDirect","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","justStarted","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","justUsual","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","rangeDirect","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","rangeStarted","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","rangeUsual","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","justDirectUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","justStartedUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","justUsualUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","rangeDirectUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","rangeStartedUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf","rangeUsualUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.SubscribingPerf$Chain","mapped","true","true","true","false"
"zsxwing/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"zsxwing/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"zsxwing/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"zsxwing/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"zsxwing/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"zsxwing/RxJava","rx.observables.SyncOnSubscribePerf","benchSyncOnSubscribe2","true","true","true","false"
"zsxwing/RxJava","rx.observables.SyncOnSubscribePerf","benchFromIterable2","true","true","true","false"
"zsxwing/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"zsxwing/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"zsxwing/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"zsxwing/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"zsxwing/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"zsxwing/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"zsxwing/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"zsxwing/RxJava","rx.operators.ZipPerf","baseline","true","true","true","false"
"zsxwing/RxJava","rx.operators.ZipPerf","syncSync","true","true","true","false"
"zsxwing/RxJava","rx.operators.ZipPerf","syncAsync","true","true","true","false"
"zsxwing/RxJava","rx.operators.ZipPerf","asyncSync","true","true","true","false"
"zsxwing/RxJava","rx.operators.ZipPerf","asyncAsync","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatPerf","normal","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatPerf","baseline","true","true","true","false"
"zsxwing/RxJava","rx.operators.FlatMapPerf","rxFlatMap","true","true","true","false"
"zsxwing/RxJava","rx.operators.FlatMapPerf","rxFlatMap2","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatMapInterablePerf","justPlain","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatMapInterablePerf","justIterable","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatMapInterablePerf","rangePlain","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatMapInterablePerf","rangeIterable","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatMapInterablePerf","xrangePlain","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatMapInterablePerf","xrangeIterable","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatMapInterablePerf","chainPlain","true","true","true","false"
"zsxwing/RxJava","rx.operators.ConcatMapInterablePerf","chainIterable","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromComparison","fastpathIterable","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromComparison","fastpathArray","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromComparison","slowpathIterable","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromComparison","slowpathArray","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromComparison","slowpathIterable2","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromComparison","slowpathArray2","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"zsxwing/RxJava","rx.operators.RedoPerf","baseline","true","true","true","false"
"zsxwing/RxJava","rx.operators.RedoPerf","repeatCounted","true","true","true","false"
"zsxwing/RxJava","rx.operators.RedoPerf","retryCounted","true","true","true","false"
"zsxwing/RxJava","rx.operators.RedoPerf","repeatWhen","true","true","true","false"
"zsxwing/RxJava","rx.operators.RedoPerf","retryWhen","true","true","true","false"
"zsxwing/RxJava","rx.operators.FlatMapAsFilterPerf","justEmptyFlatMap","true","true","true","false"
"zsxwing/RxJava","rx.operators.FlatMapAsFilterPerf","rangeEmptyFlatMap","true","true","true","false"
"zsxwing/RxJava","rx.operators.FlatMapAsFilterPerf","justEmptyConcatMap","true","true","true","false"
"zsxwing/RxJava","rx.operators.FlatMapAsFilterPerf","rangeEmptyConcatMap","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromIterablePerf","from","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromIterablePerf","fromUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.operators.FromIterablePerf","direct","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"zsxwing/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"zsxwing/RxJava","rx.operators.FlatMapRangePerf","rangeFlatMapJust","true","true","true","false"
"zsxwing/RxJava","rx.operators.FlatMapRangePerf","rangeFlatMapRange","true","true","true","false"
"zsxwing/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"zsxwing/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"zsxwing/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","scalar","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","scalarHidden","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","one","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","single","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","singleHidden","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","scalarConcat","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","scalarHiddenConcat","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","oneConcat","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","scalarMerge","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","scalarHiddenMerge","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","oneMerge","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","singleMerge","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","singleHiddenMerge","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","scalarSwitch","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","scalarHiddenSwitch","true","true","true","false"
"zsxwing/RxJava","rx.OneItemPerf","oneSwitch","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","simple","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","simpleEscape","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","simpleEscapeAll","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","observeOn","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","observeOnIO","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","subscribeOn","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","subscribeOnIO","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","justFlatMapJust","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","justFlatMapJustEscape","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","justFlatMapRange","true","true","true","false"
"zsxwing/RxJava","rx.ScalarJustPerf","justFlatMapRangeEscape","true","true","true","false"
"zsxwing/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"zsxwing/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"zsxwing/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"zsxwing/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"zsxwing/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"zsxwing/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"zsxwing/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"zsxwing/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"zsxwing/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"zsxwing/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"zsxwing/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","direct","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","flatmap","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","flatmapConst","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","observeOn","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","observeOnExec","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","subscribeOn","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","subscribeOnExec","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","subscribeOnSchExec","true","true","true","false"
"zsxwing/RxJava","rx.SingleSourcePerf","observeOnSchExec","true","true","true","false"
"jchambers/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark","writeCBB","true","true","true","false"
"jchambers/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark","writeFCBB","true","true","true","false"
"jchambers/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark","setGetLong","true","true","true","false"
"jchambers/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark","setLong","true","true","true","false"
"jchambers/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseUncontended","true","true","true","false"
"jchambers/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseContended","true","true","true","false"
"jchambers/netty","io.netty.buffer.ByteBufAccessBenchmark","setGetLong","true","true","true","false"
"jchambers/netty","io.netty.buffer.ByteBufAccessBenchmark","setLong","true","true","true","false"
"jchambers/netty","io.netty.buffer.ByteBufAccessBenchmark","readBatch","true","true","true","false"
"jchambers/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark","capacityChange","true","true","true","false"
"jchambers/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark","allocateRelease","true","true","true","false"
"jchambers/netty","io.netty.buffer.ByteBufUtilDecodeStringBenchmark","decodeString","true","true","true","false"
"jchambers/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark","getCharSequence","true","true","true","false"
"jchambers/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark","getCharSequenceOld","true","true","true","false"
"jchambers/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark","forEachByte","true","true","true","false"
"jchambers/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark","sequentialWriteAndRead","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark","allocateRelease","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongUnsafeByteBuf","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongByteBuffer","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongUnsafeByteBuf","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongByteBuffer","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","writeRead","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","write","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","read","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.ByteBufCopyBenchmark","setBytes","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"jchambers/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultTrailers","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyTrailers","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultClientHeaders","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyClientHeaders","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultServerHeaders","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyServerHeaders","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"jchambers/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"jchambers/netty","io.netty.microbench.channel.DefaultChannelPipelineBenchmark","propagateEvent","true","true","true","false"
"jchambers/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark","pingPong","true","true","true","false"
"jchambers/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"jchambers/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"jchambers/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","fullMessage","true","true","true","false"
"jchambers/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","contentLength","true","true","true","false"
"jchambers/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","chunked","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test1Producer","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test2Producers","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test3Producers","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInOrder","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInReverseOrder","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"jchambers/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"jchambers/netty","io.netty.microbench.redis.RedisEncoderBenchmark","writeArray","true","true","true","false"
"jchambers/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"jchambers/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","record","true","true","true","false"
"jchambers/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","recordWithHint","true","true","true","false"
"jchambers/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMNoPrivileged","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSM","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMWithNullCheck","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMNoPrivileged","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSM","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMWithNullCheck","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateInitializedByteArray","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateUninitializedByteArray","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvOld","true","true","true","false"
"jchambers/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvNew","true","true","true","false"
"jchambers/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark","wrapUnwrap","true","true","true","false"
"jchambers/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark","wrap","true","true","true","false"
"jchambers/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark","wrapUnwrap","true","true","true","false"
"jchambers/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark","handshake","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressOld","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressNew","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressOld","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressNew","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"jchambers/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.AdvancedCodecOutputListBenchmark","codecOutListAllocRecycle","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","shortInt","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","mediumInt","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray2","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray3","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes2","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes3","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","oldEncoder","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","newEncoder","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapKnownMethods","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapKnownMethods","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapMixMethods","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapMixMethods","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapUnknownMethods","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapUnknownMethods","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","newWriter","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","oldWriter","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark","encode","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","oldEquals","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","newEquals","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxLong","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntWithLong","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxInt","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntUsingLong","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark","decode","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.DateFormatter2Benchmark","parseHttpHeaderDateFormatterNew","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormatter","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormat","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormatter","true","true","true","false"
"jchambers/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormat","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDsAsRegex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDsAsRegexAndMatchRandomUUID","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileGranularityPathRegex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","deserializeGranularityPathRegex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDRegex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","deserializeUUIDRegex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDRegexAndMatch","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileGranularityPathRegexAndMatch","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","precompileUUIDRegexAndMatch","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","precompileGranularityPathRegexAndMatch","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchLikeEquals","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchSelectorEquals","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchLikePrefix","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchBoundPrefix","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchRegexPrefix","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.DataSketchesHllBenchmark","init","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.DataSketchesHllBenchmark","initAndGet","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.DataSketchesHllBenchmark","initAndSerde","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericOnly","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericThenString","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenNumeric","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","jqflatten","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.LongCompressionBenchmark","readContinuous","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.LongCompressionBenchmark","readSkipping","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read1","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read2","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read4","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read8","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd12","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd16","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd20","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd24","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd32","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd40","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd48","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd56","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd64","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark","uncompressed","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark","compressed","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingJavaScript","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingExpression","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingNative","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GenericIndexedBenchmark","get","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.GenericIndexedBenchmark","indexOf","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingExpression","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingExtractionFn","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingCursor","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFormatUsingExpression","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFormatUsingExtractionFn","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExpressionAsLong","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExpressionAsString","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExtractionFn","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","arithmeticOnLong","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","stringConcatAndCompareOnLong","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenFloat","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.indexing.IndexMergeBenchmark","mergeV9","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.indexing.IncrementalIndexReadBenchmark","read","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.indexing.IncrementalIndexReadBenchmark","readWithFilters","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.indexing.IndexPersistBenchmark","persistV9","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.indexing.IndexIngestionBenchmark","addRows","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.CachingClusteredClientBenchmark","timeseriesQuery","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.CachingClusteredClientBenchmark","topNQuery","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.CachingClusteredClientBenchmark","groupByQuery","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SqlVsNativeBenchmark","queryNative","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SqlVsNativeBenchmark","queryPlanner","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","querySingleIncrementalIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","querySingleQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","queryFilteredSingleQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","queryMultiQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SearchBenchmark","querySingleIncrementalIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SearchBenchmark","querySingleQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SearchBenchmark","queryMultiQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","querySingleIncrementalIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","querySingleQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexX","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSpilling","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSerde","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SqlBenchmark","querySql","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryIncrementalIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryMultiQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.timecompare.TimeCompareBenchmark","queryMultiQueryableIndexTopN","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.timecompare.TimeCompareBenchmark","queryMultiQueryableIndexTimeseries","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.TopNBenchmark","querySingleIncrementalIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.TopNBenchmark","querySingleQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.TopNBenchmark","queryMultiQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.ScanBenchmark","querySingleIncrementalIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.ScanBenchmark","querySingleQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.query.ScanBenchmark","queryMultiQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","mergeFixedDifferentBuckets","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","mergeFixedSameBuckets","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","getPercentilesFixed","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","serializeFixedSparseLower","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","deserializeFixedSparseLower","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","serializeFixedSparseUpper","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","deserializeFixedSparseUpper","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","serializeFixedFull","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","deserializeFixedFull","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.CompressedColumnarIntsBenchmark","uncompressed","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.CompressedColumnarIntsBenchmark","compressed","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramAddBenchmark","addFixedHisto","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FixedHistogramAddBenchmark","addFixedHistoNormal","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalLongs","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalFloats","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalStrings","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FloatCompressionBenchmark","readContinuous","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FloatCompressionBenchmark","readSkipping","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BasicAuthUserMapSerdeBenchmark","serialize","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BasicAuthUserMapSerdeBenchmark","deserialize","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","stringRead","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","longRead","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterNone","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterHalf","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterAll","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithPreFilter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithPostFilter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithExFnPreFilter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithExFnPostFilter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readAndFilter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readOrFilter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readOrFilterCNF","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilterCNF","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.ConsistentHasherBenchmark","hash","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","iter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","constructAndIter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","intersectionAndIter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","unionAndIter","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.RendezvousHasherBenchmark","hash","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","ingest","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","querySingleIncrementalIndex","true","true","true","false"
"gianm/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","querySingleQueryableIndex","true","true","true","false"
"gianm/druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark","benchAdd","true","true","true","false"
"gianm/druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark","benchRemove","true","true","true","false"
"gianm/druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark","benchLookup","true","true","true","false"
"gianm/druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark","benchIsOvershadowed","true","true","true","false"
"gianm/druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark","benchFindFullyOvershadowed","true","true","true","false"
"gianm/druid","org.apache.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"gianm/druid","org.apache.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"gianm/druid","org.apache.druid.server.coordinator.NewestSegmentFirstPolicyBenchmark","measureNewestSegmentFirstPolicy","true","true","true","false"
"gianm/druid","org.apache.druid.server.coordinator.CachingCostBalancerStrategyBenchmark","measureCostStrategy","true","true","true","false"
"gianm/druid","org.apache.druid.server.coordinator.CachingCostBalancerStrategyBenchmark","measureCachingCostStrategy","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark","writeCBB","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark","writeFCBB","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark","setGetLong","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark","setLong","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseUncontended","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseContended","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.ByteBufAccessBenchmark","setGetLong","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.ByteBufAccessBenchmark","setLong","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.ByteBufAccessBenchmark","readBatch","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark","capacityChange","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark","allocateRelease","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.ByteBufUtilDecodeStringBenchmark","decodeString","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark","getCharSequence","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark","getCharSequenceOld","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark","forEachByte","true","true","true","false"
"tbrooks8/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark","sequentialWriteAndRead","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark","allocateRelease","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongUnsafeByteBuf","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongByteBuffer","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongUnsafeByteBuf","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongByteBuffer","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","writeRead","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","write","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","read","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.ByteBufCopyBenchmark","setBytes","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultTrailers","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyTrailers","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultClientHeaders","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyClientHeaders","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultServerHeaders","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyServerHeaders","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.channel.DefaultChannelPipelineBenchmark","propagateEvent","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark","pingPong","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","fullMessage","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","contentLength","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","chunked","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test1Producer","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test2Producers","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test3Producers","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInOrder","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInReverseOrder","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.redis.RedisEncoderBenchmark","writeArray","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","record","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","recordWithHint","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMNoPrivileged","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSM","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMWithNullCheck","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMNoPrivileged","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSM","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMWithNullCheck","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateInitializedByteArray","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateUninitializedByteArray","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvOld","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvNew","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark","wrapUnwrap","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark","wrap","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark","wrapUnwrap","true","true","true","false"
"tbrooks8/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark","handshake","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressOld","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressNew","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressOld","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressNew","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"tbrooks8/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.AdvancedCodecOutputListBenchmark","codecOutListAllocRecycle","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","shortInt","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","mediumInt","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray2","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray3","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes2","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes3","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","oldEncoder","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","newEncoder","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapKnownMethods","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapKnownMethods","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapMixMethods","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapMixMethods","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapUnknownMethods","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapUnknownMethods","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","newWriter","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","oldWriter","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark","encode","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","oldEquals","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","newEquals","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxLong","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntWithLong","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxInt","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntUsingLong","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark","decode","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.DateFormatter2Benchmark","parseHttpHeaderDateFormatterNew","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormatter","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormat","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormatter","true","true","true","false"
"tbrooks8/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormat","true","true","true","false"
"yipen9/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark","writeCBB","true","true","true","false"
"yipen9/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark","writeFCBB","true","true","true","false"
"yipen9/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark","setGetLong","true","true","true","false"
"yipen9/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark","setLong","true","true","true","false"
"yipen9/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseUncontended","true","true","true","false"
"yipen9/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseContended","true","true","true","false"
"yipen9/netty","io.netty.buffer.ByteBufAccessBenchmark","setGetLong","true","true","true","false"
"yipen9/netty","io.netty.buffer.ByteBufAccessBenchmark","setLong","true","true","true","false"
"yipen9/netty","io.netty.buffer.ByteBufAccessBenchmark","readBatch","true","true","true","false"
"yipen9/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark","capacityChange","true","true","true","false"
"yipen9/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark","allocateRelease","true","true","true","false"
"yipen9/netty","io.netty.buffer.ByteBufUtilDecodeStringBenchmark","decodeString","true","true","true","false"
"yipen9/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark","getCharSequence","true","true","true","false"
"yipen9/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark","getCharSequenceOld","true","true","true","false"
"yipen9/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark","forEachByte","true","true","true","false"
"yipen9/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark","sequentialWriteAndRead","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark","allocateRelease","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongUnsafeByteBuf","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongByteBuffer","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongUnsafeByteBuf","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongByteBuffer","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","writeRead","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","write","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","read","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.ByteBufCopyBenchmark","setBytes","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"yipen9/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultTrailers","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyTrailers","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultClientHeaders","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyClientHeaders","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultServerHeaders","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyServerHeaders","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"yipen9/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"yipen9/netty","io.netty.microbench.channel.DefaultChannelPipelineBenchmark","propagateEvent","true","true","true","false"
"yipen9/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark","pingPong","true","true","true","false"
"yipen9/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"yipen9/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"yipen9/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","fullMessage","true","true","true","false"
"yipen9/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","contentLength","true","true","true","false"
"yipen9/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","chunked","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test1Producer","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test2Producers","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test3Producers","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInOrder","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInReverseOrder","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"yipen9/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"yipen9/netty","io.netty.microbench.redis.RedisEncoderBenchmark","writeArray","true","true","true","false"
"yipen9/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"yipen9/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","record","true","true","true","false"
"yipen9/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","recordWithHint","true","true","true","false"
"yipen9/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMNoPrivileged","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSM","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMWithNullCheck","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMNoPrivileged","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSM","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMWithNullCheck","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateInitializedByteArray","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateUninitializedByteArray","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvOld","true","true","true","false"
"yipen9/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvNew","true","true","true","false"
"yipen9/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark","wrapUnwrap","true","true","true","false"
"yipen9/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark","wrap","true","true","true","false"
"yipen9/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark","wrapUnwrap","true","true","true","false"
"yipen9/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark","handshake","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressOld","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressNew","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressOld","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressNew","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"yipen9/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.AdvancedCodecOutputListBenchmark","codecOutListAllocRecycle","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","shortInt","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","mediumInt","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray2","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray3","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes2","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes3","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","oldEncoder","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","newEncoder","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapKnownMethods","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapKnownMethods","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapMixMethods","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapMixMethods","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapUnknownMethods","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapUnknownMethods","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","newWriter","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","oldWriter","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark","encode","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","oldEquals","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","newEquals","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxLong","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntWithLong","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxInt","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntUsingLong","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark","decode","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.DateFormatter2Benchmark","parseHttpHeaderDateFormatterNew","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormatter","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormat","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormatter","true","true","true","false"
"yipen9/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormat","true","true","true","false"
"fenik17/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark","writeCBB","true","true","true","false"
"fenik17/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark","writeFCBB","true","true","true","false"
"fenik17/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark","setGetLong","true","true","true","false"
"fenik17/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark","setLong","true","true","true","false"
"fenik17/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseUncontended","true","true","true","false"
"fenik17/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseContended","true","true","true","false"
"fenik17/netty","io.netty.buffer.ByteBufAccessBenchmark","setGetLong","true","true","true","false"
"fenik17/netty","io.netty.buffer.ByteBufAccessBenchmark","setLong","true","true","true","false"
"fenik17/netty","io.netty.buffer.ByteBufAccessBenchmark","readBatch","true","true","true","false"
"fenik17/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark","capacityChange","true","true","true","false"
"fenik17/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark","allocateRelease","true","true","true","false"
"fenik17/netty","io.netty.buffer.ByteBufUtilDecodeStringBenchmark","decodeString","true","true","true","false"
"fenik17/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark","getCharSequence","true","true","true","false"
"fenik17/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark","getCharSequenceOld","true","true","true","false"
"fenik17/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark","forEachByte","true","true","true","false"
"fenik17/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark","sequentialWriteAndRead","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark","allocateRelease","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongUnsafeByteBuf","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongByteBuffer","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongUnsafeByteBuf","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongByteBuffer","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","false","false","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","writeRead","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","write","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","read","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.ByteBufCopyBenchmark","setBytes","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"fenik17/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultTrailers","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyTrailers","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultClientHeaders","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyClientHeaders","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultServerHeaders","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyServerHeaders","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"fenik17/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"fenik17/netty","io.netty.microbench.channel.DefaultChannelPipelineBenchmark","propagateEvent","true","true","true","false"
"fenik17/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark","pingPong","true","true","true","false"
"fenik17/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark","executeSingle","true","true","true","false"
"fenik17/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark","executeMulti","true","true","true","false"
"fenik17/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"fenik17/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"fenik17/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","fullMessage","true","true","true","false"
"fenik17/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","contentLength","true","true","true","false"
"fenik17/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","chunked","true","true","true","false"
"fenik17/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test1Producer","true","true","true","false"
"fenik17/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test2Producers","true","true","true","false"
"fenik17/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark","test3Producers","true","true","true","false"
"fenik17/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"fenik17/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"fenik17/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"fenik17/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"fenik17/netty","io.netty.microbench.concurrent.RunnableScheduledFutureAdapterBenchmark","cancelInOrder","","","","true"
"fenik17/netty","io.netty.microbench.concurrent.RunnableScheduledFutureAdapterBenchmark","cancelInReverseOrder","","","","true"
"fenik17/netty","io.netty.microbench.redis.RedisEncoderBenchmark","writeArray","true","true","true","false"
"fenik17/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"fenik17/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","record","true","true","true","false"
"fenik17/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","recordWithHint","true","true","true","false"
"fenik17/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMNoPrivileged","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSM","true","false","false","false"
"fenik17/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMWithNullCheck","true","false","false","false"
"fenik17/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMNoPrivileged","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSM","true","false","false","false"
"fenik17/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMWithNullCheck","true","false","false","false"
"fenik17/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateInitializedByteArray","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateUninitializedByteArray","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvOld","true","true","true","false"
"fenik17/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvNew","true","true","true","false"
"fenik17/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark","wrapUnwrap","true","true","true","false"
"fenik17/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark","wrap","true","true","true","false"
"fenik17/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark","wrapUnwrap","true","true","true","false"
"fenik17/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark","handshake","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressOld","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressNew","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressOld","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressNew","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"fenik17/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","false","false","false"
"fenik17/netty","io.netty.handler.codec.AdvancedCodecOutputListBenchmark","codecOutListAllocRecycle","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","shortInt","true","false","false","false"
"fenik17/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","mediumInt","true","false","false","false"
"fenik17/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray2","true","false","false","false"
"fenik17/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray3","true","false","false","false"
"fenik17/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes2","true","false","false","false"
"fenik17/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes3","true","false","false","false"
"fenik17/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","oldEncoder","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","newEncoder","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapKnownMethods","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapKnownMethods","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapMixMethods","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapMixMethods","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapUnknownMethods","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapUnknownMethods","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","newWriter","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","oldWriter","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark","encode","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","oldEquals","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","newEquals","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxLong","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntWithLong","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxInt","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntUsingLong","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark","decode","true","true","true","false"
"fenik17/netty","io.netty.handler.codec.DateFormatter2Benchmark","parseHttpHeaderDateFormatterNew","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDsAsRegex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDsAsRegexAndMatchRandomUUID","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileGranularityPathRegex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","deserializeGranularityPathRegex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDRegex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","deserializeUUIDRegex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDRegexAndMatch","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileGranularityPathRegexAndMatch","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","precompileUUIDRegexAndMatch","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RegexMatchBenchmark","precompileGranularityPathRegexAndMatch","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchLikeEquals","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchSelectorEquals","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchLikePrefix","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchBoundPrefix","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchRegexPrefix","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericOnly","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericThenString","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenNumeric","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","jqflatten","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.LongCompressionBenchmark","readContinuous","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.LongCompressionBenchmark","readSkipping","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read1","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read2","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read4","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read8","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd12","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd16","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd20","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd24","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd32","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd40","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd48","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd56","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd64","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark","uncompressed","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark","compressed","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingJavaScript","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingExpression","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingNative","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GenericIndexedBenchmark","get","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.GenericIndexedBenchmark","indexOf","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingExpression","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingExtractionFn","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingCursor","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFormatUsingExpression","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFormatUsingExtractionFn","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExpressionAsLong","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExpressionAsString","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExtractionFn","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","arithmeticOnLong","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","stringConcatAndCompareOnLong","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenFloat","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.indexing.IndexMergeBenchmark","mergeV9","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.indexing.IncrementalIndexReadBenchmark","read","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.indexing.IncrementalIndexReadBenchmark","readWithFilters","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.indexing.IndexPersistBenchmark","persistV9","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.indexing.IndexIngestionBenchmark","addRows","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","querySingleIncrementalIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","querySingleQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","queryFilteredSingleQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","queryMultiQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.SearchBenchmark","querySingleIncrementalIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.SearchBenchmark","querySingleQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.SearchBenchmark","queryMultiQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.GroupByBenchmark","querySingleIncrementalIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.GroupByBenchmark","querySingleQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSpilling","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSerde","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.SqlBenchmark","queryNative","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.SqlBenchmark","queryPlanner","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryIncrementalIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryMultiQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.timecompare.TimeCompareBenchmark","queryMultiQueryableIndexTopN","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.timecompare.TimeCompareBenchmark","queryMultiQueryableIndexTimeseries","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.TopNBenchmark","querySingleIncrementalIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.TopNBenchmark","querySingleQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.TopNBenchmark","queryMultiQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.ScanBenchmark","querySingleIncrementalIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.ScanBenchmark","querySingleQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.query.ScanBenchmark","queryMultiQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","mergeFixedDifferentBuckets","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","mergeFixedSameBuckets","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","getPercentilesFixed","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","serializeFixedSparseLower","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","deserializeFixedSparseLower","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","serializeFixedSparseUpper","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","deserializeFixedSparseUpper","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","serializeFixedFull","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramBenchmark","deserializeFixedFull","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.CompressedColumnarIntsBenchmark","uncompressed","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.CompressedColumnarIntsBenchmark","compressed","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramAddBenchmark","addFixedHisto","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FixedHistogramAddBenchmark","addFixedHistoNormal","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalLongs","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalFloats","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalStrings","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FloatCompressionBenchmark","readContinuous","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FloatCompressionBenchmark","readSkipping","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BasicAuthUserMapSerdeBenchmark","serialize","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BasicAuthUserMapSerdeBenchmark","deserialize","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","stringRead","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","longRead","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterNone","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterHalf","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterAll","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithPreFilter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithPostFilter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithExFnPreFilter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithExFnPostFilter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readAndFilter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readOrFilter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readOrFilterCNF","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilterCNF","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.ConsistentHasherBenchmark","hash","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","iter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","constructAndIter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","intersectionAndIter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","unionAndIter","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.RendezvousHasherBenchmark","hash","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","ingest","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","querySingleIncrementalIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","querySingleQueryableIndex","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.server.coordinator.NewestSegmentFirstPolicyBenchmark","measureNewestSegmentFirstPolicy","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.server.coordinator.CachingCostBalancerStrategyBenchmark","measureCostStrategy","true","true","true","false"
"nishantmonu51/druid","org.apache.druid.server.coordinator.CachingCostBalancerStrategyBenchmark","measureCachingCostStrategy","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAndNot","pairwiseAndNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideAndNaive","wideAnd_naive","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrPq","wideOr_pq","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkXor","pairwiseXor","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIterate","iterate","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrNaive","wideOr_naive","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkContains","contains","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAnd","pairwiseAnd","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkReverseIterate","reverseIterate","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkInot","flipLargeRange","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr","pairwiseOr","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr","pairwiseOr_NoCardinality","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","inplace_and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","orBitmapContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","orBitmapContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part2_orRunContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part2_orBitmapContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part3_orArrayContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark","part3_orArrayContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorRunContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark","XorConcise","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBound1281","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBound1282","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsAdjustment","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","numberOfRunsLowerBoundThreshold1000","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","runOptimize","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions","runOptimize1","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","andBitmapContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","andBitmapContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part2_andRunContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part2_andBitmapContainerVSBitmapContainer2","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part3_andArrayContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark","part3_andArrayContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","OrRunContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","OrBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark","AndConcise","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","andNotBitmapContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","andNotBitmapContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","reverseAndNotBitmapContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","reverseAndNotBitmapContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_andNotRunContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_andNotBitmapContainerVSBitmapContainer2","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_reverseAndNotRunContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part2_reverseAndNotBitmapContainerVSBitmapContainer2","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_andNotArrayContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_andNotArrayContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_reverseAndNotArrayContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark","part3_reverseAndNotArrayContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndRunContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark","AndConcise","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotRunContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark","AndNotConcise","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrRunContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrRunContainer_withconversion","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark","horizontalOrBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark","iteratorRunContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark","iteratorBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","xorBitmapContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","xorBitmapContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part2_xorRunContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part2_xorBitmapContainerVSBitmapContainer2","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part3_xorArrayContainerVSRunContainerContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark","part3_xorArrayContainerVSBitmapContainer","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_clone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_cloneAndrunOptimize","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSFromClone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSNoClone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_serializeToBAOSNoClonePreOpti","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize","mutable_runOptimizeAndserializeToBAOSFromClone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","clone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","cloneAndrunOptimize","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSFromClone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSNoClone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSFromClonePreOpti","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","serializeToBAOSNoClonePreOpti","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize","runOptimizeAndserializeToBAOSFromClone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrConcise","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrImmutableConcise","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","OrWAH","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_Roaringwithrun","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_Roaring","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_EWAH","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark","horizontalOr_EWAH32","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testDeserialize","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testMutableDeserializeMutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testSerialize","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark","testMutableSerialize","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","tointUnsignedTime","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","tointUnsignedTimeAvg","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTime","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeAvg","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeShort","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip","flipTimeShortAvg","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark","onefunction","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark","manyfunctions","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","inplace_and","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","inplace_andNot","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark","justclone","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testStandard_a","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testFlyweight_a","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testStandard_b","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testFlyweight_b","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testStandard_c","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testFlyweight_c","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseStandard_a","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseFlyweight_a","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseStandard_b","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseFlyweight_b","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseStandard_c","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark","testReverseFlyweight_c","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate1","RoaringWithRun","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate3","RoaringWithRun","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate1","RoaringWithRun","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.needwork.RandomAccess","binarySearch","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate2","RoaringWithRun","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate2","RoaringWithRun","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_standard","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_mutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","bigunion_immutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_standard","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_mutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","toarray_immutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_standard","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_mutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","cardinality_immutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapOrdered_standard","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapOrdered_mutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapUnordered_standard","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createBitmapUnordered_mutable","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createSparseBitSetOrdered","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BasicBenchmark","createSparseBitSetUnordered","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark","BitSetToRoaringByAddingBitByBit","true","true","true","false"
"gssiyankai/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark","BitSetToRoaringUsingBitSetUtil","true","true","true","false"
"ejona86/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseUncontended","true","true","true","false"
"ejona86/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseContended","true","true","true","false"
"ejona86/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark","capacityChange","true","true","true","false"
"ejona86/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark","allocateRelease","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark","allocateRelease","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongUnsafeByteBuf","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setGetLongByteBuffer","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongUnsafeByteBuf","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark","setLongByteBuffer","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","writeRead","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","write","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","read","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.ByteBufCopyBenchmark","setBytes","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"ejona86/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultTrailers","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyTrailers","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultClientHeaders","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyClientHeaders","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultServerHeaders","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyServerHeaders","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"ejona86/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"ejona86/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark","pingPong","true","true","true","false"
"ejona86/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"ejona86/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"ejona86/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","fullMessage","true","true","true","false"
"ejona86/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","contentLength","true","true","true","false"
"ejona86/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark","chunked","true","true","true","false"
"ejona86/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"ejona86/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"ejona86/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInOrder","true","true","true","false"
"ejona86/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInReverseOrder","true","true","true","false"
"ejona86/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"ejona86/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"ejona86/netty","io.netty.microbench.redis.RedisEncoderBenchmark","writeArray","true","true","true","false"
"ejona86/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"ejona86/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","record","true","true","true","false"
"ejona86/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","recordWithHint","true","true","true","false"
"ejona86/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMNoPrivileged","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSM","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMWithNullCheck","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMNoPrivileged","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSM","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMWithNullCheck","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateInitializedByteArray","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateUninitializedByteArray","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvOld","true","true","true","false"
"ejona86/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvNew","true","true","true","false"
"ejona86/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark","wrapUnwrap","true","true","true","false"
"ejona86/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark","wrap","true","true","true","false"
"ejona86/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark","wrapUnwrap","true","true","true","false"
"ejona86/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark","handshake","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressOld","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressNew","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressOld","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressNew","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"ejona86/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.AdvancedCodecOutputListBenchmark","codecOutListAllocRecycle","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","shortInt","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","mediumInt","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray2","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray3","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes2","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes3","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","oldEncoder","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","newEncoder","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapKnownMethods","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapKnownMethods","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapMixMethods","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapMixMethods","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapUnknownMethods","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapUnknownMethods","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","newWriter","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","oldWriter","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark","encode","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","oldEquals","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","newEquals","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxLong","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntWithLong","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxInt","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntUsingLong","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark","decode","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormatter","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormat","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormatter","true","true","true","false"
"ejona86/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormat","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","baseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemCurrentTimeMillis","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemClock","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","cachedClock","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","oldCachedClock","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","coarseCachedClock","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedClock","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedFinalClock","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","baseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","synchronizedSimpleDateFmt","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","threadLocalSimpleDateFmt","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","cachedThrdLocalSimpleDateFmt","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","cachedThrdLocalCustomFormat","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","fastDateFormat","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","fixedDateFormat","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","atomicFastFormat","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark","atomicFixedFormat","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","testBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutException","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutExceptionUsingBuilder","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithExceptionUsingBuilder","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","getSourceLocationOfLogEvent","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithoutException","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithException","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineThroughput","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledThroughput","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelThroughput","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledThroughput","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineResponseTime","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledResponseTime","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelResponseTime","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledResponseTime","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","base","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","randomUUID","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","timeBasedUUID","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","baseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jIsDebugEnabled","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jIsDebugEnabled","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicIsDebugEnabled","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugStringConcatenation","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugStringConcatenation","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicDebugStringConcatenation","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugParameterizedString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugParameterizedString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","testBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersAndLock","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersNoLocks","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithoutCountersOrLocks","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark","logWithCountersRetryAfterReconfig","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputStringGetBytes","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternM","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternSpace","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMC","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMCD","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMD","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMDEx","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMEx","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMCDEx","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughputBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latencyBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latency","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark","logback","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark","log4j2","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","format","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","format0","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","formatStringArgs","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark","format0_inlined2","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughputBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latencyBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latency","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughputBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latencyBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latency","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","testBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterMap1Element","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArraySet1Element","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArrayList1Element","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterMap3Elements","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArraySet3Element","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark","iterArrayList3Element","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ConfiguratorInitializeBenchmark","initializeLoggerContext","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","baseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","latency_nanotime","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","granularity_nanotime","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","baseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","varargParams","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","individualParams","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytes","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesString88591","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSet88591","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesStringDefault","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSetDefault","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesStringShiftJIS","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSetShiftJIS","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","baseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2RAFStringConcatenation","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2StringConcatenation","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","slf4jStringConcatenation","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j1StringConcatenation","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2RAFParameterizedString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2ParameterizedString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","slf4jParameterizedString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughputBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latencyBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latency","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","baseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test01_getCallerClassNameFromStackTrace","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test02_getCallerClassNameFromThreadStackTrace","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test03_getCallerClassNameReflectively","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test04_getCallerClassNameSunReflection","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test05_getStackTraceClassForClassName","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test06_getThreadStackTraceClassForClassName","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test07_getReflectiveCallerClassUtility","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test08_getDirectSunReflection","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test09_getMessageUsingNew","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test10_getMessageUsingReflection","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test11_getClassContextViaCallerClass","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test12_getClassContextViaSecurityManager","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormat","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fastDateFormatCreateNewStringBuilder","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fastDateFormatReuseStringBuilder","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedBitFiddlingReuseCharArray","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedDateFormatCreateNewCharArray","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedDateFormatReuseCharArray","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","fixedFormatReuseStringBuilder","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedDouble","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatDouble","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyBaseline","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedDouble","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatString","true","true","true","false"
"neuro-sys/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatDouble","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDsAsRegex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDsAsRegexAndMatchRandomUUID","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileGranularityPathRegex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","deserializeGranularityPathRegex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDRegex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","deserializeUUIDRegex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileUUIDRegexAndMatch","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","compileGranularityPathRegexAndMatch","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","precompileUUIDRegexAndMatch","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RegexMatchBenchmark","precompileGranularityPathRegexAndMatch","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchLikeEquals","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchSelectorEquals","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchLikePrefix","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchBoundPrefix","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LikeFilterBenchmark","matchRegexPrefix","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LoadStatusBenchmark","oldVersion","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LoadStatusBenchmark","newVersion","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericOnly","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericThenString","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenNumeric","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","jqflatten","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LongCompressionBenchmark","readContinuous","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.LongCompressionBenchmark","readSkipping","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read1","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read2","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read4","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","read8","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd12","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd16","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd20","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd24","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd32","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd40","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd48","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd56","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.VSizeSerdeBenchmark","readd64","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark","uncompressed","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark","compressed","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingJavaScript","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingExpression","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark","queryUsingNative","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GenericIndexedBenchmark","get","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.GenericIndexedBenchmark","indexOf","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingExpression","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingExtractionFn","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingCursor","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExpressionAsLong","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExpressionAsString","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExtractionFn","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenFloat","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.indexing.IndexMergeBenchmark","mergeV9","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.indexing.IncrementalIndexReadBenchmark","read","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.indexing.IncrementalIndexReadBenchmark","readWithFilters","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.indexing.IndexPersistBenchmark","persistV9","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.indexing.IndexIngestionBenchmark","addRows","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","querySingleIncrementalIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","querySingleQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","queryFilteredSingleQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.TimeseriesBenchmark","queryMultiQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.SearchBenchmark","querySingleIncrementalIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.SearchBenchmark","querySingleQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.SearchBenchmark","queryMultiQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","querySingleIncrementalIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","querySingleQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSpilling","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSerde","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.SqlBenchmark","queryNative","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.SqlBenchmark","queryPlanner","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryIncrementalIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.SelectBenchmark","queryMultiQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.timecompare.TimeCompareBenchmark","queryMultiQueryableIndexTopN","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.timecompare.TimeCompareBenchmark","queryMultiQueryableIndexTimeseries","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.TopNBenchmark","querySingleIncrementalIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.TopNBenchmark","querySingleQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.query.TopNBenchmark","queryMultiQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.CompressedColumnarIntsBenchmark","uncompressed","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.CompressedColumnarIntsBenchmark","compressed","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalLongs","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalFloats","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalStrings","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FloatCompressionBenchmark","readContinuous","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FloatCompressionBenchmark","readSkipping","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BasicAuthUserMapSerdeBenchmark","serialize","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BasicAuthUserMapSerdeBenchmark","deserialize","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","stringRead","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","longRead","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterNone","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterHalf","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","timeFilterAll","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithPreFilter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithPostFilter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithExFnPreFilter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readWithExFnPostFilter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readAndFilter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readOrFilter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readOrFilterCNF","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilterCNF","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.ConsistentHasherBenchmark","hash","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","iter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","constructAndIter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","intersectionAndIter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.BitmapIterationBenchmark","unionAndIter","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.RendezvousHasherBenchmark","hash","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","ingest","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","querySingleIncrementalIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark","querySingleQueryableIndex","true","true","true","false"
"liquidm/druid","org.apache.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"liquidm/druid","org.apache.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"liquidm/druid","org.apache.druid.server.coordinator.NewestSegmentFirstPolicyBenchmark","measureNewestSegmentFirstPolicy","true","true","true","false"
"liquidm/druid","org.apache.druid.server.coordinator.CachingCostBalancerStrategyBenchmark","measureCostStrategy","true","true","true","false"
"liquidm/druid","org.apache.druid.server.coordinator.CachingCostBalancerStrategyBenchmark","measureCachingCostStrategy","true","true","true","false"
"KatsuraKKKK/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseUncontended","true","true","true","false"
"KatsuraKKKK/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseContended","true","true","true","false"
"KatsuraKKKK/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark","capacityChange","true","true","true","false"
"KatsuraKKKK/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark","allocateRelease","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark","allocateRelease","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","writeRead","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","write","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","read","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultTrailers","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyTrailers","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultClientHeaders","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyClientHeaders","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultServerHeaders","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyServerHeaders","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInOrder","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInReverseOrder","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","record","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","recordWithHint","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMNoPrivileged","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSM","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMWithNullCheck","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMNoPrivileged","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSM","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMWithNullCheck","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateInitializedByteArray","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateUninitializedByteArray","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvOld","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvNew","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark","wrapUnwrap","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark","wrap","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark","wrapUnwrap","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark","handshake","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressOld","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressNew","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressOld","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressNew","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"KatsuraKKKK/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","shortInt","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","mediumInt","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray2","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray3","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes2","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes3","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","oldEncoder","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","newEncoder","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapKnownMethods","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapKnownMethods","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapMixMethods","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapMixMethods","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","oldMapUnknownMethods","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark","newMapUnknownMethods","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","newWriter","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark","oldWriter","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark","encode","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","oldEquals","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","newEquals","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxLong","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntWithLong","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxInt","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntUsingLong","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark","decode","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormatter","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormat","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormatter","true","true","true","false"
"KatsuraKKKK/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormat","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","compileUUIDsAsRegex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","compileUUIDsAsRegexAndMatchRandomUUID","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","compileGranularityPathRegex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","deserializeGranularityPathRegex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","compileUUIDRegex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","deserializeUUIDRegex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","compileUUIDRegexAndMatch","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","compileGranularityPathRegexAndMatch","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","precompileUUIDRegexAndMatch","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RegexMatchBenchmark","precompileGranularityPathRegexAndMatch","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LikeFilterBenchmark","matchLikeEquals","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LikeFilterBenchmark","matchSelectorEquals","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LikeFilterBenchmark","matchLikePrefix","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LikeFilterBenchmark","matchBoundPrefix","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LikeFilterBenchmark","matchRegexPrefix","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LoadStatusBenchmark","oldVersion","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LoadStatusBenchmark","newVersion","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericOnly","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericThenString","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenNumeric","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FlattenJSONBenchmark","jqflatten","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LongCompressionBenchmark","readContinuous","true","true","true","false"
"b-slim/druid","io.druid.benchmark.LongCompressionBenchmark","readSkipping","true","true","true","false"
"b-slim/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","read1","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","read2","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","read4","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","read8","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd12","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd16","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd20","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd24","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd32","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd40","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd48","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd56","true","true","true","false"
"b-slim/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd64","true","true","true","false"
"b-slim/druid","io.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark","uncompressed","true","true","true","false"
"b-slim/druid","io.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark","compressed","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionAggregationBenchmark","queryUsingJavaScript","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionAggregationBenchmark","queryUsingExpression","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionAggregationBenchmark","queryUsingNative","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GenericIndexedBenchmark","get","true","true","true","false"
"b-slim/druid","io.druid.benchmark.GenericIndexedBenchmark","indexOf","true","true","true","false"
"b-slim/druid","io.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"b-slim/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"b-slim/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingExpression","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingExtractionFn","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionSelectorBenchmark","timeFloorUsingCursor","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExpressionAsLong","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExpressionAsString","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ExpressionSelectorBenchmark","strlenUsingExtractionFn","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenFloat","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"b-slim/druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"b-slim/druid","io.druid.benchmark.indexing.IndexMergeBenchmark","mergeV9","true","true","true","false"
"b-slim/druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark","read","true","true","true","false"
"b-slim/druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark","readWithFilters","true","true","true","false"
"b-slim/druid","io.druid.benchmark.indexing.IndexPersistBenchmark","persistV9","true","true","true","false"
"b-slim/druid","io.druid.benchmark.indexing.IndexIngestionBenchmark","addRows","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleIncrementalIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.TimeseriesBenchmark","queryFilteredSingleQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.TimeseriesBenchmark","queryMultiQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.SearchBenchmark","querySingleIncrementalIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.SearchBenchmark","querySingleQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.SearchBenchmark","queryMultiQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.GroupByBenchmark","querySingleIncrementalIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.GroupByBenchmark","querySingleQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSpilling","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSerde","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.SqlBenchmark","queryNative","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.SqlBenchmark","queryPlanner","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.SelectBenchmark","queryIncrementalIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.SelectBenchmark","queryQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.SelectBenchmark","queryMultiQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.TopNBenchmark","querySingleIncrementalIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.TopNBenchmark","querySingleQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.query.TopNBenchmark","queryMultiQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"b-slim/druid","io.druid.benchmark.CompressedColumnarIntsBenchmark","uncompressed","true","true","true","false"
"b-slim/druid","io.druid.benchmark.CompressedColumnarIntsBenchmark","compressed","true","true","true","false"
"b-slim/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalLongs","true","true","true","false"
"b-slim/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalFloats","true","true","true","false"
"b-slim/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalStrings","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FloatCompressionBenchmark","readContinuous","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FloatCompressionBenchmark","readSkipping","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BasicAuthUserMapSerdeBenchmark","serialize","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BasicAuthUserMapSerdeBenchmark","deserialize","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","stringRead","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","longRead","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterNone","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterHalf","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterAll","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithPreFilter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithPostFilter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithExFnPreFilter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithExFnPostFilter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","readOrFilter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","readOrFilterCNF","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilterCNF","true","true","true","false"
"b-slim/druid","io.druid.benchmark.ConsistentHasherBenchmark","hash","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BitmapIterationBenchmark","iter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BitmapIterationBenchmark","constructAndIter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BitmapIterationBenchmark","intersectionAndIter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.BitmapIterationBenchmark","unionAndIter","true","true","true","false"
"b-slim/druid","io.druid.benchmark.RendezvousHasherBenchmark","hash","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilteredAggregatorBenchmark","ingest","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilteredAggregatorBenchmark","querySingleIncrementalIndex","true","true","true","false"
"b-slim/druid","io.druid.benchmark.FilteredAggregatorBenchmark","querySingleQueryableIndex","true","true","true","false"
"b-slim/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"b-slim/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"b-slim/druid","io.druid.server.coordinator.NewestSegmentFirstPolicyBenchmark","measureNewestSegmentFirstPolicy","true","true","true","false"
"b-slim/druid","io.druid.server.coordinator.CachingCostBalancerStrategyBenchmark","measureCostStrategy","true","true","true","false"
"b-slim/druid","io.druid.server.coordinator.CachingCostBalancerStrategyBenchmark","measureCachingCostStrategy","true","true","true","false"
"andsel/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseUncontended","true","true","true","false"
"andsel/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark","retainReleaseContended","true","true","true","false"
"andsel/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark","capacityChange","true","true","true","false"
"andsel/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark","allocateRelease","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark","allocateRelease","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","writeRead","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","write","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","read","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"andsel/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultTrailers","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyTrailers","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultClientHeaders","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyClientHeaders","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultServerHeaders","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyServerHeaders","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"andsel/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"andsel/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"andsel/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"andsel/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"andsel/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"andsel/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInOrder","true","true","true","false"
"andsel/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark","cancelInReverseOrder","true","true","true","false"
"andsel/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"andsel/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"andsel/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"andsel/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"andsel/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"andsel/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","record","true","true","true","false"
"andsel/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark","recordWithHint","true","true","true","false"
"andsel/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMNoPrivileged","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSM","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMWithNullCheck","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMNoPrivileged","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSM","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMWithNullCheck","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateInitializedByteArray","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateUninitializedByteArray","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvOld","true","true","true","false"
"andsel/netty","io.netty.microbench.internal.EscapeCsvBenchmark","escapeCsvNew","true","true","true","false"
"andsel/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark","wrapUnwrap","true","true","true","false"
"andsel/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark","wrap","true","true","true","false"
"andsel/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark","wrapUnwrap","true","true","true","false"
"andsel/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark","handshake","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressOld","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark","isValidIpV4AddressNew","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressOld","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark","isValidIpV6AddressNew","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"andsel/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"andsel/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"andsel/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"andsel/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","shortInt","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","mediumInt","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray2","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","byteArray3","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes2","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark","chainedBytes3","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","oldEncoder","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark","newEncoder","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark","encode","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","oldEquals","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","newEquals","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxLong","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntWithLong","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxInt","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntUsingLong","true","true","true","false"
"andsel/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark","decode","true","true","true","false"
"andsel/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormatter","true","true","true","false"
"andsel/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormat","true","true","true","false"
"andsel/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormatter","true","true","true","false"
"andsel/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormat","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","baseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemCurrentTimeMillis","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemClock","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","cachedClock","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","oldCachedClock","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","coarseCachedClock","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedClock","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedFinalClock","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","testBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutException","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutExceptionUsingBuilder","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithExceptionUsingBuilder","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","getSourceLocationOfLogEvent","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithoutException","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithException","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineThroughput","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledThroughput","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelThroughput","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledThroughput","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineResponseTime","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledResponseTime","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelResponseTime","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledResponseTime","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","base","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","randomUUID","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","timeBasedUUID","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","baseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jIsDebugEnabled","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jIsDebugEnabled","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicIsDebugEnabled","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugStringConcatenation","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugStringConcatenation","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicDebugStringConcatenation","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugParameterizedString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugParameterizedString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputStringGetBytes","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternM","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternSpace","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMC","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMCD","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMD","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMDEx","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMEx","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMCDEx","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughputBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latencyBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latency","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","baseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","synchronizedFormat","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","threadLocalFormat","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","cachedFormat","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","fastFormat","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","atomicFormat","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughputBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latencyBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latency","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughputBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latencyBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latency","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ConfiguratorInitializeBenchmark","initializeLoggerContext","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","baseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","latency_nanotime","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","granularity_nanotime","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","baseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","varargParams","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark","individualParams","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytes","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesString88591","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSet88591","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesStringDefault","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSetDefault","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesStringShiftJIS","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSetShiftJIS","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","baseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2RAFStringConcatenation","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2StringConcatenation","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","slf4jStringConcatenation","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j1StringConcatenation","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2RAFParameterizedString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4j2ParameterizedString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","slf4jParameterizedString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughputBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latencyBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latency","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","baseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test01_getCallerClassNameFromStackTrace","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test02_getCallerClassNameFromThreadStackTrace","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test03_getCallerClassNameReflectively","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test04_getCallerClassNameSunReflection","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test05_getStackTraceClassForClassName","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test06_getThreadStackTraceClassForClassName","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test07_getReflectiveCallerClassUtility","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test08_getDirectSunReflection","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test09_getMessageUsingNew","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test10_getMessageUsingReflection","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test11_getClassContextViaCallerClass","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test12_getClassContextViaSecurityManager","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","baseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormatString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormatBytes","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFastFormatString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFastFormatBytes","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFormatString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFormatBytes","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedDouble","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatDouble","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyBaseline","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedDouble","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatString","true","true","true","false"
"renchunxiao/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatDouble","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","baseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemCurrentTimeMillis","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemClock","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","cachedClock","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","oldCachedClock","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","coarseCachedClock","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedClock","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedFinalClock","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","testBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutException","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutExceptionUsingBuilder","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithExceptionUsingBuilder","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","getSourceLocationOfLogEvent","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithoutException","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithException","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineThroughput","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledThroughput","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelThroughput","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledThroughput","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineResponseTime","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledResponseTime","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelResponseTime","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledResponseTime","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","base","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","randomUUID","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","timeBasedUUID","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","baseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jIsDebugEnabled","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jIsDebugEnabled","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicIsDebugEnabled","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugStringConcatenation","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugStringConcatenation","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicDebugStringConcatenation","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugParameterizedString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugParameterizedString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputStringGetBytes","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternM","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternSpace","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMC","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMCD","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMD","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMDEx","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMEx","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMCDEx","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughputBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latencyBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latency","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","baseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","synchronizedFormat","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","threadLocalFormat","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","cachedFormat","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","fastFormat","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark","atomicFormat","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughputBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latencyBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latency","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughputBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latencyBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latency","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ConfiguratorInitializeBenchmark","initializeLoggerContext","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","baseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","latency_nanotime","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark","granularity_nanotime","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytes","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesString88591","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSet88591","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesStringDefault","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSetDefault","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesStringShiftJIS","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSetShiftJIS","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","baseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4jRandomDebugStringConcatenation","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4jDebugStringConcatenation","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","slf4jDebugStringConcatenation","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4jClassicDebugStringConcatenation","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4jDebugRandomParameterizedString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","log4jDebugParameterizedString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark","slf4jDebugParameterizedString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughputBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latencyBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latency","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","baseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test01_getCallerClassNameFromStackTrace","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test02_getCallerClassNameFromThreadStackTrace","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test03_getCallerClassNameReflectively","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test04_getCallerClassNameSunReflection","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test05_getStackTraceClassForClassName","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test06_getThreadStackTraceClassForClassName","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test07_getReflectiveCallerClassUtility","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test08_getDirectSunReflection","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test09_getMessageUsingNew","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test10_getMessageUsingReflection","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test11_getClassContextViaCallerClass","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test12_getClassContextViaSecurityManager","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","baseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormatString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormatBytes","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFastFormatString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFastFormatBytes","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFormatString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFormatBytes","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedDouble","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatDouble","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyBaseline","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedDouble","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatString","true","true","true","false"
"pisfly/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatDouble","true","true","true","false"
"s-gheldd/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark","capacityChange","true","true","true","false"
"s-gheldd/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark","allocateRelease","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark","allocateRelease","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","writeRead","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","write","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark","read","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultTrailers","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyTrailers","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultClientHeaders","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyClientHeaders","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","defaultServerHeaders","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark","readOnlyServerHeaders","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMNoPrivileged","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSM","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithSMWithNullCheck","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMNoPrivileged","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSM","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark","testWithoutSMWithNullCheck","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateInitializedByteArray","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.internal.UnitializedArrayBenchmark","allocateUninitializedByteArray","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark","wrapUnwrap","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark","wrap","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark","wrapUnwrap","true","true","true","false"
"s-gheldd/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark","handshake","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"s-gheldd/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark","encode","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","oldEquals","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.http2.HpackUtilBenchmark","newEquals","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxLong","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntWithLong","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxInt","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark","decodeMaxIntUsingLong","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark","decode","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormatter","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormat","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormatter","true","true","true","false"
"s-gheldd/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormat","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.LikeFilterBenchmark","matchLikeEquals","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.LikeFilterBenchmark","matchSelectorEquals","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.LikeFilterBenchmark","matchLikePrefix","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.LikeFilterBenchmark","matchBoundPrefix","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.LikeFilterBenchmark","matchRegexPrefix","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericOnly","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexNumericThenString","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenNumeric","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.LongCompressionBenchmark","readContinuous","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.LongCompressionBenchmark","readSkipping","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","read1","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","read2","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","read4","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","read8","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd12","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd16","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd20","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd24","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd32","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd40","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd48","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd56","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.VSizeSerdeBenchmark","readd64","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GenericIndexedBenchmark","get","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.GenericIndexedBenchmark","indexOf","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringOnly","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringTwice","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenLong","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexStringThenFloat","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongOnly","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongTwice","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenString","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexLongThenFloat","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatOnly","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatTwice","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenString","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.TopNTypeInterfaceBenchmark","querySingleQueryableIndexFloatThenLong","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.indexing.IndexMergeBenchmark","mergeV9","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark","read","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark","readWithFilters","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.indexing.IndexPersistBenchmark","persistV9","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.indexing.IndexIngestionBenchmark","addRows","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleIncrementalIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.TimeseriesBenchmark","queryFilteredSingleQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.TimeseriesBenchmark","queryMultiQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.SearchBenchmark","querySingleIncrementalIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.SearchBenchmark","querySingleQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.SearchBenchmark","queryMultiQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.GroupByBenchmark","querySingleIncrementalIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.GroupByBenchmark","querySingleQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSpilling","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndexWithSerde","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.SqlBenchmark","queryNative","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.SqlBenchmark","queryPlanner","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.SelectBenchmark","queryIncrementalIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.SelectBenchmark","queryQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.SelectBenchmark","queryMultiQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.TopNBenchmark","querySingleIncrementalIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.TopNBenchmark","querySingleQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.query.TopNBenchmark","queryMultiQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalLongs","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalFloats","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalStrings","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FloatCompressionBenchmark","readContinuous","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FloatCompressionBenchmark","readSkipping","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","stringRead","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","longRead","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterNone","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterHalf","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterAll","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","readWithPreFilter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","readWithPostFilter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","readWithExFnPreFilter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","readWithExFnPostFilter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","readOrFilter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","readOrFilterCNF","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilterCNF","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.ExpressionBenchmark","queryUsingJavaScript","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.ExpressionBenchmark","queryUsingExpression","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.ExpressionBenchmark","queryUsingNative","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BitmapIterationBenchmark","iter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BitmapIterationBenchmark","constructAndIter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BitmapIterationBenchmark","intersectionAndIter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.BitmapIterationBenchmark","unionAndIter","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilteredAggregatorBenchmark","querySingleIncrementalIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.FilteredAggregatorBenchmark","querySingleQueryableIndex","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"lizhanhui/data_druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"lizhanhui/data_druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"lizhanhui/data_druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"KevinTCoughlin/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"KevinTCoughlin/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"KevinTCoughlin/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"KevinTCoughlin/RxJava","rx.observables.SyncOnSubscribePerf","benchSyncOnSubscribe2","true","true","true","false"
"KevinTCoughlin/RxJava","rx.observables.SyncOnSubscribePerf","benchFromIterable2","true","true","true","false"
"KevinTCoughlin/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"KevinTCoughlin/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"KevinTCoughlin/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"KevinTCoughlin/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"KevinTCoughlin/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"KevinTCoughlin/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"KevinTCoughlin/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"KevinTCoughlin/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"KevinTCoughlin/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.FromIterablePerf","from","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.FromIterablePerf","fromUnsafe","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.FromIterablePerf","direct","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"KevinTCoughlin/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"KevinTCoughlin/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"KevinTCoughlin/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"KevinTCoughlin/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"KevinTCoughlin/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","baseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemCurrentTimeMillis","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","systemClock","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","cachedClock","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","oldCachedClock","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","coarseCachedClock","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedClock","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ClocksBenchmark","fixedFinalClock","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","testBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutException","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithoutExceptionUsingBuilder","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createLogEventWithExceptionUsingBuilder","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","getSourceLocationOfLogEvent","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithoutException","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark","createSerializableLogEventProxyWithException","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineThroughput","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledThroughput","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelThroughput","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledThroughput","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testBaselineResponseTime","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsDebugEnabledResponseTime","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testIsEnabledLevelResponseTime","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.SimpleBenchmark","testDebugDisabledResponseTime","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","base","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","randomUUID","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark","timeBasedUUID","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","baseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jIsDebugEnabled","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jIsDebugEnabled","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicIsDebugEnabled","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugStringConcatenation","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugStringConcatenation","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jClassicDebugStringConcatenation","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","log4jDebugParameterizedString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark","slf4jDebugParameterizedString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Message","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputH2Exception","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Message","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeH2Exception","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBMessage","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testThroughputHSQLDBException","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBMessage","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark","testResponseTimeHSQLDBException","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputStringGetBytes","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternM","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternSpace","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMC","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMCD","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMD","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMDEx","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMEx","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark","throughputPatternMCDEx","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughputBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","throughput","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latencyBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark","latency","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughputBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","throughput","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latencyBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark","latency","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughputBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","throughput","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latencyBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark","latency","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ConfiguratorInitializeBenchmark","initializeLoggerContext","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytes","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesString88591","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSet88591","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesStringDefault","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSetDefault","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesStringShiftJIS","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark","throughputStringGetBytesCharSetShiftJIS","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughputBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","throughput","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latencyBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark","latency","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","baseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test01_getCallerClassNameFromStackTrace","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test02_getCallerClassNameFromThreadStackTrace","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test03_getCallerClassNameReflectively","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test04_getCallerClassNameSunReflection","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test05_getStackTraceClassForClassName","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test06_getThreadStackTraceClassForClassName","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test07_getReflectiveCallerClassUtility","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test08_getDirectSunReflection","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test09_getMessageUsingNew","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test10_getMessageUsingReflection","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test11_getClassContextViaCallerClass","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark","test12_getClassContextViaSecurityManager","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","baseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormatString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","simpleDateFormatBytes","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFastFormatString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFastFormatBytes","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFormatString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark","customFormatBytes","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputParameterizedDouble","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","throughputStringFormatDouble","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyBaseline","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyParameterizedDouble","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatString","true","true","true","false"
"dotCMS/log4j","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark","latencyStringFormatDouble","true","true","true","false"
"java02014/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"java02014/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"java02014/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"java02014/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"java02014/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"java02014/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"java02014/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"java02014/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"java02014/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"java02014/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"java02014/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"java02014/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"java02014/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"java02014/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"java02014/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"java02014/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"java02014/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"java02014/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"java02014/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"java02014/RxJava","rx.observables.SyncOnSubscribePerf","benchSyncOnSubscribe2","true","true","true","false"
"java02014/RxJava","rx.observables.SyncOnSubscribePerf","benchFromIterable2","true","true","true","false"
"java02014/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"java02014/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"java02014/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"java02014/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"java02014/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"java02014/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"java02014/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"java02014/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"java02014/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"java02014/RxJava","rx.operators.FromIterablePerf","from","true","true","true","false"
"java02014/RxJava","rx.operators.FromIterablePerf","fromUnsafe","true","true","true","false"
"java02014/RxJava","rx.operators.FromIterablePerf","direct","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"java02014/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"java02014/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"java02014/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"java02014/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"java02014/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"java02014/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"java02014/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"java02014/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"java02014/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"java02014/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"java02014/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"java02014/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"java02014/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"java02014/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"java02014/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"ronenhamias/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"ronenhamias/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"ronenhamias/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"ronenhamias/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"ronenhamias/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"ronenhamias/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"ronenhamias/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"ronenhamias/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"ronenhamias/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"ronenhamias/RxJava","rx.observables.SyncOnSubscribePerf","benchSyncOnSubscribe2","true","true","true","false"
"ronenhamias/RxJava","rx.observables.SyncOnSubscribePerf","benchFromIterable2","true","true","true","false"
"ronenhamias/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"ronenhamias/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"ronenhamias/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"ronenhamias/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"ronenhamias/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"ronenhamias/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"ronenhamias/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"ronenhamias/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"ronenhamias/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"ronenhamias/RxJava","rx.operators.FromIterablePerf","from","true","true","true","false"
"ronenhamias/RxJava","rx.operators.FromIterablePerf","fromUnsafe","true","true","true","false"
"ronenhamias/RxJava","rx.operators.FromIterablePerf","direct","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"ronenhamias/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"ronenhamias/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"ronenhamias/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"ronenhamias/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"ronenhamias/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"ronenhamias/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"ronenhamias/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"ronenhamias/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"ronenhamias/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"ronenhamias/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"ronenhamias/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"ronenhamias/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"ronenhamias/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"ronenhamias/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"ronenhamias/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"eduardotrandafilov/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"eduardotrandafilov/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"eduardotrandafilov/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"eduardotrandafilov/RxJava","rx.observables.SyncOnSubscribePerf","benchSyncOnSubscribe2","true","true","true","false"
"eduardotrandafilov/RxJava","rx.observables.SyncOnSubscribePerf","benchFromIterable2","true","true","true","false"
"eduardotrandafilov/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"eduardotrandafilov/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"eduardotrandafilov/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"eduardotrandafilov/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"eduardotrandafilov/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"eduardotrandafilov/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"eduardotrandafilov/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"eduardotrandafilov/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"eduardotrandafilov/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.FromIterablePerf","from","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.FromIterablePerf","fromUnsafe","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.FromIterablePerf","direct","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"eduardotrandafilov/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"eduardotrandafilov/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"eduardotrandafilov/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"eduardotrandafilov/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"eduardotrandafilov/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"androidyue/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"androidyue/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"androidyue/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"androidyue/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"androidyue/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"androidyue/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"androidyue/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"androidyue/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"androidyue/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"androidyue/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"androidyue/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"androidyue/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"androidyue/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"androidyue/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"androidyue/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"androidyue/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"androidyue/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"androidyue/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"androidyue/RxJava","rx.operators.FromIterablePerf","from","true","true","true","false"
"androidyue/RxJava","rx.operators.FromIterablePerf","fromUnsafe","true","true","true","false"
"androidyue/RxJava","rx.operators.FromIterablePerf","direct","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"androidyue/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"androidyue/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"androidyue/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"androidyue/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"androidyue/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"androidyue/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"androidyue/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"androidyue/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"androidyue/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"androidyue/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"androidyue/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"androidyue/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"androidyue/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"androidyue/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"androidyue/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"kuanghao/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"kuanghao/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"kuanghao/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"kuanghao/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"kuanghao/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"kuanghao/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"kuanghao/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"kuanghao/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"kuanghao/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"kuanghao/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"kuanghao/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"kuanghao/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"kuanghao/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"kuanghao/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"kuanghao/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"kuanghao/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"kuanghao/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"kuanghao/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"kuanghao/RxJava","rx.operators.FromIterablePerf","from","","","","true"
"kuanghao/RxJava","rx.operators.FromIterablePerf","fromUnsafe","","","","true"
"kuanghao/RxJava","rx.operators.FromIterablePerf","direct","","","","true"
"kuanghao/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"kuanghao/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"kuanghao/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"kuanghao/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"kuanghao/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"kuanghao/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"kuanghao/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"kuanghao/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"kuanghao/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"kuanghao/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"kuanghao/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"kuanghao/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"kuanghao/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"kuanghao/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"kuanghao/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"kuanghao/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","baseline","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","blank","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","dontinline","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","inline","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","exclude","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0000","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0001","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0002","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0004","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0008","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0016","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0032","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0064","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0128","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0256","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0512","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_1024","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_20_Annotations","measure","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","baseline","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","measureWrong","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","measureRight","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureWrong_1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureWrong_2","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureRight_1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureRight_2","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","baseline","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","fork_1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","fork_2","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_06_FixtureLevel","measureRight","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_06_FixtureLevel","measureWrong","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_25_API_GA","test","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_24_Inheritance$AbstractBenchmark","bench","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_05_StateFixtures","measureRight","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_05_StateFixtures","measureWrong","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_27_Params","bench","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_31_InfraParams","measureDefault","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_31_InfraParams","measureFollowThreads","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureRight","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_10","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_100","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_1000","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_10000","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_100000","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_04_DefaultState","measure","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_03_States","measureUnshared","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_03_States","measureShared","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_30_Interrupts","take","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_30_Interrupts","put","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Maps","test","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Classy","load","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Atomic","test","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_01_HelloWorld","wellHelloThere","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_29_StatesDAG","test","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_36_BranchPrediction","sorted","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_36_BranchPrediction","unsorted","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_37_CacheAccess","colFirst","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_37_CacheAccess","rowFirst","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","baseline","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","measureWrong","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","measureRight","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","baseline","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureWrong_1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureWrong_2","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureRight","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_15_Asymmetric","inc","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_15_Asymmetric","get","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureThroughput","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureAvgTime","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureSamples","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureSingleShot","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureMultiple","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureAll","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_07_FixtureLevelInvocation","measureHot","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_07_FixtureLevelInvocation","measureCold","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","baseline","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureWrong","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureRight_1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureRight_2","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_33_SecurityManager","testWithSM","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_33_SecurityManager","testWithoutSM","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_1_c1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_2_c2","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_3_c1_again","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_4_forked_c1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_5_forked_c2","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_17_SyncIterations","test","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_23_AuxCounters","splitBranch","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_23_AuxCounters","runSETI","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_18_Control","ping","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_18_Control","pong","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureWrong","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureNeutral","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureRight","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_32_BulkWarmup","measure_c1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_32_BulkWarmup","measure_c2","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureWrong_1","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureWrong_5","true","true","true","false"
"Bragaman/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureRight","true","true","true","false"
"Bragaman/atom","jmh.MyBenchmark","testMethod","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","baseline","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","blank","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","dontinline","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","inline","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","exclude","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0000","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0001","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0002","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0004","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0008","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0016","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0032","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0064","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0128","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0256","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0512","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_1024","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_20_Annotations","measure","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","baseline","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","measureWrong","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","measureRight","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureWrong_1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureWrong_2","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureRight_1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureRight_2","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","baseline","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","fork_1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","fork_2","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_06_FixtureLevel","measureRight","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_06_FixtureLevel","measureWrong","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_25_API_GA","test","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_24_Inheritance$AbstractBenchmark","bench","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_05_StateFixtures","measureRight","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_05_StateFixtures","measureWrong","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_27_Params","bench","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_31_InfraParams","measureDefault","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_31_InfraParams","measureFollowThreads","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureRight","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_10","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_100","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_1000","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_10000","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_100000","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_04_DefaultState","measure","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_03_States","measureUnshared","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_03_States","measureShared","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_30_Interrupts","take","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_30_Interrupts","put","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Maps","test","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Classy","load","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Atomic","test","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_01_HelloWorld","wellHelloThere","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_29_StatesDAG","test","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_36_BranchPrediction","sorted","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_36_BranchPrediction","unsorted","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_37_CacheAccess","colFirst","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_37_CacheAccess","rowFirst","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","baseline","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","measureWrong","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","measureRight","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","baseline","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureWrong_1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureWrong_2","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureRight","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_15_Asymmetric","inc","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_15_Asymmetric","get","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureThroughput","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureAvgTime","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureSamples","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureSingleShot","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureMultiple","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureAll","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_07_FixtureLevelInvocation","measureHot","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_07_FixtureLevelInvocation","measureCold","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","baseline","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureWrong","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureRight_1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureRight_2","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_33_SecurityManager","testWithSM","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_33_SecurityManager","testWithoutSM","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_1_c1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_2_c2","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_3_c1_again","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_4_forked_c1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_5_forked_c2","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_17_SyncIterations","test","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_23_AuxCounters","splitBranch","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_23_AuxCounters","runSETI","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_18_Control","ping","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_18_Control","pong","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureWrong","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureNeutral","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureRight","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_32_BulkWarmup","measure_c1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_32_BulkWarmup","measure_c2","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureWrong_1","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureWrong_5","true","true","true","false"
"Hunte9999/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureRight","true","true","true","false"
"Hunte9999/atom","jmh.MyBenchmark","testMethod","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","baseline","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","blank","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","dontinline","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","inline","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl","exclude","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0000","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0001","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0002","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0004","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0008","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0016","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0032","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0064","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0128","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0256","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_0512","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU","consume_1024","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","reader","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing","writer","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_20_Annotations","measure","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","baseline","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","measureWrong","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode","measureRight","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureWrong_1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureWrong_2","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureRight_1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping","measureRight_2","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","baseline","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","fork_1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun","fork_2","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_06_FixtureLevel","measureRight","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_06_FixtureLevel","measureWrong","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_25_API_GA","test","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_24_Inheritance$AbstractBenchmark","bench","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_05_StateFixtures","measureRight","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_05_StateFixtures","measureWrong","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_27_Params","bench","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_31_InfraParams","measureDefault","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_31_InfraParams","measureFollowThreads","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureRight","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_10","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_100","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_1000","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_10000","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_11_Loops","measureWrong_100000","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_04_DefaultState","measure","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_03_States","measureUnshared","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_03_States","measureShared","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_30_Interrupts","take","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_30_Interrupts","put","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Maps","test","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Classy","load","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Atomic","test","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_01_HelloWorld","wellHelloThere","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_29_StatesDAG","test","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_36_BranchPrediction","sorted","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_36_BranchPrediction","unsorted","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_37_CacheAccess","colFirst","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_37_CacheAccess","rowFirst","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","baseline","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","measureWrong","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers","measureRight","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","baseline","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureWrong_1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureWrong_2","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold","measureRight","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_15_Asymmetric","inc","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_15_Asymmetric","get","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureThroughput","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureAvgTime","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureSamples","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureSingleShot","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureMultiple","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes","measureAll","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_07_FixtureLevelInvocation","measureHot","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_07_FixtureLevelInvocation","measureCold","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","baseline","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureWrong","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureRight_1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes","measureRight_2","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_33_SecurityManager","testWithSM","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_33_SecurityManager","testWithoutSM","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_1_c1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_2_c2","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_3_c1_again","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_4_forked_c1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_12_Forking","measure_5_forked_c2","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_17_SyncIterations","test","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_23_AuxCounters","splitBranch","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_23_AuxCounters","runSETI","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_18_Control","ping","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_18_Control","pong","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureWrong","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureNeutral","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup","measureRight","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_32_BulkWarmup","measure_c1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_32_BulkWarmup","measure_c2","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureWrong_1","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureWrong_5","true","true","true","false"
"elBroom/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize","measureRight","true","true","true","false"
"elBroom/atom","jmh.MyBenchmark","testMethod","true","true","true","false"
"Teradata/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"Teradata/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"Teradata/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToMapCast","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToArrayCast","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.aggregation.BenchmarkArrayAggregation","arrayAggregation","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.aggregation.BenchmarkGroupedTypedHistogram","testSharedGroupWithLargeBlocksRunner","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"Teradata/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"Teradata/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"Teradata/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"Teradata/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"Teradata/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"Teradata/presto","com.facebook.presto.sql.planner.BenchmarkPlanner","planQueries","true","true","true","false"
"Teradata/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"Teradata/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"Teradata/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"Teradata/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithArithmeticInPredicate","true","true","true","false"
"Teradata/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithFunctionPredicate","true","true","true","false"
"Teradata/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkRangePredicateJoin","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","geometryToBingTiles","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles","envelopeToBingTiles","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointSimpleGeometry","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeSimpleGeometry","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeSimpleGeometry","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeSimpleGeometry","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeEnvelopeSimpleGeometry","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPoint","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsInnerPointDeserialized","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelope","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointInEnvelopeDeserialized","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelope","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","stContainsOuterPointNotInEnvelopeDeserialized","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserialize","true","true","true","false"
"Teradata/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains","deserializeEnvelope","true","true","true","false"
"Teradata/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"Teradata/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"Teradata/presto","com.facebook.presto.array.BenchmarkReferenceCountMap","benchmarkInserts","true","true","true","false"
"gjesse/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"gjesse/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"gjesse/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"gjesse/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"gjesse/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"gjesse/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"gjesse/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"gjesse/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"gjesse/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"gjesse/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"gjesse/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"gjesse/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"gjesse/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"gjesse/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"gjesse/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"gjesse/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"gjesse/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"gjesse/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"gjesse/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"gjesse/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"gjesse/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"gjesse/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"gjesse/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"gjesse/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"gjesse/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"gjesse/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"gjesse/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"gjesse/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"gjesse/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"gjesse/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"gjesse/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"gjesse/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"gjesse/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"nkhuyu/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"nkhuyu/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"nkhuyu/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"nkhuyu/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"nkhuyu/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"nkhuyu/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"nkhuyu/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"nkhuyu/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"nkhuyu/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"nkhuyu/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"nkhuyu/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"nkhuyu/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"nkhuyu/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"nkhuyu/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"nkhuyu/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"nkhuyu/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"nkhuyu/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"nkhuyu/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"nkhuyu/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"nkhuyu/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"nkhuyu/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"nkhuyu/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"nkhuyu/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"nkhuyu/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"nkhuyu/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"nkhuyu/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"nkhuyu/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"nkhuyu/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"nkhuyu/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"nkhuyu/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"nkhuyu/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"nkhuyu/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"nkhuyu/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"Shedings/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"Shedings/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"Shedings/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"Shedings/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"Shedings/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"Shedings/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"Shedings/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"Shedings/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"Shedings/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"Shedings/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"Shedings/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"Shedings/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"Shedings/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"Shedings/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"Shedings/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"Shedings/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"Shedings/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"Shedings/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"Shedings/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"Shedings/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"Shedings/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"Shedings/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"Shedings/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"Shedings/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"Shedings/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"Shedings/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"Shedings/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"Shedings/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"Shedings/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"Shedings/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"Shedings/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"Shedings/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"Shedings/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"lijunhuayc/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"lijunhuayc/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"lijunhuayc/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"lijunhuayc/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"lijunhuayc/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"lijunhuayc/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"lijunhuayc/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"lijunhuayc/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"lijunhuayc/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"lijunhuayc/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"lijunhuayc/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"lijunhuayc/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"lijunhuayc/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"lijunhuayc/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"lijunhuayc/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"lijunhuayc/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"lijunhuayc/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"lijunhuayc/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"lijunhuayc/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"lijunhuayc/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"lijunhuayc/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"lijunhuayc/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"lijunhuayc/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"sposam/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"sposam/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"sposam/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"sposam/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"sposam/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"sposam/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"sposam/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"sposam/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"sposam/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"sposam/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"sposam/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"sposam/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"sposam/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"sposam/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"sposam/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"sposam/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"sposam/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"sposam/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"sposam/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"sposam/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"sposam/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"sposam/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"sposam/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"sposam/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"sposam/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"sposam/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"sposam/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"sposam/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"sposam/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"sposam/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"sposam/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"sposam/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"sposam/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"sposam/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"sposam/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"sposam/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"sposam/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"sposam/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"sposam/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"sposam/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"sposam/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"sposam/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"sposam/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"srayhunter/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"srayhunter/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"srayhunter/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"srayhunter/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"srayhunter/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"srayhunter/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"srayhunter/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"srayhunter/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"srayhunter/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"srayhunter/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"srayhunter/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"srayhunter/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"srayhunter/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"srayhunter/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"srayhunter/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"srayhunter/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"srayhunter/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"srayhunter/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"srayhunter/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"srayhunter/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"srayhunter/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"srayhunter/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"srayhunter/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"srayhunter/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"srayhunter/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"srayhunter/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"srayhunter/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"srayhunter/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"srayhunter/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"srayhunter/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"srayhunter/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"srayhunter/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"srayhunter/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"frodoking/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"frodoking/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"frodoking/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"frodoking/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"frodoking/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"frodoking/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"frodoking/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"frodoking/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"frodoking/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"frodoking/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"frodoking/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"frodoking/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"frodoking/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"frodoking/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"frodoking/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"frodoking/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"frodoking/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"frodoking/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"frodoking/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"frodoking/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"frodoking/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"frodoking/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"frodoking/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"frodoking/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"frodoking/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"frodoking/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"frodoking/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"frodoking/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"frodoking/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"frodoking/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"frodoking/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"frodoking/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"frodoking/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"suclike/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"suclike/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"suclike/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"suclike/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"suclike/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"suclike/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"suclike/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"suclike/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"suclike/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"suclike/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"suclike/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"suclike/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"suclike/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"suclike/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"suclike/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"suclike/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"suclike/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"suclike/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"suclike/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"suclike/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"suclike/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"suclike/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"suclike/RxJava","rx.ObservablePerfBaseline","observableConsumption","true","true","true","false"
"suclike/RxJava","rx.ObservablePerfBaseline","observableViaRange","true","true","true","false"
"suclike/RxJava","rx.ObservablePerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"suclike/RxJava","rx.ObservablePerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"suclike/RxJava","rx.ObservablePerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"suclike/RxJava","rx.ObservablePerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"suclike/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"suclike/RxJava","rx.SinglePerfBaseline","singleConsumption","true","true","true","false"
"suclike/RxJava","rx.SinglePerfBaseline","singleConsumptionUnsafe","true","true","true","false"
"suclike/RxJava","rx.SinglePerfBaseline","newSingleAndSubscriberEachTime","true","true","true","false"
"suclike/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"suclike/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"suclike/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"suclike/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"suclike/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"suclike/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"suclike/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"suclike/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"suclike/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"suclike/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"suclike/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"jbripley/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"jbripley/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"jbripley/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"jbripley/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"jbripley/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"jbripley/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"jbripley/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"jbripley/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"jbripley/RxJava","rx.PerfBaseline","observableConsumption","true","true","true","false"
"jbripley/RxJava","rx.PerfBaseline","observableViaRange","true","true","true","false"
"jbripley/RxJava","rx.PerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"jbripley/RxJava","rx.PerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"jbripley/RxJava","rx.PerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"jbripley/RxJava","rx.PerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"jbripley/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"jbripley/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"jbripley/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"jbripley/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputationSubscribedOnComputation","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThreadSubscribedOnComputation","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediateSubscribedOnComputation","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"jbripley/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"jbripley/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"jbripley/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"jbripley/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"jbripley/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"jbripley/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"jbripley/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"jbripley/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"jbripley/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"jbripley/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"jbripley/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"jbripley/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"hyarlagadda/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"hyarlagadda/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"hyarlagadda/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"hyarlagadda/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"hyarlagadda/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"hyarlagadda/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"hyarlagadda/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"hyarlagadda/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"hyarlagadda/RxJava","rx.PerfBaseline","observableConsumption","true","true","true","false"
"hyarlagadda/RxJava","rx.PerfBaseline","observableViaRange","true","true","true","false"
"hyarlagadda/RxJava","rx.PerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"hyarlagadda/RxJava","rx.PerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"hyarlagadda/RxJava","rx.PerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"hyarlagadda/RxJava","rx.PerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"hyarlagadda/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"hyarlagadda/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"hyarlagadda/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"hyarlagadda/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorPublishPerf","benchmark","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLast","true","true","true","false"
"hyarlagadda/RxJava","rx.operators.OperatorTakeLastOnePerf","takeLastOneUsingTakeLastOne","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"hyarlagadda/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"hehonghui/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"hehonghui/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"hehonghui/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"hehonghui/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"hehonghui/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"hehonghui/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"hehonghui/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"hehonghui/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"hehonghui/RxJava","rx.PerfBaseline","observableConsumption","true","true","true","false"
"hehonghui/RxJava","rx.PerfBaseline","observableViaRange","true","true","true","false"
"hehonghui/RxJava","rx.PerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"hehonghui/RxJava","rx.PerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"hehonghui/RxJava","rx.PerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"hehonghui/RxJava","rx.PerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.SerialSubscriptionPerf","add","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.SerialSubscriptionPerf","addLocal","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.SubscriptionListPerf","addClear","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.SubscriptionListPerf","addClearLocal","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemove","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addRemoveLocal","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClear","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionPerf","addClearLocal","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","add","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf","addLocal","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT1","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearT2","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addClearHalfT1","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT1","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveT2","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT1","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addRemoveHalfT2","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT1","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearT2","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT1","true","true","true","false"
"hehonghui/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf","addClearHalfT2","true","true","true","false"
"hehonghui/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"hehonghui/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"hehonghui/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"hehonghui/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"hehonghui/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"hehonghui/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"hehonghui/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"hehonghui/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"hehonghui/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"hehonghui/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"hehonghui/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"hehonghui/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"hehonghui/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"hehonghui/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","volatileIntRead","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","volatileLongRead","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","volatileIntWrite","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","volatileLongWrite","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntIncrementAndGet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntGetAndIncrement","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongIncrementAndGet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongGetAndIncrement","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntLazySet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongLazySet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntCASSuccess","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongCASSuccess","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckSuccess","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckSuccess","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntCASFailure","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongCASFailure","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntCASCheckFailure","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongCASCheckFailure","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntFieldIncrementAndGet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntFieldGetAndIncrement","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongFieldIncrementAndGet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongFieldGetAndIncrement","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntFieldLazySet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongFieldLazySet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASSuccess","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASSuccess","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntFieldCASFailure","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongFieldCASFailure","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicIntGetAndSet","true","true","true","false"
"hehonghui/RxJava","rx.internal.AtomicPerf","atomicLongGetAndSet","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"maliqq/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"maliqq/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark","decodeCookieWithRfc1123ExpiresField","true","true","true","false"
"maliqq/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"maliqq/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"maliqq/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"maliqq/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"maliqq/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"maliqq/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"maliqq/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"maliqq/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"maliqq/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"maliqq/netty","io.netty.microbench.http2.internal.hpack.HpackUtilBenchmark","oldEquals","true","true","true","false"
"maliqq/netty","io.netty.microbench.http2.internal.hpack.HpackUtilBenchmark","newEquals","true","true","true","false"
"maliqq/netty","io.netty.microbench.http2.internal.hpack.DecoderBenchmark","decode","true","true","true","false"
"maliqq/netty","io.netty.microbench.http2.internal.hpack.EncoderBenchmark","encode","true","true","true","false"
"maliqq/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"maliqq/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"maliqq/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"maliqq/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"maliqq/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"maliqq/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"maliqq/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"maliqq/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormatter","true","true","true","false"
"maliqq/netty","io.netty.handler.codec.DateFormatterBenchmark","parseHttpHeaderDateFormat","true","true","true","false"
"maliqq/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormatter","true","true","true","false"
"maliqq/netty","io.netty.handler.codec.DateFormatterBenchmark","formatHttpHeaderDateFormat","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"maliqq/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"maliqq/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"luyiisme/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"luyiisme/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"luyiisme/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"luyiisme/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"luyiisme/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http2.internal.hpack.HpackUtilBenchmark","oldEquals","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http2.internal.hpack.HpackUtilBenchmark","newEquals","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http2.internal.hpack.DecoderBenchmark","decode","true","true","true","false"
"luyiisme/netty","io.netty.microbench.http2.internal.hpack.EncoderBenchmark","encode","true","true","true","false"
"luyiisme/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"luyiisme/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"luyiisme/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"luyiisme/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"luyiisme/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"luyiisme/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"luyiisme/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"luyiisme/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"luyiisme/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"Techcable/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"Techcable/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"Techcable/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"Techcable/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"Techcable/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"Techcable/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"Techcable/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"Techcable/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"Techcable/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"Techcable/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"Techcable/netty","io.netty.microbench.http2.internal.hpack.HpackUtilBenchmark","oldEquals","true","true","true","false"
"Techcable/netty","io.netty.microbench.http2.internal.hpack.HpackUtilBenchmark","newEquals","true","true","true","false"
"Techcable/netty","io.netty.microbench.http2.internal.hpack.DecoderBenchmark","decode","true","true","true","false"
"Techcable/netty","io.netty.microbench.http2.internal.hpack.EncoderBenchmark","encode","true","true","true","false"
"Techcable/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"Techcable/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"Techcable/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"Techcable/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"Techcable/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"Techcable/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"Techcable/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"Techcable/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"Techcable/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"gh351135612/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"gh351135612/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"gh351135612/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToMapCast","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToArrayCast","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.aggregation.BenchmarkArrayAggregation","arrayAggregation","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"gh351135612/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"gh351135612/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"gh351135612/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"gh351135612/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"gh351135612/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"gh351135612/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"gh351135612/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"gh351135612/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"gh351135612/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithArithmeticInPredicate","true","true","true","false"
"gh351135612/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoinWithFunctionPredicate","true","true","true","false"
"gh351135612/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkRangePredicateJoin","true","true","true","false"
"gh351135612/presto","com.facebook.presto.geospatial.BenchmarkGeometryToBingTiles","geometryToBingTiles","true","true","true","false"
"gh351135612/presto","com.facebook.presto.geospatial.BenchmarkGeometryToBingTiles","envelopeToBingTiles","true","true","true","false"
"gh351135612/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"gh351135612/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"yrcourage/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"yrcourage/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"yrcourage/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"yrcourage/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"yrcourage/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"yrcourage/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"yrcourage/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"yrcourage/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"yrcourage/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"yrcourage/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"yrcourage/netty","io.netty.microbench.http2.internal.hpack.DecoderBenchmark","decode","true","true","true","false"
"yrcourage/netty","io.netty.microbench.http2.internal.hpack.EncoderBenchmark","encode","true","true","true","false"
"yrcourage/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"yrcourage/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"yrcourage/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"yrcourage/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"yrcourage/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"yrcourage/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"yrcourage/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"yrcourage/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"yrcourage/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark","fastThreadLocal","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","jdkThreadLocalGet","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark","fastThreadLocal","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.http2.internal.hpack.DecoderBenchmark","decode","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.http2.internal.hpack.EncoderBenchmark","encode","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexNoConditionals","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.MathOperationsBenchmark","nextIndexConditionals","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"Scottmitch/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"Scottmitch/netty","io.netty.handler.codec.CodecOutputListBenchmark","codecOutList","true","true","true","false"
"Scottmitch/netty","io.netty.handler.codec.CodecOutputListBenchmark","recyclableArrayList","true","true","true","false"
"Scottmitch/netty","io.netty.handler.codec.CodecOutputListBenchmark","arrayList","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"Scottmitch/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllSlow","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"smayoorans/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"smayoorans/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"smayoorans/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"smayoorans/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"smayoorans/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"smayoorans/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"smayoorans/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"smayoorans/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"smayoorans/netty","io.netty.microbench.http2.hpack.DecoderBenchmark","decode","true","true","true","false"
"smayoorans/netty","io.netty.microbench.http2.hpack.EncoderBenchmark","encode","true","true","true","false"
"smayoorans/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"smayoorans/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"smayoorans/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"smayoorans/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"smayoorans/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"smayoorans/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","false","false","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllSlow","","","","true"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"lukehutch/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"lukehutch/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"lukehutch/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"lukehutch/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"lukehutch/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"lukehutch/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"lukehutch/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"lukehutch/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"lukehutch/netty","io.netty.microbench.http2.hpack.DecoderBenchmark","decode","true","true","true","false"
"lukehutch/netty","io.netty.microbench.http2.hpack.EncoderBenchmark","encode","true","true","true","false"
"lukehutch/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"lukehutch/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"lukehutch/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"lukehutch/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"lukehutch/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"lukehutch/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllSlow","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"mosoft521/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"mosoft521/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"mosoft521/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"mosoft521/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"mosoft521/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"mosoft521/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"mosoft521/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"mosoft521/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"mosoft521/netty","io.netty.microbench.http2.hpack.DecoderBenchmark","decode","true","true","true","false"
"mosoft521/netty","io.netty.microbench.http2.hpack.EncoderBenchmark","encode","true","true","true","false"
"mosoft521/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"mosoft521/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"mosoft521/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"mosoft521/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"mosoft521/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"mosoft521/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"joansmith/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"joansmith/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"joansmith/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"joansmith/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"joansmith/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"joansmith/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"joansmith/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"joansmith/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"joansmith/netty","io.netty.microbench.http2.hpack.DecoderBenchmark","decode","true","true","true","false"
"joansmith/netty","io.netty.microbench.http2.hpack.EncoderBenchmark","encode","true","true","true","false"
"joansmith/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"joansmith/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"joansmith/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"joansmith/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"joansmith/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"joansmith/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"svstanev/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"svstanev/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"svstanev/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToVarcharBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey","benchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue","benchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"svstanev/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"svstanev/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"svstanev/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"svstanev/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"svstanev/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"svstanev/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"svstanev/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation","benchmarkBuildHash","true","true","true","false"
"svstanev/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin","benchmarkJoin","true","true","true","false"
"svstanev/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"svstanev/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"windie/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"windie/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"windie/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"windie/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"windie/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"windie/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"windie/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"windie/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark","write","true","true","true","false"
"windie/netty","io.netty.microbench.http2.hpack.DecoderBenchmark","decode","true","true","true","false"
"windie/netty","io.netty.microbench.http2.hpack.EncoderBenchmark","encode","true","true","true","false"
"windie/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"windie/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"windie/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"windie/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"windie/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"windie/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","false","false","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFastest","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllFast","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","httpAddAllSlow","","","","true"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFastest","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllFast","true","true","true","false"
"kjniemi/netty","io.netty.microbench.headers.HeadersBenchmark","http2AddAllSlow","true","true","true","false"
"kjniemi/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"kjniemi/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"kjniemi/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"kjniemi/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"kjniemi/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"kjniemi/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"kjniemi/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"kjniemi/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"kjniemi/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesOld","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchBytesNew","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceOld","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.AsciiStringBenchmark","hashCodeBenchCharSequenceNew","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"kjniemi/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"kjniemi/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"kjniemi/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"takari/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"takari/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"takari/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDoubleToDecimalBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkDecimalOperators","castDecimalToDoubleBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkDecimalOperators","additionBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkDecimalOperators","multiplyBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkDecimalOperators","divisionBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkDecimalOperators","moduloBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkDecimalOperators","inequalityBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.type.BenchmarkDecimalOperators","decimalToShortDecimalCastBenchmark","true","true","true","false"
"takari/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"takari/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"takari/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"takari/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform","benchmark","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"takari/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"takari/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"takari/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"takari/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"takari/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"takari/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"takari/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"takari/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"takari/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"takari/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"takari/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"takari/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"takari/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"takari/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"takari/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"takari/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader","readDecimal","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"takari/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"mrijke/druid","io.druid.benchmark.LongCompressionBenchmark","readContinuous","true","true","true","false"
"mrijke/druid","io.druid.benchmark.LongCompressionBenchmark","readSkipping","true","true","true","false"
"mrijke/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"mrijke/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"mrijke/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","read1","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","read2","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","read4","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","read8","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd12","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd16","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd20","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd24","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd32","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd40","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd48","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd56","true","true","true","false"
"mrijke/druid","io.druid.benchmark.VSizeSerdeBenchmark","readd64","true","true","true","false"
"mrijke/druid","io.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"mrijke/druid","io.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"mrijke/druid","io.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"mrijke/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"mrijke/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"mrijke/druid","io.druid.benchmark.indexing.IndexMergeBenchmark","merge","true","true","true","false"
"mrijke/druid","io.druid.benchmark.indexing.IndexMergeBenchmark","mergeV9","true","true","true","false"
"mrijke/druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark","read","true","true","true","false"
"mrijke/druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark","readWithFilters","true","true","true","false"
"mrijke/druid","io.druid.benchmark.indexing.IndexPersistBenchmark","persist","true","true","true","false"
"mrijke/druid","io.druid.benchmark.indexing.IndexPersistBenchmark","persistV9","true","true","true","false"
"mrijke/druid","io.druid.benchmark.indexing.IndexIngestionBenchmark","addRows","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleIncrementalIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.TimeseriesBenchmark","queryFilteredSingleQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.TimeseriesBenchmark","queryMultiQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.SearchBenchmark","querySingleIncrementalIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.SearchBenchmark","querySingleQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.SearchBenchmark","queryMultiQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.GroupByBenchmark","querySingleIncrementalIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.GroupByBenchmark","querySingleQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.SelectBenchmark","queryIncrementalIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.SelectBenchmark","queryQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.SelectBenchmark","queryMultiQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.TopNBenchmark","querySingleIncrementalIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.TopNBenchmark","querySingleQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.query.TopNBenchmark","queryMultiQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"mrijke/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"mrijke/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"mrijke/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"mrijke/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"mrijke/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"mrijke/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalLongs","true","true","true","false"
"mrijke/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalFloats","true","true","true","false"
"mrijke/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalStrings","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FloatCompressionBenchmark","readContinuous","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FloatCompressionBenchmark","readSkipping","true","true","true","false"
"mrijke/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","stringRead","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","longRead","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterNone","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterHalf","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","timeFilterAll","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithPreFilter","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithPostFilter","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithExFnPreFilter","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithExFnPostFilter","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","readOrFilter","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","readOrFilterCNF","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilter","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilterCNF","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilteredAggregatorBenchmark","querySingleIncrementalIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.FilteredAggregatorBenchmark","querySingleQueryableIndex","true","true","true","false"
"mrijke/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"mrijke/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"mrijke/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"mrijke/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","inject","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","extract","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","injectExtract","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","toBinarySpanContext","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","fromBinarySpanContext","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","toFromBinarySpanContext","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","inject","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","extract","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","injectExtract","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","none","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","manual","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","automatic","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","none","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","manual","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","automatic","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.tags.TagsBenchmark","tagKeyCreation","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.tags.TagsBenchmark","tagValueCreation","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.tags.TagsBenchmark","tagCreation","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.tags.NestedTagContextCreationBenchmark","timeNestedTagContext","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.tags.TagContextBenchmark","tagContextCreation","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.tags.TagContextBenchmark","getCurrentTagContext","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.tags.TagContextBenchmark","serializeTagContext","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.tags.TagContextBenchmark","deserializeTagContext","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordDoubleCount","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordLongCount","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordDoubleSum","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordLongSum","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordDoubleDistribution","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordLongDistribution","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordDoubleLastValue","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordLongLastValue","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedDoubleCount","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedLongCount","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedDoubleSum","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedLongSum","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedDoubleDistribution","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedLongDistribution","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedDoubleLastValue","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedLongLastValue","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordDoubleCount","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordLongCount","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordDoubleSum","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordLongSum","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordDoubleDistribution","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordLongDistribution","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordDoubleLastValue","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordLongLastValue","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAttributeValues","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAttributeMap","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAnnotation","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","putAttribute","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","putAttributes","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationEmpty","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationWithAttributes","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationWithAnnotation","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addMessageEvent","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addLink","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndNonSampledRootSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndRecordEventsRootSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndSampledRootSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndNonSampledChildSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndRecordEventsChildSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndSampledChildSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","putAttribute","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addAnnotation","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addMessageEvent","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addLink","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createRootSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithExplicitParent","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithRemoteParent","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithCurrentSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createLink","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createMessageEvent","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","scopeSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","getCurrentSpan","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","encodeSpanBinary","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","decodeSpanBinary","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","encodeSpanText","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","decodeSpanText","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","setStatus","true","true","true","false"
"bogdandrutu/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","endSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","inject","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","extract","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","injectExtract","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","toBinarySpanContext","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","fromBinarySpanContext","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","toFromBinarySpanContext","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","inject","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","extract","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","injectExtract","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","none","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","manual","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","automatic","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","none","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","manual","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","automatic","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.tags.TagsBenchmark","tagKeyCreation","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.tags.TagsBenchmark","tagValueCreation","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.tags.TagsBenchmark","tagCreation","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.tags.NestedTagContextCreationBenchmark","timeNestedTagContext","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.tags.TagContextBenchmark","tagContextCreation","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.tags.TagContextBenchmark","getCurrentTagContext","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.tags.TagContextBenchmark","serializeTagContext","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.tags.TagContextBenchmark","deserializeTagContext","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordDoubleCount","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordLongCount","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordDoubleSum","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordLongSum","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordDoubleDistribution","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordLongDistribution","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordDoubleLastValue","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark","recordLongLastValue","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedDoubleCount","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedLongCount","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedDoubleSum","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedLongSum","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedDoubleDistribution","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedLongDistribution","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedDoubleLastValue","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark","recordBatchedLongLastValue","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordDoubleCount","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordLongCount","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordDoubleSum","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordLongSum","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordDoubleDistribution","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordLongDistribution","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordDoubleLastValue","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark","recordLongLastValue","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAttributeValues","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAttributeMap","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAnnotation","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","putAttribute","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","putAttributes","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationEmpty","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationWithAttributes","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationWithAnnotation","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addMessageEvent","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addLink","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndNonSampledRootSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndRecordEventsRootSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndSampledRootSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndNonSampledChildSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndRecordEventsChildSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndSampledChildSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","putAttribute","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addAnnotation","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addMessageEvent","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addLink","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createRootSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithExplicitParent","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithRemoteParent","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithCurrentSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createLink","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createMessageEvent","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","scopeSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","getCurrentSpan","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","encodeSpanBinary","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","decodeSpanBinary","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","encodeSpanText","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","decodeSpanText","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","setStatus","true","true","true","false"
"songy23/instrumentation-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","endSpan","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.FlattenJustPerf","flowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.FlattenJustPerf","observable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingGetPerf","flowableBlockingFirst","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingGetPerf","flowableBlockingLast","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingGetPerf","observableBlockingLast","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingGetPerf","observableBlockingFirst","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingGetPerf","single","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingGetPerf","maybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingGetPerf","completable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ToFlowablePerf","flowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ToFlowablePerf","flowableInner","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ToFlowablePerf","observable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ToFlowablePerf","observableInner","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingPerf","flowableBlockingFirst","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingPerf","flowableBlockingLast","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingPerf","observableBlockingLast","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.BlockingPerf","observableBlockingFirst","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ObservableFlatMapPerf","flatMapXRange","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.EachTypeFlatMapPerf","bpRange","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.EachTypeFlatMapPerf","bpRangeMapJust","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.EachTypeFlatMapPerf","bpRangeMapRange","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.EachTypeFlatMapPerf","nbpRange","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.EachTypeFlatMapPerf","nbpRangeMapJust","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.EachTypeFlatMapPerf","nbpRangeMapRange","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.EachTypeFlatMapPerf","singleJust","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.EachTypeFlatMapPerf","singleJustMapJust","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.FlatMapJustPerf","flowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.FlatMapJustPerf","observable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.FlattenCrossMapPerf","flowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.FlattenCrossMapPerf","observable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","subscribeOnFlowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","observeOnFlowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","pipelineFlowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","subscribeOnObservable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","observeOnObservable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","pipelineObservable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","observeOnSingle","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","subscribeOnSingle","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","pipelineSingle","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","observeOnCompletable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","subscribeOnCompletable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","pipelineCompletable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","observeOnMaybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","subscribeOnMaybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.JustAsyncPerf","pipelineMaybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnFlowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","observeOnFlowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","pipelineFlowable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnObservable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","observeOnObservable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","pipelineObservable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","observeOnSingle","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnSingle","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","pipelineSingle","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","observeOnCompletable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnCompletable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","pipelineCompletable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","observeOnMaybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","subscribeOnMaybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.CallableAsyncPerf","pipelineMaybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ReducePerf","obsSingle","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ReducePerf","flowSingle","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ReducePerf","obsMaybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.ReducePerf","flowMaybe","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.RxVsStreamPerf","range","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.RxVsStreamPerf","rangeObservable","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.RxVsStreamPerf","rangeFlatMap","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.RxVsStreamPerf","rangeObservableFlatMap","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.RxVsStreamPerf","rangeFlatMapJust","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.RxVsStreamPerf","rangeObservableFlatMapJust","true","true","true","false"
"benjchristensen/RxJava","io.reactivex.RangePerf","rangeSync","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringAscii","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","decodeStringUtf8","true","true","true","false"
"louiscryan/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"louiscryan/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"louiscryan/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"louiscryan/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"louiscryan/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"louiscryan/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"louiscryan/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"louiscryan/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"louiscryan/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"louiscryan/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"louiscryan/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"louiscryan/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"louiscryan/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"louiscryan/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"louiscryan/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"louiscryan/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"louiscryan/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"louiscryan/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSlice","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark","writeAsciiStringSliceAbstract","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferHeap","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufferDirect","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufHeap","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirect","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.ByteBufBenchmark","setByteBufDirectPooled","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByteUnsafe","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getByte","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShortUnsafe","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getShort","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMediumUnsafe","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getMedium","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getIntUnsafe","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getInt","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLongUnsafe","true","true","true","false"
"louiscryan/netty","io.netty.microbench.buffer.HeapByteBufBenchmark","getLong","true","true","true","false"
"louiscryan/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark","open","true","true","true","false"
"chrisunder/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"chrisunder/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"chrisunder/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"chrisunder/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin","benchmark","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"chrisunder/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"chrisunder/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"chrisunder/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"chrisunder/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"chrisunder/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"chrisunder/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"chrisunder/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"chrisunder/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"chrisunder/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"chrisunder/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"chrisunder/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"dabaitu/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"dabaitu/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"dabaitu/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"dabaitu/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat","mapConcat","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter","benchmark","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"dabaitu/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"dabaitu/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"dabaitu/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"dabaitu/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"dabaitu/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"dabaitu/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"dabaitu/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"dabaitu/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"dabaitu/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"dabaitu/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"dabaitu/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"cawallin/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"cawallin/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"cawallin/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"cawallin/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"cawallin/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"cawallin/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"cawallin/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"cawallin/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"cawallin/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"cawallin/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"cawallin/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"cawallin/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"cawallin/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"cawallin/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"cawallin/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"mugglmenzel/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"fiedukow/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"fiedukow/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"fiedukow/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"fiedukow/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","write","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller","read","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"fiedukow/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"fiedukow/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"fiedukow/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"fiedukow/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"fiedukow/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"fiedukow/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"fiedukow/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"fiedukow/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"fiedukow/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"fiedukow/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"fiedukow/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Counters","cached","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Counters","lookup","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Counters","random","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Caching","allMissesSpectator","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Caching","allMissesCaffeine","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Caching","typicalSpectator","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Caching","typicalCaffeine","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.IdTraversal","iterator","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.IdTraversal","forEach","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","prefixString","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","prefixJava","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","prefixRe2j","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","prefixCustom","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","substrString","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","substrJava","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","substrRe2j","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","substrCustom","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","startIndexOfJava","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","startIndexOfRe2j","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","startIndexOfCustom","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","multiIndexOfJava","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","multiIndexOfRe2j","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","multiIndexOfCustom","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","orJava","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","orRe2j","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","orCustom","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","listJava","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","listRe2j","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PatternMatching","listCustom","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringForeach","arrayForLoop","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringForeach","arrayForeach","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringForeach","strForLoop","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringForeach","stream","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","ok_naive","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","ok_stringBuilder","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","ok_array","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","ok_checkFirst","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","ok_asciiSet","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","bad_naive","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","bad_stringBuilder","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","bad_array","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","bad_checkFirst","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringReplace","bad_asciiSet","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringCreate","naive","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringCreate","reflection","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.StringCreate","methodHandle","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PercentileTimers","defaultTimerGet","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PercentileTimers","percentileTimerGet","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PercentileTimers","percentileTimerBuilder","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PercentileTimers","defaultTimerReuse","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.PercentileTimers","percentileTimerReuse","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","justName","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","baseline","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","withTag","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","withTagsVararg","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","withTagsVarargSorted","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","withTagsMap","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","append1","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","append2","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","append4","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","append4sorted","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","emptyAppend1","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","emptyAppend2","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","emptyAppend4","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.perf.Ids","emptyAppend4sorted","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.ipc.ServerGroupParsing","string","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.ipc.ServerGroupParsing","charSequence","true","true","true","false"
"brharrington/spectator","com.netflix.spectator.ipc.ServerGroupParsing","frigga","true","true","true","false"
"wrmsr/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"wrmsr/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"wrmsr/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksAdd","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksSubtract","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksMultiply","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksDivide","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","overflowChecksNegate","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineAdd","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineSubtract","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineMultiply","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineDivide","true","true","true","false"
"wrmsr/presto","com.facebook.presto.type.BenchmarkBigIntOperators","baseLineNegate","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkBuildHash","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators","benchmarkJoinHash","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort","arraySort","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript","mapSubscript","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleActual","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","doubleBaseline","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatActual","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction","floatBaseline","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript","arraySubscript","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeJoni","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLikeRe2J","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"wrmsr/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"wrmsr/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"wrmsr/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"wrmsr/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"wrmsr/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"wrmsr/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"wrmsr/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"wrmsr/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"wrmsr/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"wrmsr/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength1","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength2","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength3","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength4","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength5","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength6","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength7","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","baselineLength256","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength1","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength2","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength3","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength4","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength5","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength6","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength7","true","true","true","false"
"wrmsr/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker","optimizedLength256","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks","fullTableScanCleanConservative","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks","fullTableScanCleanThorough","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks","fullTableScanDirtyConservative","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks","fullTableScanDirtyThorough","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks","fullTableScanOneWideRowThorough","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks","singleDelete","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks","batchDelete","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks","batchRangeDelete","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks","allRangeDelete","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks","deleteAllTimestamps","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetDynamicBenchmarks","getAllColumnsExplicitly","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetDynamicBenchmarks","getAllColumnsImplicitly","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetDynamicBenchmarks","getFirstColumnExplicitly","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetDynamicBenchmarks","getFirstColumnExplicitlyGetRows","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetRowsColumnRangeBenchmarks","getAllColumnsSingleBigRow","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetRowsColumnRangeBenchmarks","getAllColumnsModeratelyWideRow","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetRowsColumnRangeBenchmarks","getAllColumnsModeratelyWideRowWithSomeUncommitted","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetRowsColumnRangeBenchmarks","getAllColumnsModeratelyWideRowWithManyUncommitted","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRowsColumnRangeBenchmarks","getAllColumnsAligned","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRowsColumnRangeBenchmarks","getAllColumnsUnaligned","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRowsColumnRangeBenchmarks","getAllColumnsSingleBigRow","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.HttpBenchmarks","parseHttpHeaders","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRowsBenchmarks","getManyRowsWithGetRows","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks","singleRandomPut","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks","batchRandomPut","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks","batchRandomMultiPut","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks","putUnlessExistsAndExists","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks","putUnlessExistsDoesNotExist","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks","singleSweepRun","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks","batchedUniformSingleSweepRun","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks","batchedSingleSweepRun","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks","multipleUniformSweepRun","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks","multipleSweepRun","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.StreamStoreBenchmarks","loadSmallStream","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.StreamStoreBenchmarks","loadLargeStream","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.StreamStoreBenchmarks","loadVeryLargeStream","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionPutBenchmarks","singleRandomPut","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionPutBenchmarks","batchRandomPut","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks","fewThreadsGetFreshTimestamp","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks","manyThreadsGetFreshTimestamp","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks","manyThreadsGetFreshTimestampWithBackoff","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks","fewThreadsGetBatchOfTimestamps","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks","manyThreadsGetBatchOfTimestamps","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getCells","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getCellsDirty","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getSingleRowWithRangeQuery","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getSingleRowWithRangeQueryDirty","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getRange","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getRangeDirty","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getSingleCell","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getSingleCellDirty","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getRanges","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks","getRangesDirty","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionDeleteBenchmarks","singleDelete","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionDeleteBenchmarks","batchDelete","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks","getSingleRange","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks","getSingleRangeDirty","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks","getSingleLargeRange","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks","getSingleLargeRangeDirty","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks","getMultiRange","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks","getMultiRangeDirty","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetDynamicBenchmarks","getAllColumnsExplicitly","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetDynamicBenchmarks","getAllColumnsImplicitly","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetDynamicBenchmarks","getFirstColumnExplicitly","true","true","true","false"
"EvilMcJerkface/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetDynamicBenchmarks","getFirstColumnExplicitlyGetRows","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.BloomFilterSerializerBench","serializationTest","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.DirectorySizerBench","countFiles","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.MutationBench","serialize","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.MutationBench","deserialize","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest","write","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest","read","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.BTreeSearchIteratorBench","searchFound","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.BTreeSearchIteratorBench","searchNotFound","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.MessageOutBench","serialize40","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.MessageOutBench","serializePre40","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSByte","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPByte","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSInt","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPInt","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSLong","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPLong","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSMixed","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPMixed","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBOS","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBDOSP","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyLegacyWriteUTF","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBOS","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBDOSP","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallLegacyWriteUTF","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBOS","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBDOSP","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeLegacyWriteUTF","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBOS","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBDOSP","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyLegacyWriteUTF","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBOS","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBDOSP","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallLegacyWriteUTF","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBOS","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBDOSP","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeLegacyWriteUTF","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.DiagnosticEventServiceBench","publishEvents","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.HashingBench","benchMessageDigestMD5","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.HashingBench","benchHasherMD5","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.HashingBench","benchHasherMurmur3_128","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchToken","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchTokenForOldPendingRanges","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.Sample","lz4","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.Sample","snappy","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.CompactionBench","compactTest","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.DiagnosticEventPersistenceBench","persistEvents","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.LatencyTrackingBench","benchLatencyMetricsWrite","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.LatencyTrackingBench","benchInsertToDEHR","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark","blockStreamWriter","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark","blockStreamReader","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark","partialStreamWriter","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark","partialStreamReader","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.PreaggregatedByteBufsBench","oneBigBuf","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.PreaggregatedByteBufsBench","chunkedBuf","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.BTreeBuildBench","treeBuilderRecycleAdd","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.BTreeBuildBench","buildTreeTest","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench","booleanFromBooleanSupplier","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench","booleanFromPlainSupplier","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench","intFromIntSupplier","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench","intFromPlainSupplier","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.StreamingTombstoneHistogramBuilderBench","test","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench","baseline","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench","threadLocal","true","true","true","false"
"mshuler/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench","fastThreadLocal","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.latency.QueueBurstCost","burstCost","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.latency.MpqBurstCost","burstCost","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","ping","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","loop","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","ping","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","loop","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.latency.spsc.MpqRelaxedBurstCost","burstCost","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.baseline.QueueOfferPoll","offerAndPollLoops","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.baseline.SingleThreadedOffer","offerLoop","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.baseline.BaselinePingPong","ping","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.baseline.BaselinePingPong","pong","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.baseline.SingleThreadedPoll","poll","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.baseline.ConcQOfferPoll","offerAndPoll","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.IntrusiveQueueThroughputBackoffNone","offer","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.IntrusiveQueueThroughputBackoffNone","poll","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","offerNoR","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","pollNoR","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","offerBothR","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","pollBothR","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","offerPR","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","pollPR","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","offerCR","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","pollCR","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","offer","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","poll","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","offer","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","poll","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","writeBusy","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","readBusy","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","write","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","read","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqDrainFillThroughputBackoffNone","fill","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.throughput.MpqDrainFillThroughputBackoffNone","drain","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.collections.SetOps","add","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.collections.SetOps","remove","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.collections.SetOps","contains","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.collections.SetOps","sum","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.counters.CountersBenchmark","inc","true","true","true","false"
"franz1981/JCTools","org.jctools.jmh.counters.CountersBenchmark","get","true","true","true","false"
"franz1981/JCTools","org.jctools.maps.nhbm_test.jmh.ConcurrentMapThroughput","randomGetPutRemove","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","oneObjectArgBaseline","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","oneObjectArgCaller","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","oneObjectArgProcessor","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","oneReferenceArgBaseline","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","oneReferenceArgCaller","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","oneReferenceArgProcessor","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","twoMixedLengthPrimitiveArgsBaseline","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","twoMixedLengthPrimitiveArgsCaller","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","twoMixedLengthPrimitiveArgsProcessor","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","onePrimitiveArgBaseline","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","onePrimitiveArgCaller","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","onePrimitiveArgProcessor","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","noArgsBaseline","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","noArgsCaller","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","noArgsProcessor","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","tenMixedArgsBaseline","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","tenMixedArgsCaller","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","tenMixedArgsProcessor","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","alignedPrimitiveArgsBaseline","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","alignedPrimitiveArgsCaller","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","alignedPrimitiveArgsProcessor","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","unalignedPrimitiveArgsBaseline","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","unalignedPrimitiveArgsCaller","true","true","true","false"
"franz1981/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark","unalignedPrimitiveArgsProcessor","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.BloomFilterSerializerBench","serializationTest","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.DirectorySizerBench","countFiles","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.MutationBench","serialize","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.MutationBench","deserialize","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest","write","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest","read","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.BTreeSearchIteratorBench","searchFound","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.BTreeSearchIteratorBench","searchNotFound","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.MessageOutBench","serialize40","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.MessageOutBench","serializePre40","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSByte","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPByte","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSInt","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPInt","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSLong","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPLong","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSMixed","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPMixed","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBOS","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBDOSP","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyLegacyWriteUTF","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBOS","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBDOSP","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallLegacyWriteUTF","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBOS","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBDOSP","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeLegacyWriteUTF","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBOS","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBDOSP","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyLegacyWriteUTF","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBOS","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBDOSP","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallLegacyWriteUTF","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBOS","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBDOSP","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeLegacyWriteUTF","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.DiagnosticEventServiceBench","publishEvents","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.HashingBench","benchMessageDigestMD5","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.HashingBench","benchHasherMD5","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.HashingBench","benchHasherMurmur3_128","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchToken","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchTokenForOldPendingRanges","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.Sample","lz4","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.Sample","snappy","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.CompactionBench","compactTest","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.DiagnosticEventPersistenceBench","persistEvents","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.LatencyTrackingBench","benchLatencyMetricsWrite","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.LatencyTrackingBench","benchInsertToDEHR","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark","blockStreamWriter","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark","blockStreamReader","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark","partialStreamWriter","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark","partialStreamReader","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.BTreeBuildBench","treeBuilderRecycleAdd","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench","booleanFromBooleanSupplier","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench","booleanFromPlainSupplier","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench","intFromIntSupplier","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench","intFromPlainSupplier","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.StreamingTombstoneHistogramBuilderBench","test","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench","baseline","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench","threadLocal","true","true","true","false"
"thelastpickle/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench","fastThreadLocal","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.indexing.IndexMergeBenchmark","merge","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.indexing.IndexMergeBenchmark","mergeV9","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark","read","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.indexing.IndexPersistBenchmark","persist","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.indexing.IndexPersistBenchmark","persistV9","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.indexing.IndexIngestionBenchmark","addRows","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleIncrementalIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.TimeseriesBenchmark","queryFilteredSingleQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.TimeseriesBenchmark","queryMultiQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.SearchBenchmark","querySingleIncrementalIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.SearchBenchmark","querySingleQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.SearchBenchmark","queryMultiQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.GroupByBenchmark","querySingleIncrementalIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.GroupByBenchmark","querySingleQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.SelectBenchmark","queryIncrementalIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.SelectBenchmark","queryQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.SelectBenchmark","queryMultiQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.TopNBenchmark","querySingleIncrementalIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.TopNBenchmark","querySingleQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.query.TopNBenchmark","queryMultiQueryableIndex","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalLongs","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalFloats","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalStrings","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","stringRead","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","longRead","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithPreFilter","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithPostFilter","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithExFnPreFilter","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","readWithExFnPostFilter","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","readOrFilter","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","readOrFilterCNF","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilter","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.FilterPartitionBenchmark","readComplexOrFilterCNF","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"tubemogul/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"tubemogul/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"tubemogul/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"seetharamireddy540/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench","doMinMaxInJava","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench","doMinMaxWithInterOp","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.virtual.bench.PartialEscapeBench","benchPartialEscape","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark","lsra_STRING_equals","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark","lsra_HASHMAP_computeIfAbsent","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark","tracera_STRING_equals","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark","tracera_HASHMAP_computeIfAbsent","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark","compile","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark","frontend","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark","backend","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.trace.TraceLSRAIntervalBuildingBench","buildIntervals","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.trace.TraceBuilderBenchmark","uniDirectionalTraceBuilder","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.lir.trace.TraceBuilderBenchmark","biDirectionalTraceBuilder","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.TestJMH","testJMH","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark","nullness","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark","search","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark","nullness","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark","search","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","getNodeClass","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","dataEquals","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","replaceFirstInput","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","inputsEquals","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","inputs","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","acceptInputs","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","createAndDeleteAdd","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","createAndDeleteConstant","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","usages","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","nodeBitmap","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueEquals_STRING_EQUALS","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueEquals_HASHMAP_COMPUTE_IF_ABSENT","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueNumberLeaf_HASHMAP_COMPUTE_IF_ABSENT","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueNumberLeaf_STRING_EQUALS","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","stringEquals","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","cfgCompute1","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","cfgCompute2","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","cfgCompute3","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","cfgCompute4","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_LATEST_OPTIMAL","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_LATEST_OUT_OF_LOOPS_OPTIMAL","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_EARLIEST_OPTIMAL","true","true","true","false"
"mcberg2016/graal-core","com.oracle.graal.microbenchmarks.graal.FrameStateAssigmentPhaseBenchmark","nextToken","true","true","true","false"
"mcberg2016/graal-core","micro.benchmarks.SimpleSyncBenchmark","setAgeCond","","","","true"
"mcberg2016/graal-core","micro.benchmarks.SimpleSyncBenchmark","getAge","","","","true"
"mcberg2016/graal-core","micro.benchmarks.SimpleSyncBenchmark","getAndIncAge","","","","true"
"mcberg2016/graal-core","micro.benchmarks.ArrayDuplicationBenchmark","normalArraycopy","","","","true"
"mcberg2016/graal-core","micro.benchmarks.ArrayDuplicationBenchmark","arraysCopyOf","","","","true"
"mcberg2016/graal-core","micro.benchmarks.ArrayDuplicationBenchmark","cloneObjectArray","","","","true"
"mcberg2016/graal-core","micro.benchmarks.GuardedIntrinsicBenchmark","overrideHashCode","","","","true"
"mcberg2016/graal-core","micro.benchmarks.GuardedIntrinsicBenchmark","inheritHashCode","","","","true"
"mcberg2016/graal-core","micro.benchmarks.GuardedIntrinsicBenchmark","mixedHashCode","","","","true"
"mcberg2016/graal-core","micro.benchmarks.MathFunctionBenchmark","mathLog","","","","true"
"mcberg2016/graal-core","micro.benchmarks.MathFunctionBenchmark","mathLog10","","","","true"
"mcberg2016/graal-core","micro.benchmarks.MathFunctionBenchmark","mathSin","","","","true"
"mcberg2016/graal-core","micro.benchmarks.MathFunctionBenchmark","mathCos","","","","true"
"mcberg2016/graal-core","micro.benchmarks.MathFunctionBenchmark","mathTan","","","","true"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"xingguang2013/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"xingguang2013/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"jenskordowski/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"jenskordowski/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"satishsaley/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"satishsaley/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"satishsaley/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"satishsaley/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"satishsaley/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"satishsaley/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"satishsaley/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"satishsaley/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"satishsaley/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"satishsaley/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"satishsaley/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"satishsaley/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testAddToEmptyRegionQuadTree","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testAddToBasicRegionQuadTree","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testAddToComplexRegionQuadTree","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testEmptyRegionQuadTreeIntersectingLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testBasicRegionQuadTreeIntersectingLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testComplexRegionQuadTreeIntersectingLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testEmptyRegionQuadTreeIntersectingRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testBasicRegionQuadTreeIntersectingRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest","testComplexRegionQuadTreeIntersectingRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testContainsXY","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testNotContainsXY","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testRotate","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testRotateContains","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testNotRotateContains","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testNotIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testRotateIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testRotateNotIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testNotIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testRotateIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testRotateNotIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testIntersectsTriangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testNotIntersectsTriangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testRotateIntersectsTriangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest","testRotateNotIntersectsTriangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest","testContainsXY","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest","testNotContainsXY","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest","testIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest","testNotIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest","testIntersectsCircle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest","testNotIntersectsCircle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest","testIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest","testNotIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testContainsXY","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testNotContainsXY","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotate","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateContains","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testNotRotateContains","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testNotIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateNotIntersectsRectangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testNotIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateNotIntersectsLineSegment","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testIntersectsTriangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testNotIntersectsTriangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateIntersectsTriangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateNotIntersectsTriangle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testIntersectsCircle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testNotIntersectsCircle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateIntersectsCircle","true","true","true","false"
"hyperverse/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest","testRotateNotIntersectsCircle","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"eincs/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","false","false","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"eincs/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"eincs/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"eincs/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"eincs/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"eincs/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"eincs/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"eincs/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"eincs/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"eincs/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"eincs/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"eincs/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"AnselQiao/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"AnselQiao/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","false","false","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"caoyanwei/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"caoyanwei/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"zhujingling/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"zhujingling/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"zhujingling/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"zhujingling/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"zhujingling/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"zhujingling/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"zhujingling/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"zhujingling/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"zhujingling/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"zhujingling/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"zhujingling/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"zhujingling/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.headers.HeadersBenchmark","httpRemove","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.headers.HeadersBenchmark","http2Remove","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.headers.HeadersBenchmark","http2Iterate","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"shenguoquan/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"shenguoquan/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"jdivy/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"jdivy/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"jdivy/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"jdivy/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"jdivy/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"jdivy/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"jdivy/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"jdivy/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"jdivy/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"jdivy/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"jdivy/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"jdivy/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"jdivy/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"jdivy/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"jdivy/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"jdivy/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"jdivy/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"jdivy/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"tempbottle/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"tempbottle/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"tempbottle/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"tempbottle/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","true","true","false"
"tempbottle/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"tempbottle/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"tempbottle/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"tempbottle/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"tempbottle/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"tempbottle/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"tempbottle/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"tempbottle/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"tempbottle/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"tempbottle/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"tempbottle/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"tempbottle/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"tempbottle/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"tempbottle/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"liyang1025/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"liyang1025/netty","io.netty.microbench.headers.HeadersBenchmark","httpGet","true","true","true","false"
"liyang1025/netty","io.netty.microbench.headers.HeadersBenchmark","httpPut","true","true","true","false"
"liyang1025/netty","io.netty.microbench.headers.HeadersBenchmark","httpIterate","true","false","false","false"
"liyang1025/netty","io.netty.microbench.headers.HeadersBenchmark","http2Get","true","true","true","false"
"liyang1025/netty","io.netty.microbench.headers.HeadersBenchmark","http2Put","true","true","true","false"
"liyang1025/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateNew","true","true","true","false"
"liyang1025/netty","io.netty.microbench.headers.HeadersBenchmark","http2IterateOld","true","true","true","false"
"liyang1025/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"liyang1025/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"liyang1025/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"liyang1025/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"liyang1025/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"liyang1025/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"liyang1025/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"liyang1025/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"liyang1025/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCheckBeforeCopy","true","true","true","false"
"liyang1025/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark","appendCatchExceptionAfter","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.jsr223.JavaTranslatorBenchmark","testTranslationShort","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.jsr223.JavaTranslatorBenchmark","testTranslationMedium","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.jsr223.JavaTranslatorBenchmark","testTranslationLong","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.jsr223.JavaTranslatorBenchmark","testTranslationWithStrategy","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddVertex","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddVertexWithProps","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testVertexProperty","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddEdge","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testEdgeProperty","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddV","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddVWithProps","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testVertexPropertyStep","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddVWithPropsChained","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddVAddEWithPropsChained","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddE","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testEdgePropertyStep","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark","constructShort","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark","constructShortWithMapArgument","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark","constructMedium","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark","constructMediumWithBindings","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark","constructLong","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark","testAddVWithPropsChained","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark","testAddVAddEWithPropsChained","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_outE_inV_outE_inV_outE_inV","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_out_out","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_out_out_path","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_repeatXoutX_timesX2X","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_repeatXoutX_timesX3X","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_localXout_out_valuesXnameX_foldX","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_localXout_out_valuesXnameX_foldX","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_mapXout_out_valuesXnameX_toListX","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_label_groupCount","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_match_selectXbX_valuesXnameX","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_E_hasLabelXwrittenByX_whereXinV_inEXsungByX_count_isX0XX_subgraphXsgX","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphSONMapperBenchmark","readBytecode1","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphSONMapperBenchmark","readBytecode2","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphSONMapperBenchmark","writeBytecode1","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphSONMapperBenchmark","writeBytecode2","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testReadMessage1Binary","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testReadMessage2Binary","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testReadMessage1GraphSON","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testReadMessage2GraphSON","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testWriteResponseBinary","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testWriteResponseGraphSON","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testWriteBytecodeBinary","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testWriteBytecodeGraphSON","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark","testInstanceCreation","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark","writeBytecode1","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark","writeBytecode2","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark","readBytecode1","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark","readBytecode2","true","true","true","false"
"robertdale/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark","readP1","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"ruhkopf/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"jforge/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"thomasandersen77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"mukteshkrmishra/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"sensaid/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"tvaughan77/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"hcheung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"davidkarlsen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"sasrin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"fredboutin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"Fsero/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"mantofast/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"ouyangkongtong/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","inject","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","extract","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark","injectExtract","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","toBinarySpanContext","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","fromBinarySpanContext","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark","toFromBinarySpanContext","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","inject","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","extract","true","true","true","false"
"sebright/opencensus-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark","injectExtract","true","true","true","false"
"sebright/opencensus-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","none","true","true","true","false"
"sebright/opencensus-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","manual","true","true","true","false"
"sebright/opencensus-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark","automatic","true","true","true","false"
"sebright/opencensus-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","none","true","true","true","false"
"sebright/opencensus-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","manual","true","true","true","false"
"sebright/opencensus-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark","automatic","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAttributeValues","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAttributeMap","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicDataBenchmark","createAnnotation","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","putAttribute","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","putAttributes","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationEmpty","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationWithAttributes","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addAnnotationWithAnnotation","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addMessageEvent","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark","addLink","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndNonSampledRootSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndRecordEventsRootSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndSampledRootSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndNonSampledChildSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndRecordEventsChildSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark","startEndSampledChildSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","putAttribute","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addAnnotation","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addMessageEvent","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark","addLink","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createRootSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithExplicitParent","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithRemoteParent","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createSpanWithCurrentSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createLink","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","createMessageEvent","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","scopeSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","getCurrentSpan","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","encodeSpanBinary","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","decodeSpanBinary","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","encodeSpanText","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","decodeSpanText","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","setStatus","true","true","true","false"
"sebright/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark","endSpan","true","true","true","false"
"loganj/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"loganj/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"loganj/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"loganj/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"loganj/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"loganj/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"loganj/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"loganj/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"loganj/RxJava","rx.PerfBaseline","observableConsumption","true","true","true","false"
"loganj/RxJava","rx.PerfBaseline","observableViaRange","true","true","true","false"
"loganj/RxJava","rx.PerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"loganj/RxJava","rx.PerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"loganj/RxJava","rx.PerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"loganj/RxJava","rx.PerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"loganj/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"loganj/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"loganj/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"loganj/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"loganj/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"loganj/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"loganj/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"loganj/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"loganj/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"loganj/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"loganj/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"loganj/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"loganj/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"loganj/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkSlice","compareTo","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkSlice","equalsUnchecked","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkSlice","equalsObject","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b00sliceZero","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b01customLoopZero","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b02unsafeZero","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b03slice32B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b04customLoop32B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b05unsafe32B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b06slice128B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b07customLoop128B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b08unsafe128B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b09slice512B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b10customLoop512B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b11unsafe512B","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b12slice1K","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b13customLoop1K","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b14unsafe1K","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b15slice1M","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b16customLoop1M","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b17unsafe1M","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b18slice128M","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b19customLoop128M","true","true","true","false"
"electrum/slice","io.airlift.slice.MemoryCopyBenchmark","b20unsafe128M","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hash","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash32","guava","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashInt","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashInt","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashLong","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashLong","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkHashCode","hash","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLengthOfCodePointFromStartByte","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkCountCodePoints","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkOffsetByCodePoints","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkSubstring","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkReverse","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToLowerCase","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToUpperCase","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLeftTrim","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkRightTrim","true","true","true","false"
"electrum/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkTrim","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkXxHash64","xxhash64","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkXxHash64","specializedHashLong","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash64","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash128","guava","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash128","specializedHashLong","true","true","true","false"
"electrum/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hashLong","true","true","true","false"
"zxs/druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"zxs/druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"zxs/druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"zxs/druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"zxs/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"zxs/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"zxs/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"zxs/druid","io.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"zxs/druid","io.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"zxs/druid","io.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"zxs/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"zxs/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"zxs/druid","io.druid.benchmark.indexing.IndexMergeBenchmark","merge","true","true","true","false"
"zxs/druid","io.druid.benchmark.indexing.IndexMergeBenchmark","mergeV9","true","true","true","false"
"zxs/druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark","read","true","true","true","false"
"zxs/druid","io.druid.benchmark.indexing.IndexPersistBenchmark","persist","true","true","true","false"
"zxs/druid","io.druid.benchmark.indexing.IndexPersistBenchmark","persistV9","true","true","true","false"
"zxs/druid","io.druid.benchmark.indexing.IndexIngestionBenchmark","addRows","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleIncrementalIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.TimeseriesBenchmark","querySingleQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.TimeseriesBenchmark","queryFilteredSingleQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.TimeseriesBenchmark","queryMultiQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.SearchBenchmark","querySingleIncrementalIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.SearchBenchmark","querySingleQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.SearchBenchmark","queryMultiQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.GroupByBenchmark","querySingleIncrementalIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.GroupByBenchmark","querySingleQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.GroupByBenchmark","queryMultiQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.SelectBenchmark","queryIncrementalIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.SelectBenchmark","queryQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.SelectBenchmark","queryMultiQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.TopNBenchmark","querySingleIncrementalIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.TopNBenchmark","querySingleQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.query.TopNBenchmark","queryMultiQueryableIndex","true","true","true","false"
"zxs/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"zxs/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"zxs/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"zxs/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"zxs/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"zxs/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"zxs/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalLongs","true","true","true","false"
"zxs/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalFloats","true","true","true","false"
"zxs/druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark","normalStrings","true","true","true","false"
"zxs/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"zxs/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"zxs/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"zxs/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"zxs/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"yshaojie/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"abersnaze/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"abersnaze/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"abersnaze/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"abersnaze/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"abersnaze/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"abersnaze/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"abersnaze/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"abersnaze/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"abersnaze/RxJava","rx.PerfBaseline","observableConsumption","true","true","true","false"
"abersnaze/RxJava","rx.PerfBaseline","observableViaRange","true","true","true","false"
"abersnaze/RxJava","rx.PerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"abersnaze/RxJava","rx.PerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"abersnaze/RxJava","rx.PerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"abersnaze/RxJava","rx.PerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"abersnaze/RxJava","rx.observables.BlockingObservablePerf","benchSingle","true","true","true","false"
"abersnaze/RxJava","rx.observables.BlockingObservablePerf","benchFirst","true","true","true","false"
"abersnaze/RxJava","rx.observables.BlockingObservablePerf","benchLast","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"abersnaze/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"abersnaze/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"abersnaze/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"abersnaze/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"abersnaze/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"abersnaze/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"abersnaze/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"abersnaze/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"abersnaze/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"abersnaze/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"abersnaze/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"liyuqi/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"fengshao0907/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"fabcipriano/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkSlice","compareTo","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkSlice","equalsUnchecked","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkSlice","equalsObject","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b00sliceZero","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b01customLoopZero","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b02unsafeZero","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b03slice32B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b04customLoop32B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b05unsafe32B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b06slice128B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b07customLoop128B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b08unsafe128B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b09slice512B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b10customLoop512B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b11unsafe512B","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b12slice1K","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b13customLoop1K","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b14unsafe1K","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b15slice1M","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b16customLoop1M","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b17unsafe1M","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b18slice128M","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b19customLoop128M","true","true","true","false"
"dain/slice","io.airlift.slice.MemoryCopyBenchmark","b20unsafe128M","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hash","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash32","guava","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashInt","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashInt","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashLong","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashLong","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkHashCode","hash","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLengthOfCodePointFromStartByte","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkCountCodePoints","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkOffsetByCodePoints","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkSubstring","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkReverse","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToLowerCase","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToUpperCase","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLeftTrim","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkRightTrim","true","true","true","false"
"dain/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkTrim","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkXxHash64","xxhash64","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkXxHash64","specializedHashLong","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash64","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash128","guava","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash128","specializedHashLong","true","true","true","false"
"dain/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hashLong","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineExecute","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineQueue","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixExecute","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixQueue","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixObserve","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest","hystrixToObservable","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineExecute","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineQueue","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixExecute","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixQueue","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixObserve","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest","hystrixToObservable","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"rukor/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark","reader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.GsonBenchmark$SerializerBenchmark","string","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","url","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","stream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","reader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$SerializerBenchmark","string","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark","stream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$SerializerBenchmark","string","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark","reader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.GsonBenchmark$SerializerBenchmark","string","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","url","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","stream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","reader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.JacksonBenchmark$SerializerBenchmark","string","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark","stream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.LoganSquareBenchmark$SerializerBenchmark","string","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","stream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","reader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.BoonBenchmark$SerializerBenchmark","string","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark","stream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.MoshiBenchmark$SerializerBenchmark","string","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","url","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","stream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","reader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"suzukaze/json-benchmarks","json.benchmark.AutoBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark","reader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.GsonBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","url","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","stream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","reader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark","stream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark","reader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.GsonBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","url","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","stream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","reader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.JacksonBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark","stream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.LoganSquareBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","stream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","reader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.BoonBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark","stream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.MoshiBenchmark$SerializerBenchmark","string","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","url","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","stream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","parse2Map","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","bufferdStream","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","reader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark","bufferedReader","true","true","true","false"
"tokuhirom/json-benchmarks","json.benchmark.AutoBenchmark$SerializerBenchmark","string","true","true","true","false"
"mosoft521/jodd","jodd.bean.BeanUtilBenchmark","apacheBeanUtils","true","true","true","false"
"mosoft521/jodd","jodd.bean.BeanUtilBenchmark","joddBean","true","true","true","false"
"mosoft521/jodd","jodd.buffer.FastCharBufferBenchmark","fastBuffer","true","true","true","false"
"mosoft521/jodd","jodd.buffer.FastCharBufferBenchmark","charArrayWriter","true","true","true","false"
"mosoft521/jodd","jodd.buffer.FastByteBufferBenchmark","fastBuffer","true","true","true","false"
"mosoft521/jodd","jodd.buffer.FastByteBufferBenchmark","outputStream","true","true","true","false"
"mosoft521/jodd","jodd.cache.TypeCacheBenchmark","map","true","true","true","false"
"mosoft521/jodd","jodd.cache.TypeCacheBenchmark","syncMap","true","true","true","false"
"mosoft521/jodd","jodd.cache.TypeCacheBenchmark","weakMap","true","true","true","false"
"mosoft521/jodd","jodd.cache.TypeCacheBenchmark","weakSyncMap","true","true","true","false"
"mosoft521/jodd","jodd.cache.TypeCacheBenchmark","smoothieMap","true","true","true","false"
"mosoft521/jodd","jodd.cache.TypeCacheBenchmark","simpleHashMap","true","true","true","false"
"mosoft521/jodd","jodd.cache.TypeCacheBenchmark","timedCache","true","true","true","false"
"mosoft521/jodd","jodd.util.Base64Benchmark","encode_Java_Base64","true","true","true","false"
"mosoft521/jodd","jodd.util.Base64Benchmark","decode_Java_Base64","true","true","true","false"
"mosoft521/jodd","jodd.util.Base64Benchmark","encode_Apache_Base64","true","true","true","false"
"mosoft521/jodd","jodd.util.Base64Benchmark","decode_Apache_Base64","true","true","true","false"
"mosoft521/jodd","jodd.util.Base64Benchmark","encode_Jodd_Base64","true","true","true","false"
"mosoft521/jodd","jodd.util.Base64Benchmark","decode_Jodd_Base64","true","true","true","false"
"mosoft521/jodd","jodd.util.Base32Benchmark","encode_Apache_Base32","true","true","true","false"
"mosoft521/jodd","jodd.util.Base32Benchmark","decode_Apache_Base32","true","true","true","false"
"mosoft521/jodd","jodd.util.Base32Benchmark","encode_Jodd_Base32","true","true","true","false"
"mosoft521/jodd","jodd.util.Base32Benchmark","decode_Jodd_Base32","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringReplaceShortStringNoMatch","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringReplaceLongStringNoMatch","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringReplaceShortStringOneMatch","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringReplaceLongStringOneMatch","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringReplaceShortStringSeveralMatches","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringReplaceLongStringSeveralMatches","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringUtilReplaceShortStringNoMatch","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringUtilReplaceLongStringNoMatch","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringUtilReplaceShortStringOneMatch","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringUtilReplaceLongStringOneMatch","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringUtilReplaceShortStringSeveralMatches","true","true","true","false"
"mosoft521/jodd","jodd.util.StringUtilReplaceBenchmark","stringUtilReplaceLongStringSeveralMatches","true","true","true","false"
"mosoft521/jodd","jodd.util.StringBandBenchmark","string2","true","true","true","false"
"mosoft521/jodd","jodd.util.StringBandBenchmark","stringBand2","true","true","true","false"
"mosoft521/jodd","jodd.util.StringBandBenchmark","string3","true","true","true","false"
"mosoft521/jodd","jodd.util.StringBandBenchmark","stringBand3","true","true","true","false"
"mosoft521/jodd","jodd.util.CharUtilIWhitespaceBenchmark","isWhitespace_Java","true","true","true","false"
"mosoft521/jodd","jodd.util.CharUtilIWhitespaceBenchmark","isWhitespace_Jodd","true","true","true","false"
"mosoft521/jodd","jodd.util.HashCodeBenchmark","hashCode_noInstance","true","true","true","false"
"mosoft521/jodd","jodd.util.HashCodeBenchmark","hashCode_withInstance","true","true","true","false"
"mosoft521/jodd","jodd.lagarto.EmitStringsBenchmark","lagarto_noStrings","true","true","true","false"
"mosoft521/jodd","jodd.lagarto.EmitStringsBenchmark","lagarto_emitStrings","true","true","true","false"
"mosoft521/jodd","jodd.lagarto.EmitStringsBenchmark","lagartoDomBuilder","true","true","true","false"
"puniverse/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsUnbounded","true","true","true","false"
"puniverse/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEventsCount1","true","true","true","false"
"puniverse/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsUnbounded","true","true","true","false"
"puniverse/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEventsCount1","true","true","true","false"
"puniverse/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"puniverse/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"puniverse/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"puniverse/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"puniverse/RxJava","rx.PerfBaseline","observableConsumption","true","true","true","false"
"puniverse/RxJava","rx.PerfBaseline","observableViaRange","true","true","true","false"
"puniverse/RxJava","rx.PerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"puniverse/RxJava","rx.PerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"puniverse/RxJava","rx.PerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"puniverse/RxJava","rx.PerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"puniverse/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"puniverse/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"puniverse/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"puniverse/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"puniverse/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"puniverse/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"puniverse/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"puniverse/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"puniverse/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"puniverse/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"puniverse/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b00sliceZero","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b01customLoopZero","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b02unsafeZero","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b03slice32B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b04customLoop32B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b05unsafe32B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b06slice128B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b07customLoop128B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b08unsafe128B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b09slice512B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b10customLoop512B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b11unsafe512B","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b12slice1K","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b13customLoop1K","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b14unsafe1K","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b15slice1M","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b16customLoop1M","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b17unsafe1M","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b18slice128M","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b19customLoop128M","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.MemoryCopyBenchmark","b20unsafe128M","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hash","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash32","guava","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashInt","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashInt","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashLong","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashLong","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkHashCode","hash","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLengthOfCodePointFromStartByte","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkCountCodePoints","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkOffsetByCodePoints","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkSubstring","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkReverse","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToLowerCase","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToUpperCase","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLeftTrim","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkRightTrim","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkTrim","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkXxHash64","xxhash64","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkXxHash64","specializedHashLong","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash64","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash128","guava","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash128","specializedHashLong","true","true","true","false"
"fengshao0907/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hashLong","true","true","true","false"
"mttkay/RxJava","rx.subjects.ReplaySubjectPerf","subscribeBeforeEvents","true","true","true","false"
"mttkay/RxJava","rx.subjects.ReplaySubjectPerf","subscribeAfterEvents","true","true","true","false"
"mttkay/RxJava","rx.schedulers.ComputationSchedulerPerf","subscribeOn","true","true","true","false"
"mttkay/RxJava","rx.schedulers.ComputationSchedulerPerf","observeOn","true","true","true","false"
"mttkay/RxJava","rx.schedulers.IOSchedulerPerf","subscribeOn","true","true","true","false"
"mttkay/RxJava","rx.schedulers.IOSchedulerPerf","observeOn","true","true","true","false"
"mttkay/RxJava","rx.PerfBaseline","observableConsumption","true","true","true","false"
"mttkay/RxJava","rx.PerfBaseline","observableViaRange","true","true","true","false"
"mttkay/RxJava","rx.PerfBaseline","observableConsumptionUnsafe","true","true","true","false"
"mttkay/RxJava","rx.PerfBaseline","observableViaRangeUnsafe","true","true","true","false"
"mttkay/RxJava","rx.PerfBaseline","iterableViaForLoopConsumption","true","true","true","false"
"mttkay/RxJava","rx.PerfBaseline","iterableViaHasNextConsumption","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorFlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorFlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorSerializePerf","noSerializationSingleThreaded","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorSerializePerf","serializedSingleStream","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsHighlyContended","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsSlightlyContended","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorSerializePerf","serializedTwoStreamsOneFastOneSlow","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorMergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorMergePerf","merge1SyncStreamOfN","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorMergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorMergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorMergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorRangePerf","rangeWithBackpressureRequest","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorRangePerf","rangeWithoutBackpressure","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorMapPerf","mapPassThruViaLift","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorMapPerf","mapPassThru","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorObserveOnPerf","observeOnComputation","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorObserveOnPerf","observeOnNewThread","true","true","true","false"
"mttkay/RxJava","rx.operators.OperatorObserveOnPerf","observeOnImmediate","true","true","true","false"
"mttkay/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAdd","true","true","true","false"
"mttkay/RxJava","rx.internal.IndexedRingBufferPerf","indexedRingBufferAddRemove","true","true","true","false"
"mttkay/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1","true","true","true","false"
"mttkay/RxJava","rx.internal.RxRingBufferPerf","spmcRingBufferAddRemove1000","true","true","true","false"
"mttkay/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1000","true","true","true","false"
"mttkay/RxJava","rx.internal.RxRingBufferPerf","spmcCreateUseAndDestroy1","true","true","true","false"
"mttkay/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1","true","true","true","false"
"mttkay/RxJava","rx.internal.RxRingBufferPerf","spscRingBufferAddRemove1000","true","true","true","false"
"mttkay/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1000","true","true","true","false"
"mttkay/RxJava","rx.internal.RxRingBufferPerf","spscCreateUseAndDestroy1","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b00sliceZero","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b01customLoopZero","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b02unsafeZero","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b03slice32B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b04customLoop32B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b05unsafe32B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b06slice128B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b07customLoop128B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b08unsafe128B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b09slice512B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b10customLoop512B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b11unsafe512B","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b12slice1K","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b13customLoop1K","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b14unsafe1K","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b15slice1M","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b16customLoop1M","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b17unsafe1M","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b18slice128M","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b19customLoop128M","true","true","true","false"
"cberner/slice","io.airlift.slice.MemoryCopyBenchmark","b20unsafe128M","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hash","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash32","guava","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashInt","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashInt","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashLong","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashLong","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkHashCode","hash","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLengthOfCodePointFromStartByte","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkCountCodePoints","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkOffsetByCodePoints","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkSubstring","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkReverse","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToLowerCase","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToUpperCase","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLeftTrim","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkRightTrim","true","true","true","false"
"cberner/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkTrim","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkXxHash64","xxhash64","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkXxHash64","specializedHashLong","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash64","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash128","guava","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash128","specializedHashLong","true","true","true","false"
"cberner/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hashLong","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b00sliceZero","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b01customLoopZero","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b02unsafeZero","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b03slice32B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b04customLoop32B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b05unsafe32B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b06slice128B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b07customLoop128B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b08unsafe128B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b09slice512B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b10customLoop512B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b11unsafe512B","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b12slice1K","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b13customLoop1K","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b14unsafe1K","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b15slice1M","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b16customLoop1M","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b17unsafe1M","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b18slice128M","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b19customLoop128M","true","true","true","false"
"haozhun/slice","io.airlift.slice.MemoryCopyBenchmark","b20unsafe128M","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hash","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash32","guava","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashInt","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashInt","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashLong","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashLong","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkHashCode","hash","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLengthOfCodePointFromStartByte","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkCountCodePoints","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkOffsetByCodePoints","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkSubstring","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkReverse","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToLowerCase","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToUpperCase","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLeftTrim","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkRightTrim","true","true","true","false"
"haozhun/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkTrim","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkXxHash64","xxhash64","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkXxHash64","specializedHashLong","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash64","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash128","guava","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash128","specializedHashLong","true","true","true","false"
"haozhun/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hashLong","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b00sliceZero","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b01customLoopZero","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b02unsafeZero","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b03slice32B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b04customLoop32B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b05unsafe32B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b06slice128B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b07customLoop128B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b08unsafe128B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b09slice512B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b10customLoop512B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b11unsafe512B","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b12slice1K","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b13customLoop1K","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b14unsafe1K","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b15slice1M","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b16customLoop1M","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b17unsafe1M","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b18slice128M","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b19customLoop128M","true","true","true","false"
"drudenko/slice","io.airlift.slice.MemoryCopyBenchmark","b20unsafe128M","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hash","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash32","guava","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashInt","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashInt","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash32","specializedHashLong","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash32","hashLong","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkHashCode","hash","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLengthOfCodePointFromStartByte","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkCountCodePoints","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkOffsetByCodePoints","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkSubstring","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkReverse","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToLowerCase","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkToUpperCase","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkLeftTrim","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkRightTrim","true","true","true","false"
"drudenko/slice","io.airlift.slice.SliceUtf8Benchmark","benchmarkTrim","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkXxHash64","xxhash64","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkXxHash64","specializedHashLong","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash64","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hash","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash128","guava","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash128","specializedHashLong","true","true","true","false"
"drudenko/slice","io.airlift.slice.BenchmarkMurmur3Hash128","hashLong","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"firebase/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"firebase/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"firebase/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"firebase/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"firebase/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"firebase/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"firebase/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"firebase/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"firebase/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"firebase/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"firebase/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"firebase/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"firebase/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"firebase/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"firebase/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"firebase/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"firebase/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.MapPerf","mapPassThruViaLift","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.MapPerf","mapPassThru","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.FlatMapPerf","flatMapIntPassthruSync","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.FlatMapPerf","flatMapIntPassthruAsync","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.FlatMapPerf","flatMapTwoNestedSync","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.MergePerf","oneStreamOfNthatMergesIn1","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.MergePerf","merge1SyncStreamOfN","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.MergePerf","mergeNSyncStreamsOfN","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.MergePerf","mergeNAsyncStreamsOfN","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.MergePerf","mergeTwoAsyncStreamsOfN","true","true","true","false"
"jxqlovejava/RxJavaParallel","rx.internal.operators.MergePerf","mergeNSyncStreamsOf1","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.AsmVsSun","control","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.AsmVsSun","asm","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.AsmVsSun","sun","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.AsmVsSun","normal","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.EventBusPerformance","control","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.EventBusPerformance","eventBusRegister","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.EventBusPerformance","eventManagerRegister","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.EventBusPerformance","eventBusDispatch","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.EventBusPerformance","eventManagerDispatch","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.TickTest","control","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.TickTest","tick","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SubstanceTest","testLowSubstanceSlow","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SubstanceTest","testMidSubstanceSlow","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SubstanceTest","testHighSubstanceSlow","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SubstanceTest","testLowSubstanceFast","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SubstanceTest","testMidSubstanceFast","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SubstanceTest","testHighSubstanceFast","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SubstanceTest","testSlowSubstanceAggregate","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SubstanceTest","testFastSubstanceAggregate","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.SchedulerTest","tick","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.TaskExecTest","control","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.TaskExecTest","tridentExecute","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.TaskExecTest","javaExecute","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.TaskExecTest","tridentThreadExecute","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.MetaTest","map","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.MetaTest","set","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.GenTest","gen","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.CHMTest","control","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.CHMTest","v8CHMPut","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.CHMTest","v8CHMRemove","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.CHMTest","CHMPut","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.CHMTest","CHMRemove","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.PaddingTest","normal","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.PaddingTest","padded","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.DefaultGeneratorTest","testSimplex","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.DefaultGeneratorTest","testSimplex2","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.PlayerThreadTest","benchASingle","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.PlayerThreadTest","benchEvery","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.BenchmarkTemplate","control","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.MapTest","weakPut","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.MapTest","regPut","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.LatchTest","control","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.LatchTest","down","true","true","true","false"
"PizzaCrust/Trident","net.tridentsdk.server.bench.LatchTest","wait","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"Alwayswithme/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"Alwayswithme/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"Alwayswithme/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"Alwayswithme/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"Alwayswithme/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"Alwayswithme/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"Alwayswithme/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"Alwayswithme/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"lznhust/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"lznhust/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"lznhust/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"lznhust/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"lznhust/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark","prioritizeStreams","true","true","true","false"
"lznhust/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"lznhust/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"lznhust/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"lznhust/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"lznhust/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"lznhust/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"lznhust/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"lznhust/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"lznhust/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"lznhust/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"lznhust/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"lznhust/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeData","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark","writeHeaders","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.internal.PlatformDependentBenchmark","unsafeBytesEqual","true","true","true","false"
"wuyinxian124/netty","io.netty.microbench.internal.PlatformDependentBenchmark","arraysBytesEqual","true","true","true","false"
"wuyinxian124/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","put","true","true","true","false"
"wuyinxian124/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","lookup","true","true","true","false"
"wuyinxian124/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark","remove","true","true","true","false"
"wuyinxian124/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"wuyinxian124/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"wuyinxian124/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"wuyinxian124/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.AsmVsSun","control","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.AsmVsSun","asm","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.AsmVsSun","sun","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.AsmVsSun","normal","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.EventBusPerformance","control","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.EventBusPerformance","eventBusRegister","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.EventBusPerformance","eventManagerRegister","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.EventBusPerformance","eventBusDispatch","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.EventBusPerformance","eventManagerDispatch","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.TickTest","control","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.TickTest","tick","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SubstanceTest","testLowSubstanceSlow","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SubstanceTest","testMidSubstanceSlow","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SubstanceTest","testHighSubstanceSlow","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SubstanceTest","testLowSubstanceFast","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SubstanceTest","testMidSubstanceFast","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SubstanceTest","testHighSubstanceFast","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SubstanceTest","testSlowSubstanceAggregate","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SubstanceTest","testFastSubstanceAggregate","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.SchedulerTest","tick","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.TaskExecTest","control","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.TaskExecTest","tridentExecute","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.TaskExecTest","javaExecute","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.TaskExecTest","tridentThreadExecute","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.GenTest","gen","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.CHMTest","control","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.CHMTest","v8CHMPut","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.CHMTest","v8CHMRemove","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.CHMTest","CHMPut","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.CHMTest","CHMRemove","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.PaddingTest","normal","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.PaddingTest","padded","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.DefaultGeneratorTest","testSimplex","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.DefaultGeneratorTest","testSimplex2","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.PlayerThreadTest","benchASingle","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.PlayerThreadTest","benchEvery","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.BenchmarkTemplate","control","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.MapTest","weakPut","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.MapTest","regPut","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.LatchTest","control","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.LatchTest","down","true","true","true","false"
"Twister915/Trident","net.tridentsdk.server.bench.LatchTest","wait","true","true","true","false"
"elandau/grpc-java","io.grpc.AttributesBenchmark","chain","true","true","true","false"
"elandau/grpc-java","io.grpc.AttributesBenchmark","lookup","true","true","true","false"
"elandau/grpc-java","io.grpc.DecompressorRegistryBenchmark","marshalOld","true","true","true","false"
"elandau/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"elandau/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"elandau/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"elandau/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"elandau/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"elandau/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"elandau/grpc-java","io.grpc.CallOptionsBenchmark","withOption","true","true","true","false"
"elandau/grpc-java","io.grpc.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.ChannelzBenchmark","addNavigable","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.ChannelzBenchmark","add","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.ChannelzBenchmark","addServerSocket","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.ChannelzBenchmark","removeNavigable","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.ChannelzBenchmark","remove","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.ChannelzBenchmark","removeServerSocket","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newClientContext","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newServerContext_empty","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","oneRunnableLatency","true","true","true","false"
"elandau/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","manyRunnables","true","true","true","false"
"elandau/grpc-java","io.grpc.AttachDetachBenchmark","attachDetach","true","true","true","false"
"elandau/grpc-java","io.grpc.ReadBenchmark","testContextLookup","true","true","true","false"
"elandau/grpc-java","io.grpc.WriteBenchmark","doWrite","true","true","true","false"
"elandau/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"elandau/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"elandau/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"elandau/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"elandau/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"elandau/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"elandau/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"elandau/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"elandau/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.AttributesBenchmark","chain","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.AttributesBenchmark","lookup","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.DecompressorRegistryBenchmark","marshalOld","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.CallOptionsBenchmark","withOption","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.ChannelzBenchmark","addNavigable","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.ChannelzBenchmark","add","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.ChannelzBenchmark","addServerSocket","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.ChannelzBenchmark","removeNavigable","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.ChannelzBenchmark","remove","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.ChannelzBenchmark","removeServerSocket","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newClientContext","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newServerContext_empty","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","oneRunnableLatency","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","manyRunnables","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.AttachDetachBenchmark","attachDetach","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.ReadBenchmark","testContextLookup","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.WriteBenchmark","doWrite","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"zhangkun83/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.AttributesBenchmark","chain","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.AttributesBenchmark","lookup","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.DecompressorRegistryBenchmark","marshalOld","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.CallOptionsBenchmark","withOption","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.ChannelzBenchmark","addNavigable","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.ChannelzBenchmark","add","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.ChannelzBenchmark","addServerSocket","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.ChannelzBenchmark","removeNavigable","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.ChannelzBenchmark","remove","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.ChannelzBenchmark","removeServerSocket","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newClientContext","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newServerContext_empty","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","oneRunnableLatency","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","manyRunnables","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.AttachDetachBenchmark","attachDetach","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.ReadBenchmark","testContextLookup","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.WriteBenchmark","doWrite","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"carl-mastrangelo/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.AttributesBenchmark","chain","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.AttributesBenchmark","lookup","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.DecompressorRegistryBenchmark","marshalOld","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.CallOptionsBenchmark","withOption","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.ChannelzBenchmark","addNavigable","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.ChannelzBenchmark","add","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.ChannelzBenchmark","addServerSocket","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.ChannelzBenchmark","removeNavigable","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.ChannelzBenchmark","remove","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.ChannelzBenchmark","removeServerSocket","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newClientContext","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newServerContext_empty","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","oneRunnableLatency","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","manyRunnables","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.AttachDetachBenchmark","attachDetach","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.ReadBenchmark","testContextLookup","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.WriteBenchmark","doWrite","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"dapengzhang0/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"ejona86/grpc-java","io.grpc.AttributesBenchmark","chain","true","true","true","false"
"ejona86/grpc-java","io.grpc.AttributesBenchmark","lookup","true","true","true","false"
"ejona86/grpc-java","io.grpc.DecompressorRegistryBenchmark","marshalOld","true","true","true","false"
"ejona86/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"ejona86/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"ejona86/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"ejona86/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"ejona86/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"ejona86/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"ejona86/grpc-java","io.grpc.CallOptionsBenchmark","withOption","true","true","true","false"
"ejona86/grpc-java","io.grpc.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.ChannelzBenchmark","addNavigable","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.ChannelzBenchmark","add","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.ChannelzBenchmark","addServerSocket","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.ChannelzBenchmark","removeNavigable","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.ChannelzBenchmark","remove","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.ChannelzBenchmark","removeServerSocket","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newClientContext","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newServerContext_empty","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","oneRunnableLatency","true","true","true","false"
"ejona86/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","manyRunnables","true","true","true","false"
"ejona86/grpc-java","io.grpc.AttachDetachBenchmark","attachDetach","true","true","true","false"
"ejona86/grpc-java","io.grpc.ReadBenchmark","testContextLookup","true","true","true","false"
"ejona86/grpc-java","io.grpc.WriteBenchmark","doWrite","true","true","true","false"
"ejona86/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"ejona86/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"ejona86/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"ejona86/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"ejona86/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"ejona86/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"ejona86/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"ejona86/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"ejona86/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandConstructionPerfTest","constructHystrixCommandByGroupKeyOnly","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyCommandExecution","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyCommandExecution","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"wangsan/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandConstructionPerfTest","constructHystrixCommandByGroupKeyOnly","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyCommandExecution","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyCommandExecution","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"eunmin/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandConstructionPerfTest","constructHystrixCommandByGroupKeyOnly","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyCommandExecution","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyCommandExecution","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"dmgcodevil/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandConstructionPerfTest","constructHystrixCommandByGroupKeyOnly","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyCommandExecution","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyCommandExecution","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"robertroeser/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandConstructionPerfTest","constructHystrixCommandByGroupKeyOnly","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyCommandExecution","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyCommandExecution","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"agentgt/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandConstructionPerfTest","constructHystrixCommandByGroupKeyOnly","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest","observeCollapsedAndWait","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyCommandExecution","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","writeHeavyReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyCommandExecution","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest","readHeavyReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"ianynchen/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"mauricionr/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"npccsb/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"tromantic/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"JayhJung/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"sposam/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","baseline","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkByteBuddy","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkCglib","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkJavassist","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkJdkProxy","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","baseline","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkByteBuddy","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkByteBuddyWithTypePool","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkCglib","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkJavassist","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkJdkProxy","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","baseline","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddyWithProxy","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddyWithAccessor","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddyWithPrefix","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddySpecialized","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkCglib","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkJavassist","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","baseline","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithProxy","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithProxyAndReusedDelegator","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithProxyWithTypePool","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithProxyAndReusedDelegatorWithTypePool","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithAccessor","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithAccessorAndReusedDelegator","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithAccessorWithTypePool","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithAccessorAndReusedDelegatorWithTypePool","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithPrefix","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithPrefixAndReusedDelegator","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithPrefixWithTypePool","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithPrefixAndReusedDelegatorWithTypePool","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddySpecialized","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkCglib","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkJavassist","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","baseline","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkByteBuddy","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkCglib","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkJavassist","true","true","true","false"
"DALDEI/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkJdkProxy","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"KoltonAndrus/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"jordancheah/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"loop-jazz/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeOnly","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readOnly","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyLatencyAdd","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","writeHeavyReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitLatencyAdd","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","evenSplitReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyLatencyAdd","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest","readHeavyReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeOnly","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readOnly","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyCounterAdd","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","writeHeavyReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitCounterAdd","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","evenSplitReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyCounterAdd","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest","readHeavyReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeOnly","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readOnly","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyUpdateMax","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","writeHeavyReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitUpdateMax","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","evenSplitReadMetrics","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyUpdateMax","true","true","true","false"
"sourceops/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest","readHeavyReadMetrics","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","ping","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","loop","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.latency.spsc.BenchmarkBurstCost","burstCost","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","ping","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","loop","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.baseline.QueueOfferPoll","offerAndPollLoops","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.baseline.SingleThreadedOffer","offerLoop","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.baseline.BaselinePingPong","ping","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.baseline.BaselinePingPong","pong","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.baseline.SingleThreadedPoll","poll","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.baseline.ConcQOfferPoll","offerAndPoll","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","offerNoR","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","pollNoR","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","offerBothR","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","pollBothR","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","offerPR","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","pollPR","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","offerCR","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone","pollCR","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","offer","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","poll","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","offer","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","poll","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","writeBusy","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","readBusy","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","write","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","read","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqDrainFillThroughputBackoffNone","fill","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.MpqDrainFillThroughputBackoffNone","drain","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy","offer","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy","poll","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield","offer","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield","poll","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.collections.SetOps","add","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.collections.SetOps","remove","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.collections.SetOps","contains","true","true","true","false"
"mackstone/JCTools","org.jctools.jmh.collections.SetOps","sum","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.DirectorySizerBench","countFiles","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.MutationBench","serialize","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.MutationBench","deserialize","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest","write","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest","read","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSByte","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPByte","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSInt","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPInt","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSLong","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPLong","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSMixed","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPMixed","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBOS","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBDOSP","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyLegacyWriteUTF","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBOS","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBDOSP","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallLegacyWriteUTF","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBOS","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBDOSP","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeLegacyWriteUTF","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBOS","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBDOSP","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyLegacyWriteUTF","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBOS","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBDOSP","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallLegacyWriteUTF","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBOS","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBDOSP","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeLegacyWriteUTF","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchToken","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchTokenForOldPendingRanges","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.Sample","lz4","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.Sample","snappy","true","true","true","false"
"mike-tr-adamson/cassandra","org.apache.cassandra.test.microbench.CompactionBench","compactTest","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledHeapAllocAndFree","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","unpooledDirectAllocAndFree","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledHeapAllocAndFree","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","pooledDirectAllocAndFree","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledHeapAllocAndFree","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark","defaultPooledDirectAllocAndFree","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetInt","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetShort","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","swappedByteBufSetLong","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetInt","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetShort","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark","unsafeSwappedByteBufSetLong","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArray","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringViaArrayWrapped","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiString","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiStringWrapped","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArray","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiViaArrayWrapped","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAscii","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeAsciiWrapped","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArray","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringViaArrayWrapped","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8String","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8StringWrapped","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArray","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8ViaArrayWrapped","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8","true","true","true","false"
"hyangtack/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark","writeUtf8Wrapped","true","true","true","false"
"hyangtack/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark","testDecodeWholeRequestInMultipleStepsMixedDelimiters","true","true","true","false"
"hyangtack/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","jdkThreadLocalGet","true","true","true","false"
"hyangtack/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark","fastThreadLocal","true","true","true","false"
"hyangtack/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark","recycleSameThread","true","true","true","false"
"hyangtack/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv4","true","true","true","false"
"hyangtack/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useGetByNameIpv6","true","true","true","false"
"hyangtack/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv6","true","true","true","false"
"hyangtack/netty","io.netty.microbenchmark.common.NetUtilBenchmark","useIsValidIpv4","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.DirectorySizerBench","countFiles","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.MutationBench","serialize","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.MutationBench","deserialize","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest","write","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest","read","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSByte","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPByte","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSInt","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPInt","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSLong","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPLong","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSMixed","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPMixed","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBOS","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBDOSP","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyLegacyWriteUTF","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBOS","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBDOSP","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallLegacyWriteUTF","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBOS","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBDOSP","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeLegacyWriteUTF","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBOS","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBDOSP","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyLegacyWriteUTF","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBOS","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBDOSP","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallLegacyWriteUTF","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBOS","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBDOSP","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeLegacyWriteUTF","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchToken","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchTokenForOldPendingRanges","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.Sample","lz4","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.Sample","snappy","true","true","true","false"
"carlyeks/cassandra","org.apache.cassandra.test.microbench.CompactionBench","compactTest","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.AttributesBenchmark","chain","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.AttributesBenchmark","lookup","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.DecompressorRegistryBenchmark","marshalOld","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.CallOptionsBenchmark","withOption","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newClientContext","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newServerContext_empty","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","oneRunnableLatency","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","manyRunnables","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.AttachDetachBenchmark","attachDetach","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.ReadBenchmark","testContextLookup","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.WriteBenchmark","doWrite","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"simonhorlick/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","charArray","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","insert","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","simple","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","advanced","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","simple","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","advanced","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_old","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_current","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","string_getBytes","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","charset_encode","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","encoder_byteBufferReuse","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","utilsDecodeUTF8_old","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","encodingDecodeUTF8_current","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","string_string","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","string_charset","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","decoder_byteBufferReuse","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.BindArray","setObject","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.BindArray","setArray","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.ProcessResultSet","bindExecuteFetch","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.ParseStatement","bindExecuteFetch","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampLocal","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampCal","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsInt","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsBoolean","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","bindBoolean","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement","createAndLeak","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.ProcessBoolean","getBoolean","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatch","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatchWithRewrite","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertExecute","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertStruct","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertCopy","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","baseline","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","createAndClose","true","true","true","false"
"zapov/pgjdbc","org.postgresql.benchmark.escaping.EscapeProcessing","escapeFunctionWithDate","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark","timeSimple","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark","timeDynamicMethodHandle","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark","timeDynamicReflection","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark","timeDynamicUnsafe","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark","timeDynamicGeneration","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark","timePojo","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_singleConsumerArrayObjectQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_singleConsumerArrayObjectQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_SingleConsumerLinkedObjectQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_SingleConsumerLinkedObjectQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_SingleConsumerLinkedArrayObjectQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_SingleConsumerLinkedArrayObjectQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_SingleConsumerArrayIntQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_SingleConsumerArrayIntQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_SingleConsumerLinkedIntQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_SingleConsumerLinkedIntQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_SingleConsumerLinkedArrayIntQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_SingleConsumerLinkedArrayIntQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_ArrayBlockingQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_ArrayBlockingQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_LinkedBlockingQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_LinkedBlockingQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_ConcurrentLinkedQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_ConcurrentLinkedQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","read_LinkedTransferQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark","write_LinkedTransferQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark","read_DelayQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark","write_DelayQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark","read_DelayQueue1","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark","write_DelayQueue1","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark","read_SingleConsumerLinkedObjectQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark","write_SingleConsumerLinkedObjectQueue","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.fibers.FiberOverheadJMHBenchmark","baseline","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.fibers.FiberOverheadJMHBenchmark","fiber","true","true","true","false"
"tbrooks8/quasar","co.paralleluniverse.fibers.FiberOverheadJMHBenchmark","fiberNoPark","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","charArray","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","insert","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","simple","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","advanced","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","simple","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","advanced","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_old","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_current","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","string_getBytes","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","charset_encode","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","encoder_byteBufferReuse","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","utilsDecodeUTF8_old","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","encodingDecodeUTF8_current","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","string_string","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","string_charset","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","decoder_byteBufferReuse","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.BindArray","setObject","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.BindArray","setArray","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.ProcessResultSet","bindExecuteFetch","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.ParseStatement","bindExecuteFetch","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampLocal","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampCal","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsInt","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsBoolean","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","bindBoolean","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement","createAndLeak","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.ProcessBoolean","getBoolean","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatch","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatchWithRewrite","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertExecute","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertStruct","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertCopy","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","baseline","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","createAndClose","true","true","true","false"
"whitingjr/pgjdbc","org.postgresql.benchmark.escaping.EscapeProcessing","escapeFunctionWithDate","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ShortestPathsComparisionBenchmark","_01_benchmark_deltaStepping","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ShortestPathsComparisionBenchmark","_02_benchmark_singleDijkstra","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark","parallelUnionFindQueue_200000","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark","parallelUnionFindQueue_400000","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark","parallelUnionFindQueue_800000","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark","parallelUnionFindForkJoinMerge_400000","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark","parallelUnionFindForkJoinMerge_800000","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark","parallelUnionFindForkJoin_400000","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark","parallelUnionFindForkJoin_800000","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark","sequentialUnionFind","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LabelPropagationBenchmarkLdbc","_01_algo","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LabelPropagationBenchmarkLdbc","_02_apoc","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LabelPropagationBenchmarkLdbc","_03_direct","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MSBFSBenchmark","measureMemory","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmark","run","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmarkLdbc","run","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ShortestPathBenchmark","_01_benchmark","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ClosenessCentralityBenchmark","_01_benchmark","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark","_01_unbufferedUnionFind","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark","_02_bufferedUnionFind","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark","_03_heavyGraphUnionFind","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark","_04_lightGraphUnionFind","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark","_05_buildBufferedDataSource","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark","_06_buildHeavyGraph","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark","_07_buildLightGraph","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.AllShortestPathsComparisionBenchmark","_01_benchmark_ASP","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.AllShortestPathsComparisionBenchmark","_02_benchmark_MS_ASP","true","false","false","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BetweennessComparisionBenchmark","_01_benchmark_sequential","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BetweennessComparisionBenchmark","_04_benchmark_parallel8","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BetweennessComparisionBenchmark","_05_benchmark_sucessorBrandes","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BetweennessCentralityBenchmark","_01_benchmark","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MultistepSCCBenchmark","_01_multistepSCCsequential","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MultistepSCCBenchmark","_02_multistepSCCparallel","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MultistepSCCBenchmark","_03_multistepSCCtarjan","true","true","true","false"
"tomasonjo/neo4j-graph-algorithms","algo.bench.ConnectedComponentsBenchmark","wccCount","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeSearchOfGreekDataPointsMaxChildren004","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeSearchOfGreekDataPointsMaxChildren010","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOfGreekDataPointsMaxChildren004","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOfGreekDataPointsMaxChildren010","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOfGreekDataPointsMaxChildren010WithBackpressure","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeSearchOfGreekDataPointsMaxChildren032","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOfGreekDataPointsMaxChildren032","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeSearchOfGreekDataPointsMaxChildren128","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOfGreekDataPointsMaxChildren128","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeInsertOneEntryInto1000EntriesMaxChildren004","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeSearchOf1000PointsMaxChildren004","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeInsertOneEntryInto1000EntriesMaxChildren010","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeSearchOf1000PointsMaxChildren010","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeInsertOneEntryInto1000EntriesMaxChildren004","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeInsertOneEntryInto1000EntriesMaxChildren010","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOf1000PointsMaxChildren004","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOf1000PointsMaxChildren010","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeInsertOneEntryInto1000EntriesMaxChildren032","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeSearchOf1000PointsMaxChildren032","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeInsertOneEntryInto1000EntriesMaxChildren032","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOf1000PointsMaxChildren032","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeInsertOneEntryInto1000EntriesMaxChildren128","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","defaultRTreeSearchOf1000PointsMaxChildren128","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeInsertOneEntryInto1000EntriesMaxChildren128","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeSearchOf1000PointsMaxChildren128","true","true","true","false"
"branches-cc/rtree","com.github.davidmoten.rtree.BenchmarksRTree","rStarTreeDeleteOneEveryOccurrenceFromGreekDataChildren010","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","charArray","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","insert","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","simple","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","advanced","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","simple","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","advanced","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_old","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_current","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","string_getBytes","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","charset_encode","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","encoder_byteBufferReuse","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","utilsDecodeUTF8_old","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","encodingDecodeUTF8_current","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","string_string","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","string_charset","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding","decoder_byteBufferReuse","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.ProcessResultSet","bindExecuteFetch","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.ParseStatement","bindExecuteFetch","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampLocal","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampCal","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsInt","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsBoolean","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","bindBoolean","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement","createAndLeak","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.ProcessBoolean","getBoolean","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatch","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatchWithRewrite","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertExecute","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertStruct","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertCopy","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","baseline","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","createAndClose","true","true","true","false"
"davecramer/pgjdbc","org.postgresql.benchmark.escaping.EscapeProcessing","escapeFunctionWithDate","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusGaugeIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusGaugeChildIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeChildIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeNoLabelsIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","codahaleCounterIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusGaugeDecBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusGaugeChildDecBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeDecBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeChildDecBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeNoLabelsDecBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","codahaleCounterDecBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusGaugeSetBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusGaugeChildSetBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeSetBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeChildSetBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.GaugeBenchmark","prometheusSimpleGaugeNoLabelsSetBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.CounterBenchmark","prometheusCounterIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.CounterBenchmark","prometheusCounterChildIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.CounterBenchmark","prometheusSimpleCounterIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.CounterBenchmark","prometheusSimpleCounterChildIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.CounterBenchmark","prometheusSimpleCounterNoLabelsIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.CounterBenchmark","codahaleCounterIncBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.CounterBenchmark","codahaleMeterMarkBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","prometheusSummaryBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","prometheusSummaryChildBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","prometheusSimpleSummaryBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","prometheusSimpleSummaryChildBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","prometheusSimpleSummaryNoLabelsBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","prometheusSimpleHistogramBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","prometheusSimpleHistogramChildBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","prometheusSimpleHistogramNoLabelsBenchmark","true","true","true","false"
"kevinyien/client_java","io.prometheus.benchmark.SummaryBenchmark","codahaleHistogramBenchmark","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.SpanBenchmarks","buildLocalSpan","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.SpanBenchmarks","buildClientOnlySpan","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.SpanBenchmarks","buildRpcSpan","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readLocalSpan_json_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readLocalSpan_thrift_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readLocalSpan_thrift_libthrift","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeLocalSpan_json_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeLocalSpan_thrift_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeLocalSpan_thrift_libthrift","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readClientSpan_json_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readClientSpan_thrift_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readClientSpan_thrift_libthrift","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeClientSpan_json_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeClientSpan_thrift_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeClientSpan_thrift_libthrift","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readRpcSpan_json_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readRpcSpan_thrift_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readRpcSpan_thrift_libthrift","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeRpcSpan_json_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeRpcSpan_thrift_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeRpcSpan_thrift_libthrift","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readRpcV6Span_json_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readRpcV6Span_thrift_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","readRpcV6Span_thrift_libthrift","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeRpcV6Span_json_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeRpcV6Span_thrift_zipkin","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.CodecBenchmarks","writeRpcV6Span_thrift_libthrift","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks","writeTo_tinySpan","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks","writeTo_tinySpan_prefixingTimestampMillis_withChannelBuffer","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks","writeTo_tinySpan_prefixingTimestampMillis_withByteArray","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks","writeTo_normalSpan","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks","writeTo_normalSpan_prefixingTimestampMillis_withChannelBuffer","true","true","true","false"
"abesto/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks","writeTo_normalSpan_prefixingTimestampMillis_withByteArray","true","true","true","false"
"sunchao/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"sunchao/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"sunchao/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator","arrayHashCode","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"sunchao/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"sunchao/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"sunchao/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"sunchao/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"sunchao/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"sunchao/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"sunchao/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"sunchao/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"sunchao/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup","benchmark","true","true","true","false"
"sunchao/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.sequence.JmhSequenceBenchmark","incrementAndGet","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.sequence.JmhSequenceBenchmark","getAndIncrement","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.sequence.JmhSequenceBenchmark","addAndGet","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.sequence.JmhSequenceBenchmark","getAndAdd","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.future.JmhFutureAdapterBenchmark","testSimpleGet","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.future.JmhFutureAdapterBenchmark","testSimpleGetWithListener","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.future.JmhFutureAdapterBenchmark","completeFutureGet","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.tree.BPlusTreeBenchmark","get","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.tree.BPlusTreeBenchmark","put","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhWaitStategyBenchmark","put","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark","park","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark","unpark","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark","notifyAll0","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark","wait0","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.encryption.JmhKeystoreEncryptionSpiBenchmark","encryptBenchmark","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheLocksBenchmark","cacheLock","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheLocksBenchmark","igniteLock","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheBenchmark","put","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheBenchmark","get","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.streamer.JmhStreamerAddDataBenchmark","addDataCollection","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.streamer.JmhStreamerAddDataBenchmark","addDataKeyValue","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.misc.JmhIncrementBenchmark","increment","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.misc.JmhIncrementBenchmark","threadLocalIncrement","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.misc.GridDhtPartitionsStateValidatorBenchmark","testValidatePartitionsUpdateCounters","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.misc.GridDhtPartitionsStateValidatorBenchmark","testValidatePartitionsSizes","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.algo.BenchmarkCRC","pureJavaCrc32","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.algo.BenchmarkCRC","crc32","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.collections.SmallHashSetsVsReadOnlyViewBenchmark","hashSetContainsRandom","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.collections.SmallHashSetsVsReadOnlyViewBenchmark","readOnlyViewContainsRandom","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.collections.SmallHashSetsVsReadOnlyViewBenchmark","hashSetIteratorRandom","true","true","true","false"
"chandresh-pancholi/ignite","org.apache.ignite.internal.benchmarks.jmh.collections.SmallHashSetsVsReadOnlyViewBenchmark","readOnlyViewIteratorRandom","true","true","true","false"
"zsurocking/grpc-java","io.grpc.DecompressorRegistryBenchmark","marshalOld","true","true","true","false"
"zsurocking/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"zsurocking/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"zsurocking/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"zsurocking/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"zsurocking/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"zsurocking/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark","withOption","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"zsurocking/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"zsurocking/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newClientContext","true","true","true","false"
"zsurocking/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newServerContext_empty","true","true","true","false"
"zsurocking/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","oneRunnableLatency","true","true","true","false"
"zsurocking/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","manyRunnables","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"zsurocking/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench","doMinMaxInJava","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench","doMinMaxWithInterOp","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.virtual.bench.PartialEscapeBench","benchPartialEscape","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark","setAgeCond","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark","getAge","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark","getAndIncAge","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark","normalArraycopy","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark","arraysCopyOf","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark","cloneObjectArray","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.TestJMH","testJMH","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark","nullness","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark","search","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark","nullness","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark","search","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","getNodeClass","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","inputs","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","usages","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","nodeBitmap","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueEquals_STRING_EQUALS","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueEquals_HASHMAP_COMPUTE_IF_ABSENT","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueNumberLeaf_HASHMAP_COMPUTE_IF_ABSENT","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueNumberLeaf_STRING_EQUALS","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","stringEquals","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","cfgCompute1","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","cfgCompute2","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","cfgCompute3","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","cfgCompute4","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_LATEST_OPTIMAL","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_LATEST_OUT_OF_LOOPS_OPTIMAL","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_EARLIEST_OPTIMAL","true","true","true","false"
"davleopo/graal-core","com.oracle.graal.microbenchmarks.graal.FrameStateAssigmentPhaseBenchmark","nextToken","true","true","true","false"
"nmittler/grpc-java","io.grpc.DecompressorRegistryBenchmark","marshalOld","true","true","true","false"
"nmittler/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"nmittler/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"nmittler/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"nmittler/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"nmittler/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"nmittler/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark","withOption","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"nmittler/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"nmittler/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newClientContext","true","true","true","false"
"nmittler/grpc-java","io.grpc.internal.StatsTraceContextBenchmark","newServerContext_empty","true","true","true","false"
"nmittler/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","oneRunnableLatency","true","true","true","false"
"nmittler/grpc-java","io.grpc.internal.SerializingExecutorBenchmark","manyRunnables","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"nmittler/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.thrift.PooledResponseBufferBenchmark","pooled","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.thrift.PooledResponseBufferBenchmark","unpooled","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.client.endpoint.DnsEndpointGroupBenchmark","resolveLocalhost","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","sameWeight","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMainly1Max30","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMax10","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMax100","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","unique","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.client.retry.BackoffBenchmark","exponential","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.client.retry.RetryingHttpClientBase","empty","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.core.HttpServerBenchmark","empty","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.retrofit2.shared.SimpleBenchmarkBase","empty","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","normal","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","normal_cacheDisabled","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","cachedAndNotCached","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","cachedAndNotCached_cacheDisabled","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","simpleMatch","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","simpleNotMatch","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","complexMatch","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","complexNotMatch","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","all","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","noExecutor","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","jmhEventLoop","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","notJmhEventLoop","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.HttpHeadersBenchmark","parseKnown","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.common.HttpHeadersBenchmark","parseUnknown","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.grpc.downstream.LargePayloadBenchmark","normal","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","simple","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","simpleNonBlocking","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","empty","true","true","true","false"
"trustin/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","emptyNonBlocking","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSByte","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPByte","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSInt","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPInt","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSLong","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPLong","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSMixed","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPMixed","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBOS","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBDOSP","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyLegacyWriteUTF","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBOS","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBDOSP","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallLegacyWriteUTF","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBOS","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBDOSP","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeLegacyWriteUTF","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBOS","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBDOSP","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyLegacyWriteUTF","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBOS","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBDOSP","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallLegacyWriteUTF","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBOS","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBDOSP","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeLegacyWriteUTF","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchToken","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench","searchTokenForOldPendingRanges","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.Sample","lz4","true","true","true","false"
"tjake/cassandra","org.apache.cassandra.test.microbench.Sample","snappy","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.instrumentation.DigestUtilsPerfTest","sha256Hex","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.instrumentation.DigestUtilsPerfTest","baseline","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.instrumentation.asm.ClassInstrumenterPerfTest","instrument","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.instrumentation.asm.ClassAnalyzerPerfTest","parse","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.invocationsequence.InvocationHookPerfTest","startAnInvocation","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.invocationsequence.InvocationHookPerfTest","startAnInvocationPlusMethod","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest","baseline","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest","parameterIsSpanStore","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest","tracerIsNotActive","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest","tracerIsActive","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookWithInvocationPerfTest","measureMethodWithStartedInvocation","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookWithInvocationPerfTest","measureMethodWithinInvocationNoThreadCPU","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest","measureMethod","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest","measureMethodWithReturnValueCapturing","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest","measureMethodWithParameterValueCapturing","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest","measureMethodNoThreadCPU","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest","findBaseline","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest","findExact","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest","findStartWith","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest","testDiagnosisServiceWithIterativeInvocationSequences","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest","testDiagnosisServiceWithRecursiveInvocationSequences","true","true","true","false"
"ivansenic/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest","testDiagnosisServiceWithNplusOneProblem","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.thrift.PooledResponseBufferBenchmark","pooled","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.thrift.PooledResponseBufferBenchmark","unpooled","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.core.client.endpoint.DnsEndpointGroupBenchmark","resolveLocalhost","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","sameWeight","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMainly1Max30","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMax10","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMax100","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","unique","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.core.client.retry.RetryingHttpClientBase","empty","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.core.HttpServerBenchmark","empty","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.retrofit2.shared.SimpleBenchmarkBase","empty","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","normal","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","normal_cacheDisabled","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","cachedAndNotCached","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","cachedAndNotCached_cacheDisabled","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","simpleMatch","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","simpleNotMatch","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","complexMatch","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","complexNotMatch","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.MediaTypesBenchmark","all","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","noExecutor","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","jmhEventLoop","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","notJmhEventLoop","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.HttpHeadersBenchmark","parseKnown","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.common.HttpHeadersBenchmark","parseUnknown","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.grpc.downstream.LargePayloadBenchmark","normal","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","simple","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","simpleNonBlocking","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","empty","true","true","true","false"
"kojilin/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","emptyNonBlocking","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.instrumentation.DigestUtilsPerfTest","sha256Hex","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.instrumentation.DigestUtilsPerfTest","baseline","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.instrumentation.asm.ClassInstrumenterPerfTest","instrument","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.instrumentation.asm.ClassAnalyzerPerfTest","parse","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.invocationsequence.InvocationHookPerfTest","startAnInvocation","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.invocationsequence.InvocationHookPerfTest","startAnInvocationPlusMethod","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest","baseline","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest","parameterIsSpanStore","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest","tracerIsNotActive","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest","tracerIsActive","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookWithInvocationPerfTest","measureMethodWithStartedInvocation","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookWithInvocationPerfTest","measureMethodWithinInvocationNoThreadCPU","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest","measureMethod","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest","measureMethodWithReturnValueCapturing","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest","measureMethodWithParameterValueCapturing","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest","measureMethodNoThreadCPU","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest","findBaseline","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest","findExact","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest","findStartWith","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest","testDiagnosisServiceWithIterativeInvocationSequences","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest","testDiagnosisServiceWithRecursiveInvocationSequences","true","true","true","false"
"mariusoe/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest","testDiagnosisServiceWithNplusOneProblem","true","true","true","false"
"toyama0919/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","read","true","true","true","false"
"toyama0919/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark","write","true","true","true","false"
"toyama0919/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"toyama0919/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"toyama0919/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"toyama0919/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"toyama0919/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"toyama0919/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"toyama0919/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"toyama0919/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"toyama0919/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"toyama0919/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSByte","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPByte","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSInt","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPInt","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSLong","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPLong","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSMixed","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPMixed","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBOS","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBDOSP","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyLegacyWriteUTF","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBOS","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBDOSP","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallLegacyWriteUTF","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBOS","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBDOSP","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeLegacyWriteUTF","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBOS","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBDOSP","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyLegacyWriteUTF","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBOS","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBDOSP","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallLegacyWriteUTF","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBOS","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBDOSP","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeLegacyWriteUTF","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.Sample","lz4","true","true","true","false"
"gdusbabek/cassandra","org.apache.cassandra.test.microbench.Sample","snappy","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","charArray","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","insert","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","simple","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","advanced","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","simple","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","advanced","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_old","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_current","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","string_getBytes","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","charset_encode","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","encoder_byteBufferReuse","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.ProcessResultSet","bindExecuteFetch","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.ParseStatement","bindExecuteFetch","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampLocal","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampCal","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsInt","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsBoolean","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","bindBoolean","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement","createAndLeak","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.ProcessBoolean","getBoolean","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatch","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatchWithRewrite","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertExecute","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertStruct","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertCopy","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","baseline","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","createAndClose","true","true","true","false"
"panchenko/pgjdbc","org.postgresql.benchmark.escaping.EscapeProcessing","escapeFunctionWithDate","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorOptimisedBenchmark","test1Producer","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorOptimisedBenchmark","test2Producers","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorOptimisedBenchmark","test3Producers","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorBenchmark","test1Producer","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorBenchmark","test2Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorBenchmark","test3Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToOneLinkedQueueBenchmark","test1Producer","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToOneLinkedQueueBenchmark","test2Producers","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToOneLinkedQueueBenchmark","test3Producers","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.A1BaselineBenchmark","test1Producer","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.ConcurrentLinkedQueueBenchmark","test1Producer","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.ConcurrentLinkedQueueBenchmark","test2Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.ConcurrentLinkedQueueBenchmark","test3Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LinkedBlockingQueueBenchmark","test1Producer","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LinkedBlockingQueueBenchmark","test2Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LinkedBlockingQueueBenchmark","test3Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToManyArrayQueueBenchmark","test1Producer","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToManyArrayQueueBenchmark","test2Producers","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToManyArrayQueueBenchmark","test3Producers","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToOneArrayQueueBenchmark","test1Producer","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToOneArrayQueueBenchmark","test2Producers","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.LocklessManyToOneArrayQueueBenchmark","test3Producers","","","","true"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.ArrayBlockingQueueBenchmark","test1Producer","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.ArrayBlockingQueueBenchmark","test2Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.ArrayBlockingQueueBenchmark","test3Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.AeronIpcBenchmark","test1Producer","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.AeronIpcBenchmark","test2Producers","true","true","true","false"
"mikeb01/benchmarks","uk.co.real_logic.benchmarks.latency.AeronIpcBenchmark","test3Producers","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSByte","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPByte","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSInt","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPInt","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSLong","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPLong","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBOSMixed","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testBDOSPMixed","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBOS","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyStringBDOSP","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMTinyLegacyWriteUTF","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBOS","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallStringBDOSP","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMSmallLegacyWriteUTF","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBOS","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeStringBDOSP","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testMLargeLegacyWriteUTF","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBOS","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyStringBDOSP","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testTinyLegacyWriteUTF","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBOS","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallStringBDOSP","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testSmallLegacyWriteUTF","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBOS","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeStringBDOSP","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench","testRLargeLegacyWriteUTF","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.Sample","lz4","true","true","true","false"
"sluk3r/cassandra","org.apache.cassandra.test.microbench.Sample","snappy","true","true","true","false"
"anuraaga/grpc-java","io.grpc.DecompressorRegistryBenchmark","dynamicAcceptEncoding","true","true","true","false"
"anuraaga/grpc-java","io.grpc.DecompressorRegistryBenchmark","staticAcceptEncoding","true","true","true","false"
"anuraaga/grpc-java","io.grpc.StatusBenchmark","messageEncodePlain","true","true","true","false"
"anuraaga/grpc-java","io.grpc.StatusBenchmark","messageEncodeEscape","true","true","true","false"
"anuraaga/grpc-java","io.grpc.StatusBenchmark","messageDecodePlain","true","true","true","false"
"anuraaga/grpc-java","io.grpc.StatusBenchmark","messageDecodeEscape","true","true","true","false"
"anuraaga/grpc-java","io.grpc.StatusBenchmark","codeEncode","true","true","true","false"
"anuraaga/grpc-java","io.grpc.StatusBenchmark","codeDecode","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark","withOption","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"anuraaga/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertClientHeaders","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","convertServerHeaders","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.OutboundHeadersBenchmark","encodeClientHeaders","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_serverHandler","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_serverHandler","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.InboundHeadersBenchmark","grpcHeaders_clientHandler","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.InboundHeadersBenchmark","defaultHeaders_clientHandler","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","old","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","transportSpecific","true","true","true","false"
"anuraaga/grpc-java","io.grpc.netty.MethodDescriptorBenchmark","direct","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.clique.MaximalCliqueEnumerationPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphVSStaticGraphPerformanceTest$DynamicCycleDetectorRandomGraphBenchmark","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphVSStaticGraphPerformanceTest$StaticGraphWithCycleDetectorRandomGraphBenchmark","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","generateGraphBenchmark","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","graphPerformanceBenchmark","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatchingPerformanceTest","testBlossomV","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.matching.MaximumCardinalityBipartiteMatchingPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.matching.PathGrowingWeightedMatchingPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.lca.LowestCommonAncestorAlgorithmPerformanceTest$RandomTreeBenchmarkBase","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.lca.LowestCommonAncestorAlgorithmPerformanceTest$RandomForestBenchmarkBase","run","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingGnm","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraGnm","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordGnm","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingGnp","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraGnp","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordGnp","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingBarabasiAlbert","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraBarabasiAlbert","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordBarabasiAlbert","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingWattsStogatz","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraWattsStogatz","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordWattsStogatz","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingComplete","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraComplete","true","true","true","false"
"besza/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordComplete","true","true","true","false"
"erichwang/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"erichwang/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"erichwang/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"erichwang/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"erichwang/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"erichwang/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"erichwang/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"erichwang/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"erichwang/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"erichwang/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"jf367/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"jf367/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"jf367/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"jf367/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"jf367/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"jf367/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"jf367/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"jf367/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"jf367/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"jf367/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"DavideD/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"lingochamp/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"lingochamp/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"lingochamp/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"lingochamp/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"lingochamp/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"lingochamp/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"lingochamp/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"lingochamp/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"lingochamp/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"lingochamp/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"kietly/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"kietly/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"kietly/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"kietly/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"kietly/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"kietly/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"kietly/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"kietly/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"kietly/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"kietly/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"tellproject/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"tellproject/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"tellproject/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"tellproject/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"tellproject/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"tellproject/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"tellproject/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"tellproject/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"tellproject/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"tellproject/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"jhalliday/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"mpilman/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct","arrayDistinct","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"mpilman/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"mpilman/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark","benchmark","true","true","true","false"
"mpilman/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","rowOriented","true","true","true","false"
"mpilman/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOriented","true","true","true","false"
"mpilman/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark","columnOrientedDictionary","true","true","true","false"
"mpilman/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"mpilman/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"mpilman/presto","com.facebook.presto.execution.BenchmarkNodeScheduler","benchmark","true","true","true","false"
"mpilman/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.clique.MaximalCliqueEnumerationPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphVSStaticGraphPerformanceTest$DynamicCycleDetectorRandomGraphBenchmark","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphVSStaticGraphPerformanceTest$StaticGraphWithCycleDetectorRandomGraphBenchmark","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","generateGraphBenchmark","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","graphPerformanceBenchmark","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatchingPerformanceTest","testBlossomV","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.matching.MaximumCardinalityBipartiteMatchingPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.matching.PathGrowingWeightedMatchingPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.lca.LowestCommonAncestorAlgorithmPerformanceTest$RandomTreeBenchmarkBase","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.lca.LowestCommonAncestorAlgorithmPerformanceTest$RandomForestBenchmarkBase","run","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingGnm","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraGnm","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordGnm","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingGnp","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraGnp","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordGnp","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingBarabasiAlbert","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraBarabasiAlbert","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordBarabasiAlbert","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingWattsStogatz","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraWattsStogatz","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordWattsStogatz","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDeltaSteppingComplete","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testDijkstraComplete","true","true","true","false"
"jkinable/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance","testBellmanFordComplete","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"mp911de/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","ping","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","loop","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.latency.spsc.BenchmarkBurstCost","burstCost","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","ping","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","loop","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.baseline.QueueOfferPoll","offerAndPollLoops","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.baseline.SingleThreadedOffer","offerLoop","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.baseline.BaselinePingPong","ping","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.baseline.BaselinePingPong","pong","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.baseline.SingleThreadedPoll","poll","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.baseline.ConcQOfferPoll","offerAndPoll","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","offer","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","poll","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","offer","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","poll","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","writeBusy","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","readBusy","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","write","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","read","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy","offer","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy","poll","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield","offer","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield","poll","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.collections.SetOps","add","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.collections.SetOps","remove","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.collections.SetOps","contains","true","true","true","false"
"thomasdarimont/JCTools","org.jctools.jmh.collections.SetOps","sum","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"tempbottle/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"gunnarmorling/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"uugaa/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.DateBenchmark","genericDate","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.DateBenchmark","internationalDateFull","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark","format","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark","formatCompactLength","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark","formatSequenceLength1","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark","formatSequenceLength2","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark","formatSequenceLength3","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.FormatBenchmark","format","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.plugins.platform.i18n.FormatBenchmark","plural","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.ExecutorBenchmark","variableInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.ExecutorBenchmark","dotVariableInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.ExecutorBenchmark","formatterInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.ExecutorBenchmark","sectionInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.ExecutorBenchmark","repeatedSectionInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.ExecutorBenchmark","ifInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.ExecutorBenchmark","simpleTemplate","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.FormatterBenchmark","embeddedTemplate","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.FormatterBenchmark","nativeFormatter","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.WrightBenchmark","compile","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.WrightBenchmark","execute","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.CompilerBenchmark","variableInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.CompilerBenchmark","dotVariableInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.CompilerBenchmark","formatterInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.CompilerBenchmark","sectionInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.CompilerBenchmark","repeatedSectionInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.CompilerBenchmark","ifInst","true","true","true","false"
"phensley/template-compiler","com.squarespace.template.CompilerBenchmark","simpleTemplate","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"ZJaffee/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"hferentschik/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdate","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_025","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_050","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark","combinedFindAndUpdateWithThreadCount_100","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingIdentity","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequence","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_025","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_050","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesUsingSequenceWithThreadCount_100","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityById","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQuery","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingNativeQueryWithManualFlushing","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpql","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark","findEntityByPropertyUsingJpqlNamedQuery","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntities","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulking","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_025","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_050","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesUsingBulkingWithThreadCount_100","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark","insertEntitiesWithElementCollection","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityById","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark","findEntityByProperty","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark","getEntitiesWithAssociationById","true","true","true","false"
"Sanne/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark","insertEntitiesWithAssociation","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.TimeParseBenchmark","parseNoContext","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.TimeParseBenchmark","parseWithContext","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.DimensionPredicateFilterBenchmark","matchIsEven","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalLongs","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalFloats","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalStrings","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"KurtYoung/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"KurtYoung/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureCostStrategySingle","true","true","true","false"
"KurtYoung/druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark","measureIntervalPenalty","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","ping","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","loop","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","ping","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","loop","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.baseline.QueueOfferPoll","offerAndPollLoops","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.baseline.SingleThreadedOffer","offerLoop","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.baseline.BaselinePingPong","ping","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.baseline.BaselinePingPong","pong","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.baseline.SingleThreadedPoll","poll","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.baseline.ConcQOfferPoll","offerAndPoll","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","offer","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","poll","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","offer","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","poll","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","writeBusy","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","readBusy","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","write","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","read","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy","offer","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy","poll","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield","offer","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield","poll","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.collections.SetOps","add","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.collections.SetOps","remove","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.collections.SetOps","contains","true","true","true","false"
"akarnokd/JCTools","org.jctools.jmh.collections.SetOps","sum","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench","doMinMaxInJava","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench","doMinMaxWithInterOp","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.virtual.bench.PartialEscapeBench","benchPartialEscape","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark","setAgeCond","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark","getAge","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark","getAndIncAge","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark","normalArraycopy","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark","arraysCopyOf","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark","cloneObjectArray","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.TestJMH","testJMH","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark","nullness","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark","search","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark","nullness","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark","search","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","getNodeClass","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","inputs","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","usages","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueEquals_STRING_EQUALS","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueEquals_HASHMAP_COMPUTE_IF_ABSENT","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueNumberLeaf_HASHMAP_COMPUTE_IF_ABSENT","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark","valueNumberLeaf_STRING_EQUALS","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","stringEquals","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_LATEST_OPTIMAL","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_LATEST_OUT_OF_LOOPS_OPTIMAL","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark","intersection_EARLIEST_OPTIMAL","true","true","true","false"
"rschatz/graal-core","com.oracle.graal.microbenchmarks.graal.FrameStateAssigmentPhaseBenchmark","nextToken","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","ping","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups","loop","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","ping","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups","loop","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.baseline.QueueOfferPoll","offerAndPollLoops","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.baseline.SingleThreadedOffer","offerLoop","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.baseline.BaselinePingPong","ping","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.baseline.BaselinePingPong","pong","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.baseline.SingleThreadedPoll","poll","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.baseline.ConcQOfferPoll","offerAndPoll","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","offer","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone","poll","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","offer","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone","poll","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","writeBusy","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","readBusy","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","write","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest","read","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy","offer","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy","poll","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield","offer","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield","poll","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.collections.SetOps","add","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.collections.SetOps","remove","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.collections.SetOps","contains","true","true","true","false"
"fengjiachun/JCTools","org.jctools.jmh.collections.SetOps","sum","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.thrift.PooledResponseBufferBenchmark","pooled","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.thrift.PooledResponseBufferBenchmark","unpooled","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","sameWeight","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMainly1Max30","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMax10","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","randomMax100","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark","unique","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.core.HttpServerBenchmark","empty","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.retrofit2.shared.SimpleBenchmarkBase","empty","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","normal","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","normal_cacheDisabled","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","cachedAndNotCached","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.internal.PathParsingBenchmark","cachedAndNotCached_cacheDisabled","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","noExecutor","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","jmhEventLoop","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","notJmhEventLoop","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","writeFirst","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","writeLast","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark","writeOnDemand","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.common.HttpHeadersBenchmark","parseKnown","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.common.HttpHeadersBenchmark","parseUnknown","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.grpc.downstream.LargePayloadBenchmark","normal","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","simple","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","simpleNonBlocking","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","empty","true","true","true","false"
"minwoox/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase","emptyNonBlocking","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.ProfilerBenchmarks","testOneMethodSingleThread","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods01Thread","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods02Threads","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods04Threads","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods08Threads","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods16Threads","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.StringOpBenchmarks","testStringBuilder","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.StringOpBenchmarks","testStringPlus","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.StringOpBenchmarks","testStrCat","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrumentedMethod","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodSampled","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln1","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln1Sampled","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln2","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln3","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln24","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testMethod","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrDuration","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrDurationSampled","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testInstrDurationSampledAdaptive","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testSendCommand","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testSampleHit10","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testSampleHit50","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.BTraceBench","testSampleHit100","true","true","true","false"
"chosen0ne/btrace","net.java.btrace.StatsdBenchmarks","testGauge_1","true","true","true","false"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorFlatMapPerf","flatMapIntPassthruSync","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorFlatMapPerf","flatMapIntPassthruAsync","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorFlatMapPerf","flatMapTwoNestedSync","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorMergePerf","oneStreamOfNthatMergesIn1","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorMergePerf","merge1SyncStreamOfN","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorMergePerf","mergeNSyncStreamsOfN","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorMergePerf","mergeNAsyncStreamsOfN","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorMergePerf","mergeTwoAsyncStreamsOfN","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.OperatorMergePerf","mergeNSyncStreamsOf1","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.EachTypeFlatMapPerf","bpRange","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.EachTypeFlatMapPerf","bpRangeMapJust","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.EachTypeFlatMapPerf","bpRangeMapRange","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.EachTypeFlatMapPerf","nbpRange","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.EachTypeFlatMapPerf","nbpRangeMapJust","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.EachTypeFlatMapPerf","nbpRangeMapRange","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.EachTypeFlatMapPerf","singleJust","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.EachTypeFlatMapPerf","singleJustMapJust","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.RxVsStreamPerf","range","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.RxVsStreamPerf","rangeNbp","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.RxVsStreamPerf","rangeFlatMap","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.RxVsStreamPerf","rangeNbpFlatMap","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.RxVsStreamPerf","rangeFlatMapJust","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.RxVsStreamPerf","rangeNbpFlatMapJust","","","","true"
"akarnokd/rxjava2-backport","hu.akarnokd.rxjava2.RangePerf","rangeSync","","","","true"
"rspieldenner/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T1","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T1","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T2","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T2","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T4","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T4","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T8","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T8","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_10","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_100","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_1000","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_02","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_05","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_10","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_100","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_1000","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T1","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T2","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T4","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T8","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T1","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T2","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T4","true","true","true","false"
"rspieldenner/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T8","true","true","true","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","readAllObjects","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","vectorizedReadAllObjects","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","readAllPrimitives","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","vectorizedReadAllPrimitives","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","readOnePrimitive","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","vectorizedReadOnePrimitive","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","readFourPrimitives","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","vectorizedReadFourPrimitives","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","readFixedLenByteArray","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.VectorizedReadBenchmarks","vectorizedReadFixedLenByteArray","","","","true"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS4MUncompressed","true","true","true","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS8MUncompressed","true","true","true","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS4MUncompressed","true","true","true","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS8MUncompressed","true","true","true","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeUncompressed","true","false","false","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS4MUncompressed","true","false","false","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS8MUncompressed","true","false","false","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS4MUncompressed","true","false","false","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS8MUncompressed","true","false","false","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeSNAPPY","true","false","false","false"
"zhenxiao/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeGZIP","true","false","false","false"
"sunios/btrace","net.java.btrace.ProfilerBenchmarks","testOneMethodSingleThread","true","true","true","false"
"sunios/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods01Thread","true","true","true","false"
"sunios/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods02Threads","true","true","true","false"
"sunios/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods04Threads","true","true","true","false"
"sunios/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods08Threads","true","true","true","false"
"sunios/btrace","net.java.btrace.ProfilerBenchmarks","testTwoMethods16Threads","true","true","true","false"
"sunios/btrace","net.java.btrace.StringOpBenchmarks","testStringBuilder","true","true","true","false"
"sunios/btrace","net.java.btrace.StringOpBenchmarks","testStringPlus","true","true","true","false"
"sunios/btrace","net.java.btrace.StringOpBenchmarks","testStrCat","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrumentedMethod","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodSampled","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln1","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln1Sampled","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln2","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln3","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testMethod","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrDuration","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrDurationSampled","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testInstrDurationSampledAdaptive","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testSendCommand","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testSampleHit10","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testSampleHit50","true","true","true","false"
"sunios/btrace","net.java.btrace.BTraceBench","testSampleHit100","true","true","true","false"
"sunios/btrace","net.java.btrace.StatsdBenchmarks","testGauge_1","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.suite.ClaimRelease","cycle","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.suite.CostBaseline","allocationCostBaseline","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.suite.CostBaseline","deallocationCostBaseline","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.suite.CostBaseline","validationCostBaseline","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining","baseline","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining","computeA","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining","computeB","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining","computeC","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining","computeD","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation","getSetSet","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation","newObject","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation","claimReleaseWithReturn","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation","claimReleaseWithoutReturn","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation","returnSim","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","AtomicInteger_compareAndSet","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","AtomicInteger_compareAndSetAndLazySet","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","AtomicInteger_compareAndSetAndSet","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","AtomicInteger_compareAndSetAndWeakCompareAndSet","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","AtomicInteger_weakCompareAndSetAndWeakCompareAndSet","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","AtomicInteger_weakCompareAndSetAndLazySet","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","ThreadLocal_get","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","BlazePool_claimRelease","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark","BlazePool_claimRelease_withBH","true","true","true","false"
"brettwooldridge/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.HashMapGet","get","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","snakeYaml","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","boon","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","jackson","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","jacksonWithCBytes","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","jacksonWithTextCBytes","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","bson","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","bsonWithCBytes","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","sbe","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","externalizable","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain","externalizableWithCBytes","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","twireUTF","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","twire8bit","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","bwireFFF","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","bwireFTF","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","bwireFTT","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","bwireTFF","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","bwireTTF","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","rwire8bit","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","rwireUTF","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","rwire8bit2","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","bytesMarshallableStopBit","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","bytesMarshallable","true","true","true","false"
"bowlofstew/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main","json8bit","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","charArray","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros","insert","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","simple","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.time.TimestampToTime","advanced","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","simple","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.time.TimestampToDate","advanced","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_old","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_current","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","string_getBytes","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","charset_encode","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","encoder_byteBufferReuse","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.ProcessResultSet","bindExecuteFetch","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.ParseStatement","bindExecuteFetch","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampLocal","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp","timestampCal","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsInt","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","boolAsBoolean","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.BindBoolean","bindBoolean","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement","createAndLeak","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertBatch","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.statement.InsertBatch","insertExecute","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","baseline","true","true","true","false"
"phillipross/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","createAndClose","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T1","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T1","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T2","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T2","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T4","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T4","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T8","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T8","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_10","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_100","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_1000","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_10","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_100","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_1000","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T1","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T2","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T4","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T8","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T1","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T2","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T4","true","true","true","false"
"cfieber/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T8","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T1","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T1","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T2","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T2","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T4","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T4","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T8","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T8","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_10","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_100","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Merge","treeMerge_1000","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_10","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_100","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Merge","avlMerge_1000","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T1","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T2","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T4","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Record","defaultRecord_T8","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T1","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T2","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T4","true","true","true","false"
"dmuino/spectator","com.netflix.spectator.tdigest.Record","digestRecord_T8","true","true","true","false"
"mcanthony/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"mcanthony/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"mcanthony/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"mcanthony/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"mcanthony/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"toxeh/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"toxeh/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"toxeh/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"toxeh/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"toxeh/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"fipar/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"fipar/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"fipar/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"fipar/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"fipar/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"shubham166/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"shubham166/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"shubham166/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"shubham166/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"shubham166/presto","com.facebook.presto.BenchmarkHashPagePartitionFunction","runBenchmark","true","true","true","false"
"Zutai/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"Zutai/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"Zutai/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"Zutai/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"Zutai/presto","com.facebook.presto.BenchmarkHashPagePartitionFunction","runBenchmark","true","true","true","false"
"pdeva/druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"pdeva/druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"pdeva/druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"pdeva/druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"pdeva/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"pdeva/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"pdeva/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"pdeva/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"pdeva/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"pdeva/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalLongs","true","true","true","false"
"pdeva/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalFloats","true","true","true","false"
"pdeva/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalStrings","true","true","true","false"
"pdeva/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"pdeva/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"pdeva/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"pdeva/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"pdeva/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"pdeva/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"pdeva/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"pdeva/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"pdeva/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"rasahner/druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"rasahner/druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"rasahner/druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"rasahner/druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"rasahner/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"rasahner/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"rasahner/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"rasahner/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"rasahner/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"rasahner/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalLongs","true","true","true","false"
"rasahner/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalFloats","true","true","true","false"
"rasahner/druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark","normalStrings","true","true","true","false"
"rasahner/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingLexicographic","true","true","true","false"
"rasahner/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfLexicographic","true","true","true","false"
"rasahner/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingLexicographic","true","true","true","false"
"rasahner/druid","io.druid.benchmark.BoundFilterBenchmark","matchNothingAlphaNumeric","true","true","true","false"
"rasahner/druid","io.druid.benchmark.BoundFilterBenchmark","matchHalfAlphaNumeric","true","true","true","false"
"rasahner/druid","io.druid.benchmark.BoundFilterBenchmark","matchEverythingAlphaNumeric","true","true","true","false"
"rasahner/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"rasahner/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"rasahner/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"vermaravikant/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLength","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStart","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLength","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartFromEnd","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkSubstringStartLengthFromEnd","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkReverse","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLeftTrim","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkRightTrim","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkTrim","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkUpper","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark","benchmarkLower","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark","benchmarkLike","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"siddhartharay007/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet","benchmarkBuilder","true","true","true","false"
"jiakuan/commonmark-java","org.commonmark.integration.PegDownBenchmark","wholeSpec","true","true","true","false"
"jiakuan/commonmark-java","org.commonmark.integration.PegDownBenchmark","examples","true","true","true","false"
"jiakuan/commonmark-java","org.commonmark.test.SpecBenchmark","wholeSpec","true","true","true","false"
"jiakuan/commonmark-java","org.commonmark.test.SpecBenchmark","examples","true","true","true","false"
"chiwanpark/commonmark-java","org.commonmark.integration.PegDownBenchmark","wholeSpec","true","true","true","false"
"chiwanpark/commonmark-java","org.commonmark.integration.PegDownBenchmark","examples","true","true","true","false"
"chiwanpark/commonmark-java","org.commonmark.test.SpecBenchmark","wholeSpec","true","true","true","false"
"chiwanpark/commonmark-java","org.commonmark.test.SpecBenchmark","examples","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkByteBuddy","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkCglib","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkJavassist","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkJdkProxy","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkByteBuddy","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkCglib","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkJavassist","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkJdkProxy","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddyWithAnnotations","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddySpecialized","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkCglib","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkJavassist","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithAnnotations","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddySpecialized","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkCglib","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkJavassist","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkByteBuddy","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkCglib","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkJavassist","true","true","true","false"
"PascalSchumacher/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkJdkProxy","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkByteBuddy","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkCglib","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkJavassist","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkJdkProxy","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkByteBuddy","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkCglib","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkJavassist","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkJdkProxy","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddyWithAnnotations","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddySpecialized","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkCglib","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkJavassist","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithAnnotations","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddySpecialized","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkCglib","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkJavassist","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkByteBuddy","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkCglib","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkJavassist","true","true","true","false"
"vic/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkJdkProxy","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkByteBuddy","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkCglib","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkJavassist","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark","benchmarkJdkProxy","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkByteBuddy","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkCglib","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkJavassist","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark","benchmarkJdkProxy","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddyWithAnnotations","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkByteBuddySpecialized","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkCglib","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark","benchmarkJavassist","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddyWithAnnotations","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkByteBuddySpecialized","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkCglib","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark","benchmarkJavassist","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkByteBuddy","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkCglib","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkJavassist","true","true","true","false"
"RobAustin/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark","benchmarkJdkProxy","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddVertex","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testVertexProperty","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddEdge","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testEdgeProperty","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddV","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testVertexPropertyStep","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddE","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testEdgePropertyStep","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_outE_inV_outE_inV_outE_inV","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_out_out","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_out_out_path","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_repeatXoutX_timesX2X","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_repeatXoutX_timesX3X","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_localXout_out_valuesXnameX_foldX","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_localXout_out_valuesXnameX_foldX","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_mapXout_out_valuesXnameX_toListX","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_label_groupCount","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_match_selectXbX_valuesXnameX","true","true","true","false"
"mike-tr-adamson/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_E_hasLabelXwrittenByX_whereXinV_inEXsungByX_count_isX0XX_subgraphXsgX","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddVertex","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testVertexProperty","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddEdge","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testEdgeProperty","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddV","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testVertexPropertyStep","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testAddE","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark","testEdgePropertyStep","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_outE_inV_outE_inV_outE_inV","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_out_out","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_out_out_path","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_repeatXoutX_timesX2X","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_repeatXoutX_timesX3X","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_localXout_out_valuesXnameX_foldX","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_localXout_out_valuesXnameX_foldX","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_out_mapXout_out_valuesXnameX_toListX","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_label_groupCount","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_V_match_selectXbX_valuesXnameX","true","true","true","false"
"newkek/incubator-tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark","g_E_hasLabelXwrittenByX_whereXinV_inEXsungByX_count_isX0XX_subgraphXsgX","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkLazySet","measureUnshared","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkLazySet","measureShared","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkVolatile","measureUnshared","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkVolatile","measureShared","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkPlain","measureUnshared","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkPlain","measureShared","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.LoopyBenchmarks","goodOldLoop","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.LoopyBenchmarks","sweetLoop","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.LoopyBenchmarks","goodOldLoopReturns","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.LoopyBenchmarks","sumOldLoop","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.LoopyBenchmarks","sumSweetLoop","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.BaselineBenchmarks","noop","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.BaselineBenchmarks","increment","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.BaselineBenchmarks","incrementConsume","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.BaselineBenchmarks","consume","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.BaselineBenchmarks","consumeAdd","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.utf8.Utf8EncodingBenchmark","customEncoder","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.utf8.Utf8EncodingBenchmark","stringGetBytes","true","true","true","false"
"achmadns/jmh-samples","psy.lob.saw.utf8.Utf8EncodingBenchmark","charsetEncoder","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Get","testAdd_1thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Get","testAdd_2thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Get","testAdd_4thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testAdd_1thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testRemoveLRU_1thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testGet_1thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testGet_2thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testAdd_2thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testRemoveLRU_2thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testGet_4thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testAdd_4thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex","testRemoveLRU_4thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddDifferentValues","testAdd_1thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddDifferentValues","testAdd_2thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddDifferentValues","testAdd_4thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddSameValue","testAdd_1thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddSameValue","testAdd_2thread","true","true","true","false"
"PhantomYdn/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddSameValue","testAdd_4thread","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.HashBenchmark","commonsCodecMd5","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.HashBenchmark","commonsCodecSha1","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash32","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash32Jni","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash32Unsafe","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash64","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash64Jni","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash64Unsafe","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","container","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","delimiters","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","codedstream_container","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","codedstream_container_known_size","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","codedstream_delimiters","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_gson","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_protobuf","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_serializable","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_externalizable","true","true","true","false"
"jblievremont/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_kryo","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.HashBenchmark","commonsCodecMd5","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.HashBenchmark","commonsCodecSha1","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash32","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash32Jni","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash32Unsafe","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash64","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash64Jni","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.HashBenchmark","xxhash64Unsafe","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","container","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","delimiters","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","codedstream_container","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","codedstream_container_known_size","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark","codedstream_delimiters","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_gson","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_protobuf","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_serializable","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_externalizable","true","true","true","false"
"abbeyj/sonarqube","org.sonar.microbenchmark.SerializationBenchmark","write_kryo","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark","threads1hot","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark","threads2hot","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark","threads4hot","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark","threads8hot","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark","threads16hot","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark","threads32hot","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark","thinkReadHot","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark","thinkWriteCold","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferCursorSeekBenchmark","seekBeginning","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferCursorSeekBenchmark","seekEnd","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferCursorSeekBenchmark","seekForward","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.BufferCursorSeekBenchmark","seekBackward","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.GetByteBenchmark","getByteBeginning","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.GetByteBenchmark","getByteEnd","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.GetByteBenchmark","getByteMiddle","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.IndexOfElementBenchmark","indexOfByte","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.IndexOfElementBenchmark","indexOfByteString","true","true","true","false"
"seven332/okio","com.squareup.okio.benchmarks.IndexOfElementBenchmark","indexOfElement","true","true","true","false"
"lotusws/btrace","net.java.btrace.StringOpBenchmarks","testStringBuilder","true","true","true","false"
"lotusws/btrace","net.java.btrace.StringOpBenchmarks","testStringPlus","true","true","true","false"
"lotusws/btrace","net.java.btrace.StringOpBenchmarks","testStrCat","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrumentedMethod","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodSampled","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln1","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln1Sampled","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln2","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrumentedMethodPrintln3","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testMethod","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrDuration","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrDurationSampled","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testInstrDurationSampledAdaptive","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testSendCommand","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testSampleHit10","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testSampleHit50","true","true","true","false"
"lotusws/btrace","net.java.btrace.BTraceBench","testSampleHit100","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark","proxy_voidMethod","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark","proxy_nonPrims","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark","proxy_prims","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark","proxy_passThrough","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark","proxy_passThrough_ctor_cached","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark","incdec_increment","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark","incdec_decrement","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark","incdec_noop","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","proxy_voidMethod","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","proxy_nonPrims","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","proxy_prims","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","proxy_passThrough","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","proxy_passThrough_ctor","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","proxy_passThrough_ctor_cached","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","incdec_increment","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","incdec_decrement","true","true","true","false"
"rschmitt/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark","incdec_noop","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithNoHierarchyAndOneHandler","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithHierarchyAndOneHandler","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithManySubclassListeners","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithMixedCalls","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithFiftyListeners","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithNoHierarchyAndOneHandler","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithHierarchyAndOneHandler","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithManySubclassListeners","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithMixedCalls","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithFiftyListeners","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","quad_tree_get_point_benchmark","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","quad_tree_get_exact_point_benchmark","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","quad_tree_get_benchmark","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","quad_tree_get_exact_benchmark","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","linear_point_benchmark","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","linear_benchmark","true","true","true","false"
"ThaBalla1148/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeInsertBenchmark","quad_tree_insert_benchmark","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","directSupplier","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","protectedSupplier","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","protectedSupplierWithSubscriber","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.ratelimiter.RateLimiterBenchmark","semaphoreBasedPermission","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.ratelimiter.RateLimiterBenchmark","atomicPermission","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark","directSupplier","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark","protectedSupplier","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark","protectedSupplierWithSubscriber","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circuitbreaker.internal.RingBitSetBenchmark","concurrentCardinality","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueueAdd","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueueSize","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueuePoll","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueuePeek","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferAddEvent","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferToList","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferSize","true","true","true","false"
"goldobin/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferTakeEvent","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","directSupplier","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","protectedSupplier","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","protectedSupplierWithSubscriber","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.ratelimiter.RateLimiterBenchmark","semaphoreBasedPermission","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.ratelimiter.RateLimiterBenchmark","atomicPermission","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark","directSupplier","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark","protectedSupplier","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark","protectedSupplierWithSubscriber","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circuitbreaker.internal.RingBitSetBenchmark","concurrentCardinality","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueueAdd","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueueSize","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueuePoll","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueuePeek","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferAddEvent","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferToList","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferSize","true","true","true","false"
"mehtabsinghmann/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferTakeEvent","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark","addAttributes","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark","addAnnotation","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark","addNetworkEvent","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark","addLink","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.StartEndSpanBenchmark","startEndNonSampledRootSpan","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.StartEndSpanBenchmark","startEndRecordEventsRootSpan","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.StartEndSpanBenchmark","startEndSampledRootSpan","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.StartEndSpanBenchmark","startEndNonSampledChildSpan","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.StartEndSpanBenchmark","startEndRecordEventsChildSpan","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.StartEndSpanBenchmark","startEndSampledChildSpan","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.propagation.BinaryPropagationImplBenchmark","toBinaryValueSpanContext","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.propagation.BinaryPropagationImplBenchmark","fromBinaryValueSpanContext","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.propagation.BinaryPropagationImplBenchmark","toFromBinarySpanContext","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark","addAttributes","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark","addAnnotation","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark","addNetworkEvent","true","true","true","false"
"ubschmidt2/instrumentation-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark","addLink","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithNoHierarchyAndOneHandler","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithHierarchyAndOneHandler","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithManySubclassListeners","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithMixedCalls","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithFiftyListeners","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithNoHierarchyAndOneHandler","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithHierarchyAndOneHandler","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithManySubclassListeners","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithMixedCalls","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithFiftyListeners","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","quad_tree_get_point_benchmark","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","quad_tree_get_exact_point_benchmark","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","quad_tree_get_benchmark","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","quad_tree_get_exact_benchmark","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","linear_point_benchmark","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark","linear_benchmark","true","true","true","false"
"piotr-j/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeInsertBenchmark","quad_tree_insert_benchmark","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark","builtInSerializer","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark","bufferedSerializer","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark","bufferedRecycledSerializer","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","baseline","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_deserialize_1_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_serialize_1_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_deserialize_10_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_serialize_10_int_fields","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_sparse_deserialize_1_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_sparse_serialize_1_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_sparse_deserialize_10_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_sparse_serialize_10_int_fields","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","generated_deserialize_1_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","generated_serialize_1_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","generated_deserialize_10_int_field","true","true","true","false"
"dyu/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","generated_serialize_10_int_field","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.XorTest","testArrayBytes","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.XorTest","testArrayLongs","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.XorTest","testDirectBytes","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.XorTest","testDirectLongs","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.BufferedVectorOperationTest","testArrayAddition","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.BufferedVectorOperationTest","testArrayDivision","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.BufferedVectorOperationTest","testArrayBufferAddition","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.BufferedVectorOperationTest","testArrayBufferDivision","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.BufferedVectorOperationTest","testDirectBufferAddition","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.BufferedVectorOperationTest","testDirectBufferDivision","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.BiArrayAllocationTest","testPreAllocated","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.BiArrayAllocationTest","testNewlyAllocated","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.ArrayAllocationTest","testPreAllocated","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.ArrayAllocationTest","testNewlyAllocated","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.SourceBlockEncodingTest","test","true","true","true","false"
"bdobyns/OpenRQ","net.fec.openrq.SourceBlockDecodingTest","test","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T1","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T1","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T2","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T2","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T4","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T4","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Counters","cachedIncrement_T8","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Counters","lookupIncrement_T8","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Ids","justName","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Ids","baseline","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Ids","withTag","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Ids","withTagsVararg","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Ids","withTagsMap","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Ids","append1","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Ids","append2","true","true","true","false"
"pstout/spectator","com.netflix.spectator.perf.Ids","append4","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.mapdb.JMHMapDbTokyoCabinetWriteBenchmark","successiveWrite","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.mapdb.JMHMapDbTokyoCabinetWriteBenchmark","randomWrite","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.mapdb.JMHMapDbTokyoCabinetReadBenchmark","successiveRead","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.mapdb.JMHMapDbTokyoCabinetReadBenchmark","randomRead","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.env.JMHEnvTokyoCabinetReadBenchmark","successiveRead","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.env.JMHEnvTokyoCabinetReadBenchmark","randomRead","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.env.JMHEnvTokyoCabinetWriteBenchmark","successiveWrite","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.env.JMHEnvTokyoCabinetWriteBenchmark","randomWrite","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetReadBenchmark","successiveRead","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetReadBenchmark","randomRead","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetWriteBenchmark","successiveWrite","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetWriteBenchmark","randomWrite","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.dataStructures.JMHObjectCacheBenchmark","cacheTryKey","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.dataStructures.JMHObjectCacheBenchmark","cacheTryMissingKey","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.dataStructures.JMHHashMapBenchmark","hashMapGet","true","true","true","false"
"morj/xodus","jetbrains.exodus.benchmark.dataStructures.JMHHashMapBenchmark","hashMapGetMissingKey","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark","builtInSerializer","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark","bufferedSerializer","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark","bufferedRecycledSerializer","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","baseline","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_deserialize_1_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_serialize_1_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_deserialize_10_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_serialize_10_int_fields","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_sparse_deserialize_1_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_sparse_serialize_1_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_sparse_deserialize_10_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","runtime_sparse_serialize_10_int_fields","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","generated_deserialize_1_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","generated_serialize_1_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","generated_deserialize_10_int_field","true","true","true","false"
"myxyz/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark","generated_serialize_10_int_field","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark","stateSetExplicitlyInStateRepository","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark","stateNotSet","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","aSimpleBooleanIfStatement","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","featureManagerStateLookup","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","isActiveMethodOnEnum","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","scriptEngineThatAlwaysReturnsTrue","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","scriptEngineDoingDynamicThings","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","disabledFeatureWithNoScriptEngineInvolved","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark","alwaysOnActivationStrategyBenchMark","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark","systemPropertyActivationStrategyBenchMark","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.FeatureStateBenchmarks","releaseDateStrategyEnabled","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.FeatureStateBenchmarks","releaseDateStrategyConfiguredButNotEnabled","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.FeatureStateBenchmarks","noFeatureStateSetBaseline","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.FeatureStateBenchmarks","disabledByAFeatureStateExplicitly","true","true","true","false"
"fabito/togglz","org.togglz.benchmark.FeatureStateBenchmarks","enabledByDefaultByAnAnnotation","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineExecute","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineQueue","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineSyncObserve","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncComputationObserve","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","baselineAsyncCustomThreadPoolObserve","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixExecute","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixQueue","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixObserve","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest","hystrixToObservable","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyCommandExecution","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","writeHeavyReadMetrics","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsCommandExecution","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","evenSplitOfWritesAndReadsReadMetrics","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyCommandExecution","true","true","true","false"
"gorcz/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest","readHeavyReadMetrics","true","true","true","false"
"louiscryan/grpc-java","io.grpc.DecompressorRegistryBenchmark","dynamicAcceptEncoding","true","true","true","false"
"louiscryan/grpc-java","io.grpc.DecompressorRegistryBenchmark","staticAcceptEncoding","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark","withOption","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark","withOptionDuplicates","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"louiscryan/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"louiscryan/grpc-java","io.grpc.netty.HeadersBenchmark","convertClientHeaders","true","true","true","false"
"louiscryan/grpc-java","io.grpc.netty.HeadersBenchmark","convertServerHeaders","true","true","true","false"
"louiscryan/grpc-java","io.grpc.netty.HeadersBenchmark","encodeClientHeaders","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark","stateSetExplicitlyInStateRepository","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark","stateNotSet","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","aSimpleBooleanIfStatement","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","featureManagerStateLookup","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","isActiveMethodOnEnum","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","scriptEngineThatAlwaysReturnsTrue","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","scriptEngineDoingDynamicThings","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","disabledFeatureWithNoScriptEngineInvolved","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark","alwaysOnActivationStrategyBenchMark","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark","systemPropertyActivationStrategyBenchMark","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.FeatureStateBenchmarks","releaseDateStrategyEnabled","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.FeatureStateBenchmarks","releaseDateStrategyConfiguredButNotEnabled","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.FeatureStateBenchmarks","noFeatureStateSetBaseline","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.FeatureStateBenchmarks","disabledByAFeatureStateExplicitly","true","true","true","false"
"DealerDotCom/togglz","org.togglz.benchmark.FeatureStateBenchmarks","enabledByDefaultByAnAnnotation","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.adapter.enumerable.CodeGenerationBenchmark","getBindableNoCache","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.adapter.enumerable.CodeGenerationBenchmark","getBindableWithCache","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.AbstractRelNodeGetRelTypeNameBenchmark","useStringLastIndexOfTwoTimesV1","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.AbstractRelNodeGetRelTypeNameBenchmark","useStringLastIndexOfTwoTimeV2","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.AbstractRelNodeGetRelTypeNameBenchmark","useCustomLastIndexOf","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.StatementTest","prepareBindExecute","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.StatementTest","bindExecute","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.StatementTest","executeQuery","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.StatementTest","forEach","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.ParserBenchmark","parseCached","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.ParserBenchmark","parseNonCached","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.StringConstructBenchmark","initStringBuilder","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.StringConstructBenchmark","initStringWriter","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.StringConstructBenchmark","initPrintWriter","true","true","true","false"
"julianhyde/calcite","org.apache.calcite.benchmarks.StringConstructBenchmark","appendString","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark","stateSetExplicitlyInStateRepository","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark","stateNotSet","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","aSimpleBooleanIfStatement","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","featureManagerStateLookup","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","isActiveMethodOnEnum","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","scriptEngineThatAlwaysReturnsTrue","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","scriptEngineDoingDynamicThings","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","disabledFeatureWithNoScriptEngineInvolved","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark","alwaysOnActivationStrategyBenchMark","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark","systemPropertyActivationStrategyBenchMark","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.FeatureStateBenchmarks","releaseDateStrategyEnabled","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.FeatureStateBenchmarks","releaseDateStrategyConfiguredButNotEnabled","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.FeatureStateBenchmarks","noFeatureStateSetBaseline","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.FeatureStateBenchmarks","disabledByAFeatureStateExplicitly","true","true","true","false"
"hexmind/togglz","org.togglz.benchmark.FeatureStateBenchmarks","enabledByDefaultByAnAnnotation","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","directSupplier","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","protectedSupplier","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark","protectedSupplierWithSubscriber","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.ratelimiter.RateLimiterBenchmark","semaphoreBasedPermission","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.ratelimiter.RateLimiterBenchmark","atomicPermission","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark","directSupplier","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark","protectedSupplier","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueueAdd","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueueSize","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueuePoll","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark","concurrentEvictingQueuePeek","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferAddEvent","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferToList","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferSize","true","true","true","false"
"drmaas/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark","circularBufferTakeEvent","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark","stateSetExplicitlyInStateRepository","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark","stateNotSet","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","aSimpleBooleanIfStatement","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","featureManagerStateLookup","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.TogglzOverheadBenchmark","isActiveMethodOnEnum","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","scriptEngineThatAlwaysReturnsTrue","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","scriptEngineDoingDynamicThings","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark","disabledFeatureWithNoScriptEngineInvolved","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark","alwaysOnActivationStrategyBenchMark","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark","systemPropertyActivationStrategyBenchMark","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.FeatureStateBenchmarks","releaseDateStrategyEnabled","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.FeatureStateBenchmarks","releaseDateStrategyConfiguredButNotEnabled","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.FeatureStateBenchmarks","noFeatureStateSetBaseline","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.FeatureStateBenchmarks","disabledByAFeatureStateExplicitly","true","true","true","false"
"paychex/togglz","org.togglz.benchmark.FeatureStateBenchmarks","enabledByDefaultByAnAnnotation","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.jna.CryptoJnaBenchmark","RandomTestOpensslJNA","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.jna.CryptoJnaBenchmark","RandomCreateOpensslJNA","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.jna.CryptoJnaBenchmark","CipherCreateOpensslJna","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.jna.CryptoJnaBenchmark","CipherTestOpensslJna","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","RandomCreateOS","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","RandomCreateJava","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","RandomCreateOpenssl","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","RandomTestOS","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","RandomTestJava","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","RandomTestOpenssl","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","CipherCreateJce","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","CipherTestJce","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","CipherCreateOpenssl","true","true","true","false"
"kexianda/commons-crypto","org.apache.commons.crypto.CryptoBenchmark","CipherTestOpenssl","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS4MUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS8MUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS4MUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS8MUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS4MUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS8MUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS4MUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS8MUncompressed","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"cchang738/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS4MUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS8MUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS4MUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS8MUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS4MUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS8MUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS4MUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS8MUncompressed","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"saucam/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","linked_list_add","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","array_list_add","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","consp_plus","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","treePVector_plus","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","hashSet_plus","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","hashTreePMap_plus","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","intTreePMap_plus","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","contains","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","_notContains","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","get","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","iterator","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","put","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","mapContainsKey","true","true","true","false"
"ilya-g/pcollections","org.pcollections.benchmark.Benchmarks","mapNotContainsKey","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","linked_list_add","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","array_list_add","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","consp_plus","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","treePVector_plus","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","hashSet_plus","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","hashTreePMap_plus","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","intTreePMap_plus","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","contains","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","_notContains","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","get","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","iterator","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","put","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","mapContainsKey","true","true","true","false"
"juszczakn/pcollections","org.pcollections.benchmark.Benchmarks","mapNotContainsKey","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS4MUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS8MUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS4MUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS8MUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS4MUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS8MUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS4MUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS8MUncompressed","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"winningsix/incubator-parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS4MUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS8MUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS4MUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS8MUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS4MUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS8MUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS4MUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS8MUncompressed","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"piyushnarang/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS4MUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS256MPS8MUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS4MUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsBS512MPS8MUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.ReadBenchmarks","read1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS4MUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS256MPS8MUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS4MUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsBS512MPS8MUncompressed","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeSNAPPY","true","true","true","false"
"nitin2goyal/parquet-mr-1","org.apache.parquet.benchmarks.WriteBenchmarks","write1MRowsDefaultBlockAndPageSizeGZIP","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.NameDiscovererBenchmark","nOpBenchmark","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.NameDiscovererBenchmark","stackTraceMethod","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.NameDiscovererBenchmark","stackTraceMethodWithError","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.NameDiscovererBenchmark","throwableGetStackTrace","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.NameDiscovererBenchmark","sleep10msec","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.LogwBenchmark","nOpBenchmark","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.LogwBenchmark","logwWithOutput","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.LogwBenchmark","logwWithoutOutput","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.LogwBenchmark","slf4jWithOutput","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.LogwBenchmark","slf4jWithoutOutput","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.LogwBenchmark","slf4jPlusGuardWithOutput","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.LogwBenchmark","slf4jPlusGuardWithoutOutput","true","true","true","false"
"atomfrede/logw","eu.sajato.logw.LogwBenchmark","sleep10msec","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.CreateObject","createObjectWithConstructor","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.CreateObject","createObjectWithMungedConstructor","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.CreateObject","createObjectWithMungedConstructorRaw","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.CreateObject","createObjectWithMungedConstructorRawAndCast","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.CreateObject","createObjectWithUnsafe","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.CreateObject","createObjectWithUnsafeRaw","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.CreateObject","createObjectWithUnsafeRawAndCast","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.CreateObject","createObjectWithUnsafeRawException","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator","std","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator","single","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator","custom","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator","cachedStd","true","true","true","false"
"irudyak/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator","uncachedStd","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.FlattenJSONBenchmark","baseline","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.FlattenJSONBenchmark","flatten","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.FlattenJSONBenchmark","preflattenNestedParser","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.FlattenJSONBenchmark","forcedRootPaths","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"mangeshpardeshiyahoo/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.StatusUpdateBenchmark","runBenchmark","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetRoleSummaryBenchmark","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetAllTasksBenchmark","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.StateManagerBenchmarks$InsertPendingTasksBenchmark","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.StateManagerBenchmarks$DeleteTasksBenchmark","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.SnapshotBenchmarks$RestoreSnapshotWithUpdatesBenchmark","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.SchedulingBenchmarks$AbstractBase","runBenchmark","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.TaskStoreBenchmarks$FetchAll","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.TaskStoreBenchmarks$IndexedFetchAndFilter","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobDetailsBenchmark","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobInstructionsBenchmark","run","true","true","true","false"
"thinker0/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobUpdateMetadataBenchmark","run","true","true","true","false"
"girirajsharma/elasticsearch","org.elasticsearch.benchmark.routing.allocation.AllocationBenchmark","measureAllocation","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark","baseline","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark","getMemoryStats_01","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark","getMemoryStats_02","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark","getMemoryStats_04","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark","getMemoryStats_08","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark","getMemoryStats_16","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark","getMemoryStats_32","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark","getMemoryStats_64","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.routing.allocation.AllocationBenchmark","measureAllocation","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.fs.AvailableIndexFoldersBenchmark","availableIndexFolderNaive","true","true","true","false"
"martijnvg/elasticsearch","org.elasticsearch.benchmark.fs.AvailableIndexFoldersBenchmark","availableIndexFolderOptimized","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"mwassil/inspectIT","info.novatec.inspectit.agent.perf.InvocationSequenceTests","startAnInvocation","","","","true"
"mwassil/inspectIT","info.novatec.inspectit.agent.perf.InvocationSequenceTests","startAnInvocationNoPut","","","","true"
"mwassil/inspectIT","info.novatec.inspectit.agent.perf.ConcurrentHashMapTests","put","","","","true"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","shallowSmallBlocks","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","shallowBigBlocks","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","deepSmallBlocks","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","deepBigBlocks","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","insertionBig","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","insertionSmall","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","replaceBig","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","replaceSmall","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark","replaceALot","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.sl.test.SLPolyglotEngineValueExecuteBenchmark","executePlus","true","true","true","false"
"jtulach/truffle","com.oracle.truffle.sl.test.SLPolyglotEngineValueExecuteBenchmark","executePlusDirectly","true","true","true","false"
"danielmitterdorfer/elasticsearch","org.elasticsearch.benchmark.routing.allocation.AllocationBenchmark","measureAllocation","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","parse","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","write","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","search","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","parallelSearch","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","inferBibDatabaseMode","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","latexToUnicodeConversion","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","latexToHTMLConversion","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","htmlToLatexConversion","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","keywordGroupContains","true","true","true","false"
"tschechlovdev/jabref","net.sf.jabref.benchmarks.Benchmarks","keywordGroupContainsWord","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_old","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_current","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","string_getBytes","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","charset_encode","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","encoder_byteBufferReuse","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.statement.ParseStatement","bindExecuteFetch","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement","createAndLeak","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.core.Parser","unmarkDoubleQuestion","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","baseline","true","true","true","false"
"underyx/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","createAndClose","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_old","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","utilsEncodeUTF8_current","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","string_getBytes","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","charset_encode","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding","encoder_byteBufferReuse","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.statement.ParseStatement","bindExecuteFetch","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement","createAndLeak","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.core.Parser","unmarkDoubleQuestion","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","baseline","true","true","true","false"
"alexismeneses/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","createAndClose","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithNoHierarchyAndOneHandler","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithHierarchyAndOneHandler","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithManySubclassListeners","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithMixedCalls","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark","eventWithFiftyListeners","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithNoHierarchyAndOneHandler","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithHierarchyAndOneHandler","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithManySubclassListeners","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithMixedCalls","true","true","true","false"
"antag99/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark","eventWithFiftyListeners","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.AsyncBenchmarks","asyncMethodWithoutSleuth","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.AsyncBenchmarks","asyncMethodWithSleuth","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.RestTemplateBenchmark","syncEndpointWithoutSleuth","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.RestTemplateBenchmark","syncEndpointWithSleuth","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.AnnotationBenchmarks","manuallyCreatedSpans","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.AnnotationBenchmarks","spanCreatedWithAnnotations","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.HttpFilterBenchmarks","filterWithoutSleuth","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.HttpFilterBenchmarks","filterWithSleuth","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.HttpFilterBenchmarks","asyncWithoutSleuth","true","true","true","false"
"marcingrzejszczak/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.HttpFilterBenchmarks","asyncWithSleuth","true","true","true","false"
"ydai1124/gobblin-1","gobblin.crypto.EncodingBenchmark","write1KRecordsNewBase64","true","true","true","false"
"ydai1124/gobblin-1","gobblin.crypto.EncodingBenchmark","write1KRecordsBase64Only","true","true","true","false"
"ydai1124/gobblin-1","gobblin.crypto.EncodingBenchmark","write1KRecordsDirectCipherStream","true","true","true","false"
"ydai1124/gobblin-1","gobblin.writer.FineGrainedWatermarkTrackerBenchmark","trackImmediateAcks","true","true","true","false"
"ydai1124/gobblin-1","gobblin.writer.FineGrainedWatermarkTrackerBenchmark","trackWithDelayedAcks","true","true","true","false"
"ydai1124/gobblin-1","gobblin.writer.FineGrainedWatermarkTrackerBenchmark","scheduledDelayedAcks","true","true","true","false"
"ydai1124/gobblin-1","gobblin.writer.FineGrainedWatermarkTrackerBenchmark","scheduledNoRandomDelayedAcks","true","true","true","false"
"ydai1124/gobblin-1","gobblin.runtime.fork.SynchronousForkBenchmark","putRecord","true","true","true","false"
"ydai1124/gobblin-1","gobblin.runtime.fork.AsynchronousForkBenchmark","putRecord","true","true","true","false"
"ydai1124/gobblin-1","gobblin.runtime.fork.AsynchronousForkBenchmark","processRecord","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.clique.MaximalCliqueEnumerationPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphVSStaticGraphPerformanceTest$DynamicCycleDetectorRandomGraphBenchmark","run","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphVSStaticGraphPerformanceTest$StaticGraphWithCycleDetectorRandomGraphBenchmark","run","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","generateGraphBenchmark","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","graphPerformanceBenchmark","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.matching.MaximumCardinalityBipartiteMatchingPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"agdphd/jgrapht","org.jgrapht.perf.matching.PathGrowingWeightedMatchingPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedWithLotsOfItemsValidation","testCascadedValidationWithLotsOfItems","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedValidation","testCascadedValidation","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedWithLotsOfItemsAndMoreConstraintsValidation","testCascadedValidationWithLotsOfItems","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.simple.SimpleValidation","testSimpleBeanValidation","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.unconstrained.UnconstrainedBeanValidation","testUnconstrainedBeanValidation","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.statistical.StatisticalValidation","testValidationWithStatisticalGraphDepthAndConstraintValidator","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.simple.SimpleComposingConstraintValidation","testSimpleComposingConstraintValidation","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.multilevel.MultiLevelContainerValidation","testMultiLevelPreGeneratedValidation","true","true","true","false"
"marko-bekhta/hibernate-validator","org.hibernate.validator.performance.multilevel.MultiLevelContainerValidation","testMultiLevelPreGeneratedWithRandomRuntimeContainersValidation","true","true","true","false"
"johngmyers/airlift","io.airlift.concurrent.BenchmarkWhenAnyCompleteCancelOthers","benchmark","true","true","true","false"
"johngmyers/airlift","io.airlift.stats.cardinality.BenchmarkSparseHll","benchmarkInsert","true","true","true","false"
"johngmyers/airlift","io.airlift.stats.cardinality.BenchmarkDenseHll","benchmarkInsert","true","true","true","false"
"johngmyers/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkInserts","true","true","true","false"
"johngmyers/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkCopy","true","true","true","false"
"johngmyers/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkMerge","true","true","true","false"
"johngmyers/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkDeserialize","true","true","true","false"
"johngmyers/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkSerialize","true","true","true","false"
"johngmyers/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkHistogram","true","true","true","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","parse","true","false","false","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","write","true","true","true","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","search","true","true","true","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","inferBibDatabaseMode","true","true","true","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","latexToUnicodeConversion","true","true","true","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","latexToHTMLConversion","true","true","true","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","htmlToLatexConversion","true","true","true","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","keywordGroupContains","true","true","true","false"
"ambro2/jabref","net.sf.jabref.benchmarks.Benchmarks","keywordGroupContainsWord","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","parse","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","write","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","search","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","parallelSearch","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","inferBibDatabaseMode","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","latexToUnicodeConversion","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","latexToHTMLConversion","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","htmlToLatexConversion","true","true","true","false"
"shitikanth/jabref","org.jabref.benchmarks.Benchmarks","keywordGroupContains","true","true","true","false"
"denizdemir/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter","runBenchmark","true","true","true","false"
"denizdemir/presto","com.facebook.presto.operator.BenchmarkGroupByHash","groupByHashPreCompute","true","true","true","false"
"denizdemir/presto","com.facebook.presto.operator.BenchmarkGroupByHash","addPagePreCompute","true","true","true","false"
"denizdemir/presto","com.facebook.presto.operator.BenchmarkGroupByHash","bigintGroupByHash","true","true","true","false"
"denizdemir/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baseline","true","true","true","false"
"denizdemir/presto","com.facebook.presto.operator.BenchmarkGroupByHash","baselineBigArray","true","true","true","false"
"denizdemir/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"denizdemir/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"denizdemir/presto","com.facebook.presto.BenchmarkHashPagePartitionFunction","runBenchmark","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","parse","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","write","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","search","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","parallelSearch","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","inferBibDatabaseMode","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","latexToUnicodeConversion","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","latexToHTMLConversion","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","htmlToLatexConversion","true","true","true","false"
"Siedlerchr/jabref","org.jabref.benchmarks.Benchmarks","keywordGroupContains","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","parse","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","write","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","search","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","inferBibDatabaseMode","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","latexToUnicodeConversion","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","latexToHTMLConversion","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","htmlToLatexConversion","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","keywordGroupContains","true","true","true","false"
"ayanai1/jabref","net.sf.jabref.benchmarks.Benchmarks","keywordGroupContainsWord","true","true","true","false"
"mythguided/basis","com.addthis.basis.chars.CharSeqOnlyIter$AbstractCharSeqBench","iterateString","true","true","true","false"
"mythguided/basis","com.addthis.basis.chars.CharSeqIterAndEncode$AbstractCharSeqBench","iterateString","true","true","true","false"
"mythguided/basis","com.addthis.basis.util.BitReversals","reverseJdk","true","true","true","false"
"mythguided/basis","com.addthis.basis.util.BitReversals","reverseBasis","true","true","true","false"
"mythguided/basis","com.addthis.basis.util.BitReversals","stackReverse","true","true","true","false"
"mythguided/basis","com.addthis.basis.util.BitReversals","stanfordParallelReverse","true","true","true","false"
"mythguided/basis","com.addthis.basis.util.BitReversals","stanfordSevenOpReverse","true","true","true","false"
"mythguided/basis","com.addthis.basis.util.BitReversals","stanfordMultiplyReverse","true","true","true","false"
"mythguided/basis","com.addthis.basis.util.BitReversals","loopReverse","true","true","true","false"
"dain/airlift","io.airlift.concurrent.BenchmarkWhenAnyCompleteCancelOthers","benchmark","true","true","true","false"
"dain/airlift","io.airlift.stats.cardinality.BenchmarkSparseHll","benchmarkInsert","true","true","true","false"
"dain/airlift","io.airlift.stats.cardinality.BenchmarkDenseHll","benchmarkInsert","true","true","true","false"
"dain/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkInserts","true","true","true","false"
"dain/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkCopy","true","true","true","false"
"dain/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkMerge","true","true","true","false"
"dain/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkDeserialize","true","true","true","false"
"dain/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkSerialize","true","true","true","false"
"dain/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkHistogram","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.QuantilesBenchmark","frugal2uQuantiles","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.QuantilesBenchmark","ckmsQuantiles","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.QuantilesBenchmark","gkQuantiles","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.QuantilesBenchmark","windowQuantiles","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.CounterBenchmark","spectatorCounter","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.CounterBenchmark","bootCounter","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.CounterBenchmark","prometheusCounter","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.CounterBenchmark","datadogStatsdCounter","true","true","true","false"
"checketts/spring-metrics","org.springframework.metrics.benchmark.CounterBenchmark","dropwizardCounter","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.perf.RequestStreamPerf","requestStream","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.perf.RequestResponsePerf","requestResponse","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.perf.RequestResponseLargePayloadPerf","requestResponseLargePayload","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.FragmentationPerf","smallFragmentationPerf","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.FragmentationPerf","largeFragmentationPerf","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.FragmentationPerf","smallFragmentationFrameReassembler","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.RSocketPerf","requestResponseHello","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.RSocketPerf","requestStreamHello1000","true","true","true","false"
"somasun/reactivesocket-java","io.rsocket.RSocketPerf","fireAndForgetHello","true","true","true","false"
"electrum/airlift","io.airlift.concurrent.BenchmarkWhenAnyCompleteCancelOthers","benchmark","true","true","true","false"
"electrum/airlift","io.airlift.stats.cardinality.BenchmarkSparseHll","benchmarkInsert","true","true","true","false"
"electrum/airlift","io.airlift.stats.cardinality.BenchmarkDenseHll","benchmarkInsert","true","true","true","false"
"electrum/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkInserts","true","true","true","false"
"electrum/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkCopy","true","true","true","false"
"electrum/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkMerge","true","true","true","false"
"electrum/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkDeserialize","true","true","true","false"
"electrum/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkSerialize","true","true","true","false"
"electrum/airlift","io.airlift.stats.BenchmarkQuantileDigest","benchmarkHistogram","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.StatusUpdateBenchmark","runBenchmark","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetRoleSummaryBenchmark","run","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetAllTasksBenchmark","run","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.SnapshotBenchmarks$RestoreSnapshotWithUpdatesBenchmark","run","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.SchedulingBenchmarks$AbstractBase","runBenchmark","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.TaskStoreBenchmarks$MemFetchTasksBenchmark","run","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.TaskStoreBenchmarks$DBFetchTasksBenchmark","run","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobDetailsBenchmark","run","true","true","true","false"
"protochron/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobInstructionsBenchmark","run","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","parse","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","write","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","search","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","inferBibDatabaseMode","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","latexToUnicodeConversion","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","latexToHTMLConversion","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","htmlToLatexConversion","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","keywordGroupContains","true","true","true","false"
"motokito/jabref","net.sf.jabref.benchmarks.Benchmarks","keywordGroupContainsWord","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.IdBenchmark","generate","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","synchronized_noContention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","synchronized_contention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","monitor_noContention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","monitor_contention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","mixed_monitor","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","mixed_sync","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","reentrantLock_noContention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","reentrantLock_contention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","nonReentrantLock_noContention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","nonReentrantLock_contention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark","no_contention_offer","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark","no_contention_poll","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark","mild_contention_offer","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark","mild_contention_poll","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark","high_contention_offer","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark","high_contention_poll","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.ComputeBenchmark","compute_sameKey","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.ComputeBenchmark","compute_spread","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark","readOnly","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark","writeOnly","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark","readwrite_get","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark","readwrite_put","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.ReadBufferBenchmark","record","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.ReadBufferBenchmark","drain","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.FrequencySketchBenchmark","increment","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.cache.FrequencySketchBenchmark","frequency","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.TimeBenchmark","nanos_noContention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.TimeBenchmark","nanos_contention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.TimeBenchmark","millis_noContention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.TimeBenchmark","millis_contention","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark","low_contention_offer","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark","low_contention_poll","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark","medium_contention_offer","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark","medium_contention_poll","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark","high_contention_offer","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark","high_contention_poll","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","threadLocal","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","binarySearch","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","hashing","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","sparseArray","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","threadIdHash","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","threadHashCode","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","striped64","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.DelegationBenchmark","inherit_get","true","true","true","false"
"nguyenhongson03/caffeine","com.github.benmanes.caffeine.DelegationBenchmark","delegate_get","true","true","true","false"
"taer/lettuce","com.lambdaworks.redis.protocol.CommandHandlerBenchmark","measureUserWrite","true","true","true","false"
"taer/lettuce","com.lambdaworks.redis.protocol.CommandHandlerBenchmark","measureNettyWrite","true","true","true","false"
"taer/lettuce","com.lambdaworks.redis.protocol.RedisStateMachineBenchmark","measureDecode","true","true","true","false"
"taer/lettuce","com.lambdaworks.redis.protocol.CommandBenchmark","createCommandUsingByteArrayCodec","true","true","true","false"
"taer/lettuce","com.lambdaworks.redis.protocol.CommandBenchmark","createCommandUsingStringCodec","true","true","true","false"
"taer/lettuce","com.lambdaworks.redis.protocol.CommandBenchmark","encodeCommandUsingByteArrayCodec","true","true","true","false"
"taer/lettuce","com.lambdaworks.redis.protocol.CommandBenchmark","encodeCommandUsingByteArrayCodec2","true","true","true","false"
"taer/lettuce","com.lambdaworks.redis.protocol.CommandBenchmark","encodeCommandUsingStringCodec","true","true","true","false"
"smartpcr/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"smartpcr/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"smartpcr/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"smartpcr/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"smartpcr/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"smartpcr/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"smartpcr/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"smartpcr/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"fengshao0907/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"fengshao0907/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"fengshao0907/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"fengshao0907/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"fengshao0907/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"fengshao0907/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"fengshao0907/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"fengshao0907/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"Tammie47/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"Tammie47/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"Tammie47/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"Tammie47/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"Tammie47/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"Tammie47/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"Tammie47/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"Tammie47/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"conchlee/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"conchlee/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"conchlee/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"conchlee/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"conchlee/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"conchlee/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"conchlee/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"conchlee/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"buchgr/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"buchgr/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"buchgr/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"buchgr/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"buchgr/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"buchgr/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"buchgr/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"buchgr/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"tfgm-bud/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testEncode","true","true","true","false"
"tfgm-bud/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testDecode","true","true","true","false"
"tfgm-bud/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testEncode","true","true","true","false"
"tfgm-bud/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testDecode","true","true","true","false"
"tfgm-bud/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"tfgm-bud/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"tfgm-bud/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"tfgm-bud/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"wrwg/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"wrwg/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"wrwg/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"wrwg/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"wrwg/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"wrwg/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"wrwg/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"wrwg/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"jfallows/nuklei","org.kaazing.nuklei.ws.internal.bench.WsServerBM","writer","","","","true"
"jfallows/nuklei","org.kaazing.nuklei.ws.internal.bench.WsServerBM","reader","","","","true"
"jfallows/nuklei","org.kaazing.nuklei.http.internal.bench.HttpServerBM","writer","","","","true"
"jfallows/nuklei","org.kaazing.nuklei.http.internal.bench.HttpServerBM","reader","","","","true"
"jfallows/nuklei","org.kaazing.nuklei.tcp.internal.bench.TcpServerBM","writer","","","","true"
"jfallows/nuklei","org.kaazing.nuklei.tcp.internal.bench.TcpServerBM","reader","","","","true"
"jfallows/nuklei","org.kaazing.nuklei.internal.bench.BufferBM","writer","","","","true"
"jfallows/nuklei","org.kaazing.nuklei.internal.bench.BufferBM","reader","","","","true"
"eonezhang/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"eonezhang/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"eonezhang/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"eonezhang/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"eonezhang/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"eonezhang/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"eonezhang/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"eonezhang/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"moujian/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"moujian/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"moujian/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"moujian/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"moujian/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"moujian/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"moujian/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"moujian/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"LuminateWireless/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"LuminateWireless/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"LuminateWireless/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"LuminateWireless/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"LuminateWireless/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"LuminateWireless/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"LuminateWireless/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"LuminateWireless/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"jpxiong/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"jpxiong/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"jpxiong/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"jpxiong/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"jpxiong/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"jpxiong/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"jpxiong/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"jpxiong/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"shashankasharma/commons-csv","org.apache.commons.csv.CSVBenchmark","read","true","true","true","false"
"shashankasharma/commons-csv","org.apache.commons.csv.CSVBenchmark","split","true","true","true","false"
"shashankasharma/commons-csv","org.apache.commons.csv.CSVBenchmark","parseCommonsCSV","true","true","true","false"
"shashankasharma/commons-csv","org.apache.commons.csv.CSVBenchmark","parseGenJavaCSV","true","true","true","false"
"shashankasharma/commons-csv","org.apache.commons.csv.CSVBenchmark","parseJavaCSV","true","true","true","false"
"shashankasharma/commons-csv","org.apache.commons.csv.CSVBenchmark","parseOpenCSV","true","true","true","false"
"shashankasharma/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSkifeCSV","true","true","true","false"
"shashankasharma/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSuperCSV","true","true","true","false"
"amluto/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testEncode","true","true","true","false"
"amluto/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testDecode","true","true","true","false"
"amluto/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testEncode","true","true","true","false"
"amluto/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testDecode","true","true","true","false"
"amluto/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"amluto/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"amluto/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"amluto/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"mingfly/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"mingfly/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"mingfly/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"mingfly/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"mingfly/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"mingfly/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"mingfly/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"mingfly/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"holidayfun/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"holidayfun/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"holidayfun/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"holidayfun/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"holidayfun/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"holidayfun/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"holidayfun/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"holidayfun/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"NTDT-UniTuebingen/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"NTDT-UniTuebingen/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"NTDT-UniTuebingen/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"NTDT-UniTuebingen/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"NTDT-UniTuebingen/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"NTDT-UniTuebingen/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"NTDT-UniTuebingen/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"NTDT-UniTuebingen/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"kilink/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"kilink/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"kilink/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"kilink/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"kilink/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"kilink/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"kilink/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"kilink/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"pvllnspk/commons-csv","org.apache.commons.csv.CSVBenchmark","read","true","true","true","false"
"pvllnspk/commons-csv","org.apache.commons.csv.CSVBenchmark","split","true","true","true","false"
"pvllnspk/commons-csv","org.apache.commons.csv.CSVBenchmark","parseCommonsCSV","true","true","true","false"
"pvllnspk/commons-csv","org.apache.commons.csv.CSVBenchmark","parseGenJavaCSV","true","true","true","false"
"pvllnspk/commons-csv","org.apache.commons.csv.CSVBenchmark","parseJavaCSV","true","true","true","false"
"pvllnspk/commons-csv","org.apache.commons.csv.CSVBenchmark","parseOpenCSV","true","true","true","false"
"pvllnspk/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSkifeCSV","true","true","true","false"
"pvllnspk/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSuperCSV","true","true","true","false"
"pbouillet/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"pbouillet/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"pbouillet/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"pbouillet/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"pbouillet/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"pbouillet/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"pbouillet/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"pbouillet/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"tejasmanohar/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"tejasmanohar/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"tejasmanohar/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"tejasmanohar/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"tejasmanohar/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"tejasmanohar/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"tejasmanohar/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"tejasmanohar/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"sunshinecoast/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"sunshinecoast/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"sunshinecoast/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"sunshinecoast/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"sunshinecoast/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"sunshinecoast/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"sunshinecoast/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"sunshinecoast/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"nickethier/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"nickethier/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"nickethier/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"nickethier/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"nickethier/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"nickethier/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"nickethier/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"nickethier/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"qix/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"qix/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"qix/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"qix/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"qix/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"qix/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"qix/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"qix/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"UzumakiMansi/commons-csv","org.apache.commons.csv.CSVBenchmark","read","true","true","true","false"
"UzumakiMansi/commons-csv","org.apache.commons.csv.CSVBenchmark","split","true","true","true","false"
"UzumakiMansi/commons-csv","org.apache.commons.csv.CSVBenchmark","parseCommonsCSV","true","true","true","false"
"UzumakiMansi/commons-csv","org.apache.commons.csv.CSVBenchmark","parseGenJavaCSV","true","true","true","false"
"UzumakiMansi/commons-csv","org.apache.commons.csv.CSVBenchmark","parseJavaCSV","true","true","true","false"
"UzumakiMansi/commons-csv","org.apache.commons.csv.CSVBenchmark","parseOpenCSV","true","true","true","false"
"UzumakiMansi/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSkifeCSV","true","true","true","false"
"UzumakiMansi/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSuperCSV","true","true","true","false"
"767326791/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"767326791/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"767326791/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"767326791/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"767326791/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"767326791/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"767326791/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"767326791/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"saleyn/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testEncode","true","true","true","false"
"saleyn/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testDecode","true","true","true","false"
"saleyn/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testEncode","true","true","true","false"
"saleyn/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testDecode","true","true","true","false"
"saleyn/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"saleyn/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"saleyn/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"saleyn/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"andy32323/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"andy32323/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"andy32323/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"andy32323/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"andy32323/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"andy32323/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"andy32323/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"andy32323/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"RavinaDhruve/commons-csv","org.apache.commons.csv.CSVBenchmark","read","true","true","true","false"
"RavinaDhruve/commons-csv","org.apache.commons.csv.CSVBenchmark","split","true","true","true","false"
"RavinaDhruve/commons-csv","org.apache.commons.csv.CSVBenchmark","parseCommonsCSV","true","true","true","false"
"RavinaDhruve/commons-csv","org.apache.commons.csv.CSVBenchmark","parseGenJavaCSV","true","true","true","false"
"RavinaDhruve/commons-csv","org.apache.commons.csv.CSVBenchmark","parseJavaCSV","true","true","true","false"
"RavinaDhruve/commons-csv","org.apache.commons.csv.CSVBenchmark","parseOpenCSV","true","true","true","false"
"RavinaDhruve/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSkifeCSV","true","true","true","false"
"RavinaDhruve/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSuperCSV","true","true","true","false"
"zhiqinghuang/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"zhiqinghuang/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"zhiqinghuang/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"zhiqinghuang/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"zhiqinghuang/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"zhiqinghuang/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"zhiqinghuang/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"zhiqinghuang/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"juoni/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"juoni/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"juoni/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"juoni/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"juoni/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"juoni/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"juoni/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"juoni/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"GauriGNaik/commons-csv","org.apache.commons.csv.CSVBenchmark","read","true","true","true","false"
"GauriGNaik/commons-csv","org.apache.commons.csv.CSVBenchmark","split","true","true","true","false"
"GauriGNaik/commons-csv","org.apache.commons.csv.CSVBenchmark","parseCommonsCSV","true","true","true","false"
"GauriGNaik/commons-csv","org.apache.commons.csv.CSVBenchmark","parseGenJavaCSV","true","true","true","false"
"GauriGNaik/commons-csv","org.apache.commons.csv.CSVBenchmark","parseJavaCSV","true","true","true","false"
"GauriGNaik/commons-csv","org.apache.commons.csv.CSVBenchmark","parseOpenCSV","true","true","true","false"
"GauriGNaik/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSkifeCSV","true","true","true","false"
"GauriGNaik/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSuperCSV","true","true","true","false"
"lcs777/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testEncode","true","true","true","false"
"lcs777/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testDecode","true","true","true","false"
"lcs777/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testEncode","true","true","true","false"
"lcs777/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testDecode","true","true","true","false"
"lcs777/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"lcs777/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"lcs777/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"lcs777/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"koushikan/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"koushikan/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"koushikan/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"koushikan/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"koushikan/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"koushikan/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"koushikan/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"koushikan/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"clemensgeibel/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"clemensgeibel/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"clemensgeibel/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"clemensgeibel/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"clemensgeibel/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"clemensgeibel/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"clemensgeibel/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"clemensgeibel/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"mohanaraosv/commons-csv","org.apache.commons.csv.CSVBenchmark","read","true","true","true","false"
"mohanaraosv/commons-csv","org.apache.commons.csv.CSVBenchmark","split","true","true","true","false"
"mohanaraosv/commons-csv","org.apache.commons.csv.CSVBenchmark","parseCommonsCSV","true","true","true","false"
"mohanaraosv/commons-csv","org.apache.commons.csv.CSVBenchmark","parseGenJavaCSV","true","true","true","false"
"mohanaraosv/commons-csv","org.apache.commons.csv.CSVBenchmark","parseJavaCSV","true","true","true","false"
"mohanaraosv/commons-csv","org.apache.commons.csv.CSVBenchmark","parseOpenCSV","true","true","true","false"
"mohanaraosv/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSkifeCSV","true","true","true","false"
"mohanaraosv/commons-csv","org.apache.commons.csv.CSVBenchmark","parseSuperCSV","true","true","true","false"
"vampiregod1996/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"vampiregod1996/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"vampiregod1996/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"vampiregod1996/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"vampiregod1996/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"vampiregod1996/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"vampiregod1996/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"vampiregod1996/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"Henning-Schulz/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"Henning-Schulz/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"Henning-Schulz/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"Henning-Schulz/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"Henning-Schulz/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"Henning-Schulz/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"Henning-Schulz/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"Henning-Schulz/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"Shedings/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"Shedings/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"Shedings/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"Shedings/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"Shedings/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"Shedings/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"Shedings/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"Shedings/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"palaniyappanBala/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"palaniyappanBala/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"palaniyappanBala/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"palaniyappanBala/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"palaniyappanBala/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"palaniyappanBala/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"palaniyappanBala/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"palaniyappanBala/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"madongfly/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"madongfly/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"madongfly/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"madongfly/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"madongfly/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"madongfly/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"madongfly/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"madongfly/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"kevintvh/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"kevintvh/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"kevintvh/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"kevintvh/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"kevintvh/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"kevintvh/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"kevintvh/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"kevintvh/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"eamonnmcmanus/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"eamonnmcmanus/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"eamonnmcmanus/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"eamonnmcmanus/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"eamonnmcmanus/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"eamonnmcmanus/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"eamonnmcmanus/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"eamonnmcmanus/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"smorin/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testEncode","true","true","true","false"
"smorin/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark","testDecode","true","true","true","false"
"smorin/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testEncode","true","true","true","false"
"smorin/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark","testDecode","true","true","true","false"
"smorin/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"smorin/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"smorin/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"smorin/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"tempbottle/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"tempbottle/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"tempbottle/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"tempbottle/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"tempbottle/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"tempbottle/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"tempbottle/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"tempbottle/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"stanley-cheung/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"stanley-cheung/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"stanley-cheung/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"stanley-cheung/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"stanley-cheung/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"stanley-cheung/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"stanley-cheung/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"stanley-cheung/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"xubuhang/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"xubuhang/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"xubuhang/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"xubuhang/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"xubuhang/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"xubuhang/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"xubuhang/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"xubuhang/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"v7lin/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"v7lin/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"v7lin/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"v7lin/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"v7lin/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"v7lin/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"v7lin/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"v7lin/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"msdgwzhy6/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"msdgwzhy6/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"msdgwzhy6/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"msdgwzhy6/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"msdgwzhy6/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"msdgwzhy6/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"msdgwzhy6/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"msdgwzhy6/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"aglne/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"aglne/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"aglne/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"aglne/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"aglne/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"aglne/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"aglne/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"aglne/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"winstar/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"winstar/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"winstar/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"winstar/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"winstar/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"winstar/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"winstar/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"winstar/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"ybv/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"ybv/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"ybv/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"ybv/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"ybv/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"ybv/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"ybv/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"ybv/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"angcyo/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"angcyo/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"angcyo/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"angcyo/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"angcyo/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"angcyo/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"angcyo/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"angcyo/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"chenrui2014/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"chenrui2014/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"chenrui2014/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"chenrui2014/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"chenrui2014/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"chenrui2014/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"chenrui2014/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"chenrui2014/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"Luccr1/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataForkJoin","true","true","true","false"
"Luccr1/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframeForkJoin","true","true","true","false"
"Luccr1/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethodForkJoin","true","true","true","false"
"Luccr1/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverviewForkJoin","true","true","true","false"
"Luccr1/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData","true","true","true","false"
"Luccr1/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerData15MinsTimeframe","true","true","true","false"
"Luccr1/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryTimerDataMethod","true","true","true","false"
"Luccr1/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest","queryInvocationOverview","true","true","true","false"
"pombredanne/druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark","hammerQueue","true","true","true","false"
"pombredanne/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"pombredanne/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"pombredanne/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"pombredanne/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"pombredanne/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"pombredanne/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"pombredanne/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"tuacy/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"tuacy/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"tuacy/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"tuacy/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"tuacy/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"tuacy/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"tuacy/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"tuacy/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"joshuabezaleel/grpc-java","io.grpc.benchmarks.TransportBenchmark","unaryCall1024","true","true","true","false"
"joshuabezaleel/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"joshuabezaleel/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"joshuabezaleel/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"joshuabezaleel/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"joshuabezaleel/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"joshuabezaleel/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"joshuabezaleel/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"longbai/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads1hot","true","true","true","false"
"longbai/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads2hot","true","true","true","false"
"longbai/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads4hot","true","true","true","false"
"longbai/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads8hot","true","true","true","false"
"longbai/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads16hot","true","true","true","false"
"longbai/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","threads32hot","true","true","true","false"
"longbai/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkReadHot","true","true","true","false"
"longbai/okio","com.squareup.okio.benchmarks.BufferPerformanceBench","thinkWriteCold","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.IdBenchmark","generate","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","synchronized_noContention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","synchronized_contention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","monitor_noContention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","monitor_contention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","mixed_monitor","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","mixed_sync","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","reentrantLock_noContention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","reentrantLock_contention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","nonReentrantLock_noContention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark","nonReentrantLock_contention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.cache.ComputeBenchmark","compute_sameKey","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.cache.ComputeBenchmark","compute_spread","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark","readOnly","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark","writeOnly","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark","readwrite_get","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark","readwrite_put","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.cache.ReadBufferBenchmark","record","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.cache.ReadBufferBenchmark","drain","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark","no_contention_offer","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark","no_contention_poll","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark","mild_contention_offer","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark","mild_contention_poll","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark","high_contention_offer","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark","high_contention_poll","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.TimeBenchmark","nanos_noContention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.TimeBenchmark","nanos_contention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.TimeBenchmark","millis_noContention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.TimeBenchmark","millis_contention","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","threadLocal","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","binarySearch","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","hashing","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","sparseArray","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","threadIdHash","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","threadHashCode","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark","striped64","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark","no_contention_offer","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark","no_contention_poll","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark","mild_contention_offer","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark","mild_contention_poll","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark","high_contention_offer","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark","high_contention_poll","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.DelegationBenchmark","inherit_get","true","true","true","false"
"tasomaniac/caffeine","com.github.benmanes.caffeine.DelegationBenchmark","delegate_get","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","sleepOneMs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","sleepTwoMs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","sleepOneNs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","parkOneMs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","parkTwoMs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","parkOneNs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","burnOneMs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","burnTwoMs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","burnOneNs","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark","getNanoTime","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis","baseline_returnObject","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis","baseline_returnInt","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis","measureEscape","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis","measureDeadCode","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis","measureNoEscape","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues","baseline","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues","measureBuiltin","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues","measureManualArray","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues","measureCached","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues","measureCachedMap","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.DeadCode","measureA","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.DeadCode","measureB","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.LoopConditionals","measureInternal","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.jit.LoopConditionals","measureExternal","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark","plainLocalRead","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark","plainLocalIncrement","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark","plainSharedRead","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark","plainSharedIncrement","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark","plainVolatileRead","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark","plainVolatileIncrement","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark","plainVolatileRead","true","true","true","false"
"svashisth/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark","plainVolatileIncrement","true","true","true","false"
"marcust/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","noProfiling","true","true","true","false"
"marcust/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","theoreticalOptimum","true","true","true","false"
"marcust/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","manual","true","true","true","false"
"marcust/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","javassistDeactivated","true","true","true","false"
"marcust/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","javassist","true","true","true","false"
"marcust/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","byteBuddy","true","true","true","false"
"marcust/stagemonitor","org.stagemonitor.benchmark.profiler.VariableMethodsBenchmark","testManualProfiling","true","true","true","false"
"fizzed/template-benchmark","com.mitchellbosecke.benchmark.Freemarker","benchmark","true","true","true","false"
"fizzed/template-benchmark","com.mitchellbosecke.benchmark.Trimou","benchmark","true","true","true","false"
"fizzed/template-benchmark","com.mitchellbosecke.benchmark.Rocker","benchmark","true","true","true","false"
"fizzed/template-benchmark","com.mitchellbosecke.benchmark.Velocity","benchmark","true","true","true","false"
"fizzed/template-benchmark","com.mitchellbosecke.benchmark.Thymeleaf","benchmark","true","true","true","false"
"fizzed/template-benchmark","com.mitchellbosecke.benchmark.Pebble","benchmark","true","true","true","false"
"fizzed/template-benchmark","com.mitchellbosecke.benchmark.Mustache","benchmark","true","true","true","false"
"pcadabam/gobblin","org.apache.gobblin.crypto.EncodingBenchmark","write1KRecordsNewBase64","true","true","true","false"
"pcadabam/gobblin","org.apache.gobblin.crypto.EncodingBenchmark","write1KRecordsBase64Only","true","true","true","false"
"pcadabam/gobblin","org.apache.gobblin.crypto.EncodingBenchmark","write1KRecordsDirectCipherStream","true","true","true","false"
"pcadabam/gobblin","org.apache.gobblin.writer.FineGrainedWatermarkTrackerBenchmark","trackImmediateAcks","true","true","true","false"
"pcadabam/gobblin","org.apache.gobblin.writer.FineGrainedWatermarkTrackerBenchmark","trackWithDelayedAcks","true","true","true","false"
"pcadabam/gobblin","org.apache.gobblin.writer.FineGrainedWatermarkTrackerBenchmark","scheduledDelayedAcks","true","true","true","false"
"pcadabam/gobblin","org.apache.gobblin.writer.FineGrainedWatermarkTrackerBenchmark","scheduledNoRandomDelayedAcks","true","true","true","false"
"leveyj/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhWaitStategyBenchmark","put","true","true","true","false"
"leveyj/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark","park","true","true","true","false"
"leveyj/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark","unpark","true","true","true","false"
"leveyj/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark","notifyAll0","true","true","true","false"
"leveyj/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark","wait0","true","true","true","false"
"leveyj/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheBenchmark","put","true","true","true","false"
"leveyj/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheBenchmark","get","true","true","true","false"
"zhoupan/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"zhoupan/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"zhoupan/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"zhoupan/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"zhoupan/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"zhoupan/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"zhoupan/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"jmnarloch/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"jmnarloch/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"jmnarloch/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"jmnarloch/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"jmnarloch/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"jmnarloch/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"jmnarloch/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"jcanizales/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark","pingPong","true","true","true","false"
"jcanizales/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark","lookupMethod","true","true","true","false"
"jcanizales/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark","unary","true","true","true","false"
"jcanizales/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark","blockingUnary","true","true","true","false"
"jcanizales/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark","stream","true","true","true","false"
"jcanizales/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark","unary","true","true","true","false"
"jcanizales/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark","stream","true","true","true","false"
"penuel-leo/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"penuel-leo/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"penuel-leo/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeHierarchical","true","true","true","false"
"penuel-leo/druid","io.druid.benchmark.MergeSequenceBenchmark","mergeFlat","true","true","true","false"
"penuel-leo/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"penuel-leo/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"penuel-leo/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"didvae/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"didvae/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"didvae/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"didvae/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"didvae/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"didvae/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"didvae/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"sdgdsffdsfff/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","noProfiling","true","true","true","false"
"sdgdsffdsfff/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","theoreticalOptimum","true","true","true","false"
"sdgdsffdsfff/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","manual","true","true","true","false"
"sdgdsffdsfff/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","javassistDeactivated","true","true","true","false"
"sdgdsffdsfff/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","javassist","true","true","true","false"
"sdgdsffdsfff/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark","byteBuddy","true","true","true","false"
"sdgdsffdsfff/stagemonitor","org.stagemonitor.benchmark.profiler.VariableMethodsBenchmark","testManualProfiling","true","true","true","false"
"prembasumatary/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"prembasumatary/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"prembasumatary/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"prembasumatary/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"prembasumatary/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"prembasumatary/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"prembasumatary/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"Echo19890615/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"Echo19890615/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"Echo19890615/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"Echo19890615/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"Echo19890615/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"Echo19890615/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"Echo19890615/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"FrEaKmAn/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"FrEaKmAn/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"FrEaKmAn/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"FrEaKmAn/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"FrEaKmAn/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"FrEaKmAn/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"FrEaKmAn/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"spencergibb/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"spencergibb/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"spencergibb/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"spencergibb/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"spencergibb/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"spencergibb/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"spencergibb/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"bstick12/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"bstick12/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"bstick12/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"bstick12/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"bstick12/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"bstick12/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"bstick12/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"openedbox/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"openedbox/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"openedbox/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"openedbox/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"openedbox/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"openedbox/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"openedbox/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"gorcz/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"gorcz/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"gorcz/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"gorcz/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"gorcz/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"gorcz/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"gorcz/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"olkulyk/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"olkulyk/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"olkulyk/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"olkulyk/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"olkulyk/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"olkulyk/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"olkulyk/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"ddteeter/feign","feign.benchmark.RealRequestBenchmarks","query_baseCaseUsingOkHttp","true","true","true","false"
"ddteeter/feign","feign.benchmark.RealRequestBenchmarks","query_feignUsingOkHttp","true","true","true","false"
"ddteeter/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","parseFeignContract","true","true","true","false"
"ddteeter/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake","true","true","true","false"
"ddteeter/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedContract","true","true","true","false"
"ddteeter/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedFeign","true","true","true","false"
"ddteeter/feign","feign.benchmark.WhatShouldWeCacheBenchmarks","buildAndQuery_fake_cachedApi","true","true","true","false"
"WANdisco/amplab-hive","org.apache.hive.benchmark.storage.ColumnarStorageBench","write","true","true","true","false"
"WANdisco/amplab-hive","org.apache.hive.benchmark.storage.ColumnarStorageBench","read","true","true","true","false"
"WANdisco/amplab-hive","org.apache.hive.benchmark.storage.ColumnarStorageBench","serialize","true","true","true","false"
"WANdisco/amplab-hive","org.apache.hive.benchmark.storage.ColumnarStorageBench","deserialize","true","true","true","false"
"WANdisco/amplab-hive","org.apache.hive.benchmark.storage.ColumnarStorageBench","getRecordWriter","true","true","true","false"
"WANdisco/amplab-hive","org.apache.hive.benchmark.storage.ColumnarStorageBench","getRecordReader","true","true","true","false"
"mnuessler/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"mnuessler/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"mnuessler/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"mnuessler/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"mnuessler/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"mnuessler/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"shahankhatch/aurora","org.apache.aurora.benchmark.StatusUpdateBenchmark","runBenchmark","true","true","true","false"
"shahankhatch/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetRoleSummaryBenchmark","run","true","true","true","false"
"shahankhatch/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetAllTasksBenchmark","run","true","true","true","false"
"shahankhatch/aurora","org.apache.aurora.benchmark.SnapshotBenchmarks$RestoreSnapshotWithUpdatesBenchmark","run","true","true","true","false"
"shahankhatch/aurora","org.apache.aurora.benchmark.SchedulingBenchmarks$AbstractBase","runBenchmark","true","true","true","false"
"shahankhatch/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobDetailsBenchmark","run","true","true","true","false"
"tempbottle/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark","parsingToMessageZMTP10","true","true","true","false"
"tempbottle/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark","parsingToMessageZMTP20","true","true","true","false"
"tempbottle/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark","discardingZMTP10","true","true","true","false"
"tempbottle/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark","discardingZMTP20","true","true","true","false"
"tempbottle/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark","encodingZMTP10","true","true","true","false"
"tempbottle/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark","encodingZMTP20","true","true","true","false"
"stanculescu/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM","testAsyncConnector","true","true","true","false"
"stanculescu/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM","testSyncConnector","true","true","true","false"
"stanculescu/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM","testDatagramSocket","true","true","true","false"
"stanculescu/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM","testAsyncConnector","true","true","true","false"
"stanculescu/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM","testSyncConnector","true","true","true","false"
"stanculescu/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM","testDatagramSocket","true","true","true","false"
"amoghmargoor/incubator-calcite","org.apache.calcite.benchmarks.StatementTest","prepareBindExecute","true","true","true","false"
"amoghmargoor/incubator-calcite","org.apache.calcite.benchmarks.StatementTest","bindExecute","true","true","true","false"
"amoghmargoor/incubator-calcite","org.apache.calcite.benchmarks.StatementTest","executeQuery","true","true","true","false"
"amoghmargoor/incubator-calcite","org.apache.calcite.benchmarks.StatementTest","forEach","true","true","true","false"
"amoghmargoor/incubator-calcite","org.apache.calcite.benchmarks.ParserBenchmark","parseCached","true","true","true","false"
"amoghmargoor/incubator-calcite","org.apache.calcite.benchmarks.ParserBenchmark","parseNonCached","true","true","true","false"
"522986491/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark","write100KSingleNodeWithOneInnerItemInOneCommitBenchmark","true","true","true","false"
"522986491/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark","write100KSingleNodeWithOneInnerItemInCommitPerWriteBenchmark","true","true","true","false"
"522986491/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark","write50KSingleNodeWithTwoInnerItemsInOneCommitBenchmark","true","true","true","false"
"522986491/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark","write50KSingleNodeWithTwoInnerItemsInCommitPerWriteBenchmark","true","true","true","false"
"522986491/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark","write10KSingleNodeWithTenInnerItemsInOneCommitBenchmark","true","true","true","false"
"522986491/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark","write10KSingleNodeWithTenInnerItemsInCommitPerWriteBenchmark","true","true","true","false"
"kidaa/aurora","org.apache.aurora.benchmark.StatusUpdateBenchmark","runBenchmark","true","true","true","false"
"kidaa/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetRoleSummaryBenchmark","run","true","true","true","false"
"kidaa/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetAllTasksBenchmark","run","true","true","true","false"
"kidaa/aurora","org.apache.aurora.benchmark.SnapshotBenchmarks$RestoreSnapshotWithUpdatesBenchmark","run","true","true","true","false"
"kidaa/aurora","org.apache.aurora.benchmark.SchedulingBenchmarks$AbstractBase","runBenchmark","true","true","true","false"
"kidaa/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobDetailsBenchmark","run","true","true","true","false"
"summerhai/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark","getNonExisting","true","true","true","false"
"summerhai/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark","containsNonExisting","true","true","true","false"
"summerhai/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark","putSingleThreaded","true","true","true","false"
"summerhai/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark","putMultiThreaded","true","true","true","false"
"summerhai/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark","getSingleThreaded","true","true","true","false"
"summerhai/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark","getMultiThreaded","true","true","true","false"
"mschenck/aurora","org.apache.aurora.benchmark.StatusUpdateBenchmark","runBenchmark","true","true","true","false"
"mschenck/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetRoleSummaryBenchmark","run","true","true","true","false"
"mschenck/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetAllTasksBenchmark","run","true","true","true","false"
"mschenck/aurora","org.apache.aurora.benchmark.SnapshotBenchmarks$RestoreSnapshotWithUpdatesBenchmark","run","true","true","true","false"
"mschenck/aurora","org.apache.aurora.benchmark.SchedulingBenchmarks$AbstractBase","runBenchmark","true","true","true","false"
"mschenck/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobDetailsBenchmark","run","true","true","true","false"
"tempredirect/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"tempredirect/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"tempredirect/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"tempredirect/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"tempredirect/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"tempredirect/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"mattnelson/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","","","","true"
"mattnelson/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","","","","true"
"mattnelson/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","","","","true"
"mattnelson/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","","","","true"
"mattnelson/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","","","","true"
"mattnelson/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","","","","true"
"AltitudeDigital/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"AltitudeDigital/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"AltitudeDigital/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"AltitudeDigital/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"AltitudeDigital/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"AltitudeDigital/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"Banno/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"Banno/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"Banno/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"Banno/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"Banno/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"Banno/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"jasw/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"jasw/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"jasw/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"jasw/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"jasw/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"jasw/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"egymgmbh/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"egymgmbh/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"egymgmbh/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"egymgmbh/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"egymgmbh/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"egymgmbh/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"chetnachaudhari/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","","","","true"
"chetnachaudhari/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","","","","true"
"chetnachaudhari/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","","","","true"
"chetnachaudhari/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","","","","true"
"chetnachaudhari/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","","","","true"
"chetnachaudhari/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","","","","true"
"trampi/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricTemplateSingleValue","true","true","true","false"
"trampi/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricNameSingleValue","true","true","true","false"
"trampi/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricTemplateMultipleValues","true","true","true","false"
"trampi/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricNameMultipleValues","true","true","true","false"
"trampi/stagemonitor","org.stagemonitor.MetricNameBenchmark","matchMetricName","true","true","true","false"
"trampi/stagemonitor","org.stagemonitor.benchmark.profiler.VariableMethodsBenchmark","testManualProfiling","true","true","true","false"
"kevintvh/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"kevintvh/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"kevintvh/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"kevintvh/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"kevintvh/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"kevintvh/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"jasonchaffee/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","","","","true"
"jasonchaffee/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","","","","true"
"jasonchaffee/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","","","","true"
"jasonchaffee/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","","","","true"
"jasonchaffee/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","","","","true"
"jasonchaffee/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","","","","true"
"valery1707/dropwizard-metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"valery1707/dropwizard-metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"valery1707/dropwizard-metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"valery1707/dropwizard-metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"valery1707/dropwizard-metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"valery1707/dropwizard-metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"mspiegel/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"mspiegel/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"mspiegel/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"mspiegel/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"mspiegel/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"mspiegel/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"rexren/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"rexren/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"rexren/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"rexren/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"rexren/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"rexren/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"jplock/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","","","","true"
"jplock/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","","","","true"
"jplock/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","","","","true"
"jplock/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","","","","true"
"jplock/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","","","","true"
"jplock/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","","","","true"
"phillipross/java-http-signature","com.joyent.http.signature.BenchmarkSigner","signHeaderThroughput","true","true","true","false"
"phillipross/java-http-signature","com.joyent.http.signature.BenchmarkSigner","signHeaderLatency","true","true","true","false"
"phillipross/java-http-signature","com.joyent.http.signature.BenchmarkSigner","verifyHeaderThroughput","true","true","true","false"
"phillipross/java-http-signature","com.joyent.http.signature.BenchmarkSigner","verifyHeaderLatency","true","true","true","false"
"phillipross/java-http-signature","com.joyent.http.signature.BenchmarkKeyFingerprinter","fingerprintThroughput","true","true","true","false"
"phillipross/java-http-signature","com.joyent.http.signature.BenchmarkKeyFingerprinter","fingerprintLatency","true","true","true","false"
"mt0803/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"mt0803/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"mt0803/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"mt0803/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"mt0803/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"mt0803/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"arina-ielchiieva/calcite","org.apache.calcite.benchmarks.StatementTest","prepareBindExecute","true","true","true","false"
"arina-ielchiieva/calcite","org.apache.calcite.benchmarks.StatementTest","bindExecute","true","true","true","false"
"arina-ielchiieva/calcite","org.apache.calcite.benchmarks.StatementTest","executeQuery","true","true","true","false"
"arina-ielchiieva/calcite","org.apache.calcite.benchmarks.StatementTest","forEach","true","true","true","false"
"arina-ielchiieva/calcite","org.apache.calcite.benchmarks.ParserBenchmark","parseCached","true","true","true","false"
"arina-ielchiieva/calcite","org.apache.calcite.benchmarks.ParserBenchmark","parseNonCached","true","true","true","false"
"glamarre360/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricTemplateSingleValue","true","true","true","false"
"glamarre360/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricNameSingleValue","true","true","true","false"
"glamarre360/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricTemplateMultipleValues","true","true","true","false"
"glamarre360/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricNameMultipleValues","true","true","true","false"
"glamarre360/stagemonitor","org.stagemonitor.MetricNameBenchmark","matchMetricName","true","true","true","false"
"glamarre360/stagemonitor","org.stagemonitor.benchmark.profiler.VariableMethodsBenchmark","testManualProfiling","true","true","true","false"
"thelastpickle/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"thelastpickle/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"thelastpickle/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"thelastpickle/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"thelastpickle/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"thelastpickle/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"bentatham/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","","","","true"
"bentatham/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","","","","true"
"bentatham/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","","","","true"
"bentatham/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","","","","true"
"bentatham/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","","","","true"
"bentatham/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","","","","true"
"mtakaki/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"mtakaki/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"mtakaki/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"mtakaki/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"mtakaki/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"mtakaki/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"timezra/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"timezra/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"timezra/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"timezra/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"timezra/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"timezra/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"wfxiang08/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"wfxiang08/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"wfxiang08/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"wfxiang08/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"wfxiang08/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"wfxiang08/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"randomstatistic/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","","","","true"
"randomstatistic/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","","","","true"
"randomstatistic/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","","","","true"
"randomstatistic/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","","","","true"
"randomstatistic/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","","","","true"
"randomstatistic/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","","","","true"
"hexdecteam/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricTemplateSingleValue","true","true","true","false"
"hexdecteam/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricNameSingleValue","true","true","true","false"
"hexdecteam/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricTemplateMultipleValues","true","true","true","false"
"hexdecteam/stagemonitor","org.stagemonitor.MetricNameBenchmark","buildMetricNameMultipleValues","true","true","true","false"
"hexdecteam/stagemonitor","org.stagemonitor.MetricNameBenchmark","matchMetricName","true","true","true","false"
"hexdecteam/stagemonitor","org.stagemonitor.benchmark.profiler.VariableMethodsBenchmark","testManualProfiling","true","true","true","false"
"gburton1/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"gburton1/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"gburton1/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"gburton1/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"gburton1/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"gburton1/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"cirrus-dev/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"cirrus-dev/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"cirrus-dev/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"cirrus-dev/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"cirrus-dev/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"cirrus-dev/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"ohr/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"ohr/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"ohr/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"ohr/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"ohr/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"ohr/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"slovdahl/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"slovdahl/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"slovdahl/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"slovdahl/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"slovdahl/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"slovdahl/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"chenxianghua2014/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"chenxianghua2014/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"chenxianghua2014/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"chenxianghua2014/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"chenxianghua2014/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"chenxianghua2014/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"AdrianCozma/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM","testAsyncConnector","true","true","true","false"
"AdrianCozma/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM","testSyncConnector","true","true","true","false"
"AdrianCozma/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM","testDatagramSocket","true","true","true","false"
"AdrianCozma/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM","testAsyncConnector","true","true","true","false"
"AdrianCozma/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM","testSyncConnector","true","true","true","false"
"AdrianCozma/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM","testDatagramSocket","true","true","true","false"
"slachiewicz/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"slachiewicz/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"slachiewicz/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"slachiewicz/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"slachiewicz/metrics","com.codahale.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"slachiewicz/metrics","com.codahale.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"signalfx/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfUniformReservoir","true","true","true","false"
"signalfx/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfExponentiallyDecayingReservoir","true","true","true","false"
"signalfx/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingWindowReservoir","true","true","true","false"
"signalfx/metrics","io.dropwizard.metrics.benchmarks.ReservoirBenchmark","perfSlidingTimeWindowReservoir","true","true","true","false"
"signalfx/metrics","io.dropwizard.metrics.benchmarks.MeterBenchmark","perfMark","true","true","true","false"
"signalfx/metrics","io.dropwizard.metrics.benchmarks.CounterBenchmark","perfIncrement","true","true","true","false"
"krraghavan/fongo","com.github.fakemongo.PerfTest","doit","true","true","true","false"
"krraghavan/fongo","com.github.fakemongo.PerfTest","doitFindN","true","true","true","false"
"krraghavan/fongo","com.github.fakemongo.PerfTest","doitFindUniqueIndex","true","true","true","false"
"krraghavan/fongo","com.github.fakemongo.PerfTest","doitFindNWithIndex","true","true","true","false"
"krraghavan/fongo","com.github.fakemongo.PerfTest","doitRemoveWithIndex","true","true","true","false"
"krraghavan/fongo","com.github.fakemongo.PerfTest","doitRemoveWithIndexNew","true","true","true","false"
"qubole/calcite","org.apache.calcite.benchmarks.StatementTest","prepareBindExecute","true","true","true","false"
"qubole/calcite","org.apache.calcite.benchmarks.StatementTest","bindExecute","true","true","true","false"
"qubole/calcite","org.apache.calcite.benchmarks.StatementTest","executeQuery","true","true","true","false"
"qubole/calcite","org.apache.calcite.benchmarks.StatementTest","forEach","true","true","true","false"
"qubole/calcite","org.apache.calcite.benchmarks.ParserBenchmark","parseCached","true","true","true","false"
"qubole/calcite","org.apache.calcite.benchmarks.ParserBenchmark","parseNonCached","true","true","true","false"
"vyazelenko/jmh-gradle-plugin","me.champeau.gradle.jmh.JavaBenchmark","sqrtBenchmark","true","true","true","false"
"vyazelenko/jmh-gradle-plugin","me.champeau.gradle.jmh.mixlang.JavaBenchmark","sqrtBenchmark","true","true","true","false"
"vyazelenko/jmh-gradle-plugin","me.champeau.gradle.jmh.mixlang.JavaBenchmark","sqrtBenchmark","true","true","true","false"
"vyazelenko/jmh-gradle-plugin","me.champeau.gradle.jmh.JavaBenchmarkThatDependsOnTest","sqrtBenchmark","true","true","true","false"
"vyazelenko/jmh-gradle-plugin","me.champeau.gradle.jmh.JavaBenchmark","sqrtBenchmark","true","true","true","false"
"stevegury/reactivesocket-java","io.reactivesocket.ReactiveSocketPerf","requestResponseHello","true","true","true","false"
"stevegury/reactivesocket-java","io.reactivesocket.ReactiveSocketPerf","requestStreamHello1000","true","true","true","false"
"stevegury/reactivesocket-java","io.reactivesocket.ReactiveSocketPerf","fireAndForgetHello","true","true","true","false"
"stevegury/reactivesocket-java","io.reactivesocket.FramePerf","encodeNextCompleteHello","true","true","true","false"
"stevegury/reactivesocket-java","io.reactivesocket.FramePerf","encodeStaticHelloIntoFrame","true","true","true","false"
"philandstuff/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"philandstuff/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"philandstuff/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"philandstuff/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"philandstuff/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"milimetric/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"milimetric/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"milimetric/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"milimetric/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"milimetric/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"randiroe/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"randiroe/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"randiroe/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"randiroe/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"randiroe/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"mkouba/template-benchmark","com.mitchellbosecke.benchmark.Freemarker","benchmark","true","true","true","false"
"mkouba/template-benchmark","com.mitchellbosecke.benchmark.Velocity","benchmark","true","true","true","false"
"mkouba/template-benchmark","com.mitchellbosecke.benchmark.Thymeleaf","benchmark","true","true","true","false"
"mkouba/template-benchmark","com.mitchellbosecke.benchmark.Pebble","benchmark","true","true","true","false"
"mkouba/template-benchmark","com.mitchellbosecke.benchmark.Mustache","benchmark","true","true","true","false"
"trask/glowroot","org.glowroot.microbenchmarks.TraceEntryBenchmark","execute","true","true","true","false"
"trask/glowroot","org.glowroot.microbenchmarks.WeavingBenchmark","execute","true","true","true","false"
"trask/glowroot","org.glowroot.microbenchmarks.TransactionBenchmark","execute","true","true","true","false"
"trask/glowroot","org.glowroot.agent.plugin.jdbc.ResultSetBenchmark","next","true","true","true","false"
"trask/glowroot","org.glowroot.agent.plugin.servlet.ServletBenchmark","service","true","true","true","false"
"gunnarmorling/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedValidation","testCascadedValidation","true","true","true","false"
"gunnarmorling/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedValidation","testCascadedValidationIterative","true","true","true","false"
"gunnarmorling/hibernate-validator","org.hibernate.validator.performance.simple.SimpleValidation","testSimpleBeanValidation","true","true","true","false"
"gunnarmorling/hibernate-validator","org.hibernate.validator.performance.simple.SimpleValidation","testSimpleBeanValidationRecreatingValidatorFactory","true","true","true","false"
"gunnarmorling/hibernate-validator","org.hibernate.validator.performance.statistical.StatisticalValidation","testValidationWithStatisticalGraphDepthAndConstraintValidator","true","true","true","false"
"taltmann/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"taltmann/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"taltmann/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"taltmann/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"taltmann/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"cmebarrow/nuklei","org.kaazing.nuklei.bench.jmh.tcp.TcpServerBM","socket","","","","true"
"cmebarrow/nuklei","org.kaazing.nuklei.bench.jmh.tcp.TcpServerBM","nukleus","","","","true"
"cmebarrow/nuklei","org.kaazing.nuklei.bench.jmh.tcp.TcpServerBM","handler","","","","true"
"cmebarrow/nuklei","org.kaazing.nuklei.bench.jmh.echo.EchoServerBM","nukleus","","","","true"
"cmebarrow/nuklei","org.kaazing.nuklei.bench.jmh.echo.EchoServerBM","handler","","","","true"
"headuck/lmdbjni","org.fusesource.lmdbjni.Iteration","lmdb_buffer_copy","true","true","true","false"
"headuck/lmdbjni","org.fusesource.lmdbjni.Iteration","lmdb_zero_copy","true","true","true","false"
"headuck/lmdbjni","org.fusesource.lmdbjni.Iteration","mapdb","true","true","true","false"
"headuck/lmdbjni","org.fusesource.lmdbjni.Iteration","rocksdb","true","true","true","false"
"headuck/lmdbjni","org.fusesource.lmdbjni.Iteration","leveldb","true","true","true","false"
"Randgalt/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"Randgalt/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"Randgalt/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"Randgalt/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"Randgalt/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"yrashk/es4j","com.eventsourcing.jmh.RepositoryBenchmark","basicPublish","true","true","true","false"
"yrashk/es4j","com.eventsourcing.jmh.HashIndexBenchmark","t01memory","true","true","true","false"
"yrashk/es4j","com.eventsourcing.jmh.HashIndexBenchmark","t02memoryH2","true","true","true","false"
"yrashk/es4j","com.eventsourcing.jmh.HashIndexBenchmark","t03fileH2","true","true","true","false"
"yrashk/es4j","com.eventsourcing.jmh.JournalBenchmark","basicPublish","true","true","true","false"
"dsavinkov/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"dsavinkov/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"dsavinkov/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"dsavinkov/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"dsavinkov/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"placrosse/lmdbjni","org.fusesource.lmdbjni.Iteration","lmdb_buffer_copy","true","true","true","false"
"placrosse/lmdbjni","org.fusesource.lmdbjni.Iteration","lmdb_zero_copy","true","true","true","false"
"placrosse/lmdbjni","org.fusesource.lmdbjni.Iteration","mapdb","true","true","true","false"
"placrosse/lmdbjni","org.fusesource.lmdbjni.Iteration","rocksdb","true","true","true","false"
"placrosse/lmdbjni","org.fusesource.lmdbjni.Iteration","leveldb","true","true","true","false"
"mnrasul/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"mnrasul/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"mnrasul/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"mnrasul/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"mnrasul/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"akshaymaniyar/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"akshaymaniyar/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"akshaymaniyar/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"akshaymaniyar/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"akshaymaniyar/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"douzzi/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"douzzi/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"douzzi/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"douzzi/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"douzzi/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"yshaojie/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"yshaojie/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"yshaojie/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"yshaojie/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"yshaojie/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"ben1247/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"ben1247/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"ben1247/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"ben1247/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"ben1247/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"phambryan/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"phambryan/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"phambryan/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"phambryan/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"phambryan/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"mattnelson/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"mattnelson/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"mattnelson/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"mattnelson/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"mattnelson/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"anonymint/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"anonymint/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"anonymint/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"anonymint/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"anonymint/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"akraxx/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark","parseSize","true","true","true","false"
"akraxx/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark","parseDuration","true","true","true","false"
"akraxx/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark","getEndpointsInfo","true","true","true","false"
"akraxx/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","paramViolation","true","true","true","false"
"akraxx/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark","objViolation","true","true","true","false"
"authbox-lib/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","uncompressed","true","true","true","false"
"authbox-lib/druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark","compressed","true","true","true","false"
"authbox-lib/druid","io.druid.benchmark.ConciseComplementBenchmark","uncompressed","true","true","true","false"
"authbox-lib/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","uncompressed","true","true","true","false"
"authbox-lib/druid","io.druid.benchmark.CompressedIndexedIntsBenchmark","compressed","true","true","true","false"
"KobeFeng/hppc","com.carrotsearch.hppc.benchmarks.B002_HashSet_Add","bulk","true","true","true","false"
"KobeFeng/hppc","com.carrotsearch.hppc.benchmarks.B001_ModXor","modOp","true","true","true","false"
"KobeFeng/hppc","com.carrotsearch.hppc.benchmarks.B001_ModXor","xorOp","true","true","true","false"
"KobeFeng/hppc","com.carrotsearch.hppc.benchmarks.B004_HashSet_CollisionAvalanche","run","true","true","true","false"
"KobeFeng/hppc","com.carrotsearch.hppc.benchmarks.B003_HashSet_Contains","bulk","true","true","true","false"
"marksutt/commonmark-java","org.commonmark.integration.PegDownBenchmark","wholeSpec","true","true","true","false"
"marksutt/commonmark-java","org.commonmark.integration.PegDownBenchmark","examples","true","true","true","false"
"marksutt/commonmark-java","org.commonmark.test.SpecBenchmark","wholeSpec","true","true","true","false"
"marksutt/commonmark-java","org.commonmark.test.SpecBenchmark","examples","true","true","true","false"
"benalexau/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"benalexau/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"benalexau/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"benalexau/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"marksantos/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"marksantos/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"marksantos/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"marksantos/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"jessefugitt/nuklei","org.kaazing.nuklei.jmh.MpscRingBufferBasic","write","true","true","true","false"
"jessefugitt/nuklei","org.kaazing.nuklei.jmh.MpscRingBufferBasic","read","true","true","true","false"
"jessefugitt/nuklei","org.kaazing.nuklei.jmh.MpscArrayBufferBasic","write","true","true","true","false"
"jessefugitt/nuklei","org.kaazing.nuklei.jmh.MpscArrayBufferBasic","read","true","true","true","false"
"rafaeljribeiro/reversegeocode","com.kno10.reversegeocode.bench.BenchmarkReverseGeocoder","randomNumberGeneration","true","true","true","false"
"rafaeljribeiro/reversegeocode","com.kno10.reversegeocode.bench.BenchmarkReverseGeocoder","lookup","true","true","true","false"
"rafaeljribeiro/reversegeocode","com.kno10.reversegeocode.bench.BenchmarkReverseGeocoder","lookupUncached","true","true","true","false"
"rafaeljribeiro/reversegeocode","com.kno10.reversegeocode.bench.BenchmarkReverseGeocoder","openQueryClose","true","true","true","false"
"pcj/commonmark-java","org.commonmark.integration.PegDownBenchmark","wholeSpec","true","true","true","false"
"pcj/commonmark-java","org.commonmark.integration.PegDownBenchmark","examples","true","true","true","false"
"pcj/commonmark-java","org.commonmark.test.SpecBenchmark","wholeSpec","true","true","true","false"
"pcj/commonmark-java","org.commonmark.test.SpecBenchmark","examples","true","true","true","false"
"jaredstehler/jinjava","com.hubspot.jinjava.benchmarks.liquid.LiquidBenchmark","parse","true","true","true","false"
"jaredstehler/jinjava","com.hubspot.jinjava.benchmarks.liquid.LiquidBenchmark","parseAndRender","true","true","true","false"
"jaredstehler/jinjava","com.hubspot.jinjava.benchmarks.jinja2.Jinja2Benchmark","realWorldishBenchmark","true","true","true","false"
"jaredstehler/jinjava","com.hubspot.jinjava.benchmarks.jinja2.Jinja2Benchmark","precompiledBenchmark","true","true","true","false"
"dongfeng2008/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes","vanillaHash","true","true","true","false"
"dongfeng2008/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes","city11Hash","true","true","true","false"
"dongfeng2008/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes","murmur3Hash","true","true","true","false"
"dongfeng2008/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes","xx39Hash","true","true","true","false"
"storozhukBM/javaslang-circuitbreaker","io.github.robwin.circuitbreaker.RingBitSetBenachmark","setBits","true","true","true","false"
"storozhukBM/javaslang-circuitbreaker","io.github.robwin.circuitbreaker.CircuitBreakerBenchmark","invokeSupplier","true","true","true","false"
"storozhukBM/javaslang-circuitbreaker","io.github.robwin.ratelimiter.RateLimiterBenchmark","semaphoreBasedPermission","true","true","true","false"
"storozhukBM/javaslang-circuitbreaker","io.github.robwin.ratelimiter.RateLimiterBenchmark","atomicPermission","true","true","true","false"
"lburgazzoli/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes","vanillaHash","true","true","true","false"
"lburgazzoli/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes","city11Hash","true","true","true","false"
"lburgazzoli/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes","murmur3Hash","true","true","true","false"
"lburgazzoli/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes","xx39Hash","true","true","true","false"
"PKRoma/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"PKRoma/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"PKRoma/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"PKRoma/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"WorstCase00/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"WorstCase00/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","generateGraphBenchmark","true","true","true","false"
"WorstCase00/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","graphPerformanceBenchmark","true","true","true","false"
"WorstCase00/jgrapht","org.jgrapht.perf.matching.PathGrowingWeightedMatchingPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"fc7/jabref","net.sf.jabref.benchmarks.Benchmarks","parse","true","true","true","false"
"fc7/jabref","net.sf.jabref.benchmarks.Benchmarks","write","true","true","true","false"
"fc7/jabref","net.sf.jabref.benchmarks.Benchmarks","search","true","true","true","false"
"fc7/jabref","net.sf.jabref.benchmarks.Benchmarks","inferBibDatabaseMode","true","true","true","false"
"Mogztter/jinjava","com.hubspot.jinjava.benchmarks.liquid.LiquidBenchmark","parse","true","true","true","false"
"Mogztter/jinjava","com.hubspot.jinjava.benchmarks.liquid.LiquidBenchmark","parseAndRender","true","true","true","false"
"Mogztter/jinjava","com.hubspot.jinjava.benchmarks.jinja2.Jinja2Benchmark","realWorldishBenchmark","true","true","true","false"
"Mogztter/jinjava","com.hubspot.jinjava.benchmarks.jinja2.Jinja2Benchmark","precompiledBenchmark","true","true","true","false"
"lonnyj/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement","createAndLeak","true","true","true","false"
"lonnyj/pgjdbc","org.postgresql.benchmark.core.Parser","unmarkDoubleQuestion","true","true","true","false"
"lonnyj/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","baseline","true","true","true","false"
"lonnyj/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection","createAndClose","true","true","true","false"
"buybackoff/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testEncode","true","true","true","false"
"buybackoff/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark","testDecode","true","true","true","false"
"buybackoff/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testEncode","true","true","true","false"
"buybackoff/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark","testDecode","true","true","true","false"
"NiteshKant/reactivesocket-java","io.reactivesocket.perf.RequestStreamPerf","requestStream","true","true","true","false"
"NiteshKant/reactivesocket-java","io.reactivesocket.perf.RequestResponsePerf","requestResponse","true","true","true","false"
"NiteshKant/reactivesocket-java","io.reactivesocket.perf.RequestResponseLargePayloadPerf","requestResponseLargePayload","true","true","true","false"
"NiteshKant/reactivesocket-java","io.reactivesocket.ReactiveSocketPerf","requestResponseHello","true","true","true","false"
"typetools/commons-bcel","org.apache.bcel.BCELBenchmark","baseline","true","true","true","false"
"typetools/commons-bcel","org.apache.bcel.BCELBenchmark","parser","true","true","true","false"
"typetools/commons-bcel","org.apache.bcel.BCELBenchmark","generator","true","true","true","false"
"sheenammittal7/directory-kerby","org.apache.kerby.benchmark.JsonBackendBenchmark","queryTest","true","true","true","false"
"sheenammittal7/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithKerby","true","true","true","false"
"sheenammittal7/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithApacheDS","true","true","true","false"
"dflemstr/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark","originalMethod","true","true","true","false"
"dflemstr/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark","fromHashMap","true","true","true","false"
"dflemstr/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark","dumbIteration","true","true","true","false"
"cogmission/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerLocalInhibitionBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"cogmission/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerGlobalInhibitionBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"cogmission/htm.java","org.numenta.nupic.benchmarks.TemporalMemoryBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"DLotts/incubator-rya","org.apache.rya.benchmark.query.QueryBenchmark","queryRya","true","true","true","false"
"DLotts/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_unchained","true","true","true","false"
"DLotts/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_chained","true","true","true","false"
"pujav65/incubator-rya","org.apache.rya.benchmark.query.QueryBenchmark","queryRya","true","true","true","false"
"pujav65/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_unchained","true","true","true","false"
"pujav65/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_chained","true","true","true","false"
"tkao1000/pinot","com.linkedin.pinot.perf.BenchmarkFileRead","readSVs","true","true","true","false"
"tkao1000/pinot","com.linkedin.pinot.perf.BenchmarkFileWrite","writeSVs","true","true","true","false"
"tkao1000/pinot","com.linkedin.pinot.perf.BenchmarkQueryEngine","sendQueryToPinot","true","true","true","false"
"RaysaOliveira/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark","testCreateNeighbor","true","true","true","false"
"RaysaOliveira/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark","testGetCostWhenFirstCall","true","true","true","false"
"RaysaOliveira/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark","testGetCostWhenSecondCall","true","true","true","false"
"mohanaraosv/commons-bcel","org.apache.commons.bcel6.BCELBenchmark","baseline","true","true","true","false"
"mohanaraosv/commons-bcel","org.apache.commons.bcel6.BCELBenchmark","parser","true","true","true","false"
"mohanaraosv/commons-bcel","org.apache.commons.bcel6.BCELBenchmark","generator","true","true","true","false"
"UniKnow/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerLocalInhibitionBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"UniKnow/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerGlobalInhibitionBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"UniKnow/htm.java","org.numenta.nupic.benchmarks.TemporalMemoryBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"arcanefoam/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"arcanefoam/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","generateGraphBenchmark","true","true","true","false"
"arcanefoam/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase","graphPerformanceBenchmark","true","true","true","false"
"jacobwil/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMP","true","true","true","false"
"jacobwil/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMPConstantTime","true","true","true","false"
"jacobwil/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithoutGMP","true","true","true","false"
"dskinner/SiftXml","com.codesmyth.siftxml.SiftXmlBench","parseUser","true","true","true","false"
"dskinner/SiftXml","com.codesmyth.siftxml.SiftXmlBench","parserRssItem","true","true","true","false"
"dskinner/SiftXml","com.codesmyth.siftxml.IndexBench","create","true","true","true","false"
"pford68/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerLocalInhibitionBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"pford68/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerGlobalInhibitionBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"pford68/htm.java","org.numenta.nupic.benchmarks.TemporalMemoryBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"chelu/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerLocalInhibitionBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"chelu/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerGlobalInhibitionBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"chelu/htm.java","org.numenta.nupic.benchmarks.TemporalMemoryBenchmark","measureAvgCompute_7_Times","true","true","true","false"
"mosoft521/springside4","org.springside.jmh.EnumMapTest","hashMapWithStringKey","true","true","true","false"
"mosoft521/springside4","org.springside.jmh.EnumMapTest","hashMapWithEnumKey","true","true","true","false"
"mosoft521/springside4","org.springside.jmh.EnumMapTest","enumMap","true","true","true","false"
"Maccimo/commons-bcel","org.apache.bcel.BCELBenchmark","baseline","true","true","true","false"
"Maccimo/commons-bcel","org.apache.bcel.BCELBenchmark","parser","true","true","true","false"
"Maccimo/commons-bcel","org.apache.bcel.BCELBenchmark","generator","true","true","true","false"
"aihua/springside4","org.springside.jmh.EnumMapTest","hashMapWithStringKey","true","true","true","false"
"aihua/springside4","org.springside.jmh.EnumMapTest","hashMapWithEnumKey","true","true","true","false"
"aihua/springside4","org.springside.jmh.EnumMapTest","enumMap","true","true","true","false"
"ellisonanne/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMP","true","true","true","false"
"ellisonanne/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMPConstantTime","true","true","true","false"
"ellisonanne/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithoutGMP","true","true","true","false"
"smarthi/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMP","true","true","true","false"
"smarthi/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMPConstantTime","true","true","true","false"
"smarthi/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithoutGMP","true","true","true","false"
"amihalik/incubator-rya","org.apache.rya.benchmark.query.QueryBenchmark","queryRya","true","true","true","false"
"amihalik/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_unchained","true","true","true","false"
"amihalik/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_chained","true","true","true","false"
"tellison/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMP","true","true","true","false"
"tellison/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMPConstantTime","true","true","true","false"
"tellison/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithoutGMP","true","true","true","false"
"dimstav23/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark","testCreateNeighbor","true","true","true","false"
"dimstav23/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark","testGetCostWhenFirstCall","true","true","true","false"
"dimstav23/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark","testGetCostWhenSecondCall","true","true","true","false"
"wraydulany/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMP","true","true","true","false"
"wraydulany/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithGMPConstantTime","true","true","true","false"
"wraydulany/incubator-pirk","org.apache.pirk.benchmark.PaillierBenchmark","testWithoutGMP","true","true","true","false"
"YaningX/directory-kerby","org.apache.kerby.benchmark.JsonBackendBenchmark","queryTest","true","true","true","false"
"YaningX/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithKerby","true","true","true","false"
"YaningX/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithApacheDS","true","true","true","false"
"meiercaleb/incubator-rya","org.apache.rya.benchmark.query.QueryBenchmark","queryRya","true","true","true","false"
"meiercaleb/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_unchained","true","true","true","false"
"meiercaleb/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_chained","true","true","true","false"
"pettermahlen/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark","originalMethod","true","true","true","false"
"pettermahlen/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark","fromHashMap","true","true","true","false"
"pettermahlen/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark","dumbIteration","true","true","true","false"
"shashankasharma/directory-kerby","org.apache.kerby.benchmark.JsonBackendBenchmark","queryTest","true","true","true","false"
"shashankasharma/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithKerby","true","true","true","false"
"shashankasharma/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithApacheDS","true","true","true","false"
"tempbottle/commons-bcel","org.apache.commons.bcel6.BCELBenchmark","baseline","true","true","true","false"
"tempbottle/commons-bcel","org.apache.commons.bcel6.BCELBenchmark","parser","true","true","true","false"
"tempbottle/commons-bcel","org.apache.commons.bcel6.BCELBenchmark","generator","true","true","true","false"
"wolf8334/springside4","org.springside.jmh.EnumMapTest","hashMapWithStringKey","true","true","true","false"
"wolf8334/springside4","org.springside.jmh.EnumMapTest","hashMapWithEnumKey","true","true","true","false"
"wolf8334/springside4","org.springside.jmh.EnumMapTest","enumMap","true","true","true","false"
"kchilton2/incubator-rya","org.apache.rya.benchmark.query.QueryBenchmark","queryRya","true","true","true","false"
"kchilton2/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_unchained","true","true","true","false"
"kchilton2/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark","optimizeQuery_chained","true","true","true","false"
"jiteshmohan/directory-kerby","org.apache.kerby.benchmark.JsonBackendBenchmark","queryTest","true","true","true","false"
"jiteshmohan/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithKerby","true","true","true","false"
"jiteshmohan/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithApacheDS","true","true","true","false"
"codespecs/commons-bcel","org.apache.bcel.BCELBenchmark","baseline","true","true","true","false"
"codespecs/commons-bcel","org.apache.bcel.BCELBenchmark","parser","true","true","true","false"
"codespecs/commons-bcel","org.apache.bcel.BCELBenchmark","generator","true","true","true","false"
"mwringe/hawkular-metrics","org.hawkular.metrics.benchmark.jmh.InsertBenchmark","insertBenchmarkRxJava1","true","true","true","false"
"mwringe/hawkular-metrics","org.hawkular.metrics.benchmark.jmh.InsertBenchmark","insertBenchmarkSingle","true","true","true","false"
"eonezhang/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testUsingRegex","true","true","true","false"
"eonezhang/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testNewByHand","true","true","true","false"
"mcculls/cglib","net.sf.cglib.jmh.BeansBenchmark","newInstance","true","true","true","false"
"mcculls/cglib","net.sf.cglib.jmh.BeansBenchmark","baseline","true","true","true","false"
"stagraqubole/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","handCoded","true","true","true","false"
"stagraqubole/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor","compiled","true","true","true","false"
"davidbecker/SquidLib","squidpony.performance.DijkstraBenchmark","measureScan","true","true","true","false"
"davidbecker/SquidLib","squidpony.performance.DijkstraBenchmark","measurePath","true","false","false","false"
"thomasnield/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks","selectUsingLibraryUsingExplicitMapping","true","true","true","false"
"thomasnield/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks","selectUsingRawJdbc","true","true","true","false"
"jasonchaffee/parseq","com.linkedin.parseq.IdGeneratorBenchmark","getNextId","true","true","true","false"
"jasonchaffee/parseq","com.linkedin.parseq.LongIdGeneratorBenchmark","getNextId","true","true","true","false"
"jforge/rapidpm-microservice","perf.org.rapidpm.microservice.demo.FullPerfTest","testApplicationPath","true","true","true","false"
"jforge/rapidpm-microservice","perf.org.rapidpm.microservice.demo.FullPerfTest","benchmarkRuntimeOverhead","true","true","true","false"
"marcomorain/rate-limited-logger","com.swrve.ratelimitedlogger.benchmarks.BenchWithStringKey","testMethod","true","true","true","false"
"marcomorain/rate-limited-logger","com.swrve.ratelimitedlogger.benchmarks.BenchRateLimitedLogWithPattern","testMethod","true","true","true","false"
"drankye/directory-kerby","org.apache.kerby.benchmark.JsonBackendBenchmark","queryTest","true","true","true","false"
"drankye/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithKerby","true","true","true","false"
"dain/aircompressor","io.airlift.compress.benchmark.CompressionBenchmark","compress","true","true","true","false"
"dain/aircompressor","io.airlift.compress.benchmark.CompressionBenchmark","decompress","true","true","true","false"
"pinotlytics/pinot","com.linkedin.pinot.perf.BenchmarkFileRead","readSVs","true","true","true","false"
"pinotlytics/pinot","com.linkedin.pinot.perf.BenchmarkQueryEngine","sendQueryToPinot","true","true","true","false"
"incubos/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks","fixed","true","true","true","false"
"incubos/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks","variable","true","true","true","false"
"tietang/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks","selectUsingLibraryUsingExplicitMapping","true","true","true","false"
"tietang/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks","selectUsingRawJdbc","true","true","true","false"
"puneetarora2000/fastdtw-1","com.fastdtw.dtw.Benchmarks","fastDtw","true","true","true","false"
"puneetarora2000/fastdtw-1","com.fastdtw.dtw.Benchmarks","dtw","true","true","true","false"
"jjYBdx4IL/fannj","com.googlecode.fannj.PerformanceTest","benchmarkSingleStepTrainingJNA1000x","","false","","true"
"jjYBdx4IL/fannj","com.googlecode.fannj.PerformanceTest","benchmarkSingleStepTrainingJNI1000x","","false","","true"
"urbanairship/pushy","com.relayrides.pushy.apns.ApnsClientBenchmark","testSendNotifications","true","true","true","false"
"urbanairship/pushy","com.relayrides.pushy.apns.util.ApnsPayloadBuilderBenchmark","testBuildWithMaximumLength","true","true","true","false"
"entelesis/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testUsingRegex","true","true","true","false"
"entelesis/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testNewByHand","true","true","true","false"
"is00hcw/parseq","com.linkedin.parseq.IdGeneratorBenchmark","getNextId","true","true","true","false"
"is00hcw/parseq","com.linkedin.parseq.LongIdGeneratorBenchmark","getNextId","true","true","true","false"
"ktoso/hpack","com.twitter.hpack.microbench.DecoderBenchmark","decode","true","true","true","false"
"ktoso/hpack","com.twitter.hpack.microbench.EncoderBenchmark","encode","true","true","true","false"
"brharrington/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testUsingRegex","true","true","true","false"
"brharrington/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testNewByHand","true","true","true","false"
"vtsyryuk/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks","selectUsingLibraryUsingExplicitMapping","true","true","true","false"
"vtsyryuk/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks","selectUsingRawJdbc","true","true","true","false"
"pravsingh/Algorithm-Implementations","Factorial","testStreamedParallel","true","true","true","false"
"pravsingh/Algorithm-Implementations","Factorial","testTreeFactorial","true","true","true","false"
"plusplusjiajia/directory-kerby","org.apache.kerby.benchmark.JsonBackendBenchmark","queryTest","true","true","true","false"
"plusplusjiajia/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark","decodeWithKerby","true","true","true","false"
"jotak/hawkular-metrics","org.hawkular.metrics.benchmark.jmh.InsertBenchmark","insertToMultiplePartitions","true","true","true","false"
"jotak/hawkular-metrics","org.hawkular.metrics.benchmark.jmh.InsertBenchmark","insertToSinglePartition","true","true","true","false"
"matrixdigi/pinot","com.linkedin.pinot.perf.BenchmarkFileRead","readSVs","true","true","true","false"
"matrixdigi/pinot","com.linkedin.pinot.perf.BenchmarkQueryEngine","sendQueryToPinot","true","true","true","false"
"kekbur/logback-ext","org.eluder.logback.ext.lmax.appender.AppenderBenchmark","throughput","true","true","true","false"
"kekbur/logback-ext","org.eluder.logback.ext.lmax.appender.AppenderBenchmark","latency","true","true","true","false"
"jonefeewang/armeria","com.linecorp.armeria.server.thrift.PooledResponseBufferBenchmark","pooled","true","true","true","false"
"jonefeewang/armeria","com.linecorp.armeria.server.thrift.PooledResponseBufferBenchmark","unpooled","true","true","true","false"
"Poxos/collections-m0e4","io.kovalevskyi.collections.test.CollectionTest","testArrayListAddMethod","true","true","true","false"
"Poxos/collections-m0e4","io.kovalevskyi.collections.test.CollectionTest","testLinkedListAddMethod","true","true","true","false"
"davidmoten/fastdtw","com.fastdtw.dtw.Benchmarks","fastDtw","","false","","true"
"davidmoten/fastdtw","com.fastdtw.dtw.Benchmarks","dtw","","false","","true"
"fengshao0907/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testUsingRegex","true","true","true","false"
"fengshao0907/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testNewByHand","true","true","true","false"
"sakuna63/requery","io.requery.test.BenchmarkTest","queryPerson","true","true","true","false"
"sakuna63/requery","io.requery.test.BenchmarkTest","queryJdbc","true","true","true","false"
"WriskHQ/logback-ext","org.eluder.logback.ext.lmax.appender.AppenderBenchmark","throughput","true","true","true","false"
"WriskHQ/logback-ext","org.eluder.logback.ext.lmax.appender.AppenderBenchmark","latency","true","true","true","false"
"jMotif/fastdtw","com.fastdtw.dtw.Benchmarks","fastDtw","true","true","true","false"
"jMotif/fastdtw","com.fastdtw.dtw.Benchmarks","dtw","true","true","true","false"
"EmteZogaf/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks","selectUsingLibraryUsingExplicitMapping","true","true","true","false"
"EmteZogaf/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks","selectUsingRawJdbc","true","true","true","false"
"dpolivaev/rest-schemagen","com.mercateo.common.rest.schemagen.Benchmarks","createLinkFactory","true","true","true","false"
"dpolivaev/rest-schemagen","com.mercateo.common.rest.schemagen.Benchmarks","createLink","true","true","true","false"
"sdeleuze/reactor-core","reactor.CheckpointBenchmark","withFullCheckpoint","true","true","true","false"
"sdeleuze/reactor-core","reactor.CheckpointBenchmark","withLightCheckpoint","true","true","true","false"
"ccortezb/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testUsingRegex","true","true","true","false"
"ccortezb/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testNewByHand","true","true","true","false"
"sensaid/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testUsingRegex","true","true","true","false"
"sensaid/servo","com.netflix.servo.publish.atlas.ValidCharactersBench","testNewByHand","true","true","true","false"
"fischmax/rest-schemagen","com.mercateo.common.rest.schemagen.Benchmarks","createLinkFactory","true","true","true","false"
"fischmax/rest-schemagen","com.mercateo.common.rest.schemagen.Benchmarks","createLink","true","true","true","false"
"codehaus-plexus/plexus-utils","org.codehaus.plexus.util.xml.Xpp3DomPerfTest","benchmarkClone","","false","","true"
"codehaus-plexus/plexus-utils","org.codehaus.plexus.util.xml.Xpp3DomPerfTest","benchmarkMerge","","false","","true"
"scalecube/rsocket-transport-aeron","io.rsocket.test.FrameMapperBenchmark","nettyToAeron","","false","","true"
"scalecube/rsocket-transport-aeron","io.rsocket.test.FrameMapperBenchmark","aeronToNettyBuffer","","false","","true"
"antag99/artemis-odb","com.artemis.benchmark.InjectionBenchmark","createWorld_with_injectionCache","true","true","true","false"
"tsouza/elasticsearch","org.elasticsearch.benchmark.routing.allocation.AllocationBenchmark","measureAllocation","true","true","true","false"
"aaronzirbes/RxGroovy","rx.lang.groovy.ExtensionPerf","extension","true","true","true","false"
"jsirois/pants","org.pantsbuild.testproject.bench.JmhBench","wellHelloThere","true","true","true","false"
"247687009/tchannel-java","com.uber.tchannel.Benchmarks","basicBenchmark","true","true","true","false"
"xquery/marklogic-sesame","com.marklogic.semantics.sesame.benchmarks.MarkLogicRepositoryConnectionNaivePerfTest","perfNaiveQuery1","true","true","true","false"
"comsysto/jmh-gradle-plugin","me.champeau.gradle.jmh.sample.SampleBenchmark","sqrtBenchmark","true","true","true","false"
"VladimirErshov/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCachePutBenchmark","testPut","true","true","true","false"
"aslanbekirov/crate","io.crate.types.StringTypeTest","booleanConversion","true","true","true","false"
"Infeligo/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"keycai/jmh-gradle-plugin","me.champeau.gradle.jmh.sample.SampleBenchmark","sqrtBenchmark","true","true","true","false"
"pombredanne/pants","org.pantsbuild.testproject.bench.JmhBench","wellHelloThere","true","true","true","false"
"cotsog/tchannel-java","com.uber.tchannel.Benchmarks","basicBenchmark","true","true","true","false"
"rouzwawi/apollo","com.spotify.apollo.meta.model.benchmark.GathererBenchmark","doRequest","true","true","true","false"
"rhauch/kafka","org.apache.kafka.jmh.cache.LRUCacheBenchmark","testCachePerformance","true","true","true","false"
"xquery/marklogic-jena-1","com.marklogic.jena.examples.NaiveBenchmarkExample","perfNaiveQuery1","true","true","true","false"
"gjroelofs/artemis-odb","com.artemis.benchmark.InjectionBenchmark","createWorld_with_injectionCache","true","true","true","false"
"amannaly/jbender","com.pinterest.jbender.JBenderHttpBenchmark","loadtestHttpThroughput","true","true","true","false"
"jtulach/mx","com.oracle.mxtool.bench.TestJMH","testJMH","true","true","true","false"
"grechaw/marklogic-jena","com.marklogic.jena.examples.NaiveBenchmarkExample","perfNaiveQuery1","true","true","true","false"
"cthiebaud/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"phensley/less-compiler","com.squarespace.less.ParserBenchmark","parseSelector","true","true","true","false"
"loriopatrick/fixio","org.sample.DecoderBenchmark","testDecodeMessage","true","true","true","false"
"snorrees/artemis-odb","com.artemis.benchmark.InjectionBenchmark","createWorld_with_injectionCache","true","true","true","false"
"shiningguang/tchannel-java","com.uber.tchannel.Benchmarks","basicBenchmark","true","true","true","false"
"wselwood/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase","run","true","true","true","false"
"nickrobson/TridentSDK","net.tridentsdk.base.VectorsTest","addT","true","true","true","false"
"elevennl/stagemonitor","org.stagemonitor.benchmark.profiler.VariableMethodsBenchmark","testManualProfiling","true","true","true","false"
