"project","benchmarkName","numberOfChanges"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Alog.simple","0"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Alog.exception","0"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Alog.parameter","0"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Log4j2.simple","0"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Log4j2.exception","0"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Log4j2.parameter","0"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Logback.simple","0"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Logback.exception","0"
"a-hansen/alog","com.comfortanalytics.alog.AlogBenchmark$Logback.parameter","0"
"Abnaxos/guards","benchmarks.GuardBenchmark.notGuarded","0"
"Abnaxos/guards","benchmarks.GuardBenchmark.manuallyGuarded","0"
"Abnaxos/guards","benchmarks.GuardBenchmark.manuallyMultiGuarded","0"
"Abnaxos/guards","benchmarks.GuardBenchmark.guardedByAgent","0"
"Abnaxos/guards","benchmarks.GuardBenchmark.multiGuardedByAgent","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkRandomInt.timsortRandomInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkPsuedoAscendingString.timsortPsuedoAscendingString","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkAscendingInt.timsortAscendingInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkWorstCase.timsortWorstCase","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkRandomBigInt.timsortRandomBigInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkAscending10RndAtEndInt.timsortAscending10RndAtEndInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkAscending10RndAtEndInt.timsortAscending10RndAtEndInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkAscendingInt.timsortAscendingInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkRandomWithDupsInt.timsortRandomWithDupsInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkAscending3RndExchInt.timsortAscending3RndExchInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkDupsGaloreInt.timsortDupsGaloreInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkAllEqualInt.timsortAllEqualInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkRandomWithDupsInt.timsortRandomWithDupsInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkRandomInt.timsortRandomInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkAllEqualInt.timsortAllEqualInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkDupsGaloreInt.timsortDupsGaloreInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkWorstCase.timsortWorstCase","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkRandomBigInt.timsortRandomBigInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkPsuedoAscendingString.timsortPsuedoAscendingString","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkDescendingInt.timsortDescendingInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.StijnSortBenchmarkDescendingInt.timsortDescendingInt","0"
"abstools/timsort-benchmark","nl.cwi.timsort.benchmark.TimSortBenchmarkAscending3RndExchInt.timsortAscending3RndExchInt","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathAtan2Benchmark.baselineAtan2","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathAtan2Benchmark.narjillosFastMathAtan2","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathAtan2Benchmark.commonsFastMathAtan2","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathSinCosBenchmark.baselineSin","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathSinCosBenchmark.narjillosFastMathSin","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathSinCosBenchmark.commonsFastMathSin","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathSinCosBenchmark.baselineCos","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathSinCosBenchmark.narjillosFastMathCos","0"
"acisternino/narjillos-math-bench","org.nusco.narjillos.jmh.FastMathSinCosBenchmark.commonsFastMathCos","0"
"addthis/basis","com.addthis.basis.util.BitReversals.reverseJdk","0"
"addthis/basis","com.addthis.basis.util.BitReversals.reverseBasis","0"
"addthis/basis","com.addthis.basis.util.BitReversals.stackReverse","0"
"addthis/basis","com.addthis.basis.util.BitReversals.stanfordParallelReverse","0"
"addthis/basis","com.addthis.basis.util.BitReversals.stanfordSevenOpReverse","0"
"addthis/basis","com.addthis.basis.util.BitReversals.stanfordMultiplyReverse","0"
"addthis/basis","com.addthis.basis.util.BitReversals.loopReverse","0"
"addthis/basis","com.addthis.basis.chars.CharSeqOnlyIter$AbstractCharSeqBench.iterateString","0"
"addthis/basis","com.addthis.basis.chars.CharSeqIterAndEncode$AbstractCharSeqBench.iterateString","0"
"addthis/codec","com.addthis.basis.chars.CharSeqAbstractExample$AbstractCharSeqBench.iterateString","0"
"addthis/codec","com.addthis.basis.util.BitReversalExample.reverseJdk","0"
"addthis/codec","com.addthis.basis.util.BitReversalExample.reverseBasis","0"
"addthis/codec","com.addthis.basis.util.BitReversalExample.stackReverse","0"
"addthis/codec","com.addthis.basis.util.BitReversalExample.stanfordParallelReverse","0"
"addthis/codec","com.addthis.basis.util.BitReversalExample.stanfordSevenOpReverse","0"
"addthis/codec","com.addthis.basis.util.BitReversalExample.stanfordMultiplyReverse","0"
"addthis/codec","com.addthis.basis.util.BitReversalExample.loopReverse","0"
"addthis/codec","com.addthis.codec.reflection.ReflectOps.reflectCheckArray","0"
"addthis/codec","com.addthis.codec.reflection.ReflectOps.infoCheckArray","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.Jackson.jsonUnmashal","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.Jackson.jsonMashal","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.ExceptionsBenchMark.throwRuntimeException","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.DynamicLanguages.groovy","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.RegularExpressions.validateEmail","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.GeneratePrimeNumbersWithForLoop.generatePrime","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.MicroBenchMarks.deadCodeElimination","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.MicroBenchMarks.noDeadCodeElimination","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.MicroBenchMarks.calculateLogPiCodeElimination","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.MicroBenchMarks.calculateLogPi","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.MicroBenchMarks.loopThatCanBeUnrolled","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.MicroBenchMarks.manualUnrollOfLoop","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.MicroBenchMarks.arrayListForeach","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.MicroBenchMarks.arrayListIterator","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.GeneratePoiWorkBook.generatePoiWorkBook","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.Reflection.withoutReflection","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.Reflection.doReflection","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.Jackson.xmlMashalJackson","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.Jackson.xmlUnmashalJackson","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.Jackson.xmlMashalJacksonStatic","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.Jackson.xmlUnmashalJacksonStatic","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.JaxbMashalUnMashal.mashal","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.JaxbMashalUnMashal.mashalStatic","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.JaxbMashalUnMashal.unmashal","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.JaxbMashalUnMashal.unmashalStatic","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.GeneratePoiWorkBook.generatePoiXLSWorkBook","0"
"AdoptOpenJDK/vmbenchmarks","com.github.vmbenchmarks.GeneratePoiWorkBook.generatePoiXLSXWorkBook","0"
"afdw/fastcloud","com.anton.fastcloud.perf.PerfContinuousBuffer.test","0"
"afdw/fastcloud","com.anton.fastcloud.perf.PerfSerialization.serialize","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledHeapAllocAndFree","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledDirectAllocAndFree","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledHeapAllocAndFree","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledDirectAllocAndFree","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledHeapAllocAndFree","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledDirectAllocAndFree","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetInt","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetShort","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetLong","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetInt","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetShort","0"
"afredlyj/learn-netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetLong","0"
"afredlyj/learn-netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark.jdkThreadLocalGet","0"
"afredlyj/learn-netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark.fastThreadLocal","0"
"afredlyj/learn-netty","io.netty.microbench.internal.RecyclableArrayListBenchmark.recycleSameThread","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.ProxyTest.proxy","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.ProxyTest.proxy0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashStructTest.testInsertion","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashStructTest.testRAetrieval","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashStructTest.testRBemoval","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashStructTest.testInsertion0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashStructTest.testRAetrieval0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashStructTest.testRBemoval0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashBenchmark.atroll","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashBenchmark.java","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.HashBenchmark.murmur","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.ReflectVsNormal.NormalInvoke","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.ReflectVsNormal.ReflectInvoke","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.FactoryVsCache.cache","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.FactoryVsCache.factory","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.EventTest.aRegister","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.EventTest.bCall","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.SynchronizationTest.synchedMap","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.SynchronizationTest.synchSynchedMap","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.SetStructTest.testInsertion","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.SetStructTest.testInsertion0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.SetStructTest.testRemoval","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.SetStructTest.testRemoval0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.UnsafeProviderTest.getUnsafe","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.UnsafeProviderTest.getUnsafe0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.readVol","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.writeVol","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.readAto","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.writeAto","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.writeAto0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.readUnsafe","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.readReg","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.writeReg","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.writeUnsafe","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.AtomicVsVolatile.writeUnsafe0","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.LockBenchmark.synched","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.LockBenchmark.rlock","0"
"AgentTroll/TrollCommons","com.gmail.woodyc40.commons.LockBenchmark.internal","0"
"airlift/aircompressor","io.airlift.compress.DecompressBenchmark.blockAirliftSnappy","0"
"airlift/aircompressor","io.airlift.compress.DecompressBenchmark.blockXerialSnappy","0"
"airlift/aircompressor","io.airlift.compress.DecompressBenchmark.streamAirliftSnappy","0"
"airlift/aircompressor","io.airlift.compress.DecompressBenchmark.streamHadoopSnappy","0"
"airlift/aircompressor","io.airlift.compress.benchmark.CompressionBenchmark.compress","0"
"airlift/aircompressor","io.airlift.compress.benchmark.CompressionBenchmark.decompress","0"
"airlift/aircompressor","io.airlift.compress.lz4.BenchmarkCount.count","0"
"airlift/airlift","io.airlift.stats.cardinality.BenchmarkSparseHll.benchmarkInsert","0"
"airlift/airlift","io.airlift.stats.cardinality.BenchmarkDenseHll.benchmarkInsert","0"
"airlift/airlift","io.airlift.stats.BenchmarkQuantileDigest.benchmarkInserts","0"
"airlift/airlift","io.airlift.stats.BenchmarkQuantileDigest.benchmarkCopy","0"
"airlift/airlift","io.airlift.stats.BenchmarkQuantileDigest.benchmarkMerge","0"
"airlift/airlift","io.airlift.concurrent.BenchmarkWhenAnyCompleteCancelOthers.benchmark","0"
"airlift/airlift","io.airlift.stats.BenchmarkQuantileDigest.benchmarkDeserialize","0"
"airlift/airlift","io.airlift.stats.BenchmarkQuantileDigest.benchmarkSerialize","0"
"airlift/airlift","io.airlift.stats.BenchmarkQuantileDigest.benchmarkHistogram","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b00sliceZero","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b01customLoopZero","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b02unsafeZero","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b03slice32B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b04customLoop32B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b05unsafe32B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b06slice128B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b07customLoop128B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b08unsafe128B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b09slice512B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b10customLoop512B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b11unsafe512B","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b12slice1K","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b13customLoop1K","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b14unsafe1K","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b15slice1M","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b16customLoop1M","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b17unsafe1M","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b18slice128M","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b19customLoop128M","0"
"airlift/slice","io.airlift.slice.MemoryCopyBenchmark.b20unsafe128M","0"
"airlift/slice","io.airlift.slice.BenchmarkHashCode.hash","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3.hash64","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3.hash","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3.guava","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3.specializedHashLong","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3.hashLong","0"
"airlift/slice","io.airlift.slice.BenchmarkXxHash64.xxhash64","0"
"airlift/slice","io.airlift.slice.BenchmarkXxHash64.specializedHashLong","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash32.hash","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash32.guava","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash32.specializedHashInt","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash32.hashInt","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash32.specializedHashLong","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash32.hashLong","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash128.hash64","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash128.hash","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash128.guava","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash128.specializedHashLong","0"
"airlift/slice","io.airlift.slice.BenchmarkMurmur3Hash128.hashLong","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkLengthOfCodePointFromStartByte","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkCountCodePoints","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkOffsetByCodePoints","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkSubstring","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkReverse","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkToLowerCase","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkToUpperCase","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkLeftTrim","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkRightTrim","0"
"airlift/slice","io.airlift.slice.SliceUtf8Benchmark.benchmarkTrim","0"
"airlift/slice","io.airlift.slice.BenchmarkSlice.compareTo","0"
"airlift/slice","io.airlift.slice.BenchmarkSlice.equalsUnchecked","0"
"airlift/slice","io.airlift.slice.BenchmarkSlice.equalsObject","0"
"aitusoftware/flute","com.aitusoftware.flute.client.benchmark.RecordingBenchmark.baseline","0"
"aitusoftware/flute","com.aitusoftware.flute.client.benchmark.RecordingBenchmark.timed","0"
"Ajeet-Ganga/howToGuide","com.test.test2.HashTableVSHashMap.useHashmap","0"
"Ajeet-Ganga/howToGuide","com.test.test2.HashTableVSHashMap.useHashtable","0"
"Ajeet-Ganga/howToGuide","MyBenchmark.testGson","0"
"Ajeet-Ganga/howToGuide","MyBenchmark.testJackson","0"
"Ajeet-Ganga/howToGuide","MyBenchmark.oneMilliSecondOp","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueuePerf.offerPollPrimitive","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueuePerf.offerCapacityPrimitive","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueueXPerf.send1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueueXPerf.recv1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueueXPerf.send3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueueXPerf.recv3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueueXPerf.send4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueueXPerf.recv4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueueXPerf.send2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.SpscIntArrayQueueXPerf.recv2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rxRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rxRangeFlatMapJust","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rxRangeFlatMapRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.StreamVsRxJava.rx2Parallel2b","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.send1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.recv1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.send2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.recv2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.send3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.recv3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rxRangeAsync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rxRangePipeline","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rx2Range","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rx2RangeFlatMapJust","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rx2RangeFlatMapRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rx2RangeAsync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rx2RangePipeline","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.raRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.raRangeFlatMapJust","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.raRangeFlatMapRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.raRangeAsync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.raRangePipeline","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZipPerf.baseline","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZipPerf.syncSync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZipPerf.syncAsync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZipPerf.asyncSync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZipPerf.asyncAsync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ObservableFlatMapPerf.baseline","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ObservableFlatMapPerf.justFlatMapRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ObservableFlatMapPerf.justFlatMapArray","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ObservableFlatMapPerf.rangeFlatMapJust","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ObservableFlatMapPerf.justFlatMapJust","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ObservableFlatMapPerf.rangeFlatMapRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ObservableFlatMapPerf.rangeFlatMapArray","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.PublisherFlatMapPerf.baseline","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.PublisherFlatMapPerf.justFlatMapRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.PublisherFlatMapPerf.justFlatMapArray","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.PublisherFlatMapPerf.rangeFlatMapJust","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.PublisherFlatMapPerf.justFlatMapJust","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.PublisherFlatMapPerf.rangeFlatMapRange","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.PublisherFlatMapPerf.rangeFlatMapArray","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRscOpt.measureThroughput","1"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithReactor25Opt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithReactor25.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithStreams.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.range_rx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapJust_rx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapRange_rx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeAsync_rx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangePipeline_rx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.range_rx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapJust_rx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapRange_rx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeAsync_rx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangePipeline_rx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.range_rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapJust_rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapRange_rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeAsync_rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangePipeline_rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.range_reactor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapJust_reactor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapRange_reactor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeAsync_reactor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangePipeline_reactor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.range_akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapJust_akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapRange_akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeAsync_akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangePipeline_akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.range_akka2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapJust_akka2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeFlatMapRange_akka2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangeAsync_akka2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImpls.rangePipeline_akka2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.rscWindmill","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.executor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.forkjoin","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.windmill","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava1Opt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava2.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava2Opt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRsc.measureThroughput","1"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueuePerf.rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueuePerf.rscLinked","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueuePerf.jctUnsafe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueuePerf.jctSafe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueuePerf.jctUnsafeGrow","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueuePerf.jctUnsafeUnb","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueuePerf.jctSafeUnb","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.rangeRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.takeRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapXRangeRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapXRangeRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.rangeRsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.takeRsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapRsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapRsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapXRangeRsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapXRangeRsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.rangeFx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.takeFx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapFx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapFx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapXRangeFx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapXRangeFx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.rangeIx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.takeIx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapIx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapIx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapXRangeIx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapXRangeIx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.rangeGx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.takeGx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapGx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapGx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.flatMapXRangeGx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.IxPerf.concatMapXRangeGx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.fluxion","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.rx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.rx2Windmill","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.rx1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.rx1Windmill","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.reactor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangeAsync_rx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangePipeline_rx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangeAsync_rx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangePipeline_rx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangeAsync_rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangePipeline_rsc","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangeAsync_reactor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangePipeline_reactor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangeAsync_akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangePipeline_akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangeAsync_akka2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangePipeline_akka2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangeAsync_actorscheduler","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ReactiveStreamsImplsAsync.rangePipeline_actorscheduler","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsFlatMapPerf.rangeFlatMapJust_akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WindmillPerf.Flux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithIxOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithIx.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.asyncenum.IAsyncEnumerablePerf.range_ax","0"
"akarnokd/akarnokd-misc","hu.akarnokd.asyncenum.IAsyncEnumerablePerf.rangePipeline_ax","0"
"akarnokd/akarnokd-misc","hu.akarnokd.asyncenum.IAsyncEnumerablePerf.rangeAsync_ax","0"
"akarnokd/akarnokd-misc","hu.akarnokd.asyncenum.IAsyncEnumerablePerf.range_px","0"
"akarnokd/akarnokd-misc","hu.akarnokd.asyncenum.IAsyncEnumerablePerf.rangePipeline_px","0"
"akarnokd/akarnokd-misc","hu.akarnokd.asyncenum.IAsyncEnumerablePerf.rangeAsync_px","0"
"akarnokd/akarnokd-misc","hu.akarnokd.asyncenum.IAsyncEnumerablePerf.rangeAsyncClassic_px","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRscOpt2.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.nio.NIONetworkNotification.send","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.nio.BufferPerf.indexLoop","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.nio.BufferPerf.consumeLoop","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.ipc.SocketNetworkNotification.send","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava2FlowableOpt.measureThroughput","1"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava2Observable.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava2Flowable.measureThroughput","1"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava2ObservableOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithReactor25Opt2.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithGuavaOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava1.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRscParallelOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithReactor3Opt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithReactor3ParallelOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithGuava.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithReactor3.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithGuavaBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava1Beta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava2ObservableBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithIxBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithReactor3Beta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRscBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZeroOnePerf.monoOne","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZeroOnePerf.monoEmpty","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZeroOnePerf.single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZeroOnePerf.maybeOne","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZeroOnePerf.maybeEmpty","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ZeroOnePerf.singleOld","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMapPerf.flowableMaybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMapPerf.mergeMaybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMapPerf.observableMaybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMapPerf.flowableSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMapPerf.observableSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMapPerf.fluxMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ShakespearePlaysScrabbleWithRxJava2FlowableBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ParallelPerf.parallelStream","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ParallelPerf.parallelFlowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.ParallelPerf.parallelFlowableForkJoin","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithGuavaBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithStreamsBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava1Beta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRscOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava2FlowableOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava2Observable.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithGuavaOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava1.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava2Flowable.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava2ObservableBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithIxBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithStreams.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRscParallelOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava2ParallelOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithIxOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithReactor3Opt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithReactor3Beta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRscBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava1Opt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava2FlowableBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithReactor3ParallelOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithGuava.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithReactor3.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava2ObservableOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRsc.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithIx.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMap2Perf.flowableMaybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMap2Perf.mergeMaybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMap2Perf.observableMaybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMap2Perf.flowableSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMap2Perf.observableSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.OnesTypesFlatMap2Perf.fluxMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.flatMapAkkaAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.concatMapAkkaAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.flatMapAkkaRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.concatMapAkkaRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.concatMapRxAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.flatMapRxAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.concatMapAkkaRxAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.flatMapAkkaRxAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.concatMapRxRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsCrossMapPerf.flatMapRxRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ClassicAsyncPerf.plainExecutor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ClassicAsyncPerf.plainForkJoin","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ClassicAsyncPerf.observableExecutor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ClassicAsyncPerf.observableForkJoin","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ClassicAsyncPerf.flowableExecutor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ClassicAsyncPerf.flowableForkJoin","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.flatMapAkkaAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.concatMapAkkaAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.flatMapAkkaRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.concatMapAkkaRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.concatMapRxAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.flatMapRxAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.concatMapAkkaRxAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.flatMapAkkaRxAkka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.concatMapRxRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.AkkaStreamsReactorCrossMapPerf.flatMapRxRx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.rangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.arrayRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.iterableRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapJustRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapXRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapJustRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapXRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenJustRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenXRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.rangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.arrayRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.iterableRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapJustRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapXRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapJustRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapXRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenJustRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenXRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.rangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.arrayRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.iterableRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapJustRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapXRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapJustRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapXRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenJustRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenXRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.rangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.arrayReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.iterableReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapJustReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.concatMapXRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapJustReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flatMapXRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenJustReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.StreamingPerf.flattenXRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstRxBlockingObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.lastRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.lastRxBlockingObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstRxSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstRxBlockingSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.emptyRxCompletable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.lastRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.lastRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstRx2Single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.emptyRx2Completable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.emptyRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.lastReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.firstReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BlockingPerf.emptyReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverRxSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyRxSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justRxSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverRxCompletable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyRxCompletable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justRxCompletable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverRx2Single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyRx2Single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justRx2Single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverRx2Completable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyRx2Completable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justRx2Completable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.neverReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.emptyReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubscribePerf.justReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.AsyncPerf.asyncRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.AsyncPerf.pipelineRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.AsyncPerf.asyncRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.AsyncPerf.pipelineRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.AsyncPerf.asyncRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.AsyncPerf.pipelineRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.AsyncPerf.asyncReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.AsyncPerf.pipelineReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRxAsyncSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRxPublishSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRxBehaviorSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRxReplaySubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRxUnicastSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2AsyncSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2PublishSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2BehaviorSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2ReplaySubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2UnicastSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2AsyncProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2PublishProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2BehaviorProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2ReplayProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeRx2UnicastProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeReactorDirectProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeReactorReplayProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.SubjectPerf.rangeReactorUnicastProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.BasePerf.baseline","0"
"akarnokd/akarnokd-misc","hu.akarnokd.iterables.LambdaSingletonPerf.lambda","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithAkkaStreamBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithAkkaStreamOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithCyclopsReactOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ForEachPerf.forLoop","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ForEachPerf.rx1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ForEachPerf.rx2Obs","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ForEachPerf.rx2ObsMath","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ForEachPerf.rx2Flow","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.classic.ForEachPerf.rx2FlowMath","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithJOOLOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithJOOLBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithIEOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithJOOL.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.send4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.recv4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.send5","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpscLinkedArrayQueueXPerf.recv5","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueueOfferPollOverhead.mpmc1a","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.QueueOfferPollOverhead.mpmcFill1a","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpmcLinkedArrayQueuePerf.send3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.queue.MpmcLinkedArrayQueuePerf.recv3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MonoThenFlatMap.monoThen","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MonoThenFlatMap.monoFlatMapLast","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MonoThenFlatMap.monoFlatMapFirst","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MonoThenFlatMap.soloFlatMap","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MonoThenFlatMap.singleFlatMap","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MonoThenFlatMap.perhapsFlatMap","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MonoThenFlatMap.maybeFlatMap","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithR4JBeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithR4JOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithI4JOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithR4J.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithLSABeta.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithLSA.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.ItemManagerPerf.offerRemoveV1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.ItemManagerPerf.offerRemoveV2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.ItemManagerPerf.offerRemoveV3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithIObsOpt.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithDirect.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkPerf.akkaMap","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkPerf.flowableMap","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkPerf.flowableMap2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkPerf.flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkPerf.flowableMapAkkaScheduler","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkPerf.flowableMapSync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.LogSumPerf.rx1Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.LogSumPerf.rx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.LogSumPerf.rx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.LogSumPerf.rx2Parallel","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkFanInOutPerf.akka","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkFanInOutPerf.rx","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkFanInOutPerf.rxSubscribeOn","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkFanInOutPerf.rxObserveOn","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkFanInOutPerf.rxSubscribeOnMerge","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.MaterializationBenchmarkFanInOutPerf.rxObserveOnMerge","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.scrabble.ShakespearePlaysScrabbleWithRxJava2FlowableOpt3.measureThroughput","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsyncPerf.queueDrainAtomic1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsyncPerf.queueDrainAtomic2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsyncPerf.queueDrainAtomic3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsyncPerf.queueDrainAtomic4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsyncPerf.queueDrainAtomic5","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainPerf.queueDrainAtomic1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainPerf.queueDrainAtomic2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainPerf.queueDrainAtomic3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainPerf.queueDrainAtomic4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainPerf.queueDrainAtomic5","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsync3Perf.queueDrainAtomic1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsync3Perf.queueDrainAtomic2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsync3Perf.queueDrainAtomic3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsync3Perf.queueDrainAtomic4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.QueueDrainAsync3Perf.queueDrainAtomic5","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.CharsTakeSkipConcatPerf.chars","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.CharsTakeSkipConcatPerf.take","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.CharsTakeSkipConcatPerf.skip","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.CharsTakeSkipConcatPerf.concat","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.SingleFlatMapIterablePerf.range","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.unbounded1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.unbounded1k","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.unbounded1m","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.bounded1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.bounded1k","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.bounded1m","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.subject1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.subject1k","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.PublishProcessorPerf.subject1m","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerPerf.compositeAsync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerPerf.fixedAsync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerPerf.stripedAsync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerSyncPerf.compositeSync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerSyncPerf.compositeWithExisting","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerSyncPerf.fixedSync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerSyncPerf.fixedSyncWithExisting","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerSyncPerf.stripedSync","0"
"akarnokd/akarnokd-misc","hu.akarnokd.rxjava2.DisposableContainerSyncPerf.stripedSyncWithExisting","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.dispatchWorkSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.dispatchWorkProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.dispatchWorkProcessorUnbounded","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.workQueueProcessorParking","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.workQueueProcessorBlocking","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.workQueueProcessorLiteBlocking","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.workQueueProcessorBusySpin","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.workQueueProcessorSleeping","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.workQueueProcessorYielding","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.flowableParallel","0"
"akarnokd/akarnokd-misc","hu.akarnokd.comparison.WorkQueuePerf.fluxParallel","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.TerminalAtomics.GGASx1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.TerminalAtomics.GGASx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.TerminalAtomics.GGASx3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.TerminalAtomics.GGASx4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.TerminalAtomics.GASx1","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.TerminalAtomics.GASx2","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.TerminalAtomics.GASx3","0"
"akarnokd/akarnokd-misc","hu.akarnokd.atomics.TerminalAtomics.GASx4","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.rangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.arrayRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.iterableRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.concatMapJustRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.concatMapRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.concatMapXRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.flatMapJustRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.flatMapRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.flatMapXRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.flattenJustRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.flattenRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.StreamingPerf.flattenXRangeRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.BlockingPerf.firstRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.BlockingPerf.firstRxBlockingObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.BlockingPerf.lastRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.BlockingPerf.lastRxBlockingObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.BlockingPerf.firstRxSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.BlockingPerf.firstRxBlockingSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.BlockingPerf.emptyRxCompletable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.BlockingPerf.emptyRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.neverRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.emptyRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.justRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.neverRxSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.emptyRxSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.justRxSingle","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.neverRxCompletable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.emptyRxCompletable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubscribePerf.justRxCompletable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.AsyncPerf.asyncRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.AsyncPerf.pipelineRxObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubjectPerf.rangeRxAsyncSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubjectPerf.rangeRxPublishSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubjectPerf.rangeRxBehaviorSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubjectPerf.rangeRxReplaySubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx1.SubjectPerf.rangeRxUnicastSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.rangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.arrayRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.iterableRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.concatMapJustRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.concatMapRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.concatMapXRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flatMapJustRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flatMapRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flatMapXRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flattenJustRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flattenRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flattenXRangeRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.rangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.arrayRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.iterableRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.concatMapJustRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.concatMapRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.concatMapXRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flatMapJustRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flatMapRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flatMapXRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flattenJustRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flattenRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.StreamingPerf.flattenXRangeRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.firstRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.lastRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.firstRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.lastRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.firstRx2Single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.emptyRx2Completable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.firstRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.emptyRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.emptyRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.BlockingPerf.emptyRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.neverRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.emptyRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.justRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.neverRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.emptyRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.justRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.neverRx2Single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.emptyRx2Single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.justRx2Single","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.neverRx2Completable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.emptyRx2Completable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.justRx2Completable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.neverRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.emptyRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubscribePerf.justRx2Maybe","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.AsyncPerf.asyncRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.AsyncPerf.pipelineRx2Observable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.AsyncPerf.asyncRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.AsyncPerf.pipelineRx2Flowable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2AsyncSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2PublishSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2BehaviorSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2ReplaySubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2UnicastSubject","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2AsyncProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2PublishProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2BehaviorProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2ReplayProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.rx2.SubjectPerf.rangeRx2UnicastProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.rangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.arrayReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.iterableReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.concatMapJustReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.concatMapRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.concatMapXRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.flatMapJustReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.flatMapRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.flatMapXRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.flattenJustReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.flattenRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.StreamingPerf.flattenXRangeReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.BlockingPerf.firstReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.BlockingPerf.lastReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.BlockingPerf.firstReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.BlockingPerf.emptyReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.BlockingPerf.emptyReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubscribePerf.neverReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubscribePerf.emptyReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubscribePerf.justReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubscribePerf.neverReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubscribePerf.emptyReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubscribePerf.justReactorMono","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.AsyncPerf.asyncReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.AsyncPerf.pipelineReactorFlux","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubjectPerf.rangeReactorDirectProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubjectPerf.rangeReactorReplayProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.comparison.reactor.SubjectPerf.rangeReactorUnicastProcessor","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.lowalloc.LcRangePerfComparisonPerf.freshLcObservable","0"
"akarnokd/akarnokd-misc","hu.akarnokd.reactive.lowalloc.LcRangePerfComparisonPerf.cachedLcObservable","0"
"akarnokd/ixjava","ix.FlattenIterablePerf.xrangeLast","0"
"akarnokd/ixjava","ix.FlattenIterablePerf.xrangeEach","0"
"akarnokd/ixjava","ix.FlattenIterablePerf.flatMapJust","0"
"akarnokd/ixjava","ix.IxPerf.just","0"
"akarnokd/ixjava","ix.FlattenIterableArrayPerf.xrangeLast","0"
"akarnokd/ixjava","ix.FlattenIterableArrayPerf.xrangeEach","0"
"akarnokd/ixjava","ix.FlattenIterableArrayPerf.flatMapJust","0"
"akarnokd/ixjava","ix.ReducePerf.sumLast","0"
"akarnokd/ixjava","ix.ReducePerf.sumFirst","0"
"akarnokd/ixjava","ix.RangePerf.rangeLast","0"
"akarnokd/ixjava","ix.RangePerf.rangeEach","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.ExamplePerf.referenceStore","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.ExamplePerf.valueStore","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.res.ExamplePerf.addRemove","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.res.ExamplePerf.addAllRemoveAll","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.CountPerf.count","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.CountPerf.rxCount","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.CountPerf.rxCountLong","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FlatMapPerf.flatMap","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FlatMapPerf.flatMap2","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FlatMapPerf.rxFlatMap","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FlatMapPerf.rxFlatMap2","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.TakeLastPerf.lastN","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.TakeLastPerf.last1","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.TakeLastPerf.lastN1","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.TakeLastPerf.rxlastN","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.TakeLastPerf.rxlast1","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FilterPerf.filter","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FilterPerf.filter3","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FilterPerf.filterNoFuse","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FilterPerf.rxFilter3","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.FilterPerf.rxFilter","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.ObserveOnFlightPerf.observeOn","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.ConcatMapPerf.concatMap","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.ConcatMapPerf.rxConcatMap","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.ScalarJustPerf.just","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.ScalarJustPerf.justFlatMapJust","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.ScalarJustPerf.justNow","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.ScalarJustPerf.justFlatMapJustNow","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.RangePerf.range","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.RangePerf.rangeRaw","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.RangePerf.rangeFilter","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.RangePerf.rangeNoFuseFilter","0"
"akarnokd/reactive-streams-impl","com.github.akarnokd.rs.impl.ops.ObserveOnPerf.observeOn","0"
"akarnokd/ReactiveChannel","hu.akarnokd.reactivechannel.ExamplePerf.referenceStore","0"
"akarnokd/ReactiveChannel","hu.akarnokd.reactivechannel.ExamplePerf.valueStore","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.standardSync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.standardAsync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.observeOnSync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.observeOnAsync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.syncSync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.syncAsync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.asyncSync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.asyncAsync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.syncSyncB","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.syncAsyncB","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.asyncSyncB","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava2.FlatMapExPerf.asyncAsyncB","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.standardSync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.standardAsync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.observeOnSync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.observeOnAsync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.syncSync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.syncAsync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.asyncSync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.asyncAsync","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.syncSyncB","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.syncAsyncB","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.asyncSyncB","0"
"akarnokd/RxJava2Extensions","hu.akarnokd.rxjava3.FlatMapExPerf.asyncAsyncB","0"
"akashche/tzdata-jmh","com.redhat.openjdk.tzdata.TzDataBenchmark.measureZoneInfoGetOneDublin","0"
"akashche/tzdata-jmh","com.redhat.openjdk.tzdata.TzDataBenchmark.measureTzDbGetOneDublin","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.logger.LoggerBenchmark.log","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.logger.LoggerBenchmark.log1","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.CompressionUtilsBenchmark.testCompressDefault","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.CompressionUtilsBenchmark.testCompressFast","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.CompressionUtilsBenchmark.testCompressGood","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.CompressionUtilsBenchmark.testCompressNoCompress","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.CompressionUtilsBenchmark.testDecompress","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.CompressionUtilsBenchmark.testCompressAndDecompress","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.fileManager.FileManagerBenchmark.readTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.LoginPasswordCoderBenchmark.encode","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.CookieBenchmark.myCookieTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.CookieBenchmark.grassfishCookieTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.data.CookieBenchmark.myCookieTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.data.CookieBenchmark.grassfishCookieTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptCharsetParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptCharsetBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptEncodingParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptEncodingBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptLanguageParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptLanguageBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptRangesParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.acceptRangesBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.intHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.intHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.listHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.listHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.stringHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.stringHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.objectHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.objectHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.wwwAuthenticateHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.wwwAuthenticateHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.authorizationHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.authorizationHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.ifETagHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.server.wrapper.http.header.HeaderBenchmark.ifETagHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.MemoryReserveUtilsBenchmark.reserveUnreserveMemory","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.JavaCompareBenchmark.reflectionMethodCall","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.JavaCompareBenchmark.methodHandleArgumentsCall","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.JavaCompareBenchmark.methodHandleExactCall","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.JavaCompareBenchmark.newObjectCost","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.JavaCompareBenchmark.addRemoveCost","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.collections.TripleHashMapBenchmark.getBenchmark","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.collections.TripleHashMapBenchmark.getAdditionBenchmark","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.collections.TripleHashMapBenchmark.add","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.data.CookieBenchmark.myCookieTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.data.CookieBenchmark.grassfishCookieTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptCharsetParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptCharsetBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptEncodingParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptEncodingBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptLanguageParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptLanguageBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptRangesParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.acceptRangesBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.intHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.intHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.listHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.listHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.stringHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.stringHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.objectHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.objectHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.wwwAuthenticateHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.wwwAuthenticateHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.authorizationHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.authorizationHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.ifETagHeaderParseTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.module.http.http.header.HeaderBenchmark.ifETagHeaderBuildTest","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.serial.SerialBenchmark.serial","0"
"alesharik/AlesharikWebServer","com.alesharik.webserver.api.serial.SerialBenchmark.javaSerial","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.f","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.write1","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.read1","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.write2","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.read2","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.write3","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.read3","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.write4","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmarks.read4","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.f","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.write1","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.read1","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.write2","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.read2","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.write3","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.read3","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.write4","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmarks.read4","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmark.f","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmark.write","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStackBenchmark.read","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmark.f","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmark.write","0"
"Alex-Diez/Java-TDD-Katas","org.stack.LockFreeStackBenchmark.read","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStacksBenchmarks.f","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStacksBenchmarks.write","0"
"Alex-Diez/Java-TDD-Katas","org.stack.SynchronousStacksBenchmarks.read","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.list.ListUsageBenchmark.appendToEndOfArrayList","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.list.ListUsageBenchmark.appendToEndOfLinkedList","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.list.ListUsageBenchmark.appendToMiddleOfArrayList","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.list.ListUsageBenchmark.appendToMiddleOfLinkedList","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.list.ListUsageBenchmark.getFromArrayList","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.list.ListUsageBenchmark.getFromLinkedList","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.list.ListUsageBenchmark.removeFromArrayList","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.list.ListUsageBenchmark.removeFromLinkedList","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.AlgorithmsUsageBenchmark.bfs","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.AlgorithmsUsageBenchmark.dfs","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.AlgorithmsUsageBenchmark.dijkstra","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.AlgorithmsUsageBenchmark.mergesort","0"
"alexey-kotlyar/algostructure","com.aparamonov.algostructure.AlgorithmsUsageBenchmark.quicksort","0"
"alexeyr/pcg-java","com.github.alexeyr.pcg.benchmarks.Pcg32Benchmarks.jurCreation","0"
"alexeyr/pcg-java","com.github.alexeyr.pcg.benchmarks.Pcg32Benchmarks.pcgCreation","0"
"alexeyr/pcg-java","com.github.alexeyr.pcg.benchmarks.Pcg32Benchmarks.jurInt","0"
"alexeyr/pcg-java","com.github.alexeyr.pcg.benchmarks.Pcg32Benchmarks.pcgInt","0"
"alexingcool/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter.runBenchmark","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLength","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStart","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLength","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartFromEnd","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLengthFromEnd","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkReverse","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLeftTrim","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkRightTrim","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkTrim","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkUpper","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLower","0"
"alexingcool/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLike","0"
"alexingcool/presto","com.facebook.presto.operator.BenchmarkGroupByHash.groupByHashPreCompute","0"
"alexingcool/presto","com.facebook.presto.operator.BenchmarkGroupByHash.addPagePreCompute","0"
"alexingcool/presto","com.facebook.presto.operator.BenchmarkGroupByHash.bigintGroupByHash","0"
"alexingcool/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baseline","0"
"alexingcool/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baselineBigArray","0"
"alexingcool/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.handCoded","0"
"alexingcool/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.compiled","0"
"alexingcool/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"alexo/spinner","io.github.alexo.spinner.SpinnerBenchmark.run","0"
"allegro/json-avro-converter","tech.allegro.schema.json2avro.converter.JsonAvroConverterBenchmark.conversionLatencyForMessageWithNotProvidedOptionalField","0"
"allegro/json-avro-converter","tech.allegro.schema.json2avro.converter.JsonAvroConverterBenchmark.conversionThroughputForMessageWithNotProvidedOptionalField","0"
"allegro/json-avro-converter","tech.allegro.schema.json2avro.converter.JsonAvroConverterBenchmark.conversionLatencyForCompleteMessage","0"
"allegro/json-avro-converter","tech.allegro.schema.json2avro.converter.JsonAvroConverterBenchmark.conversionThroughputForCompleteMessage","0"
"almondtools/regexbench","com.almondtools.regexbench.MatcherBenchmark.benchmarkPrepare","0"
"almondtools/regexbench","com.almondtools.regexbench.MatcherBenchmark.benchmarkFind","0"
"almondtools/regexbench","com.almondtools.regexbench.MatcherPrepareBenchmark.benchmarkPrepare","0"
"almondtools/regexbench","com.almondtools.regexbench.MatcherFindBenchmark.benchmarkFind","0"
"almondtools/regexbench","com.almondtools.regexbench.scaling.ScalingPatternMatcherBenchmark.benchmarkFindInString","0"
"almondtools/regexbench","com.almondtools.regexbench.scaling.ScalingPatternMatcherBenchmark.benchmarkFindInFile","0"
"almondtools/regexbench","com.almondtools.regexbench.small.MatcherBenchmark.benchmarkPrepare","0"
"almondtools/regexbench","com.almondtools.regexbench.small.MatcherBenchmark.benchmarkFind","0"
"almondtools/stringbench","com.almondtools.stringbench.MatcherBenchmark.benchmarkPrepare","0"
"almondtools/stringbench","com.almondtools.stringbench.MatcherBenchmark.benchmarkFind","0"
"almondtools/stringbench","com.almondtools.stringbench.SinglePatternMatcherBenchmark.benchmarkPrepare","0"
"almondtools/stringbench","com.almondtools.stringbench.SinglePatternMatcherBenchmark.benchmarkFind","1"
"almondtools/stringbench","com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkPrepare","0"
"almondtools/stringbench","com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFind","1"
"almondtools/stringbench","com.almondtools.stringbench.SinglePatternMatcherBenchmark.benchmarkFindInString","0"
"almondtools/stringbench","com.almondtools.stringbench.SinglePatternMatcherBenchmark.benchmarkFindInFile","0"
"almondtools/stringbench","com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFindInString","0"
"almondtools/stringbench","com.almondtools.stringbench.MultiPatternMatcherBenchmark.benchmarkFindInFile","0"
"almondtools/stringbench","com.almondtools.stringbench.multipattern.MultiPatternMatcherBenchmark.benchmarkFindInString","0"
"almondtools/stringbench","com.almondtools.stringbench.multipattern.MultiPatternMatcherBenchmark.benchmarkFindInFile","0"
"almondtools/stringbench","com.almondtools.stringbench.singlepattern.SinglePatternMatcherBenchmark.benchmarkFindInString","0"
"almondtools/stringbench","com.almondtools.stringbench.singlepattern.SinglePatternMatcherBenchmark.benchmarkFindInFile","0"
"almondtools/stringbench","com.almondtools.stringbench.scalingpattern.ScalingPatternMatcherBenchmark.benchmarkFindInString","0"
"almondtools/stringbench","com.almondtools.stringbench.scalingpattern.ScalingPatternMatcherBenchmark.benchmarkFindInFile","0"
"amoAHCP/Java8LunchSchool","ch.trivadis.com.lesson4.step7.StreamRunner.simpleParallelFlatMapExample","0"
"amoAHCP/Java8LunchSchool","ch.trivadis.com.lesson4.step7.StreamRunner.simpleSequentialFlatMapExample","0"
"amoAHCP/Java8LunchSchool","ch.trivadis.com.lesson4.step7.StreamRunner.apprpximatePiByRandomNumbersSeriell","0"
"amoAHCP/Java8LunchSchool","ch.trivadis.com.lesson4.step7.StreamRunner.apprpximatePiByRandomNumbersParallel","0"
"amsa-code/risky","au.gov.amsa.ais.BenchmarksAis.parseShipStaticNmeaMessage","0"
"amsa-code/risky","au.gov.amsa.ais.BenchmarksAis.parseAisPositionANmeaMessage","0"
"amsa-code/risky","au.gov.amsa.ais.BenchmarksAis.parseMany","0"
"amsa-code/risky","au.gov.amsa.ais.BenchmarksAis.parseShipStaticNmeaMessageAndExtractBitsOfInterest","0"
"amsa-code/risky","au.gov.amsa.ais.BenchmarksAis.parseAisPositionBNmeaMessage","0"
"amsa-code/risky","au.gov.amsa.mariweb.Benchmarks.extractValuesFromInsertStatement","0"
"andrepnh/data-structure-fun","com.github.andrepnh.ToyListAddAllBenchmark.benchmarkDynamicArray","0"
"andrepnh/data-structure-fun","com.github.andrepnh.ToyListAddAllBenchmark.benchmarkBulkOptimizedDynamicArray","0"
"andrepnh/data-structure-fun","com.github.andrepnh.ToyListAddAllBenchmark.benchmarkDynamicArrayConsumingArrayList","0"
"andrepnh/data-structure-fun","com.github.andrepnh.ToyListAddAllBenchmark.benchmarkBulkOptimizedDynamicArrayConsumingArrayList","0"
"andrepnh/data-structure-fun","com.github.andrepnh.DynamicArraysAddAllBenchmark.benchmarkDynamicArray","0"
"andrepnh/data-structure-fun","com.github.andrepnh.DynamicArraysAddAllBenchmark.benchmarkBulkOptimizedDynamicArray","0"
"andrepnh/data-structure-fun","com.github.andrepnh.DynamicArraysAddAllBenchmark.benchmarkDynamicArrayConsumingArrayList","0"
"andrepnh/data-structure-fun","com.github.andrepnh.DynamicArraysAddAllBenchmark.benchmarkBulkOptimizedDynamicArrayConsumingArrayList","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtBeginningArrayListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtBeginningLinkedListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtBeginningLargeRowSizeHybridListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtBeginningMediumRowSizeHybridListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtBeginningSmallRowSizeHybridListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtMiddleArrayListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtMiddleLinkedListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtMiddleLargeRowSizeHybridListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtMiddleMediumRowSizeHybridListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtMiddleSmallRowSizeHybridListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtEndArrayListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtEndLinkedListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtEndLargeRowSizeHybridListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtEndMediumRowSizeHybridListBenchmark","0"
"andrepnh/data-structure-fun","com.github.andrepnh.hybrid.list.benchmarks.AddAtBenchmark.addAtEndSmallRowSizeHybridListBenchmark","0"
"andrey-vasilyev/gosthash","ru.fsb.gost.benchmark.GOSTBenchmark.bench512","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.javaCollectionsSort_ASC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.javaCollectionsSort_DESC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.javaCollectionsSort_RANDOM","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.selectionSort_ASC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.selectionSort_DESC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.selectionSort_RAND","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.insertionSort_ASC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.insertionSort_DESC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.insertionSort_RAND","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.insertionSwapInPlaceSort_ASC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.insertionSwapInPlaceSort_DESC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.ArrayList_Sort_BM.insertionSwapInPlaceSort_RAND","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_RemoveByIdx_BM.javaArrayListRemove","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_RemoveByIdx_BM.jArrayListRemove","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_RemoveByIdx_BM.jjArrayListRemove","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_RemoveByIdx_BM.coltArrayListRemove","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_RemoveByIdx_BM.fastutilArrayListRemove","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_RemoveByIdx_BM.troveArrayListRemove","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Byte_Add_BM.javaArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Byte_Add_BM.jArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Byte_Add_BM.jjArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Byte_Add_BM.jjArrayListByteAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Byte_Add_BM.coltArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Byte_Add_BM.fastutilArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Byte_Add_BM.troveArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Loop_BM.javaArrayListForeachLoop","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Loop_BM.jArrayListForeachLoop","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Loop_BM.jjArrayListForeachLoop","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Loop_BM.jjArrayListIdxForLoop","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Loop_BM.coltArrayListIdxForLoop","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Loop_BM.fastutilArrayListIdxForLoop","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Loop_BM.fastutilArrayListForeachLoop","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Loop_BM.troveArrayListIdxForLoop","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Add_BM.javaArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Add_BM.jArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Add_BM.jjArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Add_BM.jjArrayListIntAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Add_BM.coltArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Add_BM.fastutilArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Int_Add_BM.troveArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.SortBenchmark.sort_ASC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.SortBenchmark.sort_DESC","0"
"andreytim/jafar","com.andreytim.jafar.bm.sort.SortBenchmark.sort_RANDOM","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Boolean_Add_BM.javaArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Boolean_Add_BM.jArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Boolean_Add_BM.jjArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Boolean_Add_BM.jjArrayListBooleanAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Boolean_Add_BM.coltArrayListAdd","0"
"andreytim/jafar","com.andreytim.jafar.bm.list.ArrayList_Boolean_Add_BM.fastutilArrayListAdd","0"
"aNNiMON/Own-Programming-Language-Tutorial","com.annimon.ownlang.parser.ParserBenchmarkTest.parserBenchmark","0"
"aNNiMON/Own-Programming-Language-Tutorial","com.annimon.ownlang.parser.LexerBenchmarkTest.lexerBenchmark","0"
"anonl/nvlist","nl.weeaboo.gdx.graphics.blur.ImageBlurBenchmark.blur7","0"
"anonl/nvlist","nl.weeaboo.gdx.graphics.blur.ImageBlurBenchmark.blur15","0"
"anonl/nvlist","nl.weeaboo.gdx.graphics.blur.ImageBlurBenchmark.blur32","0"
"anonl/nvlist","nl.weeaboo.vn.gdx.graphics.blur.ImageBlurBenchmark.blur7","0"
"anonl/nvlist","nl.weeaboo.vn.gdx.graphics.blur.ImageBlurBenchmark.blur15","0"
"anonl/nvlist","nl.weeaboo.vn.gdx.graphics.blur.ImageBlurBenchmark.blur32","0"
"aol/cyclops-react","scrabble.ShakespearePlaysScrabbleWithStreams.measureThroughput","0"
"aol/cyclops-react","scrabble.ScanLeftTakeRight.measureThroughput","0"
"aol/cyclops-react","scrabble.IxScanLeftTakeRight.measureThroughput","0"
"aol/cyclops-react","scrabble.IdenticalToStream.measureThroughput","0"
"aol/cyclops-react","cyclops.reactiveSeq.FlatMapForEach.streamFlatMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.FlatMapForEach.reactiveSeqFlatMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.FlatMapForEach.reactiveSeqFlatMapPrebuilt","0"
"aol/cyclops-react","cyclops.reactiveSeq.Map5.streamMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.Map5.reactiveSeqMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.Map5.reactiveSeqMapPrebuilt","0"
"aol/cyclops-react","cyclops.reactiveSeq.FlatMapCollect.streamFlatMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.FlatMapCollect.reactiveSeqFlatMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.FlatMapCollect.reactiveSeqFlatMapPrebuilt","0"
"aol/cyclops-react","cyclops.reactiveSeq.FlatMapLarge.streamFlatMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.FlatMapLarge.reactiveSeqFlatMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.FindFirst.streamFindFirst","0"
"aol/cyclops-react","cyclops.reactiveSeq.FindFirst.reactiveSeqFindFirst","0"
"aol/cyclops-react","cyclops.reactiveSeq.Map.streamMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.Map.reactiveSeqMap","0"
"aol/cyclops-react","cyclops.reactiveSeq.Map.reactiveSeqMapPrebuilt","0"
"aol/cyclops-react","cyclops.reactiveSeq.MapLarge.streamMapLarge","0"
"aol/cyclops-react","cyclops.reactiveSeq.MapLarge.reactiveSeqMapLarge","0"
"aol/cyclops-react","cyclops.reactiveSeq.Combinations.streamableCombos","0"
"aol/cyclops-react","cyclops.reactiveSeq.Combinations.reactiveSeqCombos","0"
"aol/cyclops-react","cyclops.reactiveSeq.Combinations.iteratorCombos","0"
"aol/cyclops-react","cyclops.VectorOps.vectorOps","0"
"aol/cyclops-react","cyclops.VectorOps.vavrOps","0"
"aol/cyclops-react","cyclops.VectorOps.vectorXOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorMap.vectorOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorMap.vavrOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorFilter.cyclopsOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorFilter.vavrOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorZip.cyclopsOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorZip.vavrOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorFoldLeft.cyclopsOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorFoldLeft.vavrOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorFlatMap.cyclopsOps","0"
"aol/cyclops-react","cyclops.data.vector.VectorFlatMap.vavrOps","0"
"aol/cyclops-react","cyclops.data.seq.SeqPrepend.cyclopsOps","0"
"aol/cyclops-react","cyclops.data.seq.SeqPrepend.vavrOps","0"
"aol/cyclops-react","cyclops.data.seq.SeqMap.cyclopsOps","0"
"aol/cyclops-react","cyclops.data.seq.SeqMap.vavrOps","0"
"aol/cyclops-react","cyclops.DataAppend.vectorAppend","0"
"aol/cyclops-react","cyclops.DataAppend.jsAppend","0"
"aol/cyclops-react","cyclops.DataAppend.listAppend","0"
"aol/cyclops-react","cyclops.DataAppend.guavaAppend","0"
"aol/cyclops-react","cyclops.DataGet.vectorGet","0"
"aol/cyclops-react","cyclops.DataGet.jsGet","0"
"aol/cyclops-react","cyclops.DataGet.listGet","0"
"aol/cyclops-react","cyclops.DataGet.guavaGet","0"
"aol/cyclops-react","cyclops.DataSet.jsVectorSet","0"
"aol/cyclops-react","cyclops.DataSet.vectorSet","0"
"aol/cyclops-react","cyclops.DataSet.listSet","0"
"aol/cyclops-react","cyclops.DataSet.guavaSet","0"
"apache/activemq-artemis","org.apache.activemq.artemis.tests.extras.benchmarks.journal.gcfree.EncodersBench.encodeAligned","0"
"apache/activemq-artemis","org.apache.activemq.artemis.tests.extras.benchmarks.journal.gcfree.EncodersBench.encodeUnaligned","0"
"apache/activemq-artemis","org.apache.activemq.artemis.tests.extras.benchmarks.journal.gcfree.EncodersBench.encodeUnalignedWithGarbage","0"
"apache/aurora","org.apache.aurora.benchmark.SchedulerBenchmark.example","0"
"apache/aurora","org.apache.aurora.benchmark.SchedulingBenchmarks$AbstractBase.runBenchmark","1"
"apache/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetRoleSummaryBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetAllTasksBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobDetailsBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.StatusUpdateBenchmark.runBenchmark","0"
"apache/aurora","org.apache.aurora.benchmark.SnapshotBenchmarks$RestoreSnapshotWithUpdatesBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.TaskStoreBenchmarks$MemFetchTasksBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.TaskStoreBenchmarks$DBFetchTasksBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobInstructionsBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobUpdateMetadataBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.StateManagerBenchmarks$InsertPendingTasksBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.StateManagerBenchmarks$DeleteTasksBenchmark.run","0"
"apache/aurora","org.apache.aurora.benchmark.TaskStoreBenchmarks$FetchAll.run","0"
"apache/aurora","org.apache.aurora.benchmark.TaskStoreBenchmarks$IndexedFetchAndFilter.run","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.transforms.DoFnReflectorBenchmark.invokeDoFn","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.transforms.DoFnReflectorBenchmark.invokeDoFnWithContextViaAdaptor","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.transforms.DoFnReflectorBenchmark.invokeDoFnWithContext","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.coders.ByteArrayCoderBenchmark.codeShortArray","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.coders.ByteArrayCoderBenchmark.codeLongArray","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.coders.StringUtf8CoderBenchmark.codeEmptyString","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.coders.StringUtf8CoderBenchmark.codeShortString","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.coders.StringUtf8CoderBenchmark.codeLongString","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.coders.AvroCoderBenchmark.codeShortPojo","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.coders.AvroCoderBenchmark.codeLongPojo","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.transforms.DoFnInvokersBenchmark.invokeOldDoFn","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.transforms.DoFnInvokersBenchmark.invokeDoFnWithContextViaAdaptor","0"
"apache/beam","org.apache.beam.sdk.microbenchmarks.transforms.DoFnInvokersBenchmark.invokeDoFnWithContext","0"
"apache/calcite","org.apache.calcite.benchmarks.StatementTest.prepareBindExecute","0"
"apache/calcite","org.apache.calcite.benchmarks.StatementTest.bindExecute","0"
"apache/calcite","org.apache.calcite.benchmarks.StatementTest.executeQuery","0"
"apache/calcite","org.apache.calcite.benchmarks.StatementTest.forEach","0"
"apache/calcite","org.apache.calcite.benchmarks.ParserBenchmark.parseCached","0"
"apache/calcite","org.apache.calcite.benchmarks.ParserBenchmark.parseNonCached","0"
"apache/calcite","org.apache.calcite.adapter.enumerable.CodeGenerationBenchmark.getBindableNoCache","0"
"apache/calcite","org.apache.calcite.adapter.enumerable.CodeGenerationBenchmark.getBindableWithCache","0"
"apache/calcite","org.apache.calcite.benchmarks.AbstractRelNodeGetRelTypeNameBenchmark.useStringLastIndexOfTwoTimesV1","0"
"apache/calcite","org.apache.calcite.benchmarks.AbstractRelNodeGetRelTypeNameBenchmark.useStringLastIndexOfTwoTimeV2","0"
"apache/calcite","org.apache.calcite.benchmarks.AbstractRelNodeGetRelTypeNameBenchmark.useCustomLastIndexOf","0"
"apache/calcite","org.apache.calcite.benchmarks.StringConstructBenchmark.initStringBuilder","0"
"apache/calcite","org.apache.calcite.benchmarks.StringConstructBenchmark.initStringWriter","0"
"apache/calcite","org.apache.calcite.benchmarks.StringConstructBenchmark.initPrintWriter","0"
"apache/calcite","org.apache.calcite.benchmarks.StringConstructBenchmark.appendString","0"
"apache/cassandra","org.apache.cassandra.test.microbench.Sample.lz4","0"
"apache/cassandra","org.apache.cassandra.test.microbench.Sample.snappy","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSByte","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPByte","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSInt","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPInt","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSLong","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPLong","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSMixed","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPMixed","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyStringBOS","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyStringBDOSP","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyLegacyWriteUTF","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallStringBOS","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallStringBDOSP","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallLegacyWriteUTF","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeStringBOS","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeStringBDOSP","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeLegacyWriteUTF","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyStringBOS","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyStringBDOSP","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyLegacyWriteUTF","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallStringBOS","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallStringBDOSP","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallLegacyWriteUTF","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeStringBOS","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeStringBDOSP","0"
"apache/cassandra","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeLegacyWriteUTF","0"
"apache/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench.searchToken","0"
"apache/cassandra","org.apache.cassandra.test.microbench.PendingRangesBench.searchTokenForOldPendingRanges","0"
"apache/cassandra","org.apache.cassandra.test.microbench.DirectorySizerBench.countFiles","0"
"apache/cassandra","org.apache.cassandra.test.microbench.MutationBench.serialize","0"
"apache/cassandra","org.apache.cassandra.test.microbench.MutationBench.deserialize","0"
"apache/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest.write","0"
"apache/cassandra","org.apache.cassandra.test.microbench.ReadWriteTest.read","0"
"apache/cassandra","org.apache.cassandra.test.microbench.CompactionBench.compactTest","0"
"apache/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench.baseline","0"
"apache/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench.threadLocal","0"
"apache/cassandra","org.apache.cassandra.test.microbench.FastThreadLocalBench.fastThreadLocal","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.existingSH","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.newSH10x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.newSH100x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.newSH1000x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.newSH10000x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.newSH50and1000","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.newSH50and100x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.streaminghistogram60s","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.newstreaminghistogram1000x60s","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.newstreaminghistogram100x60s","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrowexistingSH","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrownewSH10x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrownewSH100x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrownewSH1000x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrownewSH10000x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrownewSH50and1000x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrownewSH50and100x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrowstreaminghistogram60s","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrownewstreaminghistogram1000x60s","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.narrownewstreaminghistogram100x60s","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparseexistingSH","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsenewSH10x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsenewSH100x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsenewSH1000x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsenewSH10000x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsenewSH50and1000x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsenewSH50and100x","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsestreaminghistogram60s","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsenewstreaminghistogram1000x60","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingHistogramBench.sparsenewstreaminghistogram100x60","0"
"apache/cassandra","org.apache.cassandra.test.microbench.StreamingTombstoneHistogramBuilderBench.test","0"
"apache/cassandra","org.apache.cassandra.test.microbench.HashingBench.benchMessageDigestMD5","0"
"apache/cassandra","org.apache.cassandra.test.microbench.HashingBench.benchHasherMD5","0"
"apache/cassandra","org.apache.cassandra.test.microbench.HashingBench.benchHasherMurmur3_128","0"
"apache/cassandra","org.apache.cassandra.test.microbench.BTreeSearchIteratorBench.searchFound","0"
"apache/cassandra","org.apache.cassandra.test.microbench.BTreeSearchIteratorBench.searchNotFound","0"
"apache/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench.booleanFromBooleanSupplier","0"
"apache/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench.booleanFromPlainSupplier","0"
"apache/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench.intFromIntSupplier","0"
"apache/cassandra","org.apache.cassandra.test.microbench.AutoBoxingBench.intFromPlainSupplier","0"
"apache/cassandra","org.apache.cassandra.test.microbench.BloomFilterSerializerBench.serializationTest","0"
"apache/cassandra","org.apache.cassandra.test.microbench.LatencyTrackingBench.benchLatencyMetricsWrite","0"
"apache/cassandra","org.apache.cassandra.test.microbench.LatencyTrackingBench.benchInsertToDEHR","0"
"apache/cassandra","org.apache.cassandra.test.microbench.MessageOutBench.serialize40","0"
"apache/cassandra","org.apache.cassandra.test.microbench.MessageOutBench.serializePre40","0"
"apache/cassandra","org.apache.cassandra.test.microbench.BTreeBuildBench.treeBuilderRecycleAdd","0"
"apache/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark.blockStreamWriter","0"
"apache/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark.blockStreamReader","0"
"apache/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark.partialStreamWriter","0"
"apache/cassandra","org.apache.cassandra.test.microbench.ZeroCopyStreamingBenchmark.partialStreamReader","0"
"apache/cassandra","org.apache.cassandra.test.microbench.DiagnosticEventServiceBench.publishEvents","0"
"apache/cassandra","org.apache.cassandra.test.microbench.DiagnosticEventPersistenceBench.persistEvents","0"
"apache/cassandra","org.apache.cassandra.test.microbench.BTreeBuildBench.buildTreeTest","0"
"apache/cassandra","org.apache.cassandra.test.microbench.PreaggregatedByteBufsBench.oneBigBuf","0"
"apache/cassandra","org.apache.cassandra.test.microbench.PreaggregatedByteBufsBench.chunkedBuf","0"
"apache/commons-bcel","org.apache.bcel.BCELBenchmark.baseline","0"
"apache/commons-bcel","org.apache.bcel.BCELBenchmark.parser","0"
"apache/commons-bcel","org.apache.bcel.BCELBenchmark.generator","0"
"apache/commons-bcel","org.apache.commons.bcel6.BCELBenchmark.baseline","0"
"apache/commons-bcel","org.apache.commons.bcel6.BCELBenchmark.parser","0"
"apache/commons-bcel","org.apache.commons.bcel6.BCELBenchmark.generator","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.RandomCreateOS","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.RandomCreateJava","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.RandomCreateOpenssl","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.RandomTestOpensslJNA","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.RandomTestOS","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.RandomTestJava","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.RandomTestOpenssl","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.RandomCreateOpensslJNA","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.CipherCreateJce","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.CipherTestJce","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.CipherCreateOpenssl","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.CipherTestOpenssl","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.CipherCreateOpensslJna","0"
"apache/commons-crypto","org.apache.commons.crypto.CryptoBenchmark.CipherTestOpensslJna","0"
"apache/commons-crypto","org.apache.commons.crypto.jna.CryptoJnaBenchmark.RandomTestOpensslJNA","0"
"apache/commons-crypto","org.apache.commons.crypto.jna.CryptoJnaBenchmark.RandomCreateOpensslJNA","0"
"apache/commons-crypto","org.apache.commons.crypto.jna.CryptoJnaBenchmark.CipherCreateOpensslJna","0"
"apache/commons-crypto","org.apache.commons.crypto.jna.CryptoJnaBenchmark.CipherTestOpensslJna","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.baseline","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.parseCommonsCSV","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.parseGenJavaCSV","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.parseJavaCSV","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.parseOpenCSV","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.parseSkifeCSV","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.parseSuperCSV","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.read","0"
"apache/commons-csv","org.apache.commons.csv.CSVBenchmark.split","0"
"apache/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark.decodeWithKerby","1"
"apache/directory-kerby","org.apache.kerby.benchmark.KrbCodecBenchmark.decodeWithApacheDS","0"
"apache/directory-kerby","org.apache.kerby.benchmark.JsonBackendBenchmark.queryTest","0"
"apache/hive","org.apache.hive.benchmark.storage.ColumnarStorageBench.write","0"
"apache/hive","org.apache.hive.benchmark.storage.ColumnarStorageBench.read","0"
"apache/hive","org.apache.hive.benchmark.storage.ColumnarStorageBench.serialize","0"
"apache/hive","org.apache.hive.benchmark.storage.ColumnarStorageBench.deserialize","0"
"apache/hive","org.apache.hive.benchmark.storage.ColumnarStorageBench.getRecordWriter","0"
"apache/hive","org.apache.hive.benchmark.storage.ColumnarStorageBench.getRecordReader","0"
"apache/hive","org.apache.hive.benchmark.vectorization.VectorizationBench$AbstractExpression.bench","0"
"apache/hive","org.apache.hive.benchmark.serde.LazySimpleSerDeBench$AbstractDeserializer.bench","0"
"apache/hive","org.apache.hive.benchmark.vectorization.AbstractExpression.bench","0"
"apache/hive","org.apache.hive.benchmark.serde.LazySimpleSerDeBench$GoodLazyDate.bench","0"
"apache/hive","org.apache.hive.benchmark.serde.LazySimpleSerDeBench$GoodLazyTimestamp.bench","0"
"apache/hive","org.apache.hive.benchmark.serde.LazySimpleSerDeBench$ParseDouble.floatingDecimalBench","0"
"apache/hive","org.apache.hive.benchmark.serde.LazySimpleSerDeBench$ParseDouble.doubleBench","0"
"apache/hive","org.apache.hive.benchmark.vectorization.mapjoin.AbstractMapJoin.bench","0"
"apache/hive","org.apache.hive.benchmark.vectorization.operators.VectorSelectOperatorBench.testSelectStar","0"
"apache/hive","org.apache.hive.benchmark.vectorization.operators.VectorSelectOperatorBench.testVectorSelectBaseForward","0"
"apache/hive","org.apache.hive.benchmark.vectorization.operators.VectorSelectOperatorBench.testVectorSelectVectorForward","0"
"apache/hive","org.apache.hive.benchmark.vectorization.operators.VectorGroupByOperatorBench.testAggCount","0"
"apache/hive","org.apache.hive.benchmark.hash.Murmur3Bench$Hash64Bench.longHash","0"
"apache/hive","org.apache.hive.benchmark.hash.Murmur3Bench$Hash64Bench.longBytesHash","0"
"apache/hive","org.apache.hive.benchmark.udf.json_read.JsonReadBench.benchmarkMethod","0"
"apache/ignite","org.apache.ignite.benchmarks.jmh.cache.PutBenchmark.testPut","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheBenchmark.put","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheBenchmark.get","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCachePutBenchmark.testPut","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhWaitStategyBenchmark.put","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark.park","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark.unpark","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark.notifyAll0","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.notify.JmhParkVsNotifyBenchmark.wait0","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.misc.JmhIncrementBenchmark.increment","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.misc.JmhIncrementBenchmark.threadLocalIncrement","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.tree.BPlusTreeBenchmark.get","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.tree.BPlusTreeBenchmark.put","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.future.JmhFutureAdapterBenchmark.testSimpleGet","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.future.JmhFutureAdapterBenchmark.testSimpleGetWithListener","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.future.JmhFutureAdapterBenchmark.completeFutureGet","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheLocksBenchmark.cacheLock","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.cache.JmhCacheLocksBenchmark.igniteLock","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.streamer.JmhStreamerAddDataBenchmark.addDataCollection","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.streamer.JmhStreamerAddDataBenchmark.addDataKeyValue","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.sequence.JmhSequenceBenchmark.incrementAndGet","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.sequence.JmhSequenceBenchmark.getAndIncrement","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.sequence.JmhSequenceBenchmark.addAndGet","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.sequence.JmhSequenceBenchmark.getAndAdd","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.encryption.JmhKeystoreEncryptionSpiBenchmark.encryptBenchmark","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.misc.GridDhtPartitionsStateValidatorBenchmark.testValidatePartitionsUpdateCounters","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.misc.GridDhtPartitionsStateValidatorBenchmark.testValidatePartitionsSizes","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.algo.BenchmarkCRC.pureJavaCrc32","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.algo.BenchmarkCRC.crc32","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.collections.SmallHashSetsVsReadOnlyViewBenchmark.hashSetContainsRandom","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.collections.SmallHashSetsVsReadOnlyViewBenchmark.readOnlyViewContainsRandom","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.collections.SmallHashSetsVsReadOnlyViewBenchmark.hashSetIteratorRandom","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.collections.SmallHashSetsVsReadOnlyViewBenchmark.readOnlyViewIteratorRandom","0"
"apache/ignite","org.apache.ignite.internal.benchmarks.jmh.diagnostic.pagelocktracker.JmhPageLockTrackerBenchmark.lockUnlock","0"
"apache/incubator-druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark.uncompressed","0"
"apache/incubator-druid","io.druid.benchmark.CompressedVSizeIndexedBenchmark.compressed","0"
"apache/incubator-druid","io.druid.benchmark.ConciseComplementBenchmark.uncompressed","0"
"apache/incubator-druid","io.druid.benchmark.CompressedIndexedIntsBenchmark.uncompressed","0"
"apache/incubator-druid","io.druid.benchmark.CompressedIndexedIntsBenchmark.compressed","0"
"apache/incubator-druid","io.druid.benchmark.MergeSequenceBenchmark.mergeHierarchical","0"
"apache/incubator-druid","io.druid.benchmark.MergeSequenceBenchmark.mergeFlat","0"
"apache/incubator-druid","io.druid.benchmark.StupidPoolConcurrencyBenchmark.hammerQueue","0"
"apache/incubator-druid","io.druid.benchmark.FlattenJSONBenchmark.baseline","1"
"apache/incubator-druid","io.druid.benchmark.FlattenJSONBenchmark.flatten","1"
"apache/incubator-druid","io.druid.benchmark.FlattenJSONBenchmark.preflattenNestedParser","1"
"apache/incubator-druid","io.druid.benchmark.FlattenJSONBenchmark.forcedRootPaths","1"
"apache/incubator-druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark.normalLongs","0"
"apache/incubator-druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark.normalFloats","0"
"apache/incubator-druid","io.druid.benchmark.IncrementalIndexAddRowsBenchmark.normalStrings","0"
"apache/incubator-druid","io.druid.benchmark.BoundFilterBenchmark.matchNothingLexicographic","0"
"apache/incubator-druid","io.druid.benchmark.BoundFilterBenchmark.matchHalfLexicographic","0"
"apache/incubator-druid","io.druid.benchmark.BoundFilterBenchmark.matchEverythingLexicographic","0"
"apache/incubator-druid","io.druid.benchmark.BoundFilterBenchmark.matchNothingAlphaNumeric","0"
"apache/incubator-druid","io.druid.benchmark.BoundFilterBenchmark.matchHalfAlphaNumeric","0"
"apache/incubator-druid","io.druid.benchmark.BoundFilterBenchmark.matchEverythingAlphaNumeric","0"
"apache/incubator-druid","io.druid.benchmark.TimeParseBenchmark.parseNoContext","0"
"apache/incubator-druid","io.druid.benchmark.TimeParseBenchmark.parseWithContext","0"
"apache/incubator-druid","io.druid.benchmark.DimensionPredicateFilterBenchmark.matchIsEven","0"
"apache/incubator-druid","io.druid.benchmark.indexing.IndexMergeBenchmark.merge","0"
"apache/incubator-druid","io.druid.benchmark.indexing.IndexMergeBenchmark.mergeV9","0"
"apache/incubator-druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark.read","0"
"apache/incubator-druid","io.druid.benchmark.indexing.IndexPersistBenchmark.persist","0"
"apache/incubator-druid","io.druid.benchmark.indexing.IndexPersistBenchmark.persistV9","0"
"apache/incubator-druid","io.druid.benchmark.indexing.IndexIngestionBenchmark.addRows","0"
"apache/incubator-druid","io.druid.benchmark.query.TimeseriesBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.TimeseriesBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.TimeseriesBenchmark.queryFilteredSingleQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.TimeseriesBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.SearchBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.SearchBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.SearchBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.GroupByBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.GroupByBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.GroupByBenchmark.queryMultiQueryableIndex","1"
"apache/incubator-druid","io.druid.benchmark.query.SelectBenchmark.queryIncrementalIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.SelectBenchmark.queryQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.SelectBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.TopNBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.TopNBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.query.TopNBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark.normalLongs","0"
"apache/incubator-druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark.normalFloats","0"
"apache/incubator-druid","io.druid.benchmark.IncrementalIndexRowTypeBenchmark.normalStrings","0"
"apache/incubator-druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark.measureCostStrategySingle","0"
"apache/incubator-druid","io.druid.server.coordinator.CostBalancerStrategyBenchmark.measureIntervalPenalty","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.stringRead","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.longRead","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readWithPreFilter","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readWithPostFilter","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readWithExFnPreFilter","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readWithExFnPostFilter","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readOrFilter","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readOrFilterCNF","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readComplexOrFilter","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readComplexOrFilterCNF","0"
"apache/incubator-druid","io.druid.benchmark.indexing.IncrementalIndexReadBenchmark.readWithFilters","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.timeFilterNone","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.timeFilterHalf","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.timeFilterAll","0"
"apache/incubator-druid","io.druid.benchmark.FilteredAggregatorBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","io.druid.benchmark.FilteredAggregatorBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","io.druid.benchmark.LongCompressionBenchmark.readContinuous","0"
"apache/incubator-druid","io.druid.benchmark.LongCompressionBenchmark.readSkipping","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.read1","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.read2","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.read4","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.read8","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd12","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd16","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd20","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd24","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd32","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd40","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd48","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd56","0"
"apache/incubator-druid","io.druid.benchmark.VSizeSerdeBenchmark.readd64","0"
"apache/incubator-druid","io.druid.benchmark.FloatCompressionBenchmark.readContinuous","0"
"apache/incubator-druid","io.druid.benchmark.FloatCompressionBenchmark.readSkipping","0"
"apache/incubator-druid","io.druid.benchmark.LikeFilterBenchmark.matchLikeEquals","0"
"apache/incubator-druid","io.druid.benchmark.LikeFilterBenchmark.matchSelectorEquals","0"
"apache/incubator-druid","io.druid.benchmark.LikeFilterBenchmark.matchLikePrefix","0"
"apache/incubator-druid","io.druid.benchmark.LikeFilterBenchmark.matchBoundPrefix","0"
"apache/incubator-druid","io.druid.benchmark.LikeFilterBenchmark.matchRegexPrefix","0"
"apache/incubator-druid","io.druid.benchmark.query.GroupByBenchmark.queryMultiQueryableIndexWithSpilling","0"
"apache/incubator-druid","io.druid.benchmark.query.GroupByBenchmark.queryMultiQueryableIndexWithSerde","0"
"apache/incubator-druid","io.druid.benchmark.query.SqlBenchmark.queryNative","0"
"apache/incubator-druid","io.druid.benchmark.query.SqlBenchmark.querySql","0"
"apache/incubator-druid","io.druid.benchmark.BitmapIterationBenchmark.iter","0"
"apache/incubator-druid","io.druid.benchmark.BitmapIterationBenchmark.constructAndIter","0"
"apache/incubator-druid","io.druid.benchmark.BitmapIterationBenchmark.intersectionAndIter","0"
"apache/incubator-druid","io.druid.benchmark.BitmapIterationBenchmark.unionAndIter","0"
"apache/incubator-druid","io.druid.benchmark.query.SqlBenchmark.queryPlanner","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexStringOnly","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexLongOnly","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexFloatOnly","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexNumericOnly","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexNumericThenString","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexLongThenString","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexLongThenFloat","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexStringThenNumeric","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexStringThenLong","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexStringTwice","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexLongTwice","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexFloatTwice","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexFloatThenLong","0"
"apache/incubator-druid","io.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexFloatThenString","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexStringOnly","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexStringTwice","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexStringThenLong","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexStringThenFloat","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexLongOnly","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexLongTwice","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexLongThenString","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexLongThenFloat","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexFloatOnly","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexFloatTwice","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexFloatThenString","0"
"apache/incubator-druid","io.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexFloatThenLong","0"
"apache/incubator-druid","io.druid.benchmark.GenericIndexedBenchmark.get","0"
"apache/incubator-druid","io.druid.benchmark.GenericIndexedBenchmark.indexOf","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionBenchmark.queryUsingJavaScript","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionBenchmark.queryUsingExpression","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionBenchmark.queryUsingNative","0"
"apache/incubator-druid","io.druid.benchmark.FlattenJSONBenchmark.jqflatten","0"
"apache/incubator-druid","io.druid.server.coordinator.CachingCostBalancerStrategyBenchmark.measureCostStrategy","0"
"apache/incubator-druid","io.druid.server.coordinator.CachingCostBalancerStrategyBenchmark.measureCachingCostStrategy","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionAggregationBenchmark.queryUsingJavaScript","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionAggregationBenchmark.queryUsingExpression","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionAggregationBenchmark.queryUsingNative","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionSelectorBenchmark.timeFloorUsingExpression","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionSelectorBenchmark.timeFloorUsingExtractionFn","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionSelectorBenchmark.timeFloorUsingCursor","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionSelectorBenchmark.strlenUsingExpressionAsLong","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionSelectorBenchmark.strlenUsingExpressionAsString","0"
"apache/incubator-druid","io.druid.benchmark.ExpressionSelectorBenchmark.strlenUsingExtractionFn","0"
"apache/incubator-druid","io.druid.benchmark.ConsistentHasherBenchmark.hash","0"
"apache/incubator-druid","io.druid.benchmark.RendezvousHasherBenchmark.hash","0"
"apache/incubator-druid","io.druid.benchmark.FilteredAggregatorBenchmark.ingest","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.compileUUIDsAsRegex","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.compileUUIDsAsRegexAndMatchRandomUUID","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.compileGranularityPathRegex","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.deserializeGranularityPathRegex","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.compileUUIDRegex","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.deserializeUUIDRegex","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.compileUUIDRegexAndMatch","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.compileGranularityPathRegexAndMatch","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.precompileUUIDRegexAndMatch","0"
"apache/incubator-druid","io.druid.benchmark.RegexMatchBenchmark.precompileGranularityPathRegexAndMatch","0"
"apache/incubator-druid","io.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark.uncompressed","0"
"apache/incubator-druid","io.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark.compressed","0"
"apache/incubator-druid","io.druid.benchmark.CompressedColumnarIntsBenchmark.uncompressed","0"
"apache/incubator-druid","io.druid.benchmark.CompressedColumnarIntsBenchmark.compressed","0"
"apache/incubator-druid","io.druid.benchmark.BasicAuthUserMapSerdeBenchmark.serialize","0"
"apache/incubator-druid","io.druid.benchmark.BasicAuthUserMapSerdeBenchmark.deserialize","0"
"apache/incubator-druid","io.druid.server.coordinator.NewestSegmentFirstPolicyBenchmark.measureNewestSegmentFirstPolicy","0"
"apache/incubator-druid","io.druid.benchmark.LoadStatusBenchmark.oldVersion","0"
"apache/incubator-druid","io.druid.benchmark.LoadStatusBenchmark.newVersion","0"
"apache/incubator-druid","io.druid.benchmark.FilterPartitionBenchmark.readAndFilter","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.compileUUIDsAsRegex","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.compileUUIDsAsRegexAndMatchRandomUUID","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.compileGranularityPathRegex","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.deserializeGranularityPathRegex","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.compileUUIDRegex","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.deserializeUUIDRegex","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.compileUUIDRegexAndMatch","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.compileGranularityPathRegexAndMatch","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.precompileUUIDRegexAndMatch","0"
"apache/incubator-druid","org.apache.druid.benchmark.RegexMatchBenchmark.precompileGranularityPathRegexAndMatch","0"
"apache/incubator-druid","org.apache.druid.benchmark.LikeFilterBenchmark.matchLikeEquals","0"
"apache/incubator-druid","org.apache.druid.benchmark.LikeFilterBenchmark.matchSelectorEquals","0"
"apache/incubator-druid","org.apache.druid.benchmark.LikeFilterBenchmark.matchLikePrefix","0"
"apache/incubator-druid","org.apache.druid.benchmark.LikeFilterBenchmark.matchBoundPrefix","0"
"apache/incubator-druid","org.apache.druid.benchmark.LikeFilterBenchmark.matchRegexPrefix","0"
"apache/incubator-druid","org.apache.druid.benchmark.LoadStatusBenchmark.oldVersion","0"
"apache/incubator-druid","org.apache.druid.benchmark.LoadStatusBenchmark.newVersion","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexStringOnly","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexLongOnly","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexFloatOnly","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexNumericOnly","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexNumericThenString","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexLongThenString","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexLongThenFloat","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexStringThenNumeric","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexStringThenLong","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexStringTwice","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexLongTwice","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexFloatTwice","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexFloatThenLong","0"
"apache/incubator-druid","org.apache.druid.benchmark.GroupByTypeInterfaceBenchmark.querySingleQueryableIndexFloatThenString","0"
"apache/incubator-druid","org.apache.druid.benchmark.FlattenJSONBenchmark.baseline","0"
"apache/incubator-druid","org.apache.druid.benchmark.FlattenJSONBenchmark.flatten","0"
"apache/incubator-druid","org.apache.druid.benchmark.FlattenJSONBenchmark.jqflatten","0"
"apache/incubator-druid","org.apache.druid.benchmark.FlattenJSONBenchmark.preflattenNestedParser","0"
"apache/incubator-druid","org.apache.druid.benchmark.FlattenJSONBenchmark.forcedRootPaths","0"
"apache/incubator-druid","org.apache.druid.benchmark.LongCompressionBenchmark.readContinuous","0"
"apache/incubator-druid","org.apache.druid.benchmark.LongCompressionBenchmark.readSkipping","0"
"apache/incubator-druid","org.apache.druid.benchmark.StupidPoolConcurrencyBenchmark.hammerQueue","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.read1","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.read2","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.read4","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.read8","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd12","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd16","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd20","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd24","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd32","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd40","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd48","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd56","0"
"apache/incubator-druid","org.apache.druid.benchmark.VSizeSerdeBenchmark.readd64","0"
"apache/incubator-druid","org.apache.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark.uncompressed","0"
"apache/incubator-druid","org.apache.druid.benchmark.CompressedVSizeColumnarMultiIntsBenchmark.compressed","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark.queryUsingJavaScript","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark.queryUsingExpression","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionAggregationBenchmark.queryUsingNative","0"
"apache/incubator-druid","org.apache.druid.benchmark.TimeParseBenchmark.parseNoContext","0"
"apache/incubator-druid","org.apache.druid.benchmark.TimeParseBenchmark.parseWithContext","0"
"apache/incubator-druid","org.apache.druid.benchmark.GenericIndexedBenchmark.get","0"
"apache/incubator-druid","org.apache.druid.benchmark.GenericIndexedBenchmark.indexOf","0"
"apache/incubator-druid","org.apache.druid.benchmark.DimensionPredicateFilterBenchmark.matchIsEven","0"
"apache/incubator-druid","org.apache.druid.benchmark.MergeSequenceBenchmark.mergeHierarchical","0"
"apache/incubator-druid","org.apache.druid.benchmark.MergeSequenceBenchmark.mergeFlat","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.timeFloorUsingExpression","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.timeFloorUsingExtractionFn","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.timeFloorUsingCursor","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.strlenUsingExpressionAsLong","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.strlenUsingExpressionAsString","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.strlenUsingExtractionFn","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexStringOnly","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexStringTwice","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexStringThenLong","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexStringThenFloat","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexLongOnly","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexLongTwice","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexLongThenString","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexLongThenFloat","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexFloatOnly","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexFloatTwice","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexFloatThenString","0"
"apache/incubator-druid","org.apache.druid.benchmark.TopNTypeInterfaceBenchmark.querySingleQueryableIndexFloatThenLong","0"
"apache/incubator-druid","org.apache.druid.benchmark.indexing.IndexMergeBenchmark.mergeV9","0"
"apache/incubator-druid","org.apache.druid.benchmark.indexing.IncrementalIndexReadBenchmark.read","0"
"apache/incubator-druid","org.apache.druid.benchmark.indexing.IncrementalIndexReadBenchmark.readWithFilters","0"
"apache/incubator-druid","org.apache.druid.benchmark.indexing.IndexPersistBenchmark.persistV9","0"
"apache/incubator-druid","org.apache.druid.benchmark.indexing.IndexIngestionBenchmark.addRows","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.TimeseriesBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.TimeseriesBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.TimeseriesBenchmark.queryFilteredSingleQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.TimeseriesBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SearchBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SearchBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SearchBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.GroupByBenchmark.querySingleIncrementalIndex","1"
"apache/incubator-druid","org.apache.druid.benchmark.query.GroupByBenchmark.querySingleQueryableIndex","1"
"apache/incubator-druid","org.apache.druid.benchmark.query.GroupByBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.GroupByBenchmark.queryMultiQueryableIndexWithSpilling","1"
"apache/incubator-druid","org.apache.druid.benchmark.query.GroupByBenchmark.queryMultiQueryableIndexWithSerde","1"
"apache/incubator-druid","org.apache.druid.benchmark.query.SqlBenchmark.queryNative","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SqlBenchmark.queryPlanner","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SelectBenchmark.queryIncrementalIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SelectBenchmark.queryQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SelectBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.timecompare.TimeCompareBenchmark.queryMultiQueryableIndexTopN","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.timecompare.TimeCompareBenchmark.queryMultiQueryableIndexTimeseries","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.TopNBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.TopNBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.TopNBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.BoundFilterBenchmark.matchNothingLexicographic","0"
"apache/incubator-druid","org.apache.druid.benchmark.BoundFilterBenchmark.matchHalfLexicographic","0"
"apache/incubator-druid","org.apache.druid.benchmark.BoundFilterBenchmark.matchEverythingLexicographic","0"
"apache/incubator-druid","org.apache.druid.benchmark.BoundFilterBenchmark.matchNothingAlphaNumeric","0"
"apache/incubator-druid","org.apache.druid.benchmark.BoundFilterBenchmark.matchHalfAlphaNumeric","0"
"apache/incubator-druid","org.apache.druid.benchmark.BoundFilterBenchmark.matchEverythingAlphaNumeric","0"
"apache/incubator-druid","org.apache.druid.benchmark.CompressedColumnarIntsBenchmark.uncompressed","0"
"apache/incubator-druid","org.apache.druid.benchmark.CompressedColumnarIntsBenchmark.compressed","0"
"apache/incubator-druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark.normalLongs","0"
"apache/incubator-druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark.normalFloats","0"
"apache/incubator-druid","org.apache.druid.benchmark.IncrementalIndexRowTypeBenchmark.normalStrings","0"
"apache/incubator-druid","org.apache.druid.benchmark.FloatCompressionBenchmark.readContinuous","0"
"apache/incubator-druid","org.apache.druid.benchmark.FloatCompressionBenchmark.readSkipping","0"
"apache/incubator-druid","org.apache.druid.benchmark.BasicAuthUserMapSerdeBenchmark.serialize","0"
"apache/incubator-druid","org.apache.druid.benchmark.BasicAuthUserMapSerdeBenchmark.deserialize","0"
"apache/incubator-druid","org.apache.druid.benchmark.ConciseComplementBenchmark.uncompressed","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.stringRead","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.longRead","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.timeFilterNone","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.timeFilterHalf","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.timeFilterAll","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readWithPreFilter","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readWithPostFilter","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readWithExFnPreFilter","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readWithExFnPostFilter","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readAndFilter","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readOrFilter","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readOrFilterCNF","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readComplexOrFilter","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilterPartitionBenchmark.readComplexOrFilterCNF","0"
"apache/incubator-druid","org.apache.druid.benchmark.ConsistentHasherBenchmark.hash","0"
"apache/incubator-druid","org.apache.druid.benchmark.BitmapIterationBenchmark.iter","0"
"apache/incubator-druid","org.apache.druid.benchmark.BitmapIterationBenchmark.constructAndIter","0"
"apache/incubator-druid","org.apache.druid.benchmark.BitmapIterationBenchmark.intersectionAndIter","0"
"apache/incubator-druid","org.apache.druid.benchmark.BitmapIterationBenchmark.unionAndIter","0"
"apache/incubator-druid","org.apache.druid.benchmark.RendezvousHasherBenchmark.hash","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark.ingest","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.FilteredAggregatorBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.server.coordinator.CostBalancerStrategyBenchmark.measureCostStrategySingle","0"
"apache/incubator-druid","org.apache.druid.server.coordinator.CostBalancerStrategyBenchmark.measureIntervalPenalty","0"
"apache/incubator-druid","org.apache.druid.server.coordinator.NewestSegmentFirstPolicyBenchmark.measureNewestSegmentFirstPolicy","0"
"apache/incubator-druid","org.apache.druid.server.coordinator.CachingCostBalancerStrategyBenchmark.measureCostStrategy","0"
"apache/incubator-druid","org.apache.druid.server.coordinator.CachingCostBalancerStrategyBenchmark.measureCachingCostStrategy","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.timeFormatUsingExpression","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.timeFormatUsingExtractionFn","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.arithmeticOnLong","0"
"apache/incubator-druid","org.apache.druid.benchmark.ExpressionSelectorBenchmark.stringConcatAndCompareOnLong","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.mergeFixedDifferentBuckets","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.mergeFixedSameBuckets","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.getPercentilesFixed","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.serializeFixedSparseLower","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.deserializeFixedSparseLower","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.serializeFixedSparseUpper","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.deserializeFixedSparseUpper","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.serializeFixedFull","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramBenchmark.deserializeFixedFull","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramAddBenchmark.addFixedHisto","0"
"apache/incubator-druid","org.apache.druid.benchmark.FixedHistogramAddBenchmark.addFixedHistoNormal","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.ScanBenchmark.querySingleIncrementalIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.ScanBenchmark.querySingleQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.ScanBenchmark.queryMultiQueryableIndex","0"
"apache/incubator-druid","org.apache.druid.benchmark.DataSketchesHllBenchmark.init","0"
"apache/incubator-druid","org.apache.druid.benchmark.DataSketchesHllBenchmark.initAndGet","0"
"apache/incubator-druid","org.apache.druid.benchmark.DataSketchesHllBenchmark.initAndSerde","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.CachingClusteredClientBenchmark.timeseriesQuery","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.CachingClusteredClientBenchmark.topNQuery","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.CachingClusteredClientBenchmark.groupByQuery","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SqlVsNativeBenchmark.queryNative","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SqlVsNativeBenchmark.queryPlanner","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.SqlBenchmark.querySql","0"
"apache/incubator-druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark.benchAdd","0"
"apache/incubator-druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark.benchRemove","0"
"apache/incubator-druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark.benchLookup","0"
"apache/incubator-druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark.benchIsOvershadowed","0"
"apache/incubator-druid","org.apache.druid.timeline.VersionedIntervalTimelineBenchmark.benchFindFullyOvershadowed","0"
"apache/incubator-druid","org.apache.druid.benchmark.query.GroupByBenchmark.queryMultiQueryableIndexX","0"
"apache/incubator-gobblin","gobblin.crypto.EncodingBenchmark.write1KRecordsKeyOldBase64","0"
"apache/incubator-gobblin","gobblin.crypto.EncodingBenchmark.write1KRecordsNewBase64","0"
"apache/incubator-gobblin","gobblin.crypto.EncodingBenchmark.write1KRecordsBase64Only","0"
"apache/incubator-gobblin","gobblin.crypto.EncodingBenchmark.write1KRecordsBase64Reflector","0"
"apache/incubator-gobblin","gobblin.crypto.EncodingBenchmark.write1KRecordsDirectCipherStream","0"
"apache/incubator-gobblin","gobblin.crypto.EncodingBenchmark.write1KRecordsInsecureCipher","0"
"apache/incubator-gobblin","gobblin.writer.FineGrainedWatermarkTrackerBenchmark.trackImmediateAcks","0"
"apache/incubator-gobblin","gobblin.writer.FineGrainedWatermarkTrackerBenchmark.trackWithDelayedAcks","0"
"apache/incubator-gobblin","gobblin.writer.FineGrainedWatermarkTrackerBenchmark.scheduledDelayedAcks","0"
"apache/incubator-gobblin","gobblin.writer.FineGrainedWatermarkTrackerBenchmark.scheduledNoRandomDelayedAcks","0"
"apache/incubator-gobblin","gobblin.runtime.fork.SynchronousForkBenchmark.putRecord","0"
"apache/incubator-gobblin","gobblin.runtime.fork.AsynchronousForkBenchmark.putRecord","0"
"apache/incubator-gobblin","gobblin.runtime.fork.AsynchronousForkBenchmark.processRecord","0"
"apache/incubator-gobblin","org.apache.gobblin.crypto.EncodingBenchmark.write1KRecordsNewBase64","0"
"apache/incubator-gobblin","org.apache.gobblin.crypto.EncodingBenchmark.write1KRecordsBase64Only","0"
"apache/incubator-gobblin","org.apache.gobblin.crypto.EncodingBenchmark.write1KRecordsDirectCipherStream","0"
"apache/incubator-gobblin","org.apache.gobblin.writer.FineGrainedWatermarkTrackerBenchmark.trackImmediateAcks","0"
"apache/incubator-gobblin","org.apache.gobblin.writer.FineGrainedWatermarkTrackerBenchmark.trackWithDelayedAcks","0"
"apache/incubator-gobblin","org.apache.gobblin.writer.FineGrainedWatermarkTrackerBenchmark.scheduledDelayedAcks","0"
"apache/incubator-gobblin","org.apache.gobblin.writer.FineGrainedWatermarkTrackerBenchmark.scheduledNoRandomDelayedAcks","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkFileRead.readSVs","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkQueryEngine.sendQueryToPinot","1"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkFileWrite.writeSVs","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkStringDictionary.benchmarkOffHeapStringDictionary","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkStringDictionary.benchmarkOnHeapStringDictionary","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionary.benchmarkOnHeap0ToN","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionary.benchmarkOffHeapMidSizeWithOverflow","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionary.benchmarkOffHeapMidSizeWithoutOverflow","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionary.benchmarkOffHeapPreSizeWithOverflow","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionary.benchmarkOffHeapPreSizeWithoutOverflow","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionary.benchmarkOffHeapMinSizeWithoutOverflow","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionary.benchmarkOffHeapMinSizeWithOverflow","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkForwardIndexReader.fixedBitSingleValueReader","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkForwardIndexReader.sortedForwardIndexReaderSequential","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkForwardIndexReader.sortedForwardIndexReaderRandom","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkForwardIndexReader.fixedBitMultiValueReaderSequential","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkForwardIndexReader.fixedBitMultiValueReaderRandom","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.fixedBitSingleValueReader","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.sortedForwardIndexReaderSequential","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.sortedForwardIndexReaderRandom","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.fixedBitMultiValueReaderSequential","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.fixedBitMultiValueReaderRandom","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.intDictionary","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.longDictionary","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.floatDictionary","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.doubleDictionary","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOfflineIndexReader.stringDictionary","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOrDocIdIterator.arrayBased2","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOrDocIdIterator.arrayBased5","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOrDocIdIterator.arrayBased10","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOrDocIdIterator.arrayBased20","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkOrDocIdIterator.arrayBased50","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionaryCreation.benchmarkIntDictionaryCreation","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionaryCreation.benchmarkLongDictionaryCreation","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionaryCreation.benchmarkFloatDictionaryCreation","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionaryCreation.benchmarkDoubleDictionaryCreation","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkDictionaryCreation.benchmarkStringDictionaryCreation","0"
"apache/incubator-pinot","com.linkedin.pinot.perf.BenchmarkFixedIntArrayOffHeapIdMap.benchmarkOffHeapWithResizeWithCache","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.fixedBitSingleValueReader","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.sortedForwardIndexReaderSequential","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.sortedForwardIndexReaderRandom","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.fixedBitMultiValueReaderSequential","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.fixedBitMultiValueReaderRandom","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.intDictionary","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.longDictionary","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.floatDictionary","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.doubleDictionary","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOfflineIndexReader.stringDictionary","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOrDocIdIterator.arrayBased2","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOrDocIdIterator.arrayBased5","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOrDocIdIterator.arrayBased10","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOrDocIdIterator.arrayBased20","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkOrDocIdIterator.arrayBased50","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionaryCreation.benchmarkIntDictionaryCreation","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionaryCreation.benchmarkLongDictionaryCreation","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionaryCreation.benchmarkFloatDictionaryCreation","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionaryCreation.benchmarkDoubleDictionaryCreation","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionaryCreation.benchmarkStringDictionaryCreation","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkStringDictionary.benchmarkOffHeapStringDictionary","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkStringDictionary.benchmarkOnHeapStringDictionary","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkFixedIntArrayOffHeapIdMap.benchmarkOffHeapWithResizeWithCache","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkQueryEngine.sendQueryToPinot","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionary.benchmarkOnHeap0ToN","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionary.benchmarkOffHeapMidSizeWithOverflow","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionary.benchmarkOffHeapMidSizeWithoutOverflow","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionary.benchmarkOffHeapPreSizeWithOverflow","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionary.benchmarkOffHeapPreSizeWithoutOverflow","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionary.benchmarkOffHeapMinSizeWithoutOverflow","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionary.benchmarkOffHeapMinSizeWithOverflow","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkStringDictionary.offHeapStringDictionaryRead","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkStringDictionary.onHeapStringDictionaryRead","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkStringDictionary.offHeapStringDictionaryWrite","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkStringDictionary.onHeapStringDictionaryWrite","0"
"apache/incubator-pinot","org.apache.pinot.perf.BenchmarkDictionaryCreation.benchmarkVarLengthStringDictionaryCreation","0"
"apache/incubator-retired-pirk","org.apache.pirk.benchmark.PaillierBenchmark.testWithGMP","0"
"apache/incubator-retired-pirk","org.apache.pirk.benchmark.PaillierBenchmark.testWithGMPConstantTime","0"
"apache/incubator-retired-pirk","org.apache.pirk.benchmark.PaillierBenchmark.testWithoutGMP","0"
"apache/incubator-rya","org.apache.rya.benchmark.query.QueryBenchmark.queryRya","0"
"apache/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark.optimizeQuery_unchained","0"
"apache/incubator-rya","org.apache.rya.benchmark.query.PCJOptimizerBenchmark.optimizeQuery_chained","0"
"apache/kafka","org.apache.kafka.jmh.cache.LRUCacheBenchmark.testCachePerformance","0"
"apache/kafka","org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureIteratorForBatchWithSingleMessage","0"
"apache/kafka","org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureStreamingIteratorForVariableBatchSize","0"
"apache/kafka","org.apache.kafka.jmh.producer.ProducerRecordBenchmark.constructorBenchmark","0"
"apache/kafka","org.apache.kafka.jmh.common.TopicBenchmark.testValidate","0"
"apache/kafka","org.apache.kafka.jmh.record.RecordBatchIterationBenchmark.measureSkipIteratorForVariableBatchSize","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark.systemCurrentTimeMillis","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark.systemClock","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark.cachedClock","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark.oldCachedClock","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark.coarseCachedClock","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark.fixedClock","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ClocksBenchmark.fixedFinalClock","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark.testThroughputH2Message","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark.testThroughputH2Exception","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark.testResponseTimeH2Message","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark.testResponseTimeH2Exception","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark.testThroughputHSQLDBMessage","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark.testThroughputHSQLDBException","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark.testResponseTimeHSQLDBMessage","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JpaAppenderBenchmark.testResponseTimeHSQLDBException","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark.testBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark.createLogEventWithoutException","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark.createLogEventWithoutExceptionUsingBuilder","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark.createLogEventWithExceptionUsingBuilder","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark.getSourceLocationOfLogEvent","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark.createSerializableLogEventProxyWithoutException","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark.createSerializableLogEventProxyWithException","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testBaselineThroughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testIsDebugEnabledThroughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testIsEnabledLevelThroughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testDebugDisabledThroughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testBaselineResponseTime","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testIsDebugEnabledResponseTime","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testIsEnabledLevelResponseTime","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testDebugDisabledResponseTime","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark.base","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark.randomUUID","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UuidGeneratorBenchmark.timeBasedUUID","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.log4jIsDebugEnabled","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.slf4jIsDebugEnabled","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.log4jClassicIsDebugEnabled","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.log4jDebugStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.slf4jDebugStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.log4jClassicDebugStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.log4jDebugParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.DebugDisabledBenchmark.slf4jDebugParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark.testThroughputH2Message","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark.testThroughputH2Exception","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark.testResponseTimeH2Message","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark.testResponseTimeH2Exception","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark.testThroughputHSQLDBMessage","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark.testThroughputHSQLDBException","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark.testResponseTimeHSQLDBMessage","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.JdbcAppenderBenchmark.testResponseTimeHSQLDBException","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughputBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.latencyBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.latency","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughputBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.latencyBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.latency","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughputBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.latencyBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.latency","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ConfiguratorInitializeBenchmark.initializeLoggerContext","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughputBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.latencyBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.latency","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test01_getCallerClassNameFromStackTrace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test02_getCallerClassNameFromThreadStackTrace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test03_getCallerClassNameReflectively","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test04_getCallerClassNameSunReflection","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test05_getStackTraceClassForClassName","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test06_getThreadStackTraceClassForClassName","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test07_getReflectiveCallerClassUtility","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test08_getDirectSunReflection","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test09_getMessageUsingNew","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test10_getMessageUsingReflection","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.simpleDateFormatString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.simpleDateFormatBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.customFastFormatString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.customFastFormatBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.customFormatString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.customFormatBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.throughputBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.throughputParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.throughputParameterizedDouble","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.throughputStringFormatString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.throughputStringFormatDouble","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.latencyBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.latencyParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.latencyParameterizedDouble","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.latencyStringFormatString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FormatterLoggerBenchmark.latencyStringFormatDouble","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test11_getClassContextViaCallerClass","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.test12_getClassContextViaSecurityManager","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputStringGetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputPatternM","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputPatternSpace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputPatternMC","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputPatternMCD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputPatternMD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputPatternMDEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputPatternMEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.throughputPatternMCDEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.throughputStringGetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.throughputStringGetBytesString88591","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.throughputStringGetBytesCharSet88591","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.throughputStringGetBytesStringDefault","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.throughputStringGetBytesCharSetDefault","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.throughputStringGetBytesStringShiftJIS","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.throughputStringGetBytesCharSetShiftJIS","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark.synchronizedFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark.threadLocalFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark.cachedFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark.fastFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleDateFormatBenchmark.atomicFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark.latency_nanotime","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.NanotimeBenchmark.granularity_nanotime","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4jRandomDebugStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4jDebugStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.slf4jDebugStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4jClassicDebugStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4jDebugRandomParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4jDebugParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.slf4jDebugParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.synchronizedSimpleDateFmt","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.threadLocalSimpleDateFmt","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.cachedThrdLocalSimpleDateFmt","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.cachedThrdLocalCustomFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.fastDateFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.fixedDateFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.atomicFastFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadsafeDateFormatBenchmark.atomicFixedFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark.logback","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutComparisonBenchmark.log4j2","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark.format","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark.format0","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark.formatStringArgs","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark.format0_inlined2","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark.varargParams","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.VarargsBenchmark.individualParams","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2RAFStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2StringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.slf4jStringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j1StringConcatenation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2RAFParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2ParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.slf4jParameterizedString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.simpleDateFormat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.fastDateFormatCreateNewStringBuilder","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.fastDateFormatReuseStringBuilder","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.fixedBitFiddlingReuseCharArray","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.fixedDateFormatCreateNewCharArray","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.fixedDateFormatReuseCharArray","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TimeFormatBenchmark.fixedFormatReuseStringBuilder","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark.testBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark.logWithCountersAndLock","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark.logWithCountersNoLocks","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark.logWithoutCountersOrLocks","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.LoggerConfigBenchmark.logWithCountersRetryAfterReconfig","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark.testBaseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark.iterMap1Element","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark.iterArraySet1Element","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark.iterArrayList1Element","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark.iterMap3Elements","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark.iterArraySet3Element","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.CollectionsBenchmark.iterArrayList3Element","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark.newInstance","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark.threadLocal","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark.objectPool","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark._stringNewInstance","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark._stringThreadLocal","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsPoolBenchmark._stringObjectPool","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.defaultStringGetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.iso8859_1StringGetBytesString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.iso8859_1StringGetBytesCharSet","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.usAsciiStringGetBytesString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.usAsciiStringGetBytesCharSet","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.defaultStringGetBytesString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.defaultStringGetBytesCharSet","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.shiftJisStringGetBytesString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.shiftJisStringGetBytesCharSet","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.shiftJisEncoder","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.iso8859_1Encoder","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.iso8859_1CustomCastToByte","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.iso8859_1CustomVerifyAndCast","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.iso8859_1CustomPortedJDK8","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringEncodingBenchmark.iso8859_1CustomPortedJDK8CopyArray","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark.newInstance","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark.threadLocal","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadLocalVsConcurrentHashMapBenchmark.concurrentHashMap","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testDebugMessageDisabledThroughput","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SimpleBenchmark.testDebugDisabledMessageResponseTime","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.stringGetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayM","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArraySpace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayMC","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayMCD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayMD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayMDEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayMEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayMCDEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayC","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayMDNoSpace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.byteArrayMCNoSpace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableM","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableSpace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableMC","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableMCD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableMD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableMDEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableMEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableMCDEx","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableC","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableMDNoSpace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.PatternLayoutBenchmark.serializableMCNoSpace","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark.format","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark.format0","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark.formatStringArgs","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageInliningBenchmark.format0_inlined2","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark.classicGetFormattedMsg","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark.refactoredGetFormattedMsg","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ParameterizedMessageBenchmark.refactoredFormatTo","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.stringGetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.textEncoderEncode","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.charBufferEncode","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.charBufferCopyAndEncode","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.textHelperCopyAndEncode","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.byteArrayMCD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.serializableMCD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.toStringMCD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.TextEncoderHelperBenchmark.encodeMCD","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput3Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput5Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput7Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput9Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.latencySimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.latency3Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.latency5Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.latency7Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.latency9Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency3ParamsV3","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency5ParamsV3","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency7ParamsV3","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency9ParamsV3","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency3ParamsV2","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency5ParamsV2","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency7ParamsV2","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency9ParamsV2","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency3Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency5Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency7Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.message.ParameterFormatterBenchmark.latency9Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.GelfLayoutBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.GelfLayoutBenchmark.log4j2Gelf","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2RAF","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2File","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.logbackFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j1File","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.julFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param1Log4j1Concat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param3Log4j1Concat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param1Log4j2RAF","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param3Log4j2RAF","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param1Log4j2File","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param3Log4j2File","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param1LogbackFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param3LogbackFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param1JulFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderParamsBenchmark.param3JulFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1LocationBenchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2LocationBenchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark.log4jThreadContextFilter","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MDCFilterBenchmark.slf4jMDCFilter","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput1Param","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput2Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput4Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput6Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput8Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput10Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersBenchmark.throughput11Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput1Param","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput2Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput3Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput4Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput5Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput6Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput7Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput8Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput9Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput10Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackBenchmark.throughput11Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput1Param","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput2Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput3Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput4Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput5Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput6Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput7Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput8Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput9Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput10Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j1Benchmark.throughput11Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.usAsciiGetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.usAsciiEncode","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.iso8859_1GetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.iso8859_1Encode","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.utf8GetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.utf8Encode","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.utf16GetBytes","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AbstractStringLayoutStringEncodingBenchmark.utf16Encode","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.end2endRAF","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.appenderRAF","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.end2endFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.appenderFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.end2endMMap","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.appenderMMap","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.end2endNoop","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.appenderNoop","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.end2endRewrite","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.appenderRewrite","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.end2endConsole","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.appenderConsole","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULLocationBenchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput1Param","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput2Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput3Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput4Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput5Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput6Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput7Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput8Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput9Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput10Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLog4j2Benchmark.throughput11Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput1Param","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput2Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput3Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput4Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput5Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput6Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput7Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput8Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput9Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput10Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MemoryHandlerJULBenchmark.throughput11Params","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark.baseline","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark.log4jParentMarker","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark.log4jSimpleMarker","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark.log4jTooFine","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark.logbackParentMarker","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark.logbackSimpleMarker","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.MarkerFilterBenchmark.logbackTooFine","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncLoggersLocationBenchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AsyncAppenderLogbackLocationBenchmark.throughputSimple","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.end2endDirectConsole","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4j2AppenderComparisonBenchmark.appenderDirectConsole","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark.boxBoolean","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark.boxInt","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark.boxLong","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark.boxDouble","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark.boxFloat","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.UnboxBenchmark.boxShort","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.putAllArrayContextData","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.putAllHashContextData","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.putAllMap","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.cloneArrayContextData","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.cloneHashContextData","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.cloneMap","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.iterateArrayContextDataTriConsumer","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.iterateHashContextDataTriConsumer","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.iterateArrayContextDataBiConsumer","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.iterateHashContextDataBiConsumer","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.iterateMap","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.getValueArrayContextData","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.getValueHashContextData","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.getValueMap","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.putArrayContextData","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.putHashContextData","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.SortedArrayVsHashMapBenchmark.putMap","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark.get","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark.putAndRemove","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark.injectWithoutProperties","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark.injectWithProperties","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark.legacyInjectWithoutProperties","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ThreadContextBenchmark.legacyInjectWithProperties","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AnnotationVsMarkerInterface.annotationMissing","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AnnotationVsMarkerInterface.annotationPresent","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AnnotationVsMarkerInterface.interfaceNotImpl","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.AnnotationVsMarkerInterface.interfaceImplemented","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2MMF","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2AsyncAppender","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2AsyncDisruptor","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2AsyncLogger","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.logbackAsyncFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.Log4jLogEventBenchmark.createSerializableLogEventProxyWithoutExceptionWithLocation","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark.log4j2RAF","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark.log4j2File","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark.logbackFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark.log4j1File","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.reflectionUtilGetClass","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ReflectionBenchmark.locationLocatorGetMethod","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringBuilderEscapeBenchmark.escapeJsonLargeString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.StringBuilderEscapeBenchmark.escapeXmlLargeString","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.log4j1","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.log4j2SimpleThrowable","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.log4j2ExtendedThrowable","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.logbackFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.julFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.complexLog4j1","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.log4j2Throwable","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.complexLog4j2Throwable","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.complexLog4j2ThrowableAsync","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.complexLog4j2ExtendedThrowable","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.complexLog4j2ExtendedThrowableAsync","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderThrowableBenchmark.complexLogbackFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ConcurrentAsyncLoggerToFileBenchmark.concurrentLoggingThreads","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.ConcurrentAsyncLoggerToFileBenchmark.singleLoggingThread","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderWithLocationBenchmark.log4j2FluentFile","0"
"apache/logging-log4j2","org.apache.logging.log4j.perf.jmh.FileAppenderBenchmark.log4j2Builder","0"
"apache/orc","org.apache.orc.bench.FullReadBenchmark.orc","0"
"apache/orc","org.apache.orc.bench.FullReadBenchmark.avro","0"
"apache/orc","org.apache.orc.bench.FullReadBenchmark.parquet","0"
"apache/orc","org.apache.orc.bench.FullReadBenchmark.json","0"
"apache/orc","org.apache.orc.bench.ColumnProjectionBenchmark.orc","0"
"apache/orc","org.apache.orc.bench.ColumnProjectionBenchmark.parquet","0"
"apache/orc","org.apache.orc.bench.DecimalBench.write","0"
"apache/orc","org.apache.orc.bench.DecimalBench.read","0"
"apache/orc","org.apache.orc.bench.hive.FullReadBenchmark.orc","0"
"apache/orc","org.apache.orc.bench.hive.FullReadBenchmark.avro","0"
"apache/orc","org.apache.orc.bench.hive.FullReadBenchmark.parquet","0"
"apache/orc","org.apache.orc.bench.hive.FullReadBenchmark.json","0"
"apache/orc","org.apache.orc.bench.hive.DecimalBench.write","0"
"apache/orc","org.apache.orc.bench.hive.DecimalBench.read","0"
"apache/orc","org.apache.orc.bench.hive.ColumnProjectionBenchmark.orc","0"
"apache/orc","org.apache.orc.bench.hive.ColumnProjectionBenchmark.parquet","0"
"apache/orc","org.apache.orc.bench.spark.SparkBenchmark.fullRead","0"
"apache/orc","org.apache.orc.bench.spark.SparkBenchmark.partialRead","0"
"apache/orc","org.apache.orc.bench.spark.SparkBenchmark.pushDown","0"
"apache/parquet-mr","parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.ReadBenchmarks.read1MRowsBS256MPS4MUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.ReadBenchmarks.read1MRowsBS256MPS8MUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.ReadBenchmarks.read1MRowsBS512MPS4MUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.ReadBenchmarks.read1MRowsBS512MPS8MUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeSNAPPY","0"
"apache/parquet-mr","parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeGZIP","0"
"apache/parquet-mr","parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.WriteBenchmarks.write1MRowsBS256MPS4MUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.WriteBenchmarks.write1MRowsBS256MPS8MUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.WriteBenchmarks.write1MRowsBS512MPS4MUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.WriteBenchmarks.write1MRowsBS512MPS8MUncompressed","0"
"apache/parquet-mr","parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeSNAPPY","0"
"apache/parquet-mr","parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeGZIP","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsBS256MPS4MUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsBS256MPS8MUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsBS512MPS4MUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsBS512MPS8MUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeSNAPPY","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeGZIP","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsBS256MPS4MUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsBS256MPS8MUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsBS512MPS4MUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsBS512MPS8MUncompressed","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeSNAPPY","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeGZIP","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageSizeContext.benchmarkWithOrWithoutColumnIndex","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageSizeContext.benchmarkPageSize","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.NestedNullWritingBenchmarks.benchmarkWriting","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write100KRowsUncompressedWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write100KRowsUncompressedWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write100KRowsGzipWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write100KRowsGzipWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write100KRowsSnappyWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write100KRowsSnappyWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write1MRowsUncompressedWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write1MRowsUncompressedWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write1MRowsGzipWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write1MRowsGzipWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write1MRowsSnappyWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write1MRowsSnappyWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write10MRowsUncompressedWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write10MRowsUncompressedWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write10MRowsGzipWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write10MRowsGzipWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write10MRowsSnappyWithoutChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumWriteBenchmarks.write10MRowsSnappyWithChecksums","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read100KRowsUncompressedWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read100KRowsUncompressedWithVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read100KRowsGzipWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read100KRowsGzipWithVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read100KRowsSnappyWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read100KRowsSnappyWithVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read1MRowsUncompressedWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read1MRowsUncompressedWithVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read1MRowsGzipWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read1MRowsGzipWithVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read1MRowsSnappyWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read1MRowsSnappyWithVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read10MRowsUncompressedWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read10MRowsUncompressedWithVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read10MRowsGzipWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read10MRowsGzipWithVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read10MRowsSnappyWithoutVerification","0"
"apache/parquet-mr","org.apache.parquet.benchmarks.PageChecksumReadBenchmarks.read10MRowsSnappyWithVerification","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testAddVertex","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testVertexProperty","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testAddEdge","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testEdgeProperty","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testAddV","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testVertexPropertyStep","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testAddE","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testEdgePropertyStep","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_outE_inV_outE_inV_outE_inV","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_out_out_out","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_out_out_out_path","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_repeatXoutX_timesX2X","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_repeatXoutX_timesX3X","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_localXout_out_valuesXnameX_foldX","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_out_localXout_out_valuesXnameX_foldX","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_out_mapXout_out_valuesXnameX_toListX","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_label_groupCount","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_V_match_selectXbX_valuesXnameX","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphTraversalBenchmark.g_E_hasLabelXwrittenByX_whereXinV_inEXsungByX_count_isX0XX_subgraphXsgX","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testAddVertexWithProps","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testAddVWithProps","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testAddVWithPropsChained","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.GraphMutateBenchmark.testAddVAddEWithPropsChained","0"
"apache/tinkerpop","org.apache.tinkerpop.jsr223.JavaTranslatorBenchmark.testTranslationShort","0"
"apache/tinkerpop","org.apache.tinkerpop.jsr223.JavaTranslatorBenchmark.testTranslationMedium","0"
"apache/tinkerpop","org.apache.tinkerpop.jsr223.JavaTranslatorBenchmark.testTranslationLong","0"
"apache/tinkerpop","org.apache.tinkerpop.jsr223.JavaTranslatorBenchmark.testTranslationWithStrategy","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testReadMessage1Binary","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testReadMessage2Binary","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testReadMessage1GraphSON","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testReadMessage2GraphSON","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testInstanceCreation","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark.constructShort","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark.constructShortWithMapArgument","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark.constructMedium","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark.constructMediumWithBindings","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark.constructLong","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark.testAddVWithPropsChained","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.process.TraversalConstructionBenchmark.testAddVAddEWithPropsChained","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphSONMapperBenchmark.readBytecode1","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphSONMapperBenchmark.readBytecode2","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphSONMapperBenchmark.writeBytecode1","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphSONMapperBenchmark.writeBytecode2","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testWriteResponseBinary","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testWriteResponseGraphSON","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testWriteBytecodeBinary","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.SerializationBenchmark.testWriteBytecodeGraphSON","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark.writeBytecode1","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark.writeBytecode2","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark.readBytecode1","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark.readBytecode2","0"
"apache/tinkerpop","org.apache.tinkerpop.gremlin.driver.GraphBinaryReaderWriterBenchmark.readP1","0"
"apptik/joio","io.apptik.joio.perf.NioHeapBufferPerfBench.nioHeap_threads1hot","0"
"apptik/joio","io.apptik.joio.perf.NioHeapBufferPerfBench.nioHeap_threads2hot","0"
"apptik/joio","io.apptik.joio.perf.NioHeapBufferPerfBench.nioHeap_threads4hot","0"
"apptik/joio","io.apptik.joio.perf.NioHeapBufferPerfBench.nioHeap_threads8hot","0"
"apptik/joio","io.apptik.joio.perf.NioHeapBufferPerfBench.nioHeap_threads16hot","0"
"apptik/joio","io.apptik.joio.perf.NioHeapBufferPerfBench.nioHeap_threads32hot","0"
"apptik/joio","io.apptik.joio.perf.NioHeapBufferPerfBench.nioHeap_thinkReadCold","0"
"apptik/joio","io.apptik.joio.perf.NioHeapBufferPerfBench.nioHeap_thinkWriteCold","0"
"apptik/joio","io.apptik.joio.perf.OkioBufferPerfBench.okio_threads1hot","0"
"apptik/joio","io.apptik.joio.perf.OkioBufferPerfBench.okio_threads2hot","0"
"apptik/joio","io.apptik.joio.perf.OkioBufferPerfBench.okio_threads4hot","0"
"apptik/joio","io.apptik.joio.perf.OkioBufferPerfBench.okio_threads8hot","0"
"apptik/joio","io.apptik.joio.perf.OkioBufferPerfBench.okio_threads16hot","0"
"apptik/joio","io.apptik.joio.perf.OkioBufferPerfBench.okio_threads32hot","0"
"apptik/joio","io.apptik.joio.perf.OkioBufferPerfBench.okio_thinkReadCold","0"
"apptik/joio","io.apptik.joio.perf.OkioBufferPerfBench.okio_thinkWriteCold","0"
"apptik/joio","io.apptik.joio.perf.NioDirectBufferPerfBench.nioDirect_threads1hot","0"
"apptik/joio","io.apptik.joio.perf.NioDirectBufferPerfBench.nioDirect_threads2hot","0"
"apptik/joio","io.apptik.joio.perf.NioDirectBufferPerfBench.nioDirect_threads4hot","0"
"apptik/joio","io.apptik.joio.perf.NioDirectBufferPerfBench.nioDirect_threads8hot","0"
"apptik/joio","io.apptik.joio.perf.NioDirectBufferPerfBench.nioDirect_threads16hot","0"
"apptik/joio","io.apptik.joio.perf.NioDirectBufferPerfBench.nioDirect_threads32hot","0"
"apptik/joio","io.apptik.joio.perf.NioDirectBufferPerfBench.nioDirect_thinkReadCold","0"
"apptik/joio","io.apptik.joio.perf.NioDirectBufferPerfBench.nioDirect_thinkWriteCold","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.dbbNioRead","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.hbbNioRead","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.okioRead","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.basIoRead","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.simpleRead","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.dbbNioWrite","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.hbbNioWrite","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.okioWrite","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.vbasIoWrite","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.basIoWrite","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.SimpleWrite","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.dbbNioReadFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.hbbNioReadFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.okioReadFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.basIoReadFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.simpleReadFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.dbbNioWriteFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.hbbNioWriteFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.okioWriteFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.basIoWriteFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.vbasIoWriteFull","0"
"apptik/joio","io.apptik.joio.perf.PrimitiveBench.simpleWriteFull","0"
"apptik/jus","io.apptik.comm.jus.perf.RoundTripPerf.get","0"
"apptik/jus","okhttp3.benchmarks.Benchmark.fake","0"
"apptik/JustJson","io.apptik.json.perf.JsonObjectPerf.jjsonRead","0"
"apptik/RHub","io.apptik.rhub.PublishSubjectPerf.onNext","0"
"apptik/RHub","io.apptik.rhub.PublishSubjectPerf.observe","0"
"apptik/RHub","io.apptik.rhub.PublishProxyPerf.emit","0"
"apptik/RHub","io.apptik.rhub.PublishProxyPerf.observe","0"
"apptik/RHub","io.apptik.rhub.PublishProcProxyPerf.emit","0"
"apptik/RHub","io.apptik.rhub.PublishProcProxyPerf.observe","0"
"apptik/RHub","io.apptik.rhub.PublishObsProxyPerf.emit","0"
"apptik/RHub","io.apptik.rhub.PublishObsProxyPerf.observe","0"
"apptik/RHub","io.apptik.rhub.PublishProcessorPerf.onNext","0"
"apptik/RHub","io.apptik.rhub.PublishProcessorPerf.observe","0"
"apptik/RHub","io.apptik.rhub.EmitterProcProxyPerf.emit","0"
"apptik/RHub","io.apptik.rhub.EmitterProcProxyPerf.observe","0"
"apptik/RHub","io.apptik.rhub.EmitterProcessorPerf.onNext","0"
"apptik/RHub","io.apptik.rhub.EmitterProcessorPerf.observe","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.JNITest.testParamNone","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.JNITest.testParamString","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.JNITest.testParamArray","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.JNITest.testParamNoneReturnString","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.JavaTest.testParamNone","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.JavaTest.testParamString","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.JavaTest.testParamArray","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.JavaTest.testParamNoneReturnString","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParamNone","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParamString","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParamStringsEq","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParamStringsNe","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParamStringsUnicodeEq","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParamStringsUnicodeNe","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParamArray","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParamNoneReturnString","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testEquals1","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testEquals2","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.TestLotsOfLongs.testLongArrays","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.TestLotsOfLongs.testLongs","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.AllocationPerformance.jniAllocateAndFree","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.AllocationPerformance.unsafeAllocateAndFree","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.AllocationPerformance.jniCopy","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.AllocationPerformance.unsafeCopy","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.testParam2StringsNoScoping","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.paramNone","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.paramString","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.paramStringUTF8","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.paramStringUnicode","0"
"areese/JavaTheCostOfDoingNothing","com.yahoo.jmh.jmhtest.BaseTest.paramNoneReturnStringUTF8","0"
"areese/TestUTF8Decoding","com.yahoo.test.strings.PerfStringReturns.returnJavaString","0"
"areese/TestUTF8Decoding","com.yahoo.test.strings.PerfStringReturns.returnUnsafeString","0"
"areese/TestUTF8Decoding","com.yahoo.test.strings.PerfStringReturns.returnEncodedString","0"
"arienkock/parallelism-benchmarks","com.github.arienkock.ParallelismBenchmark.quasar1000","0"
"arienkock/parallelism-benchmarks","com.github.arienkock.FountainSocketBenchmark.fountainThreadAsync","0"
"arienkock/parallelism-benchmarks","com.github.arienkock.ParallelismBenchmark.testFiberChannel","0"
"arienkock/parallelism-benchmarks","com.github.arienkock.ParallelismBenchmark.testAsyncChannelOnFJP","0"
"arienkock/parallelism-benchmarks","com.github.arienkock.ParallelismBenchmark.testBlockingOnFJP","0"
"arienkock/parallelism-benchmarks","com.github.arienkock.ParallelismBenchmark.testFullBlockingOnFJP","0"
"arjunswaj/Java8","com.asb.demo.client.impl.FastStudentClientBenchMark.testParallel","0"
"arjunswaj/Java8","com.asb.demo.client.impl.FastStudentClientBenchMark.testSerial","0"
"arjunswaj/Java8","com.asb.demo.stream.client.impl.FastStudentClientBenchMark.testParallel","0"
"arjunswaj/Java8","com.asb.demo.stream.client.impl.FastStudentClientBenchMark.testSerial","0"
"arnaudroger/benchmark-loop","io.github.arnaudroger.LoopBenchmark.testForwardLoop","0"
"arnaudroger/benchmark-loop","io.github.arnaudroger.LoopBenchmark.testBackwardLoop","0"
"arnaudroger/jmh-exp","org.sample.MyBenchmark.testMethod","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jdbc.JdbcManualBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jdbc.JdbcManualBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.sfm.JdbcSfmDynamicBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.sfm.JdbcSfmDynamicBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.sfm.JdbcSfmStaticBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.sfm.JdbcSfmStaticBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.sql2o.Sql2OBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.sql2o.Sql2OBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.sql2o.Sql2OSfmBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.sql2o.Sql2OSfmBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.querydsl.QueryDslSfmBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.querydsl.QueryDslSfmBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.querydsl.QueryDslBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.querydsl.QueryDslBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.eclipselink.EclipseLinkBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.eclipselink.EclipseLinkBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.mybatis.MyBatisBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.mybatis.MyBatisBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.batoo.BatooBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.batoo.BatooBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.spring.RowMapperSfmBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.spring.RowMapperSfmBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.spring.RowMapperRomaBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.spring.RowMapperRomaBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.spring.RowMapperBeanPropertyBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.spring.RowMapperBeanPropertyBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jooq.JooqSfmBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jooq.JooqSfmBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jooq.JooqRecordBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jooq.JooqRecordBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jooq.JooqSfmRecordMapperBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jooq.JooqSfmRecordMapperBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jooq.JooqMapperBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.jooq.JooqMapperBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.HibernateBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.HibernateBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxMapperBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxMapperBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxSfmBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxSfmBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxManualBenchmark._04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxManualBenchmark._16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxMapperReadBenchmark._read04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxMapperReadBenchmark._read16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxSfmCrudReadBenchmark._read04Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.datastax.DatastaxSfmCrudReadBenchmark._read16Fields","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.UnivocityCsvParserBenchmark.parseCsv","1"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.JacksonCsvParserBenchmark.parseCsv","1"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmCsvParserBenchmark.parseCsv","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.UnivocityConcurrentCsvParserBenchmark.parseCsv","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmConfigurableCsvParserBenchmark.parseCsvCallback","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmConfigurableCsvParserBenchmark.parseCsvIterate","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmCsvParserBenchmark.parseCsvCallback","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmCsvParserBenchmark.parseCsvIterate","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmTrimConfigurableCsvParserBenchmark.parseCsvCallback","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmTrimConfigurableCsvParserBenchmark.parseCsvIterate","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.UnivocityCsvParserBenchmark.mapCsv","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.JacksonCsvParserBenchmark.mapCsv","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.UnivocityConcurrentCsvParserBenchmark.mapCsv","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmCsvParserBenchmark.mapCsvCallback","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SesseltjonnaCsvParserBenchmark.parseCsv","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SesseltjonnaCsvParserBenchmark.mapCsv","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmCsvParserBenchmark.parseCsvSameArray","0"
"arnaudroger/mapping-benchmark","org.simpleflatmapper.SfmCsvParserBenchmark.parseCsvRaw","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.RomaJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.RomaJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.RomaJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.RomaJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.PureJdbcJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.PureJdbcJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.PureJdbcJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.PureJdbcJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.Sql2oJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.Sql2oJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.Sql2oJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.Sql2oJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.MyBatisJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.MyBatisJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.MyBatisJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.MyBatisJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.HibernateJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.HibernateJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.HibernateJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.HibernateJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmDynamicJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmDynamicJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmDynamicJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmDynamicJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.BeansPropertyRowMapperJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.BeansPropertyRowMapperJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.BeansPropertyRowMapperJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.BeansPropertyRowMapperJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmNoAsmJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmNoAsmJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmNoAsmJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmNoAsmJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmStaticJmhBenchmarks.testQuery1","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmStaticJmhBenchmarks.testQuery10","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmStaticJmhBenchmarks.testQuery100","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.jmh.SfmStaticJmhBenchmarks.testQuery1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvBenchmark.testReadCsvSfm1000Reader","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvBenchmark.testReadCsvJackson1000","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.sql2o.Sql2OBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.jdbc.PureJdbcBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.sfm.JdbcMapperDynamicBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.sfm.JdbcMapperStaticBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.hibernate.HibernateStatefullBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.spring.BeanPropertyRowMapperBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.spring.RomaBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.ibatis.MyBatisBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.jooq.JooqBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.jooq.JooqWithSfmMappingBenchmark.testQuery","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvBenchmark.testReadSfmCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvBenchmark.testJacksonCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvBenchmark.testUnivocityCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvBenchmark.testOpenCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.jooq.JooqBenchmark.testFetchRecord","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.jooq.JooqBenchmark.testSqlWithJooqMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.jooq.JooqBenchmark.testSqlSmfMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvMapperBenchmark.testReadSfmCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvMapperBenchmark.testJacksonCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvMapperBenchmark.testUnivocityCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvMapperBenchmark.testOpenCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvParserBenchmark.testReadSfmCsvParser","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvParserBenchmark.testReadSfmCsvParserCC","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvParserBenchmark.testJacksonCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvParserBenchmark.testOpenCsvParser","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.sql2o.Sql2OBenchmark.sfm","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.sfm.JdbcMapperDynamicBenchmark.testQueryForEach","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.jooq.JooqBenchmark.testSqlSfmAsProviderMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.jooq.JooqBenchmark.testSqlSfmMapperOnResultSet","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvParserBenchmark.testJacksonCsvParser","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvParserBenchmark.testUnivocityParser","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.sfm.ObjectSizeJdbcMapperBenchmark.testMap","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.db.sfm.JdbcMapperStaticBenchmark.testQueryForEach","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.ObjectSizeCsvMapperBenchmark.testReadSfmCsvMapperAsm","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.ObjectSizeCsvMapperBenchmark.testJacksonCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.ObjectSizeCsvMapperBenchmark.testOpenCsvMapper","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvMapperBenchmark.testReadSfmCsvMapperNoAsm","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvMapperBenchmark.testReadSfmCsvMapperFinal","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvMapperBenchmark.testReadSfmCsvMapperNoAsmFinal","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.ObjectSizeSfmCsvMapperBenchmark.testMap","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.ObjectSizeSfmCsvMapperShardingBenchmark.testMap","0"
"arnaudroger/orm-benchmark","org.sfm.misc.DateFormatClone.testInstantiateNew","0"
"arnaudroger/orm-benchmark","org.sfm.misc.DateFormatClone.testClone","0"
"arnaudroger/orm-benchmark","org.sfm.misc.DateFormatClone.testSS","0"
"arnaudroger/orm-benchmark","org.sfm.misc.DateFormatIterator.testToString","0"
"arnaudroger/orm-benchmark","org.sfm.misc.DateFormatIterator.testToStringBuffer","0"
"arnaudroger/orm-benchmark","org.sfm.misc.DateFormatIterator.testToStringBufferShareWithStringBuilder","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvWriterTest.writeObjectSfm","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvWriterTest.writeObjectJackson","0"
"arnaudroger/orm-benchmark","org.sfm.benchmark.csv.CsvWriterTest.writeObjectUnivocity","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.Csv2Benchmark.parseCsv","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.Csv1Benchmark.parseCsv","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.Csv2InMemBenchmark.parseCsv","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.Csv1InMemBenchmark.parseCsv","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.SimplifiedBenchmark2.benchmarkDirect","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.SimplifiedBenchmark2.benchmarkHolder","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.SimplifiedBenchmark.benchmarkDirect","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.SimplifiedBenchmark.benchmarkHolder","0"
"arnaudroger/sfm-csv-variability","org.github.arnaudroger.SimplifiedBenchmark.benchmarkBranch","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.DatastaxBenchmark.datastaxMapper","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.DatastaxBenchmark.sfmMapper","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterStringBenchmark.testMethodHandlerExact","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterStringBenchmark.testMethodHandler","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterStringBenchmark.testMethodHandlerField","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterStringBenchmark.testMethod","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterStringBenchmark.testField","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterStringBenchmark.testAsm","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterStringBenchmark.testDirect","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterIntBenchmark.testMethodHandlerExact","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterIntBenchmark.testMethodHandler","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterIntBenchmark.testMethodHandlerField","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterIntBenchmark.testMethod","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterIntBenchmark.testField","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterIntBenchmark.testAsm","0"
"arnaudroger/SimpleFlatMapper","org.sfm.reflect.GetterIntBenchmark.testDirect","0"
"arnaudroger/SimpleFlatMapper","org.sfm.map.MapperCacheBenchmark.testGet","0"
"arnaudroger/SimpleFlatMapper","org.sfm.utils.UUIDBenchMarkRead.testByteBufferRead","0"
"arnaudroger/SimpleFlatMapper","org.sfm.utils.UUIDBenchMarkRead.testBytesRead","0"
"arnaudroger/SimpleFlatMapper","org.sfm.utils.UUIDBenchMarkWrite.testByteBufferRead","0"
"arnaudroger/SimpleFlatMapper","org.sfm.utils.UUIDBenchMarkWrite.testBytesRead","0"
"arnaudroger/SimpleFlatMapper","org.sfm.csv.CsvParserBenchmark.parse","0"
"arnaudroger/SimpleFlatMapper","org.sfm.csv.CsvParserBenchmark.parseTrim","0"
"arnaudroger/SimpleFlatMapper","org.sfm.csv.CsvParserBenchmark.parsePipe","0"
"arnaudroger/SimpleFlatMapper","org.sfm.csv.CsvParserBenchmark.parseQuote","0"
"arnaudroger/SimpleFlatMapper","org.sfm.csv.CsvParserBenchmark.parsePipeQuote","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.map.MapperCacheBenchmark.testGet","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterStringBenchmark.testMethodHandlerExact","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterStringBenchmark.testMethodHandler","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterStringBenchmark.testMethodHandlerField","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterStringBenchmark.testMethod","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterStringBenchmark.testField","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterStringBenchmark.testAsm","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterStringBenchmark.testDirect","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterIntBenchmark.testMethodHandlerExact","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterIntBenchmark.testMethodHandler","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterIntBenchmark.testMethodHandlerField","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterIntBenchmark.testMethod","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterIntBenchmark.testField","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterIntBenchmark.testAsm","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.reflect.GetterIntBenchmark.testDirect","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.CsvParserBenchmark.parse","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.CsvParserBenchmark.parsePipe","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.CsvParserBenchmark.parseTrim","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.CsvParserBenchmark.parseQuote","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.CsvParserBenchmark.parsePipeQuote","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.utils.UUIDBenchMarkRead.testByteBufferRead","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.utils.UUIDBenchMarkRead.testBytesRead","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.utils.UUIDBenchMarkWrite.testByteBufferRead","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.utils.UUIDBenchMarkWrite.testBytesRead","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.UnescapeBenchmark.unescape","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.map.KeyObjectStoreGetBenchmark.testKeyObjectStore","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.map.KeyObjectStoreGetBenchmark.testMap","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.map.KeyObjectStorePutBenchmark.testKeyObjectStore","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.map.KeyObjectStorePutBenchmark.testMap","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.InputStreamBenchmark.testFiles","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.InputStreamBenchmark.testFileChannelViaRandomFile","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.InputStreamBenchmark.testFileChannel","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.InputStreamBenchmark.testFileInputStream","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.ReaderBenchmark.testFiles","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.ReaderBenchmark.testFileChannelViaRandomFile","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.ReaderBenchmark.testFileChannel","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.ReaderBenchmark.testInputStreamReaderFromChannelInputStream","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.io.ReaderBenchmark.testFileInputStream","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.io.CharReadingBenchmark.reader","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.io.CharReadingBenchmark.memoryMappedFile","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.io.CharReadingBenchmark.memoryMappedFileBytes","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.io.CharReadingBenchmark.fileChannelBytes","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.io.CharReadingBenchmark.intputStreamBytes","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.DiscriminatorBenchmark.testNoDiscriminator","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.DiscriminatorBenchmark.testWithDiscriminator","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.DiscriminatorBenchmark.testWithDiscriminatorWithKeys","0"
"arnaudroger/SimpleFlatMapper","org.simpleflatmapper.csv.DiscriminatorBenchmark.testWithDiscriminatorWithPartialKeys","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.collection.immutable.AMapReadBenchmark.testRandomRead","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.collection.immutable.AMapReadBenchmark.testIterate","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.AThreadPoolBenchmark.testAFuture","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.AThreadPoolBenchmark.testCompletableFutureApplySync","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.AThreadPoolBenchmark.testCompletableFutureApplyAsync","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.pool.PoolBenchmark.testPingPong1","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.pool.PoolBenchmark.testPingPong2","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.pool.PoolBenchmark.testPingPong7","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.pool.PoolBenchmark.testPingPong32","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.pool.PoolBenchmark.testSimpleScheduling","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.pool.PoolBenchmark.testStealVeryCheap","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.pool.PoolBenchmark.testStealExpensive","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling01","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling01WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling07","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling07WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling08","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling08WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling15","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling15WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling16","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSimpleScheduling16WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.recPar_00010a","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.recPar_00010b","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.recPar_01000","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.recPar_10000","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testFactorial01","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testFactorial07","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testFactorial08","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testFactorial15","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testFactorial16","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testRecursiveFibo","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testSteal","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testStealWithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong01","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong01WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong02","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong02WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong07","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong07WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong08","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong08WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong15","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong15WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong16","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong16WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong32","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.testPingPong32WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark._testSimpleScheduling16","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark._testSimpleScheduling16WithWork","0"
"arnohaase/a-foundation","com.ajjpj.afoundation.concurrent.PoolBenchmark.__testSteal","0"
"arteam/100-Java-Concurrency-questions","com.github.arteam.benchmark.FalseSharingBenchmark.read","0"
"arteam/100-Java-Concurrency-questions","com.github.arteam.benchmark.FalseSharingBenchmark.write","0"
"arteam/100-Java-Concurrency-questions","com.github.arteam.ExperimentalCacheSizes.bench","0"
"artspb/javax-mail-pool","me.artspb.javax.mail.benchmark.TransportBenchmark.obtainTransportFromPool","0"
"artspb/javax-mail-pool","me.artspb.javax.mail.benchmark.TransportBenchmark.createNewTransport","0"
"artspb/javax-mail-pool","me.artspb.javax.mail.benchmark.SendMessageBenchmark.sendMailWithPoolSingleThread","0"
"artspb/javax-mail-pool","me.artspb.javax.mail.benchmark.SendMessageBenchmark.sendMailWithPoolManyThreads","0"
"artspb/javax-mail-pool","me.artspb.javax.mail.benchmark.SendMessageBenchmark.sendMailWithoutPoolSingleThread","0"
"artspb/javax-mail-pool","me.artspb.javax.mail.benchmark.SendMessageBenchmark.sendMailWithoutPoolManyThreads","0"
"artspb/javax-mail-pool","me.artspb.javax.mail.benchmark.SessionBenchmark.obtainSessionFromFactory","0"
"artspb/javax-mail-pool","me.artspb.javax.mail.benchmark.SessionBenchmark.createNewSession","0"
"asarkar/java","name.abhijitsarkar.java.java8impatient.miscellaneous.PracticeQuestionsCh8Benchmark.benchmarkCountLongWordsWithoutUsingStreams","0"
"asarkar/java","name.abhijitsarkar.java.java8impatient.miscellaneous.PracticeQuestionsCh8Benchmark.benchmarkCountLongWordsUsingStreams","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledHeapAllocAndFree","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledDirectAllocAndFree","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledHeapAllocAndFree","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledDirectAllocAndFree","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledHeapAllocAndFree","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledDirectAllocAndFree","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetInt","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetShort","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetLong","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetInt","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetShort","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetLong","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArray","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArrayWrapped","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiString","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringWrapped","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArray","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArrayWrapped","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAscii","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiWrapped","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArray","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArrayWrapped","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8String","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringWrapped","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArray","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArrayWrapped","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8","0"
"ashishbende/RPC-API","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8Wrapped","0"
"ashishbende/RPC-API","io.netty.microbench.http.HttpRequestDecoderBenchmark.testDecodeWholeRequestInMultipleStepsMixedDelimiters","0"
"ashishbende/RPC-API","io.netty.microbench.concurrent.FastThreadLocalBenchmark.jdkThreadLocalGet","0"
"ashishbende/RPC-API","io.netty.microbench.concurrent.FastThreadLocalBenchmark.fastThreadLocal","0"
"ashishbende/RPC-API","io.netty.microbench.internal.RecyclableArrayListBenchmark.recycleSameThread","0"
"ashishbende/RPC-API","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv4","0"
"ashishbende/RPC-API","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv6","0"
"ashishbende/RPC-API","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv6","0"
"ashishbende/RPC-API","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv4","0"
"asimihsan/jmh-gradle-anagrams","sample.SampleBenchmark.measure_100","0"
"asimihsan/jmh-gradle-anagrams","sample.SampleBenchmark.measure_1000","0"
"asimihsan/jmh-gradle-anagrams","sample.SampleBenchmark.measure_10000","0"
"asimihsan/jmh-gradle-anagrams","sample.SampleBenchmark.measure_100000","0"
"asympro/CleanStringBuilderBenchmark","asym.test.CleanStringBuilderBenchmark.setLengthZeroTrim","1"
"asympro/CleanStringBuilderBenchmark","asym.test.CleanStringBuilderBenchmark.setLengthZeroNoTrim","1"
"asympro/CleanStringBuilderBenchmark","asym.test.CleanStringBuilderBenchmark.deleteContent","1"
"asympro/CleanStringBuilderBenchmark","asym.test.CleanStringBuilderBenchmark.newStringBuilder","1"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.init","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.create","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.traverse","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.classDeclarationAttributes","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.grabats","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.invisibleMethodDeclarations","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.orphanNonPrimitiveTypes","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.thrownExceptionsPerPackage","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.unusedMethodsWithList","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.unusedMethodsWithLoop","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.renameAllMethods","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.commentsTagContentASE2015","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.grabatsASE2015","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.specificInvisibleMethodDeclarationsASE2015","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.Runner.thrownExceptionsASE2015","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerCreation.init","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerCreation.create","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.traverse","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.classDeclarationAttributes","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.grabats","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.invisibleMethodDeclarations","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.orphanNonPrimitiveTypes","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.thrownExceptionsPerPackage","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.unusedMethodsWithList","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.unusedMethodsWithLoop","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.renameAllMethods","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.commentsTagContentASE2015","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.grabatsASE2015","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.specificInvisibleMethodDeclarationsASE2015","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.thrownExceptionsASE2015","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.ase15CommentsTagContent","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.ase15Grabats","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.ase15SpecificInvisibleMethodDeclarations","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.ase15ThrownExceptions","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.RunnerQuery.ase15BranchStatements","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadWriteRunner.renameAllMethods","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.WriteOnlyRunner.initResource","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.WriteOnlyRunner.initStore","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.WriteOnlyRunner.create","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.traverse","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.classDeclarationAttributes","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.grabats","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.invisibleMethodDeclarations","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.orphanNonPrimitiveTypes","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.thrownExceptionsPerPackage","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.unusedMethodsWithList","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.unusedMethodsWithLoop","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.ase15CommentsTagContent","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.ase15Grabats","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.ase15SpecificInvisibleMethodDeclarations","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.ase15ThrownExceptions","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.ReadOnlyRunner.ase15BranchStatements","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.AtomicRunner.getSingleAttribute","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.AtomicRunner.setSingleAttribute","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.AtomicRunner.removeSingleAttribute","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.AtomicRunner.getSingleReference","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.AtomicRunner.setSingleReference","0"
"atlanmod/NeoEMF","fr.inria.atlanmod.neoemf.benchmarks.runner.AtomicRunner.removeSingleReference","0"
"atlassian/commonmark-java","org.commonmark.test.SpecBenchmark.wholeSpec","0"
"atlassian/commonmark-java","org.commonmark.test.SpecBenchmark.examples","0"
"atlassian/commonmark-java","org.commonmark.integration.PegDownBenchmark.wholeSpec","0"
"atlassian/commonmark-java","org.commonmark.integration.PegDownBenchmark.examples","0"
"atlassian/commonmark-java","org.commonmark.test.SpecBenchmark.parseWholeSpec","0"
"atlassian/commonmark-java","org.commonmark.test.SpecBenchmark.parseExamples","0"
"atlassian/commonmark-java","org.commonmark.test.SpecBenchmark.parseAndRenderWholeSpec","0"
"atlassian/commonmark-java","org.commonmark.test.SpecBenchmark.parseAndRenderExamples","0"
"atlassian/commonmark-java","org.commonmark.test.SpecBenchmark.renderWholeSpec","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.AnnotationEventBenchmarks.sendClassAnnotationEvents","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.AnnotationEventBenchmarks.sendClassAnnotationEvents_Runningtime","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.AnnotationEventBenchmarks.sendMethodAnnotationEvents_Selection_All","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.AnnotationEventBenchmarks.sendMethodAnnotationEvents_Selection_Marked","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.GeneralBenchmarks.sendEvents","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.GeneralBenchmarks.sendEventsAvgTime","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.DatabaseHandler_Embeded_Benchmarks.sendEvents","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.Slf4jBenchmarks.slf4j","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.Slf4jBenchmarks.sslf4jAvgTime","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.Audit4jConsoleBenchmarks.sendEvents","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.Audit4jConsoleBenchmarks.sendEventsAvgTime","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.Audit4jFileBenchmarks.sendEvents","0"
"audit4j/audit4j-benchmarks","org.audit4j.benchmark.Audit4jFileBenchmarks.sendEventsAvgTime","0"
"austinv11/ETF-Java","com.austinv11.etf.benchmarks.Benchmarks.etf","0"
"awood/crl-stream","org.candlepin.CRLBenchmark.stream","0"
"awood/crl-stream","org.candlepin.CRLBenchmark.inMemory","0"
"awood/crl-stream","org.candlepin.CRLWriteBenchmark.stream","0"
"awood/crl-stream","org.candlepin.CRLWriteBenchmark.inMemory","0"
"azadmanesh/sl-tracer","com.oracle.truffle.sl.test.SLPolyglotEngineValueExecuteBenchmark.executePlus","0"
"azadmanesh/sl-tracer","com.oracle.truffle.sl.test.SLPolyglotEngineValueExecuteBenchmark.executePlusDirectly","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.shallowSmallBlocks","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.shallowBigBlocks","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.deepSmallBlocks","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.deepBigBlocks","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.insertionBig","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.insertionSmall","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.replaceBig","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.replaceSmall","0"
"azadmanesh/sl-tracer","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.replaceALot","0"
"basho-labs/java-client-bench","com.basho.riak.client.bench.kv.StreamingListKeyBenchmarks.StreamingListKeys","0"
"basho-labs/java-client-bench","com.basho.riak.client.bench.kv.StreamingListKeyBenchmarks.BlockingListKeys","0"
"bassemZohdy/SimpleUtils","simple.utils.string.SplitterBenchMark.measureAverageTimeSplit","0"
"bassemZohdy/SimpleUtils","simple.utils.string.SplitterBenchMark.measureAverageTimeLineSplitterByChar","0"
"bassemZohdy/SimpleUtils","simple.utils.string.SplitterBenchMark.measureAverageTimeSplitterBySubString","0"
"bassemZohdy/SimpleUtils","simple.utils.string.SplitterBenchMark.measureAverageTimeSplitterBySubStringWithFuture","0"
"bassemZohdy/SimpleUtils","simple.utils.math.SimpleMathUtilsBenchMark.measureAverageTimeSimple","0"
"bassemZohdy/SimpleUtils","simple.utils.math.SimpleMathUtilsBenchMark.measureAverageTimeCommons","0"
"bassemZohdy/SimpleUtils","simple.utils.string.SplitterBenchMark.measureAverageTimeSplitterByBiFunctionSplitter","0"
"batterseapower/btreemap","uk.co.omegaprime.btreemap.BTreeMapBenchmark.put","0"
"batterseapower/btreemap","uk.co.omegaprime.btreemap.BTreeMapBenchmark.get","0"
"batterseapower/btreemap","uk.co.omegaprime.btreemap.BTreeMapBenchmark.lowerKey","0"
"batterseapower/btreemap","uk.co.omegaprime.btreemap.BTreeMapBenchmark.putSmall","0"
"batterseapower/btreemap","uk.co.omegaprime.btreemap.BTreeMapBenchmark.getSmall","0"
"batterseapower/btreemap","uk.co.omegaprime.btreemap.BTreeMapBenchmark.lowerKeySmall","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.none","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.snappy","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.gzip","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.deflateFastest","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.deflateNormal","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.deflateSlowest","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.bzipFastest","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.bzipSlowest","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.xzFastest","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.xzNormal","0"
"batterseapower/timeseries-compression","uk.co.omegaprime.JMHCompressorTest.xzSlowest","0"
"bckfnn/taggersty","io.github.bckfnn.taggersty.performance.Performance.benchmark","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark.proxy_voidMethod","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark.proxy_nonPrims","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark.proxy_prims","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark.proxy_passThrough","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark.proxy_passThrough_ctor_cached","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark.incdec_increment","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark.incdec_decrement","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.IndyProxyBenchmark.incdec_noop","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.proxy_voidMethod","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.proxy_nonPrims","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.proxy_prims","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.proxy_passThrough","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.proxy_passThrough_ctor","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.proxy_passThrough_ctor_cached","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.incdec_increment","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.incdec_decrement","0"
"bdonlan/invokedynamic-proxy","net.fushizen.invokedynamic.proxy.ProxyBenchmark.incdec_noop","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareGroovyJava.isValidGroovyStatic","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareGroovyJava.isValidGroovy","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareGroovyJava.isValidJava","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareGroovyJava.interpolateGroovyStatic","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareGroovyJava.interpolateGroovy","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareGroovyJava.interpolateJava","0"
"bearmug/x-traktor-core","org.xtraktor.preprocessing.SimpleDataPreprocessorBenchmark.benchmarkInterpolateOrdered","0"
"bearmug/x-traktor-core","org.xtraktor.preprocessing.SimpleDataPreprocessorBenchmark.benchmarkInterpolateReversed","0"
"bearmug/x-traktor-core","org.xtraktor.preprocessing.SimpleDataPreprocessorBenchmark.benchmarkSortOrdered","0"
"bearmug/x-traktor-core","org.xtraktor.preprocessing.SimpleDataPreprocessorBenchmark.benchmarkSortReversed","0"
"bearmug/x-traktor-core","org.xtraktor.preprocessing.SimpleDataPreprocessorBenchmark.benchmarkPair","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareDoubleBenchmark.isClosePlainMath","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareDoubleBenchmark.isClosePlainGuava","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareDoubleBenchmark.isCloseBigMath","0"
"bearmug/x-traktor-core","org.xtraktor.RawPoint_CompareDoubleBenchmark.isCloseBigGuava","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerConcurrentBenchmark.redisUserStream","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerConcurrentBenchmark.redisUserList","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerConcurrentBenchmark.redisUserStreamJson","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerConcurrentBenchmark.redisUserListJson","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerConcurrentBenchmark.localUserStream","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerConcurrentBenchmark.localUserList","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerSequentialBenchmark.redisUserStream","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerSequentialBenchmark.redisUserList","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerSequentialBenchmark.localUserStream","0"
"bearmug/x-traktor-core","org.xtraktor.TrackerSequentialBenchmark.localUserList","0"
"belliottsmith/injector","bes.injector.microbench.ExecutorBenchmark.test","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.mixed_monitor","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.mixed_sync","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.synchronized_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.synchronized_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.monitor_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.monitor_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.reentrantLock_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.reentrantLock_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.nonReentrantLock_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SynchronizedBenchmark.nonReentrantLock_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.ComputeBenchmark.compute_sameKey","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.ComputeBenchmark.compute_spread","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark.get_readOnly","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark.put_writeOnly","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark.readwrite_get","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark.readwrite_put","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark.no_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark.no_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark.mild_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark.mild_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark.high_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.EliminationStackBenchmark.high_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.TimeBenchmark.nanos_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.TimeBenchmark.nanos_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.TimeBenchmark.millis_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.TimeBenchmark.millis_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark.threadLocal","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark.binarySearch","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark.hashing","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark.sparseArray","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark.threadIdHash","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark.threadHashCode","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SlotLookupBenchmark.striped64","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark.no_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark.no_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark.mild_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark.mild_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark.high_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerBenchmark.high_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.DelegationBenchmark.inherit_get","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.DelegationBenchmark.delegate_get","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark.readOnly","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.GetPutBenchmark.writeOnly","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.ReadBufferBenchmark.record","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.ReadBufferBenchmark.drain","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.IdBenchmark.generate","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark.no_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark.no_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark.mild_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark.mild_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark.high_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.SingleConsumerQueueBenchmark.high_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark.low_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark.low_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark.medium_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark.medium_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark.high_contention_offer","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.ConcurrentQueueBenchmark.high_contention_poll","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.FrequencySketchBenchmark.increment","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.FrequencySketchBenchmark.frequency","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.synchronized_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.synchronized_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.monitor_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.monitor_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.mixed_monitor","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.mixed_sync","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.reentrantLock_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.reentrantLock_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.nonReentrantLock_noContention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.SynchronizedBenchmark.nonReentrantLock_contention","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.EvictionBenchmark.evict","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.TimerWheelBenchmark.findBucket","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.TimerWheelBenchmark.reschedule","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.TimerWheelBenchmark.expire","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.FactoryBenchmark.direct","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.FactoryBenchmark.methodHandle_invoke","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.FactoryBenchmark.methodHandle_invokeExact","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.FactoryBenchmark.reflectionFactory","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.FactoryBenchmark.reflection","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.simulator.TraceBenchmark.trace","0"
"ben-manes/caffeine","com.github.benmanes.caffeine.cache.TimerWheelBenchmark.getExpirationDelay","0"
"benalexau/hash-bench","au.com.acegi.hashbench.HashBench.withArray","0"
"benalexau/hash-bench","au.com.acegi.hashbench.HashBench.withByteBuffer","0"
"benalexau/hash-bench","au.com.acegi.hashbench.HashBench.withDirectBuffer","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.MoellerTrumboreTriangleIntersectionBenchmark.benchmarkIntersect","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.MoellerTrumboreTriangleIntersectionBenchmark.benchmarkMoellerTrumboreTriangleIntersect","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.AccumulationBufferBenchmark.accumulate","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.Vector3Benchmark.crossProduct","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.Vector3Benchmark.scalarProduct","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.Vector3Benchmark.minus","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.MersenneTwisterBenchmark.MTnextDouble","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.ReferenceBenchmark.emptyBenchmark","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.MathBenchmark.mathSin","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.MathBenchmark.mathSqrt","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.MathBenchmark.mathSimdWithInts","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.TriangleBenchmark.benchmarkMoellerTrumboreTriangleIntersect","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.TriangleBenchmark.benchmarkGetUnifDistSampleOnTriangle","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.BenchmarkAxisAlignedBoundingBoxIntersection.benchmarkAABBIntersect","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.AccumulationBufferBenchmark.accumulateSingleThreaded","0"
"bensteinert/chromarenderer-java-benchmarks","net.chromarenderer.benchmarks.AccumulationBufferBenchmark.accumulateMultiThreaded","0"
"bensteinert/chromarenderer-java","net.chromarenderer.math.geom.TriangleBenchmark.benchmarkMoellerTrumboreTriangleIntersect","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumBaseline","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumOfSquaresBaseline","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.cartBaseline","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumOfSquaresEvenBaseline","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumSeq","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumPar","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumOfSquaresSeq","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumOfSquaresPar","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.cartSeq","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.cartPar","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumOfSquaresEvenSeq","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.sumOfSquaresEvenPar","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.refBaseline","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.refSeq","0"
"biboudis/clashofthelambdas","benchmarks.ClashOfLambdas.refPar","0"
"biboudis/streamalg","benchmarks.Benchmark_IteratorPipelines.count_iterate_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_IteratorPipelines.filter_count_iterate_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_IteratorPipelines.filter_map_count_iterate_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_IteratorPipelines.count_iterate_AlgebrasPull","0"
"biboudis/streamalg","benchmarks.Benchmark_IteratorPipelines.filter_count_iterate_AlgebrasPull","0"
"biboudis/streamalg","benchmarks.Benchmark_IteratorPipelines.filter_map_count_iterate_AlgebrasPull","0"
"biboudis/streamalg","benchmarks.Benchmark_TakePipelines.limit_count_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_TakePipelines.limit_count_iterate_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_TakePipelines.limit_count_AlgebrasPull","0"
"biboudis/streamalg","benchmarks.Benchmark_TakePipelines.limit_count_AlgebrasPush","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.reduce_Baseline","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.filter_reduce_Baseline","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.filter_map_reduce_Baseline","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.cart_reduce_Baseline","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.reduce_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.filter_reduce_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.filter_map_reduce_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.cart_reduce_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.reduce_AlgebrasPush","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.filter_reduce_AlgebrasPush","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.filter_map_reduce_AlgebrasPush","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.cart_AlgebrasPush","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.reduce_AlgebrasPull","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.filter_reduce_AlgebrasPull","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.filter_map_reduce_AlgebrasPull","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.cart_AlgebrasPull","0"
"biboudis/streamalg","benchmarks.Benchmark_FusedPipelines.filters_Algebras_NotFusedPull","0"
"biboudis/streamalg","benchmarks.Benchmark_FusedPipelines.filters_Algebras_FusedPull","0"
"biboudis/streamalg","benchmarks.Benchmark_FusedPipelines.maps_Algebras_NotFusedPull","0"
"biboudis/streamalg","benchmarks.Benchmark_FusedPipelines.maps_Algebras_FusedPull","0"
"biboudis/streamalg","benchmarks.Benchmark_FusedPipelines.filters_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_FusedPipelines.maps_Java8Streams","0"
"biboudis/streamalg","benchmarks.Benchmark_FusedPipelines.filters_Algebras_Push","0"
"biboudis/streamalg","benchmarks.Benchmark_FusedPipelines.maps_Algebras_Push","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.cart_reduce_AlgebrasPush","0"
"biboudis/streamalg","benchmarks.Benchmark_BasicPipelines.cart_reduce_AlgebrasPull","0"
"bingoohuang/eql","org.n3r.eql.BenchmarkTest.benchmark","0"
"bingoohuang/javacode-demo","org.n3r.sandbox.seckill.ArrayListAndHashSet.measureAddArrayList","0"
"bingoohuang/javacode-demo","org.n3r.sandbox.seckill.ArrayListAndHashSet.measureAddHashSet","0"
"bingoohuang/javacode-demo","org.n3r.sandbox.seckill.ArrayListAndHashSet.measureGetArrayList","0"
"bingoohuang/javacode-demo","org.n3r.sandbox.seckill.ArrayListAndHashSet.measureGetHashSet","0"
"bingoohuang/javacode-demo","org.n3r.sandbox.seckill.FlowPackageSecKill.measureNginx","0"
"bingoohuang/javacode-demo","org.n3r.sandbox.seckill.FlowPackageSecKill.measureJava","0"
"bingoohuang/javacode-demo","org.n3r.sandbox.seckill.MethodSearchWaysCompare.methodNotFoundException","0"
"bingoohuang/javacode-demo","org.n3r.sandbox.seckill.MethodSearchWaysCompare.methodsSearch","0"
"bingoohuang/westcache","com.github.bingoohuang.westcache.BenchMarkTest.getCache","0"
"bingoohuang/westcache","com.github.bingoohuang.westcache.ExpiringCacheManagerTest.benchmark","0"
"blemale/fuse","com.github.blemale.fuse.CircuitBreakerBench.success","0"
"blynkkk/blynk-server","cc.blynk.common.utils.StringUtilPerfTest.split","0"
"blynkkk/blynk-server","cc.blynk.common.utils.StringUtilPerfTest.ownfSplit1","0"
"blynkkk/blynk-server","cc.blynk.server.core.model.auth.SessionPerfTest.sendMessageToHardware_1Channel","0"
"blynkkk/blynk-server","cc.blynk.server.core.model.auth.SessionPerfTest.sendMessageToHardware_2Channels","0"
"blynkkk/blynk-server","cc.blynk.server.core.model.auth.SessionPerfTest.sendMessageToHardware_3Channels","0"
"blynkkk/blynk-server","cc.blynk.server.core.model.auth.SessionPerfTest.sendMessageToHardware_4Channels","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_vw_1","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_vw_1","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_aw_1_2","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_aw_1_2","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_vw_99_900","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_vw_99_900","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_vw_99_22222","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_vw_99_22222","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_aw_100_900","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_aw_100_900","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_aw_10_long_text","0"
"blynkkk/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_aw_10_long_text","0"
"blynkkk/blynk-server","cc.blynk.server.core.model.auth.StringToByteBufPerfTest.optimizedBlynkWay","0"
"blynkkk/blynk-server","cc.blynk.server.core.model.auth.StringToByteBufPerfTest.blynkWay","0"
"blynkkk/blynk-server","cc.blynk.utils.SetPropertyPerfTest.reflection","0"
"blynkkk/blynk-server","cc.blynk.utils.SetPropertyPerfTest.regularJava","0"
"blynkkk/blynk-server","cc.blynk.utils.DashSerializationPerfTest.oldMethod","0"
"blynkkk/blynk-server","cc.blynk.utils.DashSerializationPerfTest.newMethod","0"
"blynkkk/blynk-server","cc.blynk.utils.TokenPerfTest.oldMethod","0"
"blynkkk/blynk-server","cc.blynk.utils.TokenPerfTest.optimizedMethod","0"
"blynkkk/blynk-server","cc.blynk.utils.ByteBufPerfTest.optimizedFlow","0"
"blynkkk/blynk-server","cc.blynk.utils.ByteBufPerfTest.mainFlow","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.split3_vw_1","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.customSplit3_vw_1","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.split3_aw_1_2","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.customSplit3_aw_1_2","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.split3_vw_99_900","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.customSplit3_vw_99_900","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.split3_vw_99_22222","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.customSplit3_vw_99_22222","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.split3_aw_100_900","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.customSplit3_aw_100_900","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.split3_aw_10_long_text","0"
"blynkkk/blynk-server","cc.blynk.test.utils.StringUtilPerfTest.customSplit3_aw_10_long_text","0"
"blynkkk/blynk-server","cc.blynk.test.utils.TokenPerfTest.oldMethod","0"
"blynkkk/blynk-server","cc.blynk.test.utils.TokenPerfTest.optimizedMethod","0"
"blynkkk/blynk-server","cc.blynk.test.utils.ByteBufPerfTest.optimizedFlow","0"
"blynkkk/blynk-server","cc.blynk.test.utils.ByteBufPerfTest.mainFlow","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.CompressionBenchmark.compressSmallFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.CompressionBenchmark.compressBiggerFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.snappy.RawSnappyDecompressionBenchmark.decompressSmallFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.snappy.RawSnappyDecompressionBenchmark.decompressBiggerFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.snappy.RawSnappyCompressionBenchmark.compressSmallFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.snappy.RawSnappyCompressionBenchmark.compressBiggerFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.DecompressionBenchmark.decompressSmallFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.DecompressionBenchmark.decompressBiggerFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.ChecksumBenchmark.checksumSmallFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.ChecksumBenchmark.checksumBiggerFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.lz4.BlockLZ4CompressionBenchmark.compressSmallFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.lz4.BlockLZ4CompressionBenchmark.compressBiggerFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.lz4.BlockLZ4DecompressionBenchmark.decompressSmallFile","0"
"bodewig/commons-compress-benchmarks","de.samaflost.commons_compress.lz4.BlockLZ4DecompressionBenchmark.decompressBiggerFile","0"
"bramp/unsafe","net.bramp.unsafe.copier.UnrolledCopierBenchmark$UnsafeState.test","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListEightLongsBenchmark$ArrayListState.testListIterate","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListEightLongsBenchmark$UnsafeListState.testListIterate","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListEightLongsBenchmark$UnsafeListState.testListIterateInPlace","0"
"bramp/unsafe","net.bramp.unsafe.collection.AbstractArrayListState.testListSort","0"
"bramp/unsafe","net.bramp.unsafe.collection.AbstractUnsafeListState.testListSortInPlace","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListLongPointBenchmark$ArrayListState.testListIterate","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListLongPointBenchmark$UnsafeListState.testListIterate","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListLongPointBenchmark$UnsafeListState.testListIterateInPlace","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListFourLongsBenchmark$ArrayListState.testListIterate","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListFourLongsBenchmark$UnsafeListState.testListIterate","0"
"bramp/unsafe","net.bramp.unsafe.collection.UnsafeListFourLongsBenchmark$UnsafeListState.testListIterateInPlace","0"
"bramp/unsafe","net.bramp.unsafe.collection.ArrayListBenchmark.testSort","0"
"bramp/unsafe","net.bramp.unsafe.collection.ArrayListBenchmark.testIterate","0"
"bramp/unsafe","net.bramp.unsafe.collection.ArrayListBenchmark.testListIterateInPlace","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.set.add.OHashSetAdd.vial","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.set.add.OHashSetAdd.jdk","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.set.add.OHashSetAdd.trove","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.set.add.OHashSetAdd.fastutil","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.set.add.OHashSetAdd.hppc","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.set.add.OHashSetAdd.koloboke","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.set.add.OHashSetAdd.gs","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LOHashMapPut.jdk","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LOHashMapPut.vial","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LOHashMapPut.trove","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LOHashMapPut.fastutil","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LOHashMapPut.hppc","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LOHashMapPut.koloboke","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LOHashMapPut.gs","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LLHashMapPut.jdk","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LLHashMapPut.vial","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LLHashMapPut.vialF","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LLHashMapPut.trove","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LLHashMapPut.fastutil","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LLHashMapPut.hppc","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LLHashMapPut.koloboke","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.LLHashMapPut.gs","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OOHashMapPut.jdk","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OOHashMapPut.vial","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OOHashMapPut.vialF","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OOHashMapPut.trove","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OOHashMapPut.fastutil","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OOHashMapPut.hppc","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OOHashMapPut.koloboke","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OOHashMapPut.gs","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OLHashMapPut.jdk","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OLHashMapPut.vial","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OLHashMapPut.trove","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OLHashMapPut.fastutil","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OLHashMapPut.hppc","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OLHashMapPut.koloboke","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.map.put.OLHashMapPut.gs","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.IntSkipClear.skip","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ByteSkipClear.skip","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ObjectFillClear.fill","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ObjectCopyClear.copy","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ObjectCopyClear.imp","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.IntFillClear.fill","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ByteFillClear.fill","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.IntCopyClear.copy","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.IntCopyClear.imp","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.LongCopyClear.copy","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.LongCopyClear.imp","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.IntBlankClear.blank","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ByteCopyClear.copy","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ByteCopyClear.imp","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.LongFillClear.fill","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ByteBlankClear.blank","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.LongBlankClear.blank","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ObjectBlankClear.blank","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.LongSkipClear.skip","0"
"BrentDouglas/vial","io.machinecode.vial.bench.perf.clear.ObjectSkipClear.skip","0"
"brettwooldridge/HikariJSON-benchmark","com.zaxxer.hikari.json.AllTypesBoon.inputStream","0"
"brettwooldridge/HikariJSON-benchmark","com.zaxxer.hikari.json.AllTypesHikari.inputStream","0"
"brettwooldridge/HikariJSON-benchmark","com.zaxxer.hikari.json.MenuBoon.inputStream","0"
"brettwooldridge/HikariJSON-benchmark","com.zaxxer.hikari.json.MenuJackson.inputStream","0"
"brettwooldridge/HikariJSON-benchmark","com.zaxxer.hikari.json.AllTypesJackson.inputStream","0"
"brettwooldridge/HikariJSON-benchmark","com.zaxxer.hikari.json.MenuJacksonAfterburner.inputStream","0"
"brettwooldridge/HikariJSON-benchmark","com.zaxxer.hikari.json.MenuHikari.inputStream","0"
"brettwooldridge/HikariJSON-benchmark","com.zaxxer.hikari.json.AllTypesJacksonAfterburner.inputStream","0"
"britter/to-array-benchmark","org.apache.commons.toarraybenchmark.ToArrayBenchmark.toArrayWithEmptyArray","0"
"britter/to-array-benchmark","org.apache.commons.toarraybenchmark.ToArrayBenchmark.toArrayActualSize","0"
"britter/to-array-benchmark","org.apache.commons.toarraybenchmark.ArrayCreationBenchmark.arrayViaReflection","0"
"britter/to-array-benchmark","org.apache.commons.toarraybenchmark.ArrayCreationBenchmark.arrayViaConstructor","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrumentedMethod","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrumentedMethodPrintln1","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrumentedMethodPrintln2","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrumentedMethodPrintln3","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testMethod","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrDuration","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrDurationSampled","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testSendCommand","1"
"btraceio/btrace","net.java.btrace.BTraceBench.testSampleHit10","0"
"btraceio/btrace","net.java.btrace.StringOpBenchmarks.testStringBuilder","0"
"btraceio/btrace","net.java.btrace.StringOpBenchmarks.testStringPlus","0"
"btraceio/btrace","net.java.btrace.StringOpBenchmarks.testStrCat","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrumentedMethodSampled","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrumentedMethodPrintln1Sampled","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrDurationSampledAdaptive","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testSampleHit50","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testSampleHit100","0"
"btraceio/btrace","net.java.btrace.ProfilerBenchmarks.testOneMethodSingleThread","0"
"btraceio/btrace","net.java.btrace.ProfilerBenchmarks.testTwoMethods01Thread","0"
"btraceio/btrace","net.java.btrace.ProfilerBenchmarks.testTwoMethods02Threads","0"
"btraceio/btrace","net.java.btrace.ProfilerBenchmarks.testTwoMethods04Threads","0"
"btraceio/btrace","net.java.btrace.ProfilerBenchmarks.testTwoMethods08Threads","0"
"btraceio/btrace","net.java.btrace.ProfilerBenchmarks.testTwoMethods16Threads","0"
"btraceio/btrace","net.java.btrace.StatsdBenchmarks.testGauge_1","0"
"btraceio/btrace","net.java.btrace.StatsdBenchmarks.testGauge_2","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrumentedMethodPrintln24","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testInstrumentedMethodLevelNoMatch","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testSendCommandMulti2","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testSendCommandMulti4","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testSendCommandMulti8","0"
"btraceio/btrace","net.java.btrace.BTraceBench.testSendCommandMulti16","0"
"btraceio/btrace","net.java.btrace.ProbeLoadingBenchmark._estClassReader","0"
"btraceio/btrace","net.java.btrace.ProbeLoadingBenchmark.testBTraceProbe","0"
"btraceio/btrace","net.java.btrace.ProbeLoadingBenchmark.testBTraceProbeNew","0"
"btraceio/btrace","com.sun.btrace.runtime.OnMethodTemplateBenchmark.testEmptyTemplate","0"
"btraceio/btrace","com.sun.btrace.runtime.OnMethodTemplateBenchmark.testMatchTemplate","0"
"btraceio/btrace","com.sun.btrace.runtime.OnMethodTemplateBenchmark.testNoMatchTemplate","0"
"btraceio/btrace","net.java.btrace.ClassFilterBenchmark.testSimpleClassNameMatch","0"
"btraceio/btrace","net.java.btrace.ClassFilterBenchmark.testRegexNameMatch","0"
"btraceio/btrace","net.java.btrace.ClassFilterBenchmark.testSubtypeMatch","0"
"btraceio/btrace","net.java.btrace.ClassFilterBenchmark.testSubtypeNoMatch","0"
"BunnyWei/truffle-llvmir","com.oracle.graal.virtual.bench.PartialEscapeBench.benchPartialEscape","0"
"burmanm/compression-int","fi.iki.yak.compression.integer.benchmark.EncodeBenchmark.encodingBenchmark","0"
"burmanm/compression-int","fi.iki.yak.compression.integer.benchmark.EncodeBenchmark.decodingBenchmark","0"
"burmanm/compression-int","fi.iki.yak.compression.integer.benchmark.EncodeBenchmark.encodingBenchmarkOrig","0"
"burmanm/gorilla-tsc","fi.iki.yak.ts.compression.gorilla.benchmark.EncodingBenchmark.encodingBenchmark","0"
"burmanm/gorilla-tsc","fi.iki.yak.ts.compression.gorilla.benchmark.EncodingBenchmark.decodingBenchmark","0"
"burmanm/gorilla-tsc","fi.iki.yak.ts.compression.gorilla.benchmark.EncodingBenchmark.decodingDoubleBenchmark","0"
"burmanm/gorilla-tsc","fi.iki.yak.ts.compression.gorilla.benchmark.EncodingBenchmark.encodingGorillaBenchmark","0"
"burmanm/gorilla-tsc","fi.iki.yak.ts.compression.gorilla.benchmark.EncodingBenchmark.encodingGorillaBenchmarkLong","0"
"burmanm/gorilla-tsc","fi.iki.yak.ts.compression.gorilla.benchmark.EncodingBenchmark.decodingGorillaBenchmark","0"
"C0rWin/Java-KMeans-Coreset","univ.ml.CompareSamplingMethodsTest.randomSample","0"
"C0rWin/Java-KMeans-Coreset","univ.ml.CompareSamplingMethodsTest.constantTimeSample","0"
"C0rWin/Java-KMeans-Coreset","univ.ml.CompareSamplingMethodsTest.polylogTimeSample","0"
"C0rWin/Java-KMeans-Coreset","univ.ml.VectorComputationTest.vectorAsArray","0"
"C0rWin/Java-KMeans-Coreset","univ.ml.VectorComputationTest.sparseVectors","0"
"C0rWin/Java-KMeans-Coreset","univ.ml.distributed.JVMOptimizationsTest.jdkMathPow","0"
"C0rWin/Java-KMeans-Coreset","univ.ml.distributed.JVMOptimizationsTest.variableMult","0"
"C0rWin/Java-KMeans-Coreset","univ.ml.distributed.JVMOptimizationsTest.fastMathPow","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.SystemTimerBenchmark.currentTimeMillis","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.SystemTimerBenchmark.millisWithVariableClock","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.SystemTimerBenchmark.millisWithConstantClock","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.SystemTimerBenchmark.millisWithTwoClockImpls","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.incrementAtomicLongSingle","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.incrementSynchronizedSingle","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.incrementAtomicLong10Threads","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.increment2AtomicLong10Threads","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.increment2Synchronized10Threads","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.incrementLongAdder10Threads","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.increment2LongAdder10Threads","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.incrementSpread","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.platform.CounterBenchmark.increment2Spread","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.noEviction.symmetrical.ReadOnlyBenchmark.read","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.noEviction.asymmetrical.CombinedReadWriteBenchmark.readOnly","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.noEviction.asymmetrical.CombinedReadWriteBenchmark.writeOnly","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.noEviction.asymmetrical.CombinedReadWriteBenchmark.readWrite_get","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.noEviction.asymmetrical.CombinedReadWriteBenchmark.readWrite_put","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.noEviction.memory.PopulateParallelOnceBenchmark.populateChunkInCache","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.noEviction.symmetrical.ReadOnlyBenchmark.read","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.noEviction.symmetrical.PopulateParallelOnceBenchmark.populateChunkInCache","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.noEviction.asymmetrical.CombinedReadWriteBenchmark.readOnly","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.noEviction.asymmetrical.CombinedReadWriteBenchmark.writeOnly","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.noEviction.asymmetrical.CombinedReadWriteBenchmark.readWrite_get","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.noEviction.asymmetrical.CombinedReadWriteBenchmark.readWrite_put","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.RandomSequenceCacheBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.NeverHitBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.MultiRandomAccessBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.RandomAccessLongSequenceBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.RandomSequenceBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.ZipfianLoadingSequenceBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.ZipfianLoopingSequenceLoadingBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.ZipfianSequenceLoadingBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.PrecomputedRandomSequenceCacheBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.PrecomputedMultiRandomAccessBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.ZipfianHoppingPrecomputedSequenceLoadingBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.ZipfianLoopingPrecomputedSequenceLoadingBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.ZipfianSequenceLoadingRpngWithBoxingThroughputBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.ZipfianSequenceLoadingRpngThroughputBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.eviction.symmetrical.PrecalculatedZipfianSequenceLoadingBenchmark.operation","0"
"cache2k/cache2k-benchmark","org.cache2k.benchmark.jmh.suite.noEviction.symmetrical.IntReadOnlyBenchmark.read","0"
"camunda/camunda-engine-dmn-benchmark","org.camunda.bpm.dmn.engine.benchmark.DmnEngineBenchmark.evaluateDecisionTable","0"
"canepat/Helios","journal.PreallocateTest.preallocateZeroed1GB","0"
"carrotsearch/hppc","com.carrotsearch.hppc.benchmarks.B001_ModXor.modOp","0"
"carrotsearch/hppc","com.carrotsearch.hppc.benchmarks.B001_ModXor.xorOp","0"
"carrotsearch/hppc","com.carrotsearch.hppc.benchmarks.B002_HashSet_Add.bulk","0"
"carrotsearch/hppc","com.carrotsearch.hppc.benchmarks.B004_HashSet_CollisionAvalanche.run","0"
"carrotsearch/hppc","com.carrotsearch.hppc.benchmarks.B003_HashSet_Contains.bulk","0"
"ceki/logback-perf","ch.qos.logback.BenchmarkJoran.testPropertySetterShortConfig","0"
"ceki/logback-perf","ch.qos.logback.BenchmarkJoran.testPropertySetterLongerConfig","0"
"ceki/logback-perf","ch.qos.logback.BenchmarkJoran.testPropertySetterMinimalConfig","0"
"ceki/logback-perf","ch.qos.logback.FileAppenderBenchmark.log4j2RAF","0"
"ceki/logback-perf","ch.qos.logback.FileAppenderBenchmark.logbackFile","0"
"ceki/logback-perf","ch.qos.logback.perf.BenchmarkJoran.testPropertySetterShortConfig","0"
"ceki/logback-perf","ch.qos.logback.perf.BenchmarkJoran.testPropertySetterLongerConfig","0"
"ceki/logback-perf","ch.qos.logback.perf.BenchmarkJoran.testPropertySetterMinimalConfig","0"
"ceki/logback-perf","ch.qos.logback.perf.FileAppenderBenchmark.log4j2RAF","0"
"ceki/logback-perf","ch.qos.logback.perf.FileAppenderBenchmark.log4j2File","0"
"ceki/logback-perf","ch.qos.logback.perf.FileAppenderBenchmark.logbackFile","0"
"ceki/logback-perf","ch.qos.logback.perf.FileAppenderBenchmark.log4j1File","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.HttpPropagationUtilBenchmark.toHttpHeaderValueSpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.HttpPropagationUtilBenchmark.fromHttpHeaderValueSpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.HttpPropagationUtilBenchmark.toFromHttpFormatSpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.HttpPropagationUtilBenchmark.base16EncodeSpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.HttpPropagationUtilBenchmark.base16DecodeSpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.HttpPropagationUtilBenchmark.base16EncodeDecodeSpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.BinaryPropagationHandlerImplBenchmark.toBinaryValueSpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.BinaryPropagationHandlerImplBenchmark.fromBinaryValueSpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.BinaryPropagationHandlerImplBenchmark.toFromBinarySpanContext","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.RecordTraceEventsNonSampledSpanBenchmark.addAttributes","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.RecordTraceEventsNonSampledSpanBenchmark.addAnnotation","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.RecordTraceEventsNonSampledSpanBenchmark.addNetworkEvent","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.RecordTraceEventsNonSampledSpanBenchmark.addLink","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.StartEndSpanBenchmark.startEndNonSampledRootSpan","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.StartEndSpanBenchmark.startEndRecordEventsRootSpan","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.StartEndSpanBenchmark.startEndSampledRootSpan","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.StartEndSpanBenchmark.startEndNonSampledChildSpan","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.StartEndSpanBenchmark.startEndRecordEventsChildSpan","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.StartEndSpanBenchmark.startEndSampledChildSpan","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.RecordTraceEventsSampledSpanBenchmark.addAttributes","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.RecordTraceEventsSampledSpanBenchmark.addAnnotation","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.RecordTraceEventsSampledSpanBenchmark.addNetworkEvent","0"
"census-instrumentation/opencensus-java","com.google.instrumentation.trace.RecordTraceEventsSampledSpanBenchmark.addLink","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark.addAttributes","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark.addAnnotation","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark.addNetworkEvent","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark.addLink","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.StartEndSpanBenchmark.startEndNonSampledRootSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.StartEndSpanBenchmark.startEndRecordEventsRootSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.StartEndSpanBenchmark.startEndSampledRootSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.StartEndSpanBenchmark.startEndNonSampledChildSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.StartEndSpanBenchmark.startEndRecordEventsChildSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.StartEndSpanBenchmark.startEndSampledChildSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.propagation.BinaryPropagationImplBenchmark.toBinaryValueSpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.propagation.BinaryPropagationImplBenchmark.fromBinaryValueSpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.propagation.BinaryPropagationImplBenchmark.toFromBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark.addAttributes","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark.addAnnotation","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark.addNetworkEvent","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark.addLink","0"
"census-instrumentation/opencensus-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark.none","0"
"census-instrumentation/opencensus-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark.manual","0"
"census-instrumentation/opencensus-java","io.opencensus.contrib.agent.instrumentation.ThreadInstrumentationBenchmark.automatic","0"
"census-instrumentation/opencensus-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark.none","0"
"census-instrumentation/opencensus-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark.manual","0"
"census-instrumentation/opencensus-java","io.opencensus.contrib.agent.instrumentation.ExecutorInstrumentationBenchmark.automatic","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsNonSampledSpanBenchmark.putAttribute","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.RecordTraceEventsSampledSpanBenchmark.putAttribute","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.propagation.BinaryPropagationImplBenchmark.toBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.trace.propagation.BinaryPropagationImplBenchmark.fromBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsNonSampledSpanBenchmark.putAttribute","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsNonSampledSpanBenchmark.addAnnotation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsNonSampledSpanBenchmark.addNetworkEvent","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsNonSampledSpanBenchmark.addLink","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark.startEndNonSampledRootSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark.startEndRecordEventsRootSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark.startEndSampledRootSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark.startEndNonSampledChildSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark.startEndRecordEventsChildSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.StartEndSpanBenchmark.startEndSampledChildSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.BinaryPropagationImplBenchmark.toBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.BinaryPropagationImplBenchmark.fromBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.BinaryPropagationImplBenchmark.toFromBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsSampledSpanBenchmark.putAttribute","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsSampledSpanBenchmark.addAnnotation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsSampledSpanBenchmark.addNetworkEvent","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsSampledSpanBenchmark.addLink","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark.putAttribute","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark.addAnnotation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark.addMessageEvent","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.RecordTraceEventsBenchmark.addLink","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.B3FormatImplBenchmark.inject","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.B3FormatImplBenchmark.extract","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.B3FormatImplBenchmark.injectExtract","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.BinaryFormatImplBenchmark.toBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.BinaryFormatImplBenchmark.fromBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.propagation.BinaryFormatImplBenchmark.toFromBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark.inject","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark.extract","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.B3FormatImplBenchmark.injectExtract","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark.toBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark.fromBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.BinaryFormatImplBenchmark.toFromBinarySpanContext","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark.inject","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark.extract","0"
"census-instrumentation/opencensus-java","io.opencensus.implcore.trace.propagation.TraceContextImplBenchmark.injectExtract","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.tags.TagsBenchmark.tagKeyCreation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.tags.TagsBenchmark.tagValueCreation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.tags.TagsBenchmark.tagCreation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.tags.NestedTagContextCreationBenchmark.timeNestedTagContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.tags.TagContextBenchmark.tagContextCreation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.tags.TagContextBenchmark.getCurrentTagContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.tags.TagContextBenchmark.serializeTagContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.tags.TagContextBenchmark.deserializeTagContext","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark.recordDoubleCount","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark.recordLongCount","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark.recordDoubleSum","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark.recordLongSum","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark.recordDoubleDistribution","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark.recordLongDistribution","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark.recordDoubleLastValue","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordMultipleViewsBenchmark.recordLongLastValue","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark.recordBatchedDoubleCount","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark.recordBatchedLongCount","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark.recordBatchedDoubleSum","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark.recordBatchedLongSum","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark.recordBatchedDoubleDistribution","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark.recordBatchedLongDistribution","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark.recordBatchedDoubleLastValue","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordBatchedBenchmark.recordBatchedLongLastValue","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark.recordDoubleCount","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark.recordLongCount","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark.recordDoubleSum","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark.recordLongSum","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark.recordDoubleDistribution","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark.recordLongDistribution","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark.recordDoubleLastValue","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.stats.RecordDifferentTagValuesBenchmark.recordLongLastValue","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicDataBenchmark.createAttributeValues","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicDataBenchmark.createAttributeMap","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicDataBenchmark.createAnnotation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark.putAttribute","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark.putAttributes","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark.addAnnotationEmpty","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark.addAnnotationWithAttributes","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark.addAnnotationWithAnnotation","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark.addMessageEvent","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.SpanOperationsBenchmark.addLink","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.createRootSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.createSpanWithExplicitParent","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.createSpanWithRemoteParent","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.createSpanWithCurrentSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.createLink","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.createMessageEvent","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.scopeSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.getCurrentSpan","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.encodeSpanBinary","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.decodeSpanBinary","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.encodeSpanText","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.decodeSpanText","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.setStatus","0"
"census-instrumentation/opencensus-java","io.opencensus.benchmarks.trace.BasicOperationsBenchmark.endSpan","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.SSPerformanceBenchmarks.benchmarkHSSFPerformance","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.SSPerformanceBenchmarks.benchmarkXSSFPerformance","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.SSPerformanceBenchmarks.benchmarkSXSSFPerformance","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.BuildBenchmarks.benchmarkCompileAll","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestMain","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestScratchpad","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestOOXML","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestOOXMLLite","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestExcelant","0"
"centic9/poi-benchmark","org.apache.poi.benchmark.suite.TestBenchmarks.benchmarkTestIntegration","0"
"cglib/cglib","net.sf.cglib.jmh.BeansBenchmark.newInstance","0"
"cglib/cglib","net.sf.cglib.jmh.BeansBenchmark.baseline","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.suite.ClaimRelease.cycle","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.suite.CostBaseline.allocationCostBaseline","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.suite.CostBaseline.deallocationCostBaseline","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.suite.CostBaseline.validationCostBaseline","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.AtomicInteger_compareAndSet","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.AtomicInteger_compareAndSetAndLazySet","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.AtomicInteger_compareAndSetAndSet","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.AtomicInteger_compareAndSetAndWeakCompareAndSet","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.AtomicInteger_weakCompareAndSetAndWeakCompareAndSet","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.AtomicInteger_weakCompareAndSetAndLazySet","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.ThreadLocal_get","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.BlazePool_claimRelease","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.BlazePoolBenchmark.BlazePool_claimRelease_withBH","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining.baseline","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining.computeA","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining.computeB","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining.computeC","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.InterfaceInlining.computeD","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation.getSetSet","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation.newObject","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation.claimRelease","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.HashMapGet.get","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation.claimReleaseWithReturn","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation.claimReleaseWithoutReturn","0"
"chrisvest/object-pool-benchmarks","objectpoolbenchmark.specific.stormpot.Simulation.returnSim","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSByte","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPByte","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSInt","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPInt","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSLong","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPLong","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSMixed","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPMixed","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyStringBOS","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyStringBDOSP","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyLegacyWriteUTF","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallStringBOS","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallStringBDOSP","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallLegacyWriteUTF","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeStringBOS","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeStringBDOSP","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeLegacyWriteUTF","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyStringBOS","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyStringBDOSP","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyLegacyWriteUTF","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallStringBOS","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallStringBDOSP","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallLegacyWriteUTF","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeStringBOS","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeStringBDOSP","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeLegacyWriteUTF","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.Sample.lz4","0"
"cindywang/CaOntheGo","org.apache.cassandra.test.microbench.Sample.snappy","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkOuch42EnterOrderStream.benchmarkDecode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkOuch42EnterOrderStream.benchmarkEncode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkOuch42EnterOrder.benchmarkDecode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkOuch42EnterOrder.benchmarkEncode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkRtcEnterDeal.benchmarkDecode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkRtcEnterDeal.benchmarkEncode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkIntegerCoding.writeVlcUInt32","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkIntegerCoding.readVlcUInt32","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkIntegerCoding.writePutUInt32","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkIntegerCoding.readGetUInt32","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkNativeOuch42EnterOrder.benchmarkDecode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkNativeOuch42EnterOrder.benchmarkEncode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkIntegerCoding.writeVlcUInt64","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkIntegerCoding.readVlcUInt64","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkIntegerCoding.writePutUInt64","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkIntegerCoding.readGetUInt64","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkOuch42EnterOrderGroup.benchmarkDecode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkOuch42EnterOrderGroup.benchmarkEncode","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeFourDynamicFourTypes","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeFourDynamicThreeTypes","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeFourDynamicTwoTypes","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeFourDynamicOneTypes","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeManyDynamic","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeManyDynamic","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeFourDynamicOneType","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeFourDynamicTwoType","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeFourDynamicThreeType","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeFourDynamicFourTypes","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeDynamic","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeDynamic","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeStatic","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeStatic","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeDynamicManyFields","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeDynamicManyFields","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkDecodeStaticManyFields","0"
"cinnober/msgcodec","com.cinnober.msgcodec.blink.BenchmarkDynamic.benchmarkEncodeStaticManyFields","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkCurrentImplementation","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkOriginalImplementation","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkImplementation1","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkImplementation2","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkCurrentImplementationLongList","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkOriginalImplementationLongList","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkImplementation1LongList","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkImplementation2LongList","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkCurrentImplementationPGC","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkOriginalImplementationPGC","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkImplementation1PGC","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkImplementation2PGC","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkCurrentImplementationLongListPGC","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkOriginalImplementationLongListPGC","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkImplementation1LongListPGC","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkGetBarcodeConsensus.benchmarkImplementation2LongListPGC","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkCustomEnumMap.benchmarkJDKImplementation","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkCustomEnumMap.benchmarkCustomImplementation","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkIteration.benchmarkValueIterator","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkIteration.benchmarkForEachSI","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkIteration.benchmarkForEachField","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.TestPolymorphicTCustomCost.benchmarkMonomorphic","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.TestPolymorphicTCustomCost.benchmarkPolymorphic","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.TestPolymorphicTCustomCost.benchmarkPolymorphicOnly1ImplementationCalledA","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.TestPolymorphicTCustomCost.benchmarkPolymorphicOnly1ImplementationCalledB","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkTroveVariants.benchmarkOldImplementation","0"
"cinquin/mutinack","uk.org.cinquin.mutinack.benchmarking.BenchmarkTroveVariants.benchmarkNewImplementation","0"
"classgraph/classgraph","io.github.classgraph.InputStreamBenchmark.testFiles","0"
"classgraph/classgraph","io.github.classgraph.InputStreamBenchmark.testFileChannelViaRandomFile","0"
"classgraph/classgraph","io.github.classgraph.InputStreamBenchmark.testFileChannel","0"
"classgraph/classgraph","io.github.classgraph.InputStreamBenchmark.testFileInputStream","0"
"cleberecht/singa","de.bioforscher.benchmark.algorithms.superimposition.Fit3DAlignmentBenchmark.benchmarkFit3DAlignment","0"
"cleberecht/singa","de.bioforscher.singa.benchmark.mathematics.MatrixBenchmark.benchmarkRegularSymmetricInitialization","0"
"cleberecht/singa","de.bioforscher.singa.benchmark.mathematics.MatrixBenchmark.benchmarkFastSymmetricInitialization","0"
"cleberecht/singa","de.bioforscher.singa.benchmark.algorithms.superimposition.Fit3DAlignmentBenchmark.benchmarkFit3DAlignment","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.BsonParserBenchmark.testCookJson","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.BsonParserBenchmark.testBson4Jackson","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonParserInputStreamBenchmark.testCookJson","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonParserInputStreamBenchmark.testGlassFish","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonParserInputStreamBenchmark.testJackson","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonParserInputStreamBenchmark.testJacksonNoCanonical","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonGeneratorBenchmark.testCookJson","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonGeneratorBenchmark.testGlassFish","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonParserReaderBenchmark.testGlassFish","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonParserReaderBenchmark.testCookJson","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonParserReaderBenchmark.testAJackson","0"
"coconut2015/cookjson","org.yuanheng.cookjson.benchmark.JsonParserReaderBenchmark.testAJacksonNoCanonical","0"
"codahale/aes-gcm-siv","com.codahale.aesgcmsiv.benchmarks.Benchmarks.encrypt","0"
"codahale/aes-gcm-siv","com.codahale.aesgcmsiv.benchmarks.Benchmarks.aes_GCM_SIV_Encrypt","0"
"codahale/aes-gcm-siv","com.codahale.aesgcmsiv.benchmarks.Benchmarks.aes_GCM_SIV_Decrypt","0"
"codahale/aes-gcm-siv","com.codahale.aesgcmsiv.benchmarks.Benchmarks.aes_GCM_Encrypt","0"
"codahale/aes-gcm-siv","com.codahale.aesgcmsiv.benchmarks.Benchmarks.aes_GCM_Decrypt","0"
"codahale/gimli","com.codahale.gimli.benchmarks.Benchmarks.permute","0"
"codahale/gimli","com.codahale.gimli.benchmarks.Benchmarks.permuteBytes","0"
"codahale/gimli","com.codahale.gimli.benchmarks.Benchmarks.hash","0"
"codahale/gimli","com.codahale.gimli.benchmarks.Benchmarks.hashMD5","0"
"codahale/gimli","com.codahale.gimli.benchmarks.Benchmarks.hashSHA1","0"
"codahale/gimli","com.codahale.gimli.benchmarks.Benchmarks.hashSHA256","0"
"codahale/longmapper","com.codahale.longmapper.benchmarks.Benchmarks.map","0"
"codahale/longmapper","com.codahale.longmapper.benchmarks.Benchmarks.unmap","0"
"codahale/passpol","com.codahale.passpol.benchmarks.Benchmarks.test","0"
"codahale/passpol","com.codahale.passpol.benchmarks.Benchmarks.normalize","0"
"codahale/passpol","com.codahale.passpol.benchmarks.Benchmarks.check","0"
"codahale/passpol","com.codahale.passpol.benchmarks.Benchmarks.charsStream","0"
"codahale/passpol","com.codahale.passpol.benchmarks.Benchmarks.charsRange","0"
"codahale/shamir","com.codahale.shamir.benchmarks.Benchmarks.split","0"
"codahale/shamir","com.codahale.shamir.benchmarks.Benchmarks.join","0"
"codahale/usl4j","com.codahale.usl4j.benchmarks.Benchmarks.build","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.seal100Bytes","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.seal1K","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.seal10K","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.simpleSeal100Bytes","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.simpleSeal1K","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.simpleSeal10K","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.KaliumBenchmarks.seal100Bytes","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.KaliumBenchmarks.seal1K","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.KaliumBenchmarks.seal10K","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.seal","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.open","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.simpleSeal","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.OurBenchmarks.simpleOpen","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.KaliumBenchmarks.encrypt","0"
"codahale/xsalsa20poly1305","com.codahale.xsalsa20poly1305.benchmarks.KaliumBenchmarks.decrypt","0"
"Codearte/duramen","eu.codearte.duramen.benchmark.DuramenProcessingBenchmark.testSimpleEvent","0"
"Codearte/duramen","io.codearte.duramen.benchmark.DuramenProcessingBenchmark.testSimpleEvent","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.array_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.array_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.array_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.array_stream_boxed","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.array_stream_parallel","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.array_stream_parallel_boxed","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.list_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.list_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.list_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.list_stream_unbox","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.list_stream_parallel","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ControlStructuresBenchmark.list_stream_parallel_unbox","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_max_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_max_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_sum_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_sum_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_averageLong_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_averageDouble_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_average_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_blackHole_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.array_blackHole_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_max_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_max_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_sum_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_sum_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_averageLong_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_averageDouble_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_average_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_blackHole_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.SimpleOperationsBenchmark.list_blackHole_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.array_max_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.array_max_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.array_max_forWithException","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.array_min_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.boxedArray_max_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.boxedArray_max_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.boxedArray_max_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.boxedArray_max_stream_unboxed","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.list_max_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.list_max_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.list_max_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.list_min_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.list_max_stream_unboxed","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.CommentOperationsBenchmark.list_min_stream_unboxed","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.array_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.array_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.array_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.array_stream_boxed","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.array_stream_parallel","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.array_stream_parallel_boxed","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.list_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.list_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.list_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.list_stream_unbox","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.list_stream_parallel","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.MediumOperationsBenchmark.list_stream_parallel_unbox","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ComplexOperationsBenchmark.array_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ComplexOperationsBenchmark.array_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ComplexOperationsBenchmark.array_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ComplexOperationsBenchmark.array_stream_parallel","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ComplexOperationsBenchmark.list_for","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ComplexOperationsBenchmark.list_forEach","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ComplexOperationsBenchmark.list_stream","0"
"CodeFX-org/lab-java8streamperformancebenchmark","org.codefx.lab.streamperformance.ComplexOperationsBenchmark.list_stream_parallel","0"
"coder-press/crazy-soap","crazysoap.ParseBooleanRandomBenchmarkTest.parseRandom","0"
"coder-press/crazy-soap","crazysoap.ParseBooleanBenchmarkTest.parse","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.curl","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.iPadMobileSafari","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.samsungGalaxyS8chromeMobile","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.amazonKindleFireSilkBrowser","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.windows10Edge","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.windowsPhone","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.samsungGalaxyS8ChromeMobile","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.macOsSafari","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.linuxFirefox","0"
"codesorcery/juan","com.github.codesorcery.juan.benchmark.UserAgentParserBenchmark.iPhoneInstagram","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.MD2__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.MD5__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.MD4__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.RIPEMD128__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.Skein256_128__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.Skein512_128__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest40ByteBench.RIPEMD320__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.SHA256__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.SHA512_256__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.SHA3_256__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.GOST3411__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.GOST3411_2012_256__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.KECCAK256__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.RIPEMD256__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.Skein256_256__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.Skein512_256__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.SM3__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.BLAKE2B256__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.SHA224__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.SHA512_224__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.SHA3_224__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.KECCAK224__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.Skein256_224__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.Skein512_224__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.SHA512__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.SHA3_512__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.GOST3411_2012_512__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.KECCAK512__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.Skein512_512__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.Skein1024_512__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.WHIRLPOOL__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.BLAKE2B512__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.ThreadLocalDigestBench.threadLocal","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.ThreadLocalDigestBench.singleton","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest24ByteBench.TIGER__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest36ByteBench.KECCAK288__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.SHA384__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.SHA3_384__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.KECCAK384__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.Skein512_384__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.Skein1024_384__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.BLAKE2B384__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest128ByteBench.Skein1024_1024__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.SHA__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.SHA1__SUN9","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.RIPEMD160__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.Skein256_160__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.Skein512_160__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.BLAKE2B160__BC1_56","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.WrapGetBench.wrapAndGet","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.MD4__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.RIPEMD128__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.Skein256_128__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest16ByteBench.Skein512_128__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest40ByteBench.RIPEMD320__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.GOST3411__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.GOST3411_2012_256__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.KECCAK256__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.RIPEMD256__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.Skein256_256__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.Skein512_256__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.SM3__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest32ByteBench.BLAKE2B256__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.KECCAK224__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.Skein256_224__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest28ByteBench.Skein512_224__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.GOST3411_2012_512__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.KECCAK512__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.Skein512_512__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.Skein1024_512__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.WHIRLPOOL__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest64ByteBench.BLAKE2B512__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest24ByteBench.TIGER__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest36ByteBench.KECCAK288__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.KECCAK384__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.Skein512_384__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.Skein1024_384__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest48ByteBench.BLAKE2B384__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest128ByteBench.Skein1024_1024__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.RIPEMD160__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.Skein256_160__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.Skein512_160__BC1_57","0"
"comodal/hash-overlay","systems.comodal.hash.benchmark.Digest20ByteBench.BLAKE2B160__BC1_57","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.testMethod","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.totalSalesSequential10","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.totalSalesSequential100","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.totalSalesSequential5000","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.totalSalesSequential10000","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.totalSalesParallel10","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.totalSalesParallel100","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.totalSalesParallel5000","0"
"ConSol/parallel-streams-example","de.consol.research.MyBenchmark.totalSalesParallel10000","0"
"conversant/disruptor_benchmark","com.conversantmedia.LMAXDisruptorPushPullBenchmark.addOneM","0"
"conversant/disruptor_benchmark","com.conversantmedia.PushPullBlockingQueueBenchmark.sendOneM","0"
"conversant/disruptor_benchmark","com.conversantmedia.ArrayBlockingQueueBenchmark.sendOneM","0"
"conversant/disruptor_benchmark","com.conversantmedia.LMAXDisruptorBenchmark.addOneM","0"
"conversant/disruptor_benchmark","com.conversantmedia.LinkedTransferQueueBenchmark.sendOneM","0"
"conversant/disruptor_benchmark","com.conversantmedia.DisruptorBlockingQueueBenchmark.addOneM","0"
"conversant/disruptor_benchmark","com.conversantmedia.PushPullBlockingQueueBenchmark.sendOneMWaiting","0"
"conversant/disruptor_benchmark","com.conversantmedia.ArrayBlockingQueueBenchmark.sendOneMWaiting","0"
"conversant/disruptor_benchmark","com.conversantmedia.LinkedTransferQueueBenchmark.sendOneMWaiting","0"
"conversant/disruptor_benchmark","com.conversantmedia.DisruptorBlockingQueueBenchmark.addOneMWaiting","0"
"conversant/disruptor_benchmark","com.conversantmedia.ConcurrentStackBenchmark.addOneM","0"
"conversant/disruptor_benchmark","com.conversantmedia.ConcurrentStackBenchmark.addOneMWaiting","0"
"conversant/disruptor_benchmark","com.conversantmedia.DisruptorBlockingQueueBenchmark.addOneMNThread","0"
"conversant/disruptor_benchmark","com.conversantmedia.MPMCBlockingQueueBenchmark.addOneM","0"
"conversant/disruptor_benchmark","com.conversantmedia.MPMCBlockingQueueBenchmark.addOneMNThread","0"
"conversant/disruptor_benchmark","com.conversantmedia.MPMCBlockingQueueBenchmark.addOneMWaiting","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList5IfFirst","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList5IfLast","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList5SeparatorChar","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList5SeparatorCharForEach","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList100IfFirst","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList100IfLast","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList100SeparatorChar","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList100SeparatorCharForEach","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList1000IfFirst","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList1000IfLast","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList1000SeparatorChar","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testArrayList1000SeparatorCharForEach","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList5IfFirst","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList5IfLast","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList5SeparatorChar","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList5SeparatorCharForEach","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList100IfFirst","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList100IfLast","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList100SeparatorChar","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList100SeparatorCharForEach","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList1000IfFirst","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList1000IfLast","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList1000SeparatorChar","0"
"cpoepke/demos","org.sample.ListToStringBuilderBenchmark.testLinkedList1000SeparatorCharForEach","0"
"crate/crate","io.crate.types.StringTypeTest.booleanConversion","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.benchParse","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.benchParseAndAnalyzeSelect","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.benchParseAndAnalyzeAndPlan","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.benchAnalyze","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.benchPlan","0"
"crate/crate","io.crate.data.RowsBatchIteratorBenchmark.measureConsumeBatchIterator","0"
"crate/crate","io.crate.data.RowsBatchIteratorBenchmark.measureConsumeCloseAssertingIterator","0"
"crate/crate","io.crate.data.RowsBatchIteratorBenchmark.measureConsumeSkippingBatchIterator","0"
"crate/crate","io.crate.data.RowsBatchIteratorBenchmark.measureConsumeNestedLoopJoin","0"
"crate/crate","io.crate.data.RowsBatchIteratorBenchmark.measureConsumeNestedLoopLeftJoin","0"
"crate/crate","io.crate.action.job.NodeOperationCtxBenchmark.measureCreateNodeOperationCtxPlusFindLeafs","0"
"crate/crate","io.crate.operation.projectors.AggregateCollectorBenchmark.measureAggregateCollector","0"
"crate/crate","io.crate.operation.projectors.GroupingIntegerCollectorBenchmark.measureGroupBySumInteger","0"
"crate/crate","io.crate.operation.projectors.GroupingBytesRefCollectorBenchmark.measureGroupByMinBytesRef","0"
"crate/crate","io.crate.operation.merge.SortedPagingIteratorBenchmark.measurePagingIteratorWithRepeat","0"
"crate/crate","io.crate.operation.merge.SortedPagingIteratorBenchmark.measurePagingIteratorWithoutRepeat","0"
"crate/crate","io.crate.operation.merge.SortedPagingIteratorBenchmark.measurePagingIteratorWithSort","0"
"crate/crate","io.crate.operation.merge.SortedPagingIteratorBenchmark.measureListSort","0"
"crate/crate","io.crate.operation.scalar.SubstrFunctionBenchmark.measureBytesRefSubStr","0"
"crate/crate","io.crate.operation.scalar.SubstrFunctionBenchmark.measureStringSubStr","0"
"crate/crate","io.crate.operation.collect.collectors.LuceneBatchIteratorBenchmark.measureConsumeLuceneBatchIterator","0"
"crate/crate","io.crate.operation.collect.collectors.OrderedLuceneBatchIteratorBenchmark.measureLoadAndConsumeOrderedLuceneBatchIterator","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.measureParseSimpleSelect","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.measureParseAndAnalyzeSimpleSelect","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.measureParseAnalyzeAndPlanSimpleSelect","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.measureAnalyzeSimpleSelect","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.measurePlanSimpleSelect","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.measureParseAnalyzeAndPlanInsertFromValues","0"
"crate/crate","io.crate.analyze.PreExecutionBenchmark.measureParseAnalyzeAndPlanSelectWithMultiPrimaryKeyLookup","0"
"crate/crate","io.crate.operation.aggregation.HyperLogLogDistinctAggregationBenchmark.benchmarkHLLPlusPlus","0"
"crate/crate","io.crate.operation.aggregation.HyperLogLogDistinctAggregationBenchmark.benchmarkHLLAggregation","0"
"crate/crate","io.crate.operation.aggregation.HyperLogLogDistinctAggregationBenchmark.benchmarkHLLAggregationNoDeepCopy","0"
"crate/crate","io.crate.expression.scalar.SubstrFunctionBenchmark.measureBytesRefSubStr","0"
"crate/crate","io.crate.expression.scalar.SubstrFunctionBenchmark.measureStringSubStr","0"
"crate/crate","io.crate.execution.engine.aggregation.AggregateCollectorBenchmark.measureAggregateCollector","0"
"crate/crate","io.crate.execution.engine.aggregation.GroupingIntegerCollectorBenchmark.measureGroupBySumInteger","0"
"crate/crate","io.crate.execution.engine.aggregation.GroupingBytesRefCollectorBenchmark.measureGroupByMinBytesRef","0"
"crate/crate","io.crate.execution.engine.distribution.merge.SortedPagingIteratorBenchmark.measurePagingIteratorWithRepeat","0"
"crate/crate","io.crate.execution.engine.distribution.merge.SortedPagingIteratorBenchmark.measurePagingIteratorWithoutRepeat","0"
"crate/crate","io.crate.execution.engine.distribution.merge.SortedPagingIteratorBenchmark.measurePagingIteratorWithSort","0"
"crate/crate","io.crate.execution.engine.distribution.merge.SortedPagingIteratorBenchmark.measureListSort","0"
"crate/crate","io.crate.execution.engine.collect.collectors.LuceneBatchIteratorBenchmark.measureConsumeLuceneBatchIterator","0"
"crate/crate","io.crate.execution.engine.collect.collectors.OrderedLuceneBatchIteratorBenchmark.measureLoadAndConsumeOrderedLuceneBatchIterator","0"
"crate/crate","io.crate.execution.jobs.NodeOperationCtxBenchmark.measureCreateNodeOperationCtxPlusFindLeafs","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeBatchIterator","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeCloseAssertingIterator","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeSkippingBatchIterator","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeNestedLoopJoin","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeNestedLoopLeftJoin","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeHashInnerJoin","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeHashInnerJoinWithHashCollisions","0"
"crate/crate","io.crate.protocols.postgres.QueryStringSplitterBenchmark.checkSimpleQuery","0"
"crate/crate","io.crate.protocols.postgres.QueryStringSplitterBenchmark.checkMultiQuery","0"
"crate/crate","io.crate.execution.engine.reader.CsvReaderBenchmark.measureFileReadingIteratorForCSV","0"
"crate/crate","io.crate.execution.engine.reader.JsonReaderBenchmark.measureFileReadingIteratorForJson","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeBlockNestedLoopJoin","0"
"crate/crate","io.crate.execution.engine.aggregation.GroupingLongCollectorBenchmark.measureGroupBySumLong","1"
"crate/crate","io.crate.execution.engine.aggregation.GroupingLongCollectorBenchmark.measureGroupBySumLongOptimized","1"
"crate/crate","io.crate.execution.engine.aggregation.GroupingStringCollectorBenchmark.measureGroupByMinString","0"
"crate/crate","io.crate.execution.engine.sort.SortingTopNCollectorBenchmark.measureBoundedSortingCollector","0"
"crate/crate","io.crate.execution.engine.sort.SortingTopNCollectorBenchmark.measureUnboundedSortingCollector","0"
"crate/crate","io.crate.data.join.RowsBatchIteratorBenchmark.measureConsumeWindowBatchIterator","0"
"crate/crate","io.crate.execution.engine.aggregation.GroupingLongCollectorBenchmark.measureGroupBySumLongOptimizedOnLuceneBatchIteratorWithSortedNumericDocValues","0"
"crate/crate","io.crate.execution.engine.aggregation.GroupingLongCollectorBenchmark.measureGroupBySumLongOptimizedOnLuceneBatchIteratorWithNumericDocValues","0"
"crate/crate","io.crate.execution.engine.aggregation.GroupingLongCollectorBenchmark.measureGroupingOnNumericDocValues","0"
"crate/crate","io.crate.execution.engine.aggregation.GroupingLongCollectorBenchmark.measureGroupingOnSortedNumericDocValues","0"
"crate/crate","io.crate.execution.engine.aggregation.GroupingLongCollectorBenchmark.measureGroupingOnLongArray","0"
"CrispOSS/prime-sieves","com.github.crisposs.sieves.benchmark.SieveBenchmark.sieve","0"
"CrispOSS/prime-sieves","com.github.crisposs.network.benchmark.NetworkBenchmark.operate","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.FileContentChunksBenchmark.benchmarkEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.FileContentChunksBenchmark.benchmarkAuthentication","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.FileContentChunksBenchmark.benchmarkDecryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.FileContentEncryptorBenchmark.benchmark100MegabytesEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.FileContentEncryptorBenchmark.benchmark10MegabytesEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.FileContentEncryptorBenchmark.benchmark1MegabytesEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.FileHeadersBenchmark.benchmarkEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.FileHeadersBenchmark.benchmarkDecryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentChunksBenchmark.benchmarkEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentChunksBenchmark.benchmarkAuthentication","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentChunksBenchmark.benchmarkDecryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentEncryptorBenchmark.benchmark100MegabytesEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentEncryptorBenchmark.benchmark10MegabytesEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentEncryptorBenchmark.benchmark1MegabytesEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileHeaderCryptorBenchmark.benchmarkEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileHeaderCryptorBenchmark.benchmarkDecryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentCryptorImplBenchmark.benchmarkEncryption","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentCryptorImplBenchmark.benchmarkAuthentication","0"
"cryptomator/cryptolib","org.cryptomator.cryptolib.v1.FileContentCryptorImplBenchmark.benchmarkDecryption","0"
"cryptomator/siv-mode","org.cryptomator.siv.SivModeBenchmark.benchmarkJce","0"
"cryptomator/siv-mode","org.cryptomator.siv.SivModeBenchmark.benchmarkBcFast","0"
"cryptomator/siv-mode","org.cryptomator.siv.SivModeBenchmark.benchmarkBcLight","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.ObservableCollapserPerfTest.observeCollapsedAndWait","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandConstructionPerfTest.constructHystrixCommandByGroupKeyOnly","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingPercentilePerfTest.writeOnly","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingPercentilePerfTest.readOnly","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingPercentilePerfTest.writeHeavyLatencyAdd","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingPercentilePerfTest.writeHeavyReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingPercentilePerfTest.evenSplitLatencyAdd","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingPercentilePerfTest.evenSplitReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingPercentilePerfTest.readHeavyLatencyAdd","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingPercentilePerfTest.readHeavyReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CollapserPerfTest.observeCollapsedAndWait","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingNumberPerfTest.writeOnly","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingNumberPerfTest.readOnly","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingNumberPerfTest.writeHeavyCounterAdd","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingNumberPerfTest.writeHeavyReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingNumberPerfTest.evenSplitCounterAdd","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingNumberPerfTest.evenSplitReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingNumberPerfTest.readHeavyCounterAdd","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingNumberPerfTest.readHeavyReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineExecute","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineQueue","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineSyncObserve","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineAsyncComputationObserve","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineAsyncCustomThreadPoolObserve","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionPerfTest.hystrixExecute","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionPerfTest.hystrixObserve","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.writeHeavyCommandExecution","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.writeHeavyReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.evenSplitOfWritesAndReadsCommandExecution","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.evenSplitOfWritesAndReadsReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.readHeavyCommandExecution","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.readHeavyReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingMaxPerfTest.writeOnly","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingMaxPerfTest.readOnly","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingMaxPerfTest.writeHeavyUpdateMax","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingMaxPerfTest.writeHeavyReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingMaxPerfTest.evenSplitUpdateMax","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingMaxPerfTest.evenSplitReadMetrics","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingMaxPerfTest.readHeavyUpdateMax","0"
"cs-ester-peixoto/docker-jenkins","com.netflix.hystrix.perf.RollingMaxPerfTest.readHeavyReadMetrics","0"
"cschenyuan/hive-hack","org.apache.hive.benchmark.storage.ColumnarStorageBench.write","0"
"cschenyuan/hive-hack","org.apache.hive.benchmark.storage.ColumnarStorageBench.read","0"
"cschenyuan/hive-hack","org.apache.hive.benchmark.storage.ColumnarStorageBench.serialize","0"
"cschenyuan/hive-hack","org.apache.hive.benchmark.storage.ColumnarStorageBench.deserialize","0"
"cschenyuan/hive-hack","org.apache.hive.benchmark.storage.ColumnarStorageBench.getRecordWriter","0"
"cschenyuan/hive-hack","org.apache.hive.benchmark.storage.ColumnarStorageBench.getRecordReader","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.JsonSerializeBenchmark.upstreamJson","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.JsonSerializeBenchmark.codegenJson","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.JsonSerializeBenchmark.toBytes","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.JsonParserBenchmark.upstreamJson","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.JsonParserBenchmark.codegenJson","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.JsonParserBenchmark.fromBinary","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.FieldDispatchBenchmark.mapDispatch","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.FieldDispatchBenchmark.switchDispatchInterned","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.FieldDispatchBenchmark.switchDispatch","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.FieldDispatchBenchmark.virtualDispatch","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.GithubApiBenchmark.marshallerParseString","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.GithubApiBenchmark.marshallerWriteString","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.GithubApiBenchmark.upstreamParseString","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.GithubApiBenchmark.upstreamWriteString","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.GithubApiBenchmark.protobufParseBytes","0"
"curioswitch/curiostack","org.curioswitch.common.protobuf.json.GithubApiBenchmark.protobufToBytes","0"
"d0k1/acache","com.focusit.istree.benchmarks.Test01Equals.testFastFqnEquals","0"
"d0k1/acache","com.focusit.istree.benchmarks.Test01Equals.testFqnEquals","0"
"d0k1/acache","com.focusit.istree.benchmarks.Test03GetMultiproperty.testFastGetMultiproperty","0"
"d0k1/acache","com.focusit.istree.benchmarks.Test03GetMultiproperty.testGetMultiproperty","0"
"d0k1/acache","com.focusit.istree.benchmarks.Test02CompareTo.testFastFqnCompareTo","0"
"d0k1/acache","com.focusit.istree.benchmarks.Test02CompareTo.testFqnCompareTo","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test01Equals.testFastFqnEquals","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test01Equals.testFqnEquals","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test03GetMultiproperty.testFastGetMultiproperty","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test03GetMultiproperty.testGetMultiproperty","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test05GetMultipropertyPOJO.testGetMultipropery","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test05GetMultipropertyPOJO.testGetPojo","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test05GetMultipropertyPOJO.testSimpleGet","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test05GetMultipropertyPOJO.testSimpleMapGet","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test04GetMultipropertyBiasedLocking.testFastGetMultipropertyBiased","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test04GetMultipropertyBiasedLocking.testFastGetMultipropertyNoBiased","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test04GetMultipropertyBiasedLocking.testGetMultipropertyBiased","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test04GetMultipropertyBiasedLocking.testGetMultipropertyNoBiased","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test02CompareTo.testFastFqnCompareTo","0"
"d0k1/acache","com.focusit.istree.benchmarks.simple.Test02CompareTo.testFqnCompareTo","0"
"d0k1/acache","com.focusit.istree.benchmarks.spring.SpringTestAtomikos01.txTreePut","0"
"d0k1/acache","com.focusit.istree.benchmarks.spring.SpringTestAtomikos01.nonTxTreePut","0"
"d0k1/acache","com.focusit.istree.benchmarks.spring.SpringTestJBossTA01.txTreePut","0"
"d0k1/acache","com.focusit.istree.benchmarks.spring.SpringTestJBossTA01.nonTxTreePut","0"
"d0k1/acache","com.focusit.istree.benchmarks.hotcache.LSCTest01.testPutALot","0"
"d0k1/acache","com.focusit.acache.benchmarks.spring.BenchmarkSpringJBossTARepeatableRead.txTreePut","0"
"d0k1/acache","com.focusit.acache.benchmarks.trie.HashMapTrie.bulkLoadHashMap","0"
"d0k1/acache","com.focusit.acache.benchmarks.trie.HashMapTrie.bulkLoadTrie","0"
"d0k1/acache","com.focusit.acache.benchmarks.trie.HashMapTrie.bulkReadTrie","0"
"d0k1/acache","com.focusit.acache.benchmarks.trie.HashMapTrie.bulkReadHashMap","0"
"d0k1/acache","com.focusit.acache.benchmarks.spring.JTARepeatableRead.bulkNodesLoad","0"
"d0k1/acache","com.focusit.acache.benchmarks.spring.JTARepeatableRead.bulkNodeRead","0"
"d0k1/groovy-eval-bench","com.focusit.template.TemplateBenchmark.templateNoCompilation","0"
"d0k1/groovy-eval-bench","com.focusit.template.TemplateBenchmark.templateNoCompilationCustomParser","0"
"d0k1/groovy-eval-bench","com.focusit.template.TemplateBenchmark.templateNoCompilationCustomParserTyped","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.jsr223.GroovyJSR223Benchmark.groovyNoEngineInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.jsr223.GroovyJSR223Benchmark.groovyNoEngineNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptNoBindingInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptNoBindingNoMethodInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.scriptinheritance.ScriptInheritanceBenchmark.groovyNoCompileCustomBinding","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptNoBindingInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptNoBindingNoMethodInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.typedscript.TypedScriptBenchmark.groovyNoShellNoCompile","0"
"d0k1/groovy-eval-bench","com.focusit.groovyscript.typedscript.TypedScriptBenchmark.groovyNoShellNoCompileNoInstantiate","0"
"d0k1/groovy-eval-bench","com.focusit.java.JavaBenchmark.vanillaJava","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.expando.ExpandoBenchmark.groovyExpandoBenchmarkFullCompile","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.expando.ExpandoBenchmark.groovyExpandoBenchmarkCachedNoCompile","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.expando.ExpandoBenchmark.groovyExpandoBenchmarkCachedNoCompileWithStatic","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.expando.ExpandoBenchmark.groovyExpandoBenchmarkCachedNoCompileNoExpando","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.template.TemplateBenchmark.templateNoCompilation","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.template.TemplateBenchmark.templateNoCompilationCustomParser","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.template.TemplateBenchmark.templateNoCompilationCustomParserTyped","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.compilation.GroovyCompilationBenchmark.scriptFromClassloader","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.staticcompilation.StaticCompilationBenchmark.testStaticCompiledScript","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.jsr223.GroovyJSR223Benchmark.groovyNoEngineInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.jsr223.GroovyJSR223Benchmark.groovyNoEngineNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.jsr223.GroovyJSR223Benchmark.groovyNoEngineNoScriptLessBindingInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptNoBindingInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptNoBindingNoMethodInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.scriptinheritance.ScriptInheritanceBenchmark.groovyNoCompileCustomBinding","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptNoBindingInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptNoBindingNoMethodInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.typedscript.TypedScriptBenchmark.groovyNoShellNoCompile","0"
"d0k1/groovy-eval-bench","com.focusit.groovy.groovyscript.typedscript.TypedScriptBenchmark.groovyNoShellNoCompileNoInstantiate","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.java.JavaBenchmark.vanillaJava","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.expando.ExpandoBenchmark.groovyExpandoBenchmarkFullCompile","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.expando.ExpandoBenchmark.groovyExpandoBenchmarkCachedNoCompile","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.expando.ExpandoBenchmark.groovyExpandoBenchmarkCachedNoCompileWithStatic","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.expando.ExpandoBenchmark.groovyExpandoBenchmarkCachedNoCompileNoExpando","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.template.TemplateBenchmark.templateNoCompilation","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.template.TemplateBenchmark.templateNoCompilationCustomParser","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.template.TemplateBenchmark.templateNoCompilationCustomParserTyped","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.compilation.GroovyCompilationBenchmark.scriptFromClassloader","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.staticcompilation.StaticCompilationBenchmark.testStaticCompiledScript","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.jsr223.GroovyJSR223Benchmark.groovyNoEngineInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.jsr223.GroovyJSR223Benchmark.groovyNoEngineNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.jsr223.GroovyJSR223Benchmark.groovyNoEngineNoScriptLessBindingInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptNoBindingInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.groovyshell.GroovyShellBenchmark.groovyNoShellNoScriptNoBindingNoMethodInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.scriptinheritance.ScriptInheritanceBenchmark.groovyNoCompileCustomBinding","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptNoBindingInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.invokedynamic.IndyGroovyShellBenchmark.groovyNoShellNoScriptNoBindingNoMethodInOneCycle","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.typedscript.TypedScriptBenchmark.groovyNoShellNoCompile","0"
"d0k1/groovy-eval-bench","com.focusit.cpu.groovy.groovyscript.typedscript.TypedScriptBenchmark.groovyNoShellNoCompileNoInstantiate","0"
"d0k1/jitloganalyzer","com.focusit.experiments.fqn.FqnBenchmark2.testHashCodes","0"
"d0k1/jitloganalyzer","com.focusit.experiments.fqn.FqnBenchmark2.testEqualsCodes","0"
"d0k1/jitloganalyzer","com.focusit.experiments.fqn.FqnBenchmark.testHashCodes","0"
"d0k1/jitloganalyzer","com.focusit.experiments.fqn.FqnBenchmark.testEqualsCodes","0"
"d0k1/jitloganalyzer","com.focusit.experiments.uuidgenerator.UUIDGenerator2Benchmark.testUUIDGenerator","0"
"d0k1/jitloganalyzer","com.focusit.experiments.uuidgenerator.UUIDGeneratorBenchmark.testUUIDGenerator","0"
"d0k1/jitloganalyzer","com.focusit.experiments.uuidgenerator.UUIDGenerator3Benchmark.testUUIDGenerator","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark.eventWithNoHierarchyAndOneHandler","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark.eventWithHierarchyAndOneHandler","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark.eventWithManySubclassListeners","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark.eventWithMixedCalls","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.ClassBasedDispatcherBenchmark.eventWithFiftyListeners","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark.eventWithNoHierarchyAndOneHandler","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark.eventWithHierarchyAndOneHandler","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark.eventWithManySubclassListeners","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark.eventWithMixedCalls","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.event.dispatcher.DispatcherBenchmark.eventWithFiftyListeners","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark.quad_tree_get_point_benchmark","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark.quad_tree_get_exact_point_benchmark","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark.quad_tree_get_benchmark","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark.quad_tree_get_exact_benchmark","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark.linear_point_benchmark","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeBenchmark.linear_benchmark","0"
"DaanVanYperen/artemis-odb-contrib","net.mostlyoriginal.api.core.utils.quadtree.QuadTreeInsertBenchmark.quad_tree_insert_benchmark","0"
"dafei1288/max","com.dafei1288.max.testReadCsv.testCsvLoader","0"
"danielnorberg/rut","dano.RegexBenchmark.testRegex","0"
"danielnorberg/rut","dano.RegexBenchmark.testSimple1","0"
"danielnorberg/rut","dano.RegexBenchmark.testSimple2","0"
"danielnorberg/rut","dano.RegexBenchmark.testSimple2ReusableOutput","0"
"danielnorberg/rut","dano.RegexBenchmark.testRadixTrieURIRouting","0"
"danielnorberg/rut","dano.RegexBenchmark.testRegexURIRouting","0"
"danielnorberg/rut","dano.RegexBenchmark.testRouter","0"
"danielnorberg/rut","io.norberg.rut.benchmark.RoutingBenchmark.regexRouting","0"
"danielnorberg/rut","io.norberg.rut.benchmark.RoutingBenchmark.radixTreeRouting","0"
"danielnorberg/rut","io.norberg.rut.benchmark.RoutingBenchmark.regexRoutingNotFound","0"
"danielnorberg/rut","io.norberg.rut.benchmark.RoutingBenchmark.radixTreeRoutingNotFound","0"
"danielnorberg/rut","io.norberg.rut.benchmark.RoutingBenchmark.radixTreeRoutingWithOptionalTrailingSlash","0"
"DanielThomas/spring-boot-starter-netty","org.springframework.boot.context.embedded.netty.HttpContentInputStreamBenchmark.addContent","0"
"DanielThomas/spring-boot-starter-netty","org.springframework.boot.context.embedded.netty.HttpContentInputStreamBenchmark.read","0"
"DanielThomas/spring-boot-starter-netty","org.springframework.boot.context.embedded.netty.NettyHttpServletResponseBenchmark.setContentType","0"
"DanielThomas/spring-boot-starter-netty","org.springframework.boot.context.embedded.netty.NettyHttpServletResponseBenchmark.setContentTypeHeader","0"
"DanielThomas/spring-boot-starter-netty","org.springframework.boot.context.embedded.netty.NettyHttpServletResponseBenchmark.getFormattedDate","0"
"DanielThomas/spring-boot-starter-netty","org.springframework.boot.context.embedded.netty.HttpResponseOutputStreamBenchmark.writeByte","0"
"DanielThomas/spring-boot-starter-netty","org.springframework.boot.context.embedded.netty.HttpResponseOutputStreamBenchmark.writeBytes","0"
"darwin-evolution/darwin","com.github.darwinevolution.darwin.slf4j.Slf4jEvolutionResultConsumerBenchmark.consumeVerboseOkResult","0"
"darwin-evolution/darwin","com.github.darwinevolution.darwin.slf4j.Slf4jEvolutionResultConsumerBenchmark.consumeSilentOkResult","0"
"darwin-evolution/darwin","com.github.darwinevolution.darwin.typesafeconfig.TypesafeConfigImplementationChooserBenchmark.chooseEnabledImplementation","0"
"darwin-evolution/darwin","com.github.darwinevolution.darwin.typesafeconfig.TypesafeConfigImplementationChooserBenchmark.chooseDisabledImplementation","0"
"darwin-evolution/darwin","com.github.darwinevolution.darwin.typesafeconfig.TypesafeConfigImplementationChooserBenchmark.chooseMissingImplementation","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.ZParentTest.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.ZParentTest.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.ZParentTest.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.funcexec.FUNCEXEC_vs_PLAIN_100times_Test.evaluate_ExcelDataModelFuncexec_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.funcexec.FUNCEXEC_vs_PLAIN_100times_Test.evaluate_ExcelDataModelPlainFormula_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.funcexec.FUNCEXEC_vs_PLAIN_1times_Test.evaluate_ExcelDataModelFuncexec_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.funcexec.FUNCEXEC_vs_PLAIN_1times_Test.evaluate_ExcelDataModelPlainFormula_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.funcexec.FUNCEXEC_vs_PLAIN_1000times_Test.evaluate_ExcelDataModelFuncexec_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.funcexec.FUNCEXEC_vs_PLAIN_1000times_Test.evaluate_ExcelDataModelPlainFormula_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_10set_1times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_1000set_1000times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_10set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_100set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_100set_1times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_1000set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_1000set_1times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_100set_1000times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_10set_1000times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.COMPLEX_1times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.COMPLEX_1times_Test.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.SIMPLE_1times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.SIMPLE_1times_Test.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.COMPLEX_1000times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.COMPLEX_1000times_Test.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.SIMPLE_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.SIMPLE_100times_Test.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.COMPLEX_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.COMPLEX_100times_Test.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.COMPLEX_10times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.COMPLEX_10times_Test.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.SIMPLE_1000times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.SIMPLE_1000times_Test.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.SIMPLE_10times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.SIMPLE_10times_Test.buildGraph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.baseline.Baseline_A1_is_B1_plus_C1_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_10set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_100set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_10set_10times_not_found_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_100set_10times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_1000set_10times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_1000set_10times_not_found_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_100set_10times_not_found_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_1000set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.sorted.DSLOOKUP_10set_10times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.vlookup.DSLOOKUP_vs_VLOOKUP_1000set_4times_Test.evaluate_ExcelDataModelDsLookup_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.vlookup.DSLOOKUP_vs_VLOOKUP_1000set_4times_Test.evaluate_ExcelDataModelVLookup_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.vlookup.DSLOOKUP_vs_VLOOKUP_10set_4times_Test.evaluate_ExcelDataModelDsLookup_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.vlookup.DSLOOKUP_vs_VLOOKUP_10set_4times_Test.evaluate_ExcelDataModelVLookup_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.vlookup.DSLOOKUP_vs_VLOOKUP_100set_4times_Test.evaluate_ExcelDataModelDsLookup_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.vlookup.DSLOOKUP_vs_VLOOKUP_100set_4times_Test.evaluate_ExcelDataModelVLookup_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_10set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_100set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_10set_10times_not_found_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_100set_10times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_1000set_10times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_1000set_10times_not_found_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_100set_10times_not_found_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_1000set_100times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.shuffled.DSLOOKUP_10set_10times_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.nativepoi.CalcEngine_vs_POI_One_Formula_Test.calcengine_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.nativepoi.CalcEngine_vs_POI_One_Formula_Test.apachepoi_ExcelFile_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.nativepoi.CalcEngine_vs_POI_Formula_Set_Test.calcengine_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.nativepoi.CalcEngine_vs_POI_Formula_Set_Test.apachepoi_ExcelFile_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.funcexec.FUNCEXEC_vs_PLAIN_Test.evaluate_ExcelDataModelFuncexec_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.funcexec.FUNCEXEC_vs_PLAIN_Test.evaluate_ExcelDataModelPlainFormula_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.query.QUERY_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.Graph_vs_Evaluate_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.graph.Graph_vs_Evaluate_Test.graph_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.DSLOOKUP_not_found_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.DSLOOKUP_vs_VLOOKUP_Test.evaluate_ExcelDataModelDsLookup_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.DSLOOKUP_vs_VLOOKUP_Test.evaluate_ExcelDataModelVLookup_ExecutionTimeIsOk","0"
"DataArt/CalculationEngine","com.dataart.spreadsheetanalytics.dslookup.DSLOOKUP_Test.evaluate_ExcelDataModel_ExecutionTimeIsOk","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareOneByte","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareTwoBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareThreeBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareFourBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareFiveBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareSixBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareSevenBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareEightBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareNineBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareTenBytes","0"
"daten-io/faster","io.daten.faster.benchmarks.FasterByteComparisonBenchmark.compareThirtyTwoBytes","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtEndLinkedList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtEndArrayList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtEndPresizedArrayList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtFrontLinkedList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtFrontArrayList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtFrontPresizedArrayList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtMiddleLinkedList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtMiddleArrayList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listInsertAtMiddlePresizedArrayList","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listAddLinkedListWithIterator","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listAddArrayListWithIterator","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listAddLinkedListWithPointer","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.ListBenchmarks.listAddArrayListWithPointer","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.DeduplicationBenchmarks.useHashSetToDeduplicateLargeListThatHasDuplicates","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.DeduplicationBenchmarks.useHashSetToDeduplicateSmallListThatHasDuplicates","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.DeduplicationBenchmarks.useSortingToDeduplicateLargeListThatHasDuplicates","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.DeduplicationBenchmarks.useSortingToDeduplicateSmallListThatHasDuplicates","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.StringConcatenation.formatStringUsingStringFormat","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.StringConcatenation.formatStringUsingStringConcatenation","0"
"davidhagar-zz/java-microbenchmarks","com.davidhagar.microbenchmarks.StringConcatenation.formatStringUsingStringBuilder","0"
"davidmoten/audio-recognition","com.github.davidmoten.ar.Benchmarks.fft","0"
"davidmoten/geo","com.github.davidmoten.geo.Benchmarks.hashContains","0"
"davidmoten/geo","com.github.davidmoten.geo.Benchmarks.decodeHash","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTrip","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.point","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripSmall","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointSmall","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripTimes1000","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointTimes1000","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripSmallTimes1000","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointSmallTimes1000","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripTimes1000LowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointTimes1000LowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripSmallTimes1000LowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointSmallTimes1000LowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripTimes512","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.toIndexTimes512","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.toIndexTimes512Small","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointTimes512","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripSmallTimes512","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointSmallTimes512","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripTimes512LowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointTimes512LowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripSmallTimes512LowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointSmallTimes512LowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripAllPoints10Bits1024Calls","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.toIndexAllPoints10Bits1024Calls","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.toIndexAllPoints10Bits1024CallsSmall","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointAllPoints10Bits1024Calls","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripSmallAllPoints10Bits1024Calls","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointSmallAllPoints10Bits1024Calls","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripAllPoints10Bits1024CallsLowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointAllPoints10Bits1024CallsLowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.roundTripSmallAllPoints10Bits1024CallsLowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.pointSmallAllPoints10Bits1024CallsLowAllocation","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.querySydney","0"
"davidmoten/hilbert-curve","org.davidmoten.hilbert.Benchmarks.querySydneyMaxRanges8","0"
"davidmoten/kool","org.davidmoten.kool.ShakespearePlaysScrabbleWithStreams.measureThroughput","0"
"davidmoten/kool","org.davidmoten.kool.ShakespearePlaysScrabbleWithKool.measureThroughput","1"
"davidmoten/kool","org.davidmoten.kool.Benchmarks.readFileJava","0"
"davidmoten/kool","org.davidmoten.kool.Benchmarks.readFileKool","0"
"davidmoten/kool","org.davidmoten.kool.Benchmarks.rangeOneTo100CountJava","0"
"davidmoten/kool","org.davidmoten.kool.Benchmarks.rangeOneTo100CountKool","0"
"davidmoten/kool","org.davidmoten.kool.Benchmarks.mapToListJava","0"
"davidmoten/kool","org.davidmoten.kool.Benchmarks.mapToListKool","0"
"davidmoten/kool","org.davidmoten.kool.Benchmarks.flatMapMinMapReduceKool","0"
"davidmoten/kool","org.davidmoten.kool.Benchmarks.flatMapMinMapReduceJavaStreams","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren004","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren010","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren004","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010WithBackpressure","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren032","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren032","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren128","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren128","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren004","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren010","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren004","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren010","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren032","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren032","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren128","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren128","0"
"davidmoten/rtree-3d","com.github.davidmoten.rtree3d.BenchmarksRTree.rStarTreeDeleteOneEveryOccurrenceFromGreekDataChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren004","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren004","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010WithBackpressure","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren032","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren032","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren128","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren128","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren004","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren004","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren032","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren032","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren128","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren128","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeDeleteOneEveryOccurrenceFromGreekDataChildren010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.searchNearestGreek","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010FlatBuffers","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010FlatBuffersBackpressure","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeCreation010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.starRTreeCreation010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.flatBufferRTreeCreation010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.bulkLoadingRTreeCreation010","0"
"davidmoten/rtree","com.github.davidmoten.rtree.BenchmarksRTree.bulkLoadingFullRTreeCreation010","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.takeLastOneFromRxJavaLibraryMany","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.addAndIterateArrayList","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.addAndIterateLinkedList","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.concatOne","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.mergeOne","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.concatSome","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.mergeSome","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.concatMany","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.mergeMany","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.perfOnBackpressureBufferToFileFor100_000IntegersOnComputation","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.perfOnBackpressureBufferToFileFor100_000IntegersSychronous","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.perfOnBackpressureBufferToFileFor3000_1KMessagesOnComputation","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.perfOnBackpressureBufferToFileFor3000_1KMessagesOnSynchronous","0"
"davidmoten/rxjava-extras","com.github.davidmoten.rx.Benchmarks.perfStringSplit","0"
"davidmoten/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks.selectUsingLibraryUsingExplicitMapping","0"
"davidmoten/rxjava-jdbc","com.github.davidmoten.rx.jdbc.Benchmarks.selectUsingRawJdbc","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.splitStandardTake5","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.splitStandardWithPatternTake5","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.splitSimpleTake5","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.splitStandard","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.splitStandardWithPattern","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.splitSimple","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.splitRxJavaStringTake5","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.splitRxJavaString","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.mergeTwoStreams","0"
"davidmoten/rxjava2-extras","com.github.davidmoten.rx2.Benchmarks.mergeTwoStreamsInterleaved","0"
"davidmoten/rxjava2-http","org.davidmoten.rx2.http.Benchmarks.throughput","0"
"davidmoten/word-wrap","org.davidmoten.text.utils.Benchmarks.wrapNovel","0"
"dcapwell/collections","com.github.dcapwell.collections.benchmarks.SkipListBenchmarks.add","0"
"dcapwell/collections","com.github.dcapwell.collections.benchmarks.SkipListBenchmarks.addReverse","0"
"dcapwell/java-file-operations","com.github.dcapwell.java.file.operations.fork.ForkFileOperations.chmod","0"
"dcapwell/java-file-operations","com.github.dcapwell.java.file.operations.java7.JavaFileOperations.chmod","0"
"dcapwell/java-file-operations","com.github.dcapwell.java.file.operations.jna.JNAFileOperations.chmod","0"
"dcapwell/java-file-operations","com.github.dcapwell.java.file.operations.java6.JavaReflectFileOperations.chmod","0"
"dcapwell/java-file-operations","com.github.dcapwell.java.file.operations.java7.NIOFileOperations.chmod","0"
"dcapwell/java-file-operations","com.github.dcapwell.java.file.operations.jnr.ffi.JNRFFIFileOperations.chmod","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FunctionTypes.staticFunctions","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FunctionTypes.staticFunctionsWithState","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FunctionTypes.interfaceMethods","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FunctionTypes.interfaceMethodsWithState","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FunctionTypes.abstractMethods","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FunctionTypes.abstractMethodsWithState","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.file.operations.fork.ForkFileOperations.chmod","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.file.operations.java7.NIOFileOperations.chmod","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.file.operations.jnr.ffi.JNRFFIFileOperations.chmod","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.file.operations.jna.JNAFileOperations.chmod","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.file.operations.java6.JavaReflectFileOperations.chmod","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalParams.doNothing","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalParams.nonFinal","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalParams.withFinal","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.baseline","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.inherent","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.inherentTop","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.inherentBottom","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.finalInherent","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.finalInherentTop","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.finalInherentBottom","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.klass","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.klassFinalMethod","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.finalClass","0"
"dcapwell/jmh-tests","com.github.dcapwell.java.methodtypes.FinalClassAndMethods.finalClassFinalMethod","0"
"debmalya/vigilant-tribble","com.deb.ComputeCacheBenchMark.compute_sameKey","0"
"debmalya/vigilant-tribble","com.deb.ComputeCacheBenchMark.compute_spread","0"
"debmalya/vigilant-tribble","com.deb.MyBenchmark.caffeinePut","0"
"debmalya/vigilant-tribble","com.deb.MyBenchmark.caffeineGet","0"
"debmalya/vigilant-tribble","com.deb.MyBenchmark.caffeineRemove","0"
"debmalya/vigilant-tribble","com.deb.MyBenchmark.lruPut","0"
"debmalya/vigilant-tribble","com.deb.MyBenchmark.lruGet","0"
"debmalya/vigilant-tribble","com.deb.MyBenchmark.lruRemove","0"
"debop/debop4k","debop4k.benchmark.core.util.Utf8EncodingBenchmark.customEncoder","0"
"debop/debop4k","debop4k.benchmark.core.util.Utf8EncodingBenchmark.stringGetBytes","0"
"debop/debop4k","debop4k.benchmark.core.util.Utf8EncodingBenchmark.charsetEncoder","0"
"debop/debop4k","debop4k.benchmark.serializers.SerializerBenchmark.binarySerializer","0"
"debop/debop4k","debop4k.benchmark.serializers.SerializerBenchmark.fstSerializer","0"
"deephacks/lmdbjni","org.fusesource.lmdbjni.Iteration.lmdb_buffer_copy","0"
"deephacks/lmdbjni","org.fusesource.lmdbjni.Iteration.lmdb_zero_copy","0"
"deephacks/lmdbjni","org.fusesource.lmdbjni.Iteration.rocksdb","0"
"deephacks/lmdbjni","org.fusesource.lmdbjni.Iteration.leveldb","0"
"deephacks/lmdbjni","org.fusesource.lmdbjni.Iteration.mapdb","0"
"demoth/finistika","com.db.prisma.droolspoc.generation.StringGenerationBenchmark.getStringFromUUID","0"
"demoth/finistika","com.db.prisma.droolspoc.generation.StringGenerationBenchmark.getStringUtils","0"
"demoth/finistika","com.db.prisma.droolspoc.generation.StringGenerationBenchmark.getStringApacheRSU","0"
"Devexperts/dlcheck","com.devexperts.dlcheck.benchmarks.SynchronizedBenchmark.measureSynchronized","0"
"Devexperts/dlcheck","com.devexperts.dlcheck.benchmarks.FineGrainedLockBenchmark.bench_1","0"
"Devexperts/dlcheck","com.devexperts.dlcheck.benchmarks.FineGrainedLockBenchmark.bench_2","0"
"Devexperts/dlcheck","com.devexperts.dlcheck.benchmarks.FineGrainedLockBenchmark.bench_4","0"
"Devexperts/dlcheck","com.devexperts.dlcheck.benchmarks.FineGrainedLockBenchmark.bench_8","0"
"Devexperts/dlcheck","com.devexperts.dlcheck.benchmarks.FineGrainedLockBenchmark.bench_16","0"
"Devexperts/dlcheck","com.devexperts.dlcheck.benchmarks.FineGrainedLockBenchmark.bench_32","0"
"dimagi/commcare-core","org.commcare.LoadAndInitLargeForm.recForm","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.FirstBenchmark.bench1","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetFilledBenchmark.getFromEnumMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetFilledBenchmark.getFromCEnumMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetFilledBenchmark.getFromHashMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetFilledBenchmark.getFromIHashMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetFilledBenchmark.getFromTreeMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetFilledBenchmark.getFromSkipListMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetFilledBenchmark.getFromAMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.ReplaceBenchmark.putToAMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.ReplaceBenchmark.putToEnumMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.ReplaceBenchmark.putToCEnumMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.ReplaceBenchmark.putToHashMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.ReplaceBenchmark.putToIHashMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.ReplaceBenchmark.putToTreeMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.ReplaceBenchmark.putToSkipListMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetSemiFilledBenchmark.getFromEnumMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetSemiFilledBenchmark.getFromCEnumMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetSemiFilledBenchmark.getFromHashMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetSemiFilledBenchmark.getFromIHashMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetSemiFilledBenchmark.getFromTreeMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetSemiFilledBenchmark.getFromSkipListMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.GetSemiFilledBenchmark.getFromAMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.PutBenchmark.putToAMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.PutBenchmark.putToHashMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.PutBenchmark.putToTreeMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.PutBenchmark.putToSkipListMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.PutBenchmark.putToEnumMap","0"
"dimitrovchi/enum-like","org.dimitrovchi.enumlike.benchmarks.PutBenchmark.putToCEnumMap","0"
"dmart28/reveno","org.reveno.atp.core.benchmarks.ViewsMappingBenchmark.benchmark","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.BinaryToSimpleInsertionCutoff.testInsertion","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.BinaryToSimpleInsertionCutoff.testInsertionX","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.BinaryToSimpleInsertionCutoff.testInsertionAC","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.BinaryToSimpleInsertionCutoff.testBinaryInsertion","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.BinaryToSimpleInsertionCutoff.testBinaryInsertionShortCircuit","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.BinaryToSimpleInsertionCutoff.testBinaryInsertionDoubleCompare","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.BinaryToSimpleInsertionCutoff.testBinaryInsertionX","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.Params.bench","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.CompareSorts.testBinaryInsertionX","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.CompareSorts.testMerge","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.CompareSorts.testMergeX","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.CompareSorts.testMergeXBinary","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ChooseCutoff.testMerge","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ChooseCutoff.testMergeInsertion","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ChooseCutoff.testMergeInsertionX","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ChooseCutoff.testMergeBinaryInsertion","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ChooseCutoff.testMergeBinaryInsertionX","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ChooseCutoff.testInsertion","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ChooseCutoff.testBinaryInsertion","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ChooseCutoff.testBinaryInsertionX","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ArrayCopyVsManualAssignment.testArrayCopy","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.ArrayCopyVsManualAssignment.testManualCopy","0"
"dmitryleskov/algs4bench","com.dmitryleskov.algs4bench.MyBenchmark.testSort","0"
"dmnlukasik/java-8-concurrency-updates","obt.parallelstreams.ParallelStreamsBenchmark.sequential","0"
"dmnlukasik/java-8-concurrency-updates","obt.parallelstreams.ParallelStreamsBenchmark.parallel","0"
"dmnlukasik/java-8-concurrency-updates","obt.contended.AtContendedBenchmark.reader","0"
"dmnlukasik/java-8-concurrency-updates","obt.contended.AtContendedBenchmark.writer","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureAnnotationHandlerAverage","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureAnnotationHandlerThroughput","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureDescriptionHandlerAverage","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureDescriptionHandlerThroughput","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureAnnotationSagaAverage","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureAnnotationSagaThroughput","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureDescriptionSagaAverage","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureDescriptionSagaThroughput","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureAutoTypedHandlerThroughput","0"
"Domo42/saga-lib","com.codebullets.sagalib.HandlersTestFixture.measureAutoTypedHandlerAverage","0"
"drankye/bufferalloc","test.allocation.OffHeapJMHMemoryAllocatorTest.testRead","0"
"drankye/bufferalloc","test.allocation.OffHeapJMHMemoryAllocatorTest.testWrite","0"
"drankye/bufferalloc","test.allocation.OffHeapJMHMemoryAllocatorTest.testRandomRead","0"
"drankye/bufferalloc","test.allocation.InPlaceCheckedOffHeapJMHMemoryAllocatorTest.testRead","0"
"drankye/bufferalloc","test.allocation.InPlaceCheckedOffHeapJMHMemoryAllocatorTest.testWrite","0"
"drankye/bufferalloc","test.allocation.InPlaceCheckedOffHeapJMHMemoryAllocatorTest.testRandomRead","0"
"drankye/bufferalloc","test.allocation.DBBJMHMemoryAllocatorTest.testRead","0"
"drankye/bufferalloc","test.allocation.DBBJMHMemoryAllocatorTest.testWrite","0"
"drankye/bufferalloc","test.allocation.DBBJMHMemoryAllocatorTest.testRandomRead","0"
"drankye/bufferalloc","test.allocation.CheckedOffHeapJMHMemoryAllocatorTest.testRead","0"
"drankye/bufferalloc","test.allocation.CheckedOffHeapJMHMemoryAllocatorTest.testWrite","0"
"drankye/bufferalloc","test.allocation.CheckedOffHeapJMHMemoryAllocatorTest.testRandomRead","0"
"dropbox/dropbox-sdk-java","com.dropbox.core.json.JsonDateReaderBench$ParseDropboxDate.specialized","0"
"dropbox/dropbox-sdk-java","com.dropbox.core.json.JsonDateReaderBench$ParseDropboxDate.standard","0"
"dropbox/dropbox-sdk-java","com.dropbox.core.json.JsonDateReaderBench$ParseDropboxDate.standardThreadLocal","0"
"dropwizard/dropwizard","io.dropwizard.benchmarks.util.SizeBenchmark.parseSize","0"
"dropwizard/dropwizard","io.dropwizard.benchmarks.util.DurationBenchmark.parseDuration","0"
"dropwizard/dropwizard","io.dropwizard.benchmarks.jersey.DropwizardResourceConfigBenchmark.getEndpointsInfo","0"
"dropwizard/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark.paramViolation","0"
"dropwizard/dropwizard","io.dropwizard.benchmarks.jersey.ConstraintViolationBenchmark.objViolation","0"
"dropwizard/dropwizard","io.dropwizard.benchmarks.jersey.SelfValidatingBenchmark.validationMethod","0"
"dropwizard/dropwizard","io.dropwizard.benchmarks.jersey.SelfValidatingBenchmark.selfValidating","0"
"dropwizard/dropwizard","io.dropwizard.benchmarks.util.DataSizeBenchmark.parseSize","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark.perfUniformReservoir","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark.perfExponentiallyDecayingReservoir","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark.perfSlidingWindowReservoir","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark.perfSlidingTimeWindowReservoir","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.MeterBenchmark.perfMark","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.CounterBenchmark.perfIncrement","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.ReservoirBenchmark.perfSlidingTimeWindowArrayReservoir","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.SlidingTimeWindowReservoirsBenchmark.slidingTimeAddMeasurement","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.SlidingTimeWindowReservoirsBenchmark.slidingTimeRead","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.SlidingTimeWindowReservoirsBenchmark.arrTimeAddMeasurement","0"
"dropwizard/metrics","com.codahale.metrics.benchmarks.SlidingTimeWindowReservoirsBenchmark.arrTimeRead","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkLwfuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkLwfuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkGuava","1"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkSpring","1"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkJdk","1"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkLwfuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkGuava","1"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkSpring","1"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkLwfuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkLwfuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkGuava","1"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkSpring","1"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkLwfuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.NoListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.NoListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.NoListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.NoListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.MixedListenerBenchmark.benchmarkJdk","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.MixedListenerBenchmark.benchmarkLwFuture","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.MixedListenerBenchmark.benchmarkGuava","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.benchmark.MixedListenerBenchmark.benchmarkSpring","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.collection.benchmark.LazilyBuiltLoadingCacheBenchmark.directConcurrentBenchmark","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.collection.benchmark.LazilyBuiltLoadingCacheBenchmark.coldLazilyBuiltLoadingCacheBenchmark","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.collection.benchmark.LazilyBuiltLoadingCacheBenchmark.warmLazilyBuiltLoadingCacheBenchmark","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.collection.benchmark.TypeDelegatingFunctionBenchmark.directInstanceofBenchmark","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.collection.benchmark.TypeDelegatingFunctionBenchmark.instanceCallerBenchmark","0"
"dryuf/dryuf-concurrent","net.dryuf.concurrent.collection.benchmark.TypeDelegatingFunctionBenchmark.ownerCallerBenchmark","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithConstructor","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithMungedConstructor","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithMungedConstructorRaw","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithMungedConstructorRawAndCast","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithUnsafe","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithUnsafeRaw","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithUnsafeRawInline","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithUnsafeRawAndCast","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithUnsafeRawAndCastInline","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithUnsafeRawException","0"
"easymock/objenesis","org.objenesis.benchmark.CreateObject.createObjectWithUnsafeRawExceptionInline","0"
"easymock/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator.std","1"
"easymock/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator.single","1"
"easymock/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator.custom","1"
"easymock/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator.cachedStd","1"
"easymock/objenesis","org.objenesis.benchmark.ConcurrentGetInstantiator.uncachedStd","1"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA1","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA256","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA384","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA512","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA1Reuse","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA256Reuse","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA384Reuse","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA512Reuse","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.MD5","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.MD2","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.MD5Reuse","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.MD2Reuse","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HmacBenchmark.HmacMD5","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HmacBenchmark.HmacSHA1","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HmacBenchmark.HmacSHA256","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HmacBenchmark.HmacSHA384","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HmacBenchmark.HmacSHA512","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HmacBenchmark.HmacSHA512Short","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA224","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.SHA224Reuse","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HmacBenchmark.HmacSHA224","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.digestFinalAllocCopy","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.digestUpdateAllocCopy","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.digestUpdateAllocWork","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.digestUpdateReuseCopy","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.digestUpdateReuseWork","0"
"ecki/jmhbench-cryptospeed","net.eckenfels.jmhtest.cryptospeed.HashBenchmark.digestFinalReuseCopy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_lazy_reverse_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_lazy_reverse_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_lazy_intstream_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_lazy_intstream_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.parallel_lazy_reverse_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.parallel_lazy_reverse_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.parallel_lazy_intstream_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.parallel_lazy_intstream_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_eager_reverse_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.serial_lazy_reverse_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinTest.parallel_lazy_reverse_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SetAddAllTest.jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SetAddAllTest.ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest.sumByBigDecimalProduct_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest.sumByBigDecimalProduct_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest.sumByBigDecimalAccount_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest.sumByBigDecimalAccount_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest.sumByBigDecimalCategory_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByBigDecimalTest.sumByBigDecimalCategory_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_serial_lazy_direct_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_serial_lazy_direct_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_serial_lazy_collect_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_serial_lazy_collect_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_parallel_lazy_direct_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_parallel_lazy_direct_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_parallel_lazy_collect_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_parallel_lazy_collect_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByIntTest.maxByQuantity_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.ListEqualTest.jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.ListEqualTest.ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest.contains_mutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest.contains_immutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest.contains_mutable_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetContainsTest.contains_immutable_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest.serial_mutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest.serial_immutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest.parallel_mutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest.parallel_immutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest.serial_mutable_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest.serial_immutable_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest.parallel_mutable_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.set.sorted.SortedSetIterationTest.parallel_immutable_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.jdkGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.kolobokeGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.ecGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.jdkPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.kolobokePut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.ecPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.ecRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.jdkRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapLargeStressTest.kolobokeRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.short_circuit_middle_parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnySatisfyTest.process_all_parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByProduct_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByProduct_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByAccount_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByAccount_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByCategory_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByCategory_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByProduct_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByProduct_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByAccount_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByAccount_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByCategory_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByCategory_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByProduct_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByAccount_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByCategory_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByProduct_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByAccount_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByCategory_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByProduct_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByAccount_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByCategory_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByProduct_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByAccount_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateByCategory_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByProduct_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByAccount_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByCategory_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByProduct_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByAccount_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByCategory_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByProduct_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByAccount_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AggregateByTest.aggregateInPlaceByCategory_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_unordered_lists_2_keys_serial_eager_guava","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_unordered_lists_100_keys_serial_eager_guava","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_unordered_lists_10000_keys_serial_eager_guava","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_unordered_lists_2_keys_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_unordered_lists_100_keys_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_unordered_lists_10000_keys_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_2_keys_parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_100_keys_parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupBySetTest.groupBy_10000_keys_parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_not","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest.serial_lazy_streams_ec_lambda_not","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest.serial_lazy_jdk_lambda_negate","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest.serial_lazy_streams_ec_lambda_negate","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest.serial_eager_ec_select_predicates_not","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.RejectTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest.parallel_eager_forkjoin_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramListTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceSetTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_serial_lazy_direct_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_serial_lazy_direct_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_serial_lazy_collect_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_serial_lazy_collect_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_parallel_lazy_direct_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_parallel_lazy_direct_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_parallel_lazy_collect_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_parallel_lazy_collect_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByIntTest.minByQuantity_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.short_circuit_middle_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.short_circuit_middle_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.process_none_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.process_none_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.short_circuit_middle_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.process_none_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.short_circuit_middle_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.process_none_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.short_circuit_middle_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.process_all_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.short_circuit_middle_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.NoneSatisfyTest.process_all_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.ListAddAllTest.jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.ListAddAllTest.ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.EcMutableMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.KolobokeMutableMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaAnyRefMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest.mutableEcPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest.mutableScalaPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.MapGrowthTest.immutableScalaPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaMutableMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.HppcMutableMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.TroveMutableMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.KolobokeMapPutTest.koloboke","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.EcImmutableMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest.ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest.hppc","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest.jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.ChainMapPutTest.scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaImmutableMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.JdkMutableMapGetTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.TroveMapPutTest.trove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.map.ScalaAnyRefMapPutTest.scalaAnyRef","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest.put","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest.presizedPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapTest.remove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.parallel_eager_fixed_pool_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectIfTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_serial_lazy_direct_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_serial_lazy_direct_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_serial_lazy_collect_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_serial_lazy_collect_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_parallel_lazy_direct_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_parallel_lazy_direct_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_parallel_lazy_collect_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_parallel_lazy_collect_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxByDoubleTest.maxByMarketValue_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountTest.parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.jdkGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.kolobokeGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.ecGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.jdkPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.kolobokePut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.ecPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.ecRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.jdkRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntIntMapSmallStressTest.kolobokeRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.BagAddAllTest.guava","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.BagAddAllTest.ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByProduct_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByProduct_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByAccount_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByAccount_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByCategory_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByCategory_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByProduct_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByProduct_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByAccount_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByAccount_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByCategory_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByCategory_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByProduct_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByProduct_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByAccount_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByAccount_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByCategory_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumByDoubleTest.sumByCategory_parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_serial_lazy_direct_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_serial_lazy_direct_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_serial_lazy_collect_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_serial_lazy_collect_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_parallel_lazy_direct_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_parallel_lazy_direct_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_parallel_lazy_collect_methodref_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_parallel_lazy_collect_lambda_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MinByDoubleTest.minByMarketValue_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.parallel_eager_forkjoin_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramSetTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest.kolobokeGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest.ecGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest.kolobokePut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest.ecPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest.ecRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapSmallStressTest.kolobokeRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.serial_eager_ec_hand_coded","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.parallel_eager_ec_hand_coded","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_ec_hand_coded","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FunctionalInterfaceTest.parallel_lazy_scala_hand_coded","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.PartitionTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_2_keys_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_2_keys_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_100_keys_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_100_keys_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_10000_keys_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_10000_keys_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_2_keys_serial_eager_guava","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_100_keys_serial_eager_guava","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_10000_keys_serial_eager_guava","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_2_keys_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_100_keys_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_10000_keys_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_2_keys_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_100_keys_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_10000_keys_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_2_keys_serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_100_keys_serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_10000_keys_serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_2_keys_serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_100_keys_serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.GroupByListTest.groupBy_10000_keys_serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest.kolobokeGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest.ecGet","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest.kolobokePut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest.ecPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest.ecRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongLongMapLargeStressTest.kolobokeRemove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_collectIntSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_collectIntSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_collectLongSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_collectLongSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_collectIntSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_collectIntSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_collectLongSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_collectLongSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_eager_directSumOfInt_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_eager_collectIntSum_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_collectIntSum_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_directSumOfInt_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_directSumOfInt_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_lazy_reverse_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_lazy_reverse_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_lazy_intstream_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_lazy_intstream_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.parallel_lazy_reverse_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.parallel_lazy_reverse_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.parallel_lazy_intstream_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.parallel_lazy_intstream_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_eager_reverse_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.serial_lazy_reverse_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.MaxTest.parallel_lazy_reverse_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SelectTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest.get","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest.put","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest.presizedPut","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest.remove","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.LongIntMapTest.copyTest","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest.serial_mutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest.serial_immutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest.parallel_mutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest.parallel_immutable_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest.serial_mutable_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.list.ListIterationTest.parallel_mutable_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.FlatCollectTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.serial_eager_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.serial_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CountSetTest.parallel_lazy_scala","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest.serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest.parallel_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest.parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest.parallel_eager_forkjoin_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest.serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest.serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest.parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AnagramBagTest.parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.serial_lazy_collectDoubleSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.serial_lazy_collectDoubleSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.parallel_lazy_collectDoubleSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.parallel_lazy_collectDoubleSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.serial_eager_directSumOfDouble_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.serial_eager_collectDoubleSum_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.serial_lazy_collectDoubleSum_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.parallel_lazy_directSumOfDouble_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfDoubleTest.serial_lazy_directSumOfDouble_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.short_circuit_middle_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.short_circuit_middle_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.process_all_serial_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.process_all_serial_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.short_circuit_middle_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.process_all_serial_eager_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.short_circuit_middle_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.process_all_serial_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.short_circuit_middle_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.short_circuit_middle_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.process_all_parallel_lazy_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.process_all_parallel_lazy_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.short_circuit_middle_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.AllSatisfyTest.process_all_parallel_lazy_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_mapToIntSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_mapToIntSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_mapToLongSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_mapToLongSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_mapToIntSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_mapToIntSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_mapToLongSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_mapToLongSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.parallel_lazy_sumOfInt_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_lazy_sumOfInt_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SumOfIntTest.serial_eager_sum_intList","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.serial_lazy_mapToStringJoining_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.serial_lazy_mapToStringJoining_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.parallel_lazy_mapToStringJoining_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.parallel_lazy_mapToStringJoining_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.serial_eager_collectToStringJoining_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.serial_lazy_collectToStringJoining_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.serial_eager_makeString_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.parallel_lazy_makeString_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.CollectorJoiningTest.serial_eager_primitiveMakeString_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.serial_lazy_mapToIntSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.serial_lazy_mapToIntSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.parallel_lazy_mapToIntSum_jdk","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.parallel_lazy_mapToIntSum_streams_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.serial_eager_summarizeInt_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.serial_eager_collectIntSummaryStatistics_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.serial_lazy_collectIntSummaryStatistics_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.serial_lazy_summarizeInt_ec","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.SummarizeIntTest.serial_eager_summaryStatistics_intList","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterECBoxedEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterECBoxedLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterECParallelEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterECParallelLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterECPrimitiveEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterECPrimitiveLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterJDKBoxedParallelStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterJDKBoxedStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumECBoxedEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumECBoxedLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumECOptimizedParallelEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumECOptimizedParallelLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumECParallelLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumECPrimitiveEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumECPrimitiveLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumJDKBoxedParallelStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumJDKBoxedStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapECBoxedEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapECBoxedLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapECParallelEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapECParallelLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapECPrimitiveEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapECPrimitiveLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapJDKBoxedParallelStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapJDKBoxedStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumECBoxedEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumECBoxedLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumECParallelEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumECParallelLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumECPrimitiveEager","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumECPrimitiveLazy","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumJDKBoxedParallelStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumJDKBoxedStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterJDKIntStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterJDKIntStreamParallel","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterJDKIntStreamToEC","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterJDKIntStreamParallelToEC","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumJDKIntStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.filterMapSumJDKIntStreamParallel","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapJDKIntStream","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapJDKIntStreamParallel","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapJDKIntStreamToEC","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.mapJDKIntStreamParallelToEC","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumJDKIntStreamParallel","0"
"eclipse/eclipse-collections","org.eclipse.collections.impl.jmh.IntListJMHTest.sumJDKIntStream","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.nettySmall","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.vertxSmall","0"
"eclipse/vert.x","io.vertx.benchmarks.JsonEncodeBenchmark.viaStringSmall","0"
"eclipse/vert.x","io.vertx.benchmarks.JsonEncodeBenchmark.viaStringLarge","0"
"eclipse/vert.x","io.vertx.benchmarks.JsonEncodeBenchmark.directSmall","0"
"eclipse/vert.x","io.vertx.benchmarks.JsonEncodeBenchmark.directLarge","0"
"eclipse/vert.x","io.vertx.benchmarks.RunOnContextBenchmark.baseline","0"
"eclipse/vert.x","io.vertx.benchmarks.RunOnContextBenchmark.noChecks","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersEncodeBenchmark.baseline","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersEncodeBenchmark.nettySmall","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersEncodeBenchmark.vertxSmall","0"
"eclipse/vert.x","io.vertx.benchmarks.JsonDecodeBenchmark.viaStringSmall","0"
"eclipse/vert.x","io.vertx.benchmarks.JsonDecodeBenchmark.viaStringLarge","0"
"eclipse/vert.x","io.vertx.benchmarks.JsonDecodeBenchmark.directSmall","0"
"eclipse/vert.x","io.vertx.benchmarks.JsonDecodeBenchmark.directLarge","0"
"eclipse/vert.x","io.vertx.benchmarks.HttpServerHandlerBenchmark.vertx","0"
"eclipse/vert.x","io.vertx.benchmarks.HttpServerHandlerBenchmark.vertxOpt","0"
"eclipse/vert.x","io.vertx.benchmarks.HttpServerHandlerBenchmark.netty","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersSetBenchmark.nettySmall","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersSetBenchmark.vertxSmall","0"
"eclipse/vert.x","io.vertx.benchmarks.ContextBenchmark.runOnContext","0"
"eclipse/vert.x","io.vertx.benchmarks.ContextBenchmark.runOnContextNoChecks","0"
"eclipse/vert.x","io.vertx.benchmarks.ContextBenchmark.executeFromIO","0"
"eclipse/vert.x","io.vertx.benchmarks.ContextBenchmark.executeFromIONoChecks","0"
"eclipse/vert.x","io.vertx.benchmarks.ConcurrentCyclicSequenceBenchmark.size1","0"
"eclipse/vert.x","io.vertx.benchmarks.ConcurrentCyclicSequenceBenchmark.size2","0"
"eclipse/vert.x","io.vertx.benchmarks.ConcurrentCyclicSequenceBenchmark.size4","0"
"eclipse/vert.x","io.vertx.benchmarks.ConcurrentCyclicSequenceBenchmark.size8","0"
"eclipse/vert.x","io.vertx.benchmarks.ConcurrentCyclicSequenceBenchmark.size16","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.nettySmallMatch","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.nettySmallMiss","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.nettySmallExactMatch","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.nettySmallExactMiss","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.vertxSmallMatch","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.vertxSmallMiss","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.vertxSmallExactMatch","0"
"eclipse/vert.x","io.vertx.benchmarks.HeadersContainsBenchmark.vertxSmallExactMiss","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.routing.allocation.AllocationBenchmark.measureAllocation","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark.baseline","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark.getMemoryStats_01","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark.getMemoryStats_02","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark.getMemoryStats_04","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark.getMemoryStats_08","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark.getMemoryStats_16","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark.getMemoryStats_32","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.indices.breaker.MemoryStatsBenchmark.getMemoryStats_64","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.fs.AvailableIndexFoldersBenchmark.availableIndexFolderNaive","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.fs.AvailableIndexFoldersBenchmark.availableIndexFolderOptimized","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.DateFormatterFromBenchmark.benchmarkFrom","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeRoundingDateTimeUnitJoda","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeRoundingDateTimeUnitJava","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeRoundingDateTimeUnitDayOfMonthJoda","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeRoundingDateTimeUnitDayOfMonthJava","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeIntervalRoundingJava","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeIntervalRoundingJoda","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.DateFormatterBenchmark.parseJavaDate","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.DateFormatterBenchmark.parseJodaDate","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeUnitRoundingUtcDayOfMonthJava","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeUnitRoundingUtcDayOfMonthJoda","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeUnitRoundingUtcQuarterOfYearJava","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeUnitRoundingUtcQuarterOfYearJoda","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeUnitRoundingUtcMonthOfYearJava","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeUnitRoundingUtcMonthOfYearJoda","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeUnitRoundingUtcYearOfCenturyJava","0"
"elastic/elasticsearch","org.elasticsearch.benchmark.time.RoundingBenchmark.timeUnitRoundingUtcYearOfCenturyJoda","0"
"elbek/ir","org.ir.tool.benchmark.HashingBenchmark.testStandard","0"
"elbek/ir","org.ir.tool.benchmark.HashingBenchmark.testCustom","0"
"elbek/ir","org.ir.tool.benchmark.HashSetBenchMark.testArray","0"
"elbek/ir","org.ir.tool.benchmark.HashSetBenchMark.testSet","0"
"elbek/ir","org.ir.tool.benchmark.BurstTreeLookUpBenchmark.testRandom","0"
"elbek/ir","org.ir.tool.benchmark.BurstTreeBenchmark.testRandom","0"
"elliottneilclark/time-test","com.facebook.hbase.TimeBench.testMilliTime","0"
"elliottneilclark/time-test","com.facebook.hbase.TimeBench.testNanoTime","0"
"enisher/polymorphic-calls-benchmark","io.enisher.benchmarks.PolymorphismOverhead.baseline","0"
"enisher/polymorphic-calls-benchmark","io.enisher.benchmarks.PolymorphismOverhead.measure_if_else_sequence","0"
"enisher/polymorphic-calls-benchmark","io.enisher.benchmarks.PolymorphismOverhead.measure_switch","0"
"enisher/polymorphic-calls-benchmark","io.enisher.benchmarks.PolymorphismOverhead.measure_polymorphic_call","0"
"enisher/polymorphic-calls-benchmark","io.enisher.benchmarks.PolymorphismOverhead.measure_if_else_polymorphism","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.protoEncode","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.protoDecode","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.protoUse","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.protoNanoEncode","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.protoNanoDecode","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.protoNanoMerge","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.protoNanoUse","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.flatEncodeHeap","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.flatDecodeHeap","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.flatUseHeap","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.flatEncodeDirect","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.flatDecodeDirect","0"
"ennerf/flatbuffers-java-benchmark","org.enner.flatbuffers.bench.BenchmarkComparison.flatUseDirect","0"
"entrepidea/projects","com.entrepidea.java.new_features.tests.LambdaPerfTest.benchmarkA","0"
"entrepidea/projects","com.entrepidea.java.new_features.tests.LambdaPerfTest.benchmarkB","0"
"epickrram/benchmark","com.epickrram.benchmark.branch.BranchBenchmark.branchWithRandomSet","0"
"epickrram/benchmark","com.epickrram.benchmark.branch.BranchBenchmark.branchWithUniformSet","0"
"epickrram/benchmark","com.epickrram.benchmark.tlab.UnsafeOffHeapMemoryStridingBenchmark.timeUnsafeOffHeapStride","0"
"epickrram/benchmark","com.epickrram.benchmark.tlab.OffHeapMemoryStridingBenchmark.timeOffHeapStride","0"
"epickrram/benchmark","com.epickrram.benchmark.tlab.MemoryStridingBenchmark.timeOnHeapStride","0"
"epickrram/benchmark","com.epickrram.benchmark.branch.BranchBenchmark2.branchWithRandomSet","0"
"epickrram/benchmark","com.epickrram.benchmark.branch.BranchBenchmark2.branchWithUniformAlwaysIncreasingSet","0"
"epickrram/benchmark","com.epickrram.benchmark.branch.BranchBenchmark2.branchWithUniformAlwaysDecreasingSet","0"
"epickrram/benchmark","com.epickrram.benchmark.branch.BranchBenchmark2.branchWithUniformAlwaysFlippingSet","0"
"epickrram/jvm-warmup-talk","com.epickrram.talk.warmup.example.loop.FixedLoopCountBenchmark.fixedLoopCount10","0"
"epickrram/jvm-warmup-talk","com.epickrram.talk.warmup.example.loop.FixedLoopCountBenchmark.fixedLoopCount100","0"
"epickrram/jvm-warmup-talk","com.epickrram.talk.warmup.example.loop.FixedLoopCountBenchmark.fixedLoopCount1000","0"
"epickrram/jvm-warmup-talk","com.epickrram.talk.warmup.example.loop.FixedLoopCountBenchmark.fixedLoopCount10000","0"
"epickrram/lock-benchmark","com.epickrram.experiment.lock.benchmark.LockBenchmark.fairReentrantLock","0"
"epickrram/lock-benchmark","com.epickrram.experiment.lock.benchmark.LockBenchmark.unfairReentrantLock","0"
"epickrram/lock-benchmark","com.epickrram.experiment.lock.benchmark.LockBenchmark.biasedLock","0"
"epickrram/lock-benchmark","com.epickrram.experiment.lock.benchmark.LockBenchmark.intrinsicLock","0"
"epickrram/lock-contention","com.epickrram.sync.SyncThroughputBenchmark.update","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureSpyAsync","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureFolsomAsync","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureX","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureAsciiSpyAsync","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureBinarySpyAsync","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureAsciiSpyMultiget","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureBinarySpyMultiget","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureAsciiFolsomAsync","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureBinaryFolsomAsync","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureAsciiFolsomMultiget","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureBinaryFolsomMultiget","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureAsciiX","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureBinaryX","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureAsciiXMultiget","0"
"eranharel/memcached-java-clients-benchmark","com.outbrain.benchmark.MemcachedClientsBenchmark.measureBinaryXMultiget","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.normal","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.reflection","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.reflectionAccessible","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handle","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleExact","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflected","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedExact","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.primitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.reflectionPrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.reflectionAccessiblePrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.reflectionSpecializedPrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.reflectionAccessibleSpecializedPrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handlePrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleExactPrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedPrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedExactPrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.privateNormal","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.reflectionAccessiblePrivate","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedPrivate","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleInline","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleExactInline","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedInline","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedExactInline","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handlePrimitiveInline","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleExactPrimitiveInline","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedPrimitiveInline","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedExactPrimitiveInline","0"
"ericmm/Woobaben","woo.ba.ben.core.FieldBenchmark.handleUnreflectedPrivateInline","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.normal","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.reflection","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.reflectionAccessible","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handle","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleExact","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleUnreflectedExact","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.primitive","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.reflectionPrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.reflectionAccessiblePrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handlePrimitive","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handlePrimitiveBoxed","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handlePrimitiveExact","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleUnreflectedPrimitiveExact","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.privateNormal","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.reflectionAccessiblePrivate","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleUnreflectedExactPrivate","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleInline","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleExactInline","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleUnreflectedExactInline","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handlePrimitiveInline","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handlePrimitiveBoxedInline","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handlePrimitiveExactInline","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleUnreflectedPrimitiveExactInline","0"
"ericmm/Woobaben","woo.ba.ben.core.InvocationBenchmark.handleUnreflectedExactPrivateInline","0"
"ericmm/Woobaben","woo.ba.ben.core.LookupBenchmark.reflection","0"
"ericmm/Woobaben","woo.ba.ben.core.LookupBenchmark.handle","0"
"ericmm/Woobaben","woo.ba.ben.core.LookupBenchmark.handlePreLookedUp","0"
"ericmm/Woobaben","woo.ba.ben.core.LookupBenchmark.hiddenPreLookUp","0"
"ericmoshare/uid-generator","org.ericmoshare.test.pressure.RedisSnowflakeJmhTest.benchPrecondition","0"
"ericmoshare/uid-generator","org.ericmoshare.test.pressure.MysqlSnowflakeJmhTest.benchPrecondition","0"
"ESAPI/esapi-java-legacy","org.owasp.esapi.util.ObjFactoryBenchmark.benchmark1","0"
"ESAPI/esapi-java-legacy","org.owasp.esapi.util.ObjFactoryBenchmark.benchmark2","0"
"escalate42/Javaz-Benchmarks","org.escalate42.JavazBenchmark.stringConcat","0"
"escalate42/Javaz-Benchmarks","org.escalate42.JavazBenchmark.optionYieldForTest","0"
"eseifert/gral","de.erichseifert.gral.data.DataTableBenchmark.addRecord","0"
"eternita/frontcache","org.frontcache.benchmark.Frontcache.benchmark","0"
"evanj/expire-threadlocal","ca.evanjones.cache.ExpireBenchmark.testExpiring","0"
"evanj/expire-threadlocal","ca.evanjones.cache.ExpireBenchmark.testThreadLocal","0"
"evanj/expire-threadlocal","ca.evanjones.cache.ExpireBenchmark.testSoftLocalCache","0"
"evanj/expire-threadlocal","ca.evanjones.cache.ExpireBenchmark.testAtomicLocalCache","0"
"evanj/expire-threadlocal","ca.evanjones.cache.ExpireBenchmark.testCountingLocalCache","0"
"evanj/expire-threadlocal","ca.evanjones.cache.ExpireBenchmark.testPooledCache","0"
"eventsourcing/es4j","org.eventchain.jmh.RepositoryBenchmark.basicPublish","0"
"eventsourcing/es4j","org.eventchain.jmh.HashIndexBenchmark.t01memory","0"
"eventsourcing/es4j","org.eventchain.jmh.HashIndexBenchmark.t02memoryH2","0"
"eventsourcing/es4j","org.eventchain.jmh.HashIndexBenchmark.t03fileH2","0"
"eventsourcing/es4j","com.eventsourcing.jmh.RepositoryBenchmark.basicPublish","0"
"eventsourcing/es4j","com.eventsourcing.jmh.HashIndexBenchmark.t01memory","0"
"eventsourcing/es4j","com.eventsourcing.jmh.HashIndexBenchmark.t02memoryH2","0"
"eventsourcing/es4j","com.eventsourcing.jmh.HashIndexBenchmark.t03fileH2","0"
"eventsourcing/es4j","com.eventsourcing.jmh.JournalBenchmark.basicPublish","0"
"eventsourcing/es4j","com.eventsourcing.jmh.HashIndexBenchmark.test","0"
"eXistence/TeeTime-Cpp","teetime.Md5Benchmark.benchmarkRuntimeOverhead","0"
"eXistence/TeeTime-Cpp","teetime.Md5Benchmark.benchmarkRuntimeOverhead2","0"
"eXistence/TeeTime-Cpp","teetime.Md5Benchmark.bruteforceHashCode0","0"
"eXistence/TeeTime-Cpp","teetime.Md5Benchmark.bruteforceHashCode10","0"
"eXistence/TeeTime-Cpp","teetime.Md5Benchmark.bruteforceByteArray0","0"
"eXistence/TeeTime-Cpp","teetime.Md5Benchmark.bruteforceByteArray10","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserialization.orgjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserialization.jsonp","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserializationAndUse.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserializationAndUse.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserializationAndUse.jackson_afterburner","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserializationAndUse.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserializationAndUse.fastjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindSerialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindSerialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindSerialization.jackson_afterburner","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindSerialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindSerialization.fastjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamSerialization.orgjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamSerialization.jsonp","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamSerialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamSerialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamSerialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserializationAndUse.orgjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserializationAndUse.jsonp","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserializationAndUse.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserializationAndUse.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamDeserializationAndUse.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserialization.jackson_afterburner","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindDeserialization.fastjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamUseDeserialization.orgjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamUseDeserialization.jsonp","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamUseDeserialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamUseDeserialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.StreamUseDeserialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindUseDeserialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindUseDeserialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindUseDeserialization.jackson_afterburner","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindUseDeserialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.DatabindUseDeserialization.fastjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.jackson_afterburner","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.fastjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.flexjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.boon","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.johnzon","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.jsonsmart","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.dsljson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.logansquare","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.jackson_afterburner","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.fastjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.flexjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.boon","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.johnzon","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.jsonsmart","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.dsljson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.logansquare","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.orgjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.javaxjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.jsonio","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.orgjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.javaxjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.jackson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.gson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.genson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.jsonio","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.jodd","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.moshi","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.jodd","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.moshi","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.jsonsimple","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.nanojson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.jsonsimple","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.nanojson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.tapestry","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.tapestry","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.jsoniter","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.jsoniter","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.minimaljson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.minimaljson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.yasson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Serialization.dsljson_reflection","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.yasson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.databind.Deserialization.dsljson_reflection","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.moshi","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.moshi","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.mjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.mjson","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Serialization.underscore_java","0"
"fabienrenaud/java-json-benchmark","com.github.fabienrenaud.jjb.stream.Deserialization.underscore_java","0"
"fabri1983/menuapp","org.fabri1983.menuapp.benchmark.core.service.RatingServiceBenchmark.getRatingFromMenu","0"
"fabri1983/menuapp","org.fabri1983.menuapp.benchmark.core.service.RatingServiceBenchmark.updateRating","0"
"fakemongo/fongo","com.github.fakemongo.PerfTest.doit","0"
"fakemongo/fongo","com.github.fakemongo.PerfTest.doitFindN","0"
"fakemongo/fongo","com.github.fakemongo.PerfTest.doitFindUniqueIndex","0"
"fakemongo/fongo","com.github.fakemongo.PerfTest.doitFindNWithIndex","0"
"fakemongo/fongo","com.github.fakemongo.PerfTest.doitRemoveWithIndex","0"
"fakemongo/fongo","com.github.fakemongo.PerfTest.doitRemoveWithIndexNew","0"
"fbaro/jpack","it.jpack.PlainBenchmark.accessTimesWithPlainArray","0"
"fbaro/jpack","it.jpack.JPackBenchmark.accessTimesWithJPackArray","0"
"fbaro/jpack","it.jpack.ManualBenchmark.accessTimesWithManualArray","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.md2BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.md2GnuCrypto","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.md5BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.md5GnuCrypto","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.md5JDK","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.ripemd128GnuCrypto","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.ripemd128BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.ripemd160GnuCrypto","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.ripemd160BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha1BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha1GnuCrypto","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha1JDK","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha224BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha224Jonelo","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha256JDK","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha256Gnu","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha256BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha384JDK","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha384Gnu","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha384BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha512JDK","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha512Gnu","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.sha512BouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.tigerGnu","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.tigerBouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.whirlpoolGnu","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.whirlpoolBouncyCastle","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.crc32JDK","0"
"federicotg/hashing","org.fede.jacksum2.test.Alternatives.crc32Jonelo","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.adler32File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.cksumFile","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.crc16File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.crc24File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.crc32File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.crc32_bzip2File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.crc32_mpeg2File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.crc64File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.crc8File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.ed2kFile","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.elfFile","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.fcs16File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.gostFile","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.has160File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_128_3File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_128_4File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_128_5File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_160_3File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_160_4File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_160_5File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_192_3File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_192_4File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_192_5File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_224_3File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_224_4File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_224_5File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_256_3File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_256_4File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.haval_256_5File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.md2File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.md4File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.md5File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.rhf32File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.rhf64File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.ripemd128File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.ripemd160File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.ripemd256File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.ripemd320File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha0File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha1File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha224File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha256File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha3224File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha3256File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha3288File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha3384File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha3512File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha384File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sha512File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.skein1024File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.skein256File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.skein512File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sm3File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sum16File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sum24File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sum32File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sum8File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sumbsdFile","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.sumsysvFile","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.tigerFile","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.tiger128File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.tiger160File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.tiger2File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.treetigerFile","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.treetiger2File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.whirlpool0File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.whirlpool1File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.whirlpool2File","0"
"federicotg/hashing","org.fede.jacksum2.test.MyBenchmark.xor8File","0"
"fenderstr/my-bench","collections.list.access.AccessRandomArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.access.AccessRandomArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/my-bench","collections.list.add.RandomAddToIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.add.RandomAddToIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/my-bench","collections.list.add.AddToMiddleIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.add.AddToMiddleIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/my-bench","collections.list.add.AddToEndIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.add.AddToEndIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/my-bench","collections.list.add.AddToStartIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.add.AddToStartIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/my-bench","collections.list.add.RandomAddThroughIteratorToIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.add.RandomAddThroughIteratorToIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/my-bench","collections.list.traverse.StringArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.traverse.StringArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/my-bench","collections.list.traverse.IntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.traverse.IntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/my-bench","collections.list.traverse.BooleanArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/my-bench","collections.list.traverse.BooleanArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.access.AccessRandomArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.access.AccessRandomArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.add.RandomAddToIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.add.RandomAddToIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.add.AddToMiddleIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.add.AddToMiddleIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.add.AddToEndIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.add.AddToEndIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.add.AddToStartIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.add.AddToStartIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.add.RandomAddThroughIteratorToIntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.add.RandomAddThroughIteratorToIntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.traverse.StringArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.traverse.StringArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.traverse.IntegerArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.traverse.IntegerArrayVsLinkedBenchmark.linkedList","0"
"fenderstr/super-bench","collections.list.traverse.BooleanArrayVsLinkedBenchmark.arrayList","0"
"fenderstr/super-bench","collections.list.traverse.BooleanArrayVsLinkedBenchmark.linkedList","0"
"finn-no/serdes-shootout","no.finntech.shootout.transit.Base.write","0"
"finn-no/serdes-shootout","no.finntech.shootout.transit.Base.read","0"
"finn-no/serdes-shootout","no.finntech.shootout.thrift.Thrift.write","0"
"finn-no/serdes-shootout","no.finntech.shootout.thrift.Thrift.read","0"
"finn-no/serdes-shootout","no.finntech.shootout.Case.sizer","0"
"finn-no/serdes-shootout","no.finntech.shootout.streams.StreamsBase.write","0"
"finn-no/serdes-shootout","no.finntech.shootout.streams.StreamsBase.read","0"
"finn-no/serdes-shootout","no.finntech.shootout.protobuf.Protobuf.write","0"
"finn-no/serdes-shootout","no.finntech.shootout.protobuf.Protobuf.read","0"
"finn-no/serdes-shootout","no.finntech.shootout.avro.AvroBase.write","0"
"finn-no/serdes-shootout","no.finntech.shootout.avro.AvroBase.read","0"
"FIXTradingCommunity/silverflash","org.fixtrading.silverflash.transport.TlsTcpTransportBenchmark.inject","0"
"FIXTradingCommunity/silverflash","org.fixtrading.silverflash.transport.TcpTransportBenchmark.inject","0"
"FIXTradingCommunity/silverflash","org.fixtrading.silverflash.transport.MemoryTransportBenchmark.inject","0"
"FIXTradingCommunity/silverflash","org.fixtrading.silverflash.fixp.frame.FrameSpliteratorBenchmark.parse","0"
"FIXTradingCommunity/silverflash","org.fixtrading.silverflash.reactor.EventReactorBenchmark.publish","0"
"FIXTradingCommunity/silverflash","org.fixtrading.silverflash.transport.UdpTransportBenchmark.inject","0"
"FIXTradingCommunity/silverflash","io.fixprotocol.silverflash.transport.TlsTcpTransportBenchmark.inject","0"
"FIXTradingCommunity/silverflash","io.fixprotocol.silverflash.transport.TcpTransportBenchmark.inject","0"
"FIXTradingCommunity/silverflash","io.fixprotocol.silverflash.transport.UdpTransportBenchmark.inject","0"
"FIXTradingCommunity/silverflash","io.fixprotocol.silverflash.transport.MemoryTransportBenchmark.inject","0"
"FIXTradingCommunity/silverflash","io.fixprotocol.silverflash.fixp.frame.FrameSpliteratorBenchmark.parse","0"
"FIXTradingCommunity/silverflash","io.fixprotocol.silverflash.reactor.EventReactorBenchmark.publish","0"
"foursquare/fsqio","io.fsq.spindle.benchmark.test.ReadBenchmark.readSparse","0"
"foursquare/fsqio","io.fsq.spindle.benchmark.test.ReadBenchmark.readDense","0"
"foursquare/fsqio","io.fsq.spindle.benchmark.test.WriteBenchmark.writeSparse","0"
"foursquare/fsqio","io.fsq.spindle.benchmark.test.WriteBenchmark.writeDense","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.baseline","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.chainedFiltersAlwaysMatch","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.andedFiltersAlwaysMatch","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.chainedFiltersPartialMatchFirst","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.andedFiltersPartialMatchFirst","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.chainedFiltersPartialMatchLast","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.andedFiltersPartialMatchLast","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.chained3FiltersPartialMatchLast","0"
"fpavageau/bench-filters","com.ekino.jmh.FilteringBenchmark.anded3FiltersPartialMatchLast","0"
"fpavageau/bench-simple-name","com.ekino.jmh.ClassSimpleNameBenchmark.baseline","0"
"fpavageau/bench-simple-name","com.ekino.jmh.ClassSimpleNameBenchmark.simpleName","0"
"fpavageau/bench-simple-name","com.ekino.jmh.ClassSimpleNameBenchmark.substring","0"
"frankboller/watcher","org.openjdk.jmh.samples.JMHSample_01_HelloWorld.wellHelloThere","0"
"frankboller/watcher","com.stuff2ponder.Perf_fjb03.evalLoopEmpty","0"
"frankboller/watcher","com.stuff2ponder.Perf_fjb03.evalLoopStringBuffer","0"
"frankboller/watcher","com.stuff2ponder.Perf_fjb03.evalLoopStringBuilder","0"
"frankboller/watcher","com.stuff2ponder.Factorial_fjb04.evalEmptyLoop","0"
"frankboller/watcher","com.stuff2ponder.Factorial_fjb04.evalFactorialAsLog10","0"
"frankboller/watcher","com.stuff2ponder.Factorial_fjb04.evalFactorialBigLongLoopFallbackLog10","0"
"frankboller/watcher","com.stuff2ponder.Factorial_fjb04.evalFactorialLongStreamFallbackDouble","0"
"frankboller/watcher","com.stuff2ponder.SortPerf_fjb05.evalEmptyLoop","0"
"frankboller/watcher","com.stuff2ponder.SortPerf_fjb05.evalArrayCopyInt","0"
"frankboller/watcher","com.stuff2ponder.SortPerf_fjb05.evalArrayCopyIntAndSort","0"
"frankboller/watcher","com.stuff2ponder.Perf_fjb02.evalLoopEmpty","0"
"frankboller/watcher","com.stuff2ponder.Perf_fjb02.evalLoopForSumLong","0"
"frankboller/watcher","com.stuff2ponder.Perf_fjb02.evalLoopForSumInteger","0"
"frankboller/watcher","com.stuff2ponder.Perf_fjb02.evalLoopForeachSum","0"
"frankboller/watcher","com.stuff2ponder.Perf_fjb02.evalStreamBoxedCollect","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.smallxml.SmallXmlBenchmark.testWorkOrderUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.smallxml.SmallXmlBenchmark.testWorkOrderMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.smallxml.SmallXmlBenchmark.testWorkOrderResponseUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.smallxml.SmallXmlBenchmark.testWorkOrderResponseMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.largexml.LargeXmlBenchmark.testBigPurchaseOrderUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.largexml.LargeXmlBenchmark.testBigPurchaseOrderMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.largexml.LargeXmlBenchmark.testALotOfItemsUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.largexml.LargeXmlBenchmark.testALotOfItemsMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.jpa.persistence_content_handler.PersistenceContentHandlerBenchmark.testPersistenceContentHandler","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.smallxml.SmallXmlBenchmark.testWorkOrderOutputStreamMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.smallxml.SmallXmlBenchmark.testWorkOrderResponseOutputStreamMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.largexml.LargeXmlBenchmark.testBigPurchaseOrderOutputStreamMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.largexml.LargeXmlBenchmark.testALotOfItemsOutputStreamMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.json.marshal.JsonMarshalBenchmark.testJsonMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.json.unmarshal.JsonUnmarshalBenchmark.testJsonReaderUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.json.unmarshal.JsonUnmarshalBenchmark.testJsonReader","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.json.unmarshal.JsonUnmarshalBenchmark.testJsonMOXyUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.json.unmarshal.JsonUnmarshalBenchmark.testJsonParser","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.json.writer.JsonWriterBenchmark.testJsonWriter","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.ValidationBenchmark.testJpaAnnotated","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.ValidationBenchmark.testJpa","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.ValidationBenchmark.testMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.ValidationBenchmark.testUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.ValidationBenchmark.testMarshalAnnotated","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.ValidationBenchmark.testUnmarshalAnnotated","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.moxy.casesensitivity.CaseInsensitiveUnmarshalBenchmark.testUnmarshalCorrectCaseSensitive","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.moxy.casesensitivity.CaseInsensitiveUnmarshalBenchmark.testUnmarshalOtherCaseInsensitive","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.moxy.referenceresolver.ReferenceResolverBenchmark.testReferenceResolverMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.moxy.referenceresolver.ReferenceResolverBenchmark.testReferenceResolverUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.moxy.referenceresolver.ReferenceResolverBenchmark.testReferenceResolverUnmarshalJAXBRI","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testNewPrivilegedAction","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testPrivilegedAccessHelper","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testSimpleConcurrentReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testThreadLocalReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testNOSECURITYPrivilegedAccessHelper","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testNOSECURITYReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testSingleThreadedNewPrivilegedAction","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testSingleThreadedPrivilegedAccessHelper","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testSingleThreadedReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testSingleThreadedSimpleConcurrentReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testSingleThreadedThreadLocalReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testThreadPerCoreNewPrivilegedAction","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testThreadPerCorePrivilegedAccessHelper","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testThreadPerCoreReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testThreadPerCoreSimpleConcurrentReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.reflection.ReflectionBenchmark.testThreadPerCoreThreadLocalReflectionUtils","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.MOXyValidationBenchmark.testMarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.MOXyValidationBenchmark.testUnmarshal","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.MOXyValidationBenchmark.testMarshalAnnotated","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.MOXyValidationBenchmark.testUnmarshalAnnotated","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.JPAValidationBenchmark.testJpaAnnotated","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.beanvalidation.JPAValidationBenchmark.testJpa","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.jpa.tests.basic.JPAMetadataProcessingTests.testMetadataProcessing","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.jpa.tests.basic.JPAMetadataProcessingTests.testSimpleEntity","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.testing.perf.jpa.tests.basic.JPAMetadataProcessingTests.testMetaEntity","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.json.bind.defaultmapping.performance.PerformanceTest.testObjectGraph","0"
"gameduell/eclipselink.runtime","org.eclipse.persistence.json.bind.defaultmapping.performance.PerformanceTest.testJsonMarshal","0"
"gdrouet/scanner-benchmark","com.github.gdrouet.scannerbenchmark.JmhBenchmark.scanAnnotatedTypeWithAnnotationDetector","0"
"gdrouet/scanner-benchmark","com.github.gdrouet.scannerbenchmark.JmhBenchmark.scanAnnotatedTypeWithReflections","0"
"gdrouet/scanner-benchmark","com.github.gdrouet.scannerbenchmark.JmhBenchmark.scanAnnotatedTypeWithSpring","0"
"gensym/hikesaber","org.gensym.hikesaber.benchmark.Records.countUniqueBikes","0"
"gensym/hikesaber","org.gensym.hikesaber.benchmark.Records.countUniqueBikesTransduce","0"
"gensym/hikesaber","org.gensym.hikesaber.benchmark.Records.countUniqueBikesOffHeap","0"
"gensym/hikesaber","org.gensym.hikesaber.benchmark.Records.countUniqueBikesOffHeapNth","0"
"gensym/hikesaber","org.gensym.hikesaber.benchmark.Records.countUniqueBikesOffHeapTransduce","0"
"gensym/hikesaber","org.gensym.hikesaber.benchmark.Records.countUniqueBikesOffHeapTransduceKeyword","0"
"gensym/jmh-lein-example","org.gensym.jmh.Hello.testMethod","0"
"ghxandsky/benchmarx","com.github.K0zka.benchmarx.concat.java.JavaConcatBenchmark.concat2String","0"
"ghxandsky/benchmarx","com.github.K0zka.benchmarx.concat.java.JavaConcatBenchmark.concat3String","0"
"ghxandsky/benchmarx","com.github.K0zka.benchmarx.concat.java.JavaConcatBenchmark.append2String","0"
"ghxandsky/benchmarx","com.github.K0zka.benchmarx.concat.java.JavaConcatBenchmark.append3String","0"
"ghxandsky/benchmarx","com.github.K0zka.benchmarx.concat.java.JavaConcatBenchmark.concat2Integer","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorCharSequenceKOPerf.assertorCharSequenceKOPerf","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.HelperMessagePerf.assertorBasicPerf2","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorBooleanPerf.assertorBasicPerf1","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorLongestPerf.assertorCombiningPerf","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorCharSequenceOKPerf.assertorCharSequenceOKAssertorPerf","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorCharSequenceOKPerf.assertorCharSequenceOKBasicPerf","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorCombiningPerf.assertorCombiningPerf","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorBooleanPerf.assertorBasicPerfOK","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorBooleanPerf.assertorBasicPerfKO","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorBooleanPerf.assertorHamcrestPerfOK","0"
"Gilandel/utils-assertor","fr.landel.utils.assertor.AssertorBooleanPerf.assertorHamcrestPerfKO","0"
"Gilandel/utils-commons","fr.landel.utils.commons.StringUtilsPerf.testInject","0"
"Gilandel/utils-commons","fr.landel.utils.commons.builder.ToStringBuilderPerf.testBuild","0"
"Gilandel/utils-commons","fr.landel.utils.commons.builder.EqualsBuilderPerf.testClass","0"
"Gilandel/utils-commons","fr.landel.utils.commons.builder.EqualsBuilderPerf.testInterface","0"
"Gilandel/utils-commons","fr.landel.utils.commons.builder.EqualsBuilderPerf.testEqualsBuilder","0"
"Gilandel/utils-commons","fr.landel.utils.commons.builder.EqualsBuilderPerf.testBasic","0"
"Gilandel/utils-commons","fr.landel.utils.commons.StringUtilsPerf.testInjectKeys","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.jdbc.ResultSetBenchmark.next","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.api.BeansBenchmark.value","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.TraceMetricBenchmark.traceMetric","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.TraceMetricWorstCaseBenchmark.traceMetric","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.TraceBenchmark.createTrace","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.StoreBenchmark.trace","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.WeavingBenchmark.weave","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.SpanBenchmark.span","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.baseline.RandomNumberBenchmark.nextDouble","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.baseline.ThreadLocalBenchmark.threadLocalRead","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.baseline.ThreadLocalBenchmark.threadLocalUpdate","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.baseline.NothingBenchmark.baselineZero","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.baseline.NothingBenchmark.baselineNull","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.baseline.NothingBenchmark.baselineVoid","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.baseline.SystemNanoTimeBenchmark.systemNanoTime","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.baseline.VolatileIncrementBenchmark.volatileUpdate","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.jdbc.ServletBenchmark.service","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.TraceBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.StoreBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.MetricWorstCaseBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.MetricBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.WeavingBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.SpanBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.TraceEntryBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.TransactionMetricBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.TransactionMetricWorstCaseBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.core.TransactionBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.plugin.jdbc.ResultSetBenchmark.next","0"
"glowroot/glowroot","org.glowroot.plugin.jdbc.ServletBenchmark.service","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.TraceEntryBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.TransactionMetricBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.TransactionMetricWorstCaseBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.StoreBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.WeavingBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.TransactionBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.plugin.servlet.ServletBenchmark.service","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.TimerBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.microbenchmarks.TimerWorstCaseBenchmark.execute","0"
"glowroot/glowroot","org.glowroot.agent.plugin.jdbc.ResultSetBenchmark.next","0"
"glowroot/glowroot","org.glowroot.agent.plugin.servlet.ServletBenchmark.service","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphCreationBenchmarks.createGraph","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.containsNodeSuccess","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.containsNodeFailure","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.containsNodeWithLabelSuccess","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.containsNodeWithLabelFailure","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.addNode","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.removeNode","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.containsEdgeSuccess","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.containsEdgeFailure","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.containsEdgeWithLabelSuccess","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.containsEdgeWithLabelFailure","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.addEdge","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.removeLabeledEdge","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.removeEdges","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.iterateNodes","0"
"Gohla/persistent-graph","nl.gohla.graph.persistent.benchmark.GraphInterfaceBenchmarks.iterateNodesAndEdges","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.baseline_java_virtual_call","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.baseline_java_hashmap_malleable_object","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.golo_method_call","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.golo_struct_with_augmentation_call","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.golo_dynamic_object_random_in_closure","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.golo_dynamic_object_random_in_property","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.baseline_groovy_concrete_class","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.groovy_expando","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.baseline_groovy_indy_concrete_class","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.GoloDispatchMicroBenchmark.groovy_indy_expando","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.monomorphic_baseline_java","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.monomorphic_golo","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.monomorphic_groovy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.monomorphic_groovy_indy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.monomorphic_jruby","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.monomorphic_clojure","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.monomorphic_nashorn","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.trimorphic_baseline_java","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.trimorphic_golo","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.trimorphic_groovy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.trimorphic_groovy_indy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.trimorphic_jruby","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.trimorphic_clojure","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.trimorphic_nashorn","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.polymorphic_baseline_java","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.polymorphic_golo","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.polymorphic_groovy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.polymorphic_groovy_indy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.polymorphic_jruby","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.polymorphic_clojure","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.polymorphic_nashorn","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.ClosureDispatchMicroBenchmark.baseline_java_mh_invokeExact","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.ClosureDispatchMicroBenchmark.golo_closure_dispatch","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.baseline_java_copying","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.golo","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.groovy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.groovy_indy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.jruby","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.clojure","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.nashorn","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.baseline_java_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.baseline_java_boxing_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.golo_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.groovy_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.groovy_indy_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.clojure_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.jruby_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.nashorn_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.baseline_java_40","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.baseline_java_boxing_40","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.golo_40","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.groovy_40","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.groovy_indy_40","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.clojure_40","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.jruby_40","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.nashorn_40","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.baseline_java_mh","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.golo","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.groovy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.groovy_indy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.groovy_fast","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.groovy_indy_fast","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.groovy_fastest","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.groovy_indy_fastest","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.jruby","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.clojure","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.clojure_fast","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.nashorn","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.baseline_java","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.baseline_java_boxed","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.golo","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_fast","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_fastest","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_indy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_indy_fast","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_indy_fastest","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.baseline_java_streams","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.monomorphic_jython","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.trimorphic_jython","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.MethodDispatchMicroBenchmark.polymorphic_jython","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.filtermapreduce.FilterMapReduceMicroBenchmark.jython","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.fibonacci.FibonacciMicroBenchmark.jython_30","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.EuclidianGcdMicroBenchmark.jython","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.baseline_return_value","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.baseline_java_boxed_with_constant","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.golo_sum","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.golo_sum_with_constant","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.golo_sum_of_constants","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_with_constant","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_of_constants","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_fast","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_fastest","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_indy","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_indy_sum_with_constant","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_indy_sum_of_constants","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_indy_fast","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.arithmetic.CostOfSumMicroBenchmark.groovy_sum_indy_fastest","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.DecoratorsMicrobenchmark.baseline","0"
"golo-lang/golo-jmh-benchmarks","org.gololang.microbenchmarks.dispatch.DecoratorsMicrobenchmark.golo","0"
"google/conscrypt","org.conscrypt.benchmarks.SslEngineBenchmark.sendMessage","0"
"google/conscrypt","org.conscrypt.benchmarks.ClientSocketThroughputBenchmark.throughput","0"
"google/conscrypt","org.conscrypt.benchmarks.ServerSocketThroughputBenchmark.throughput","0"
"google/conscrypt","org.conscrypt.JmhClientSocketBenchmark.throughput","0"
"google/conscrypt","org.conscrypt.JmhEngineBenchmark.wrap","0"
"google/conscrypt","org.conscrypt.JmhEngineBenchmark.wrapAndUnwrap","0"
"google/conscrypt","org.conscrypt.JmhServerSocketBenchmark.throughput","0"
"google/conscrypt","org.conscrypt.JmhClientSocketBenchmark.bm","0"
"google/conscrypt","org.conscrypt.JmhEngineHandshakeBenchmark.hs","0"
"google/conscrypt","org.conscrypt.JmhAlpnBenchmark.hs","0"
"google/conscrypt","org.conscrypt.JmhServerSocketBenchmark.bm","0"
"google/conscrypt","org.conscrypt.JmhEngineWrapBenchmark.wrap","0"
"google/conscrypt","org.conscrypt.JmhEngineWrapBenchmark.wrapAndUnwrap","0"
"google/conscrypt","org.conscrypt.JmhCipherEncryptBenchmark.encrypt","0"
"gorkem/js-parser-benchmarks","org.jboss.tools.benchmark.parsers.TestBase.testAngular125","0"
"gorkem/js-parser-benchmarks","org.jboss.tools.benchmark.parsers.TestBase.testJQM142","0"
"gpanther/benchmark-arraycopy","net.greypanther.AbstractBenchmark.benchmarkArraySystemArraycopy","0"
"gpanther/benchmark-arraycopy","net.greypanther.AbstractBenchmark.benchmarkArrayUnsafeCopy","0"
"gpanther/benchmark-arraycopy","net.greypanther.AbstractBenchmark.benchmarkArrayManualCopy","0"
"gpanther/benchmark-arraycopy","net.greypanther.AbstractBenchmark.benchmarkArrayManualCopy_Dec","0"
"gpanther/benchmark-arraycopy","net.greypanther.AbstractBenchmark.benchmarkArraySystemArraycopy_Overlap","0"
"gpanther/benchmark-arraycopy","net.greypanther.AbstractBenchmark.benchmarkArrayManualCopy_Overlap_Dec","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkLongArrayCopyStandalone.arraycopy","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkLongArrayCopyStandalone.manualCopy","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkIntArrayCopyStandalone.benchmarkArraySystemArraycopy","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkIntArrayCopyStandalone.benchmarkArrayManualCopy_Dec","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkLongArrayCopyStandalone2.arraycopy","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkLongArrayCopyStandalone2.manualCopy","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkLongArrayCopyStandalone2.manualCopy_Dec","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_0_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_1_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_2_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_3_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_7_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_8_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_9_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_15_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_16_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_17_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_21_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_23_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_24_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_27_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_29_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_0","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_1","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_2","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_3","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_7","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_8","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_9","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_15","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_16","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_17","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_21","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_23","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_24","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_27","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_29","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy_31_31","0"
"gpanther/benchmark-arraycopy","net.greypanther.BenchmarkAlignment.arraycopy","0"
"gpanther/lychrel-numbers","net.greypanther.lychrel.numbers.benchmarks.ImplementationBenchmarks.measureBigIntegerChecker","0"
"gpanther/lychrel-numbers","net.greypanther.lychrel.numbers.benchmarks.ImplementationBenchmarks.measureByteArrayChecker","0"
"gpanther/lychrel-numbers","net.greypanther.lychrel.numbers.benchmarks.ImplementationBenchmarks.measureCompactDigitStoreChecker","0"
"gpanther/lychrel-numbers","net.greypanther.lychrel.numbers.benchmarks.ImplementationBenchmarks.measureCompactDigitStoreCheckerWithInlining","0"
"gpanther/lychrel-numbers","net.greypanther.lychrel.numbers.benchmarks.ImplementationBenchmarks.measureCompactDigitStoreCheckerWithAlternativeCarryCheck","0"
"gpanther/regex-libraries-benchmarks","net.greypanther.javaadvent.regex.RegexBenchmarks.benchmark","0"
"gpanther/regex-libraries-benchmarks","net.greypanther.javaadvent.regex.RegexBenchmarks.testLarge","0"
"graalvm/mx","com.oracle.mxtool.bench.TestJMH.testJMH","0"
"graalvm/mx","com.oracle.mxtool.jmh_1_18.TestJMH_1_18.testJMH","0"
"graalvm/mx","com.oracle.mxtool.jmh_1_21.TestJMH_1_21.testJMH","0"
"graphql-java/graphql-java","benchmark.BenchMark.benchMarkSimpleQueriesThroughput","0"
"graphql-java/graphql-java","benchmark.BenchMark.benchMarkSimpleQueriesAvgTime","0"
"graphql-java/graphql-java","benchmark.AddError.benchMarkAddError","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.DeclaringClassBenchmark.declaringClass","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.DeclaringClassBenchmark.declaringClassCached","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.DeclaringClassBenchmark.declaringClassCachedAndSwitch","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.DeclaringClassBenchmark.instanceOfSwitch","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.DeclaringClassBenchmark.toString","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.DeclaringClassBenchmark.stringConversion","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.DeclaringClassBenchmark.oldStringConversion","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.PipelineBenchmark.testPipeline","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.PipelineBenchmark.testMessageFilterChain","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.PipelinePerformanceBenchmarks.runPipeline","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.FilterchainVsPipeline.testPipeline","0"
"Graylog2/graylog-plugin-pipeline-processor","org.graylog.benchmarks.pipeline.FilterchainVsPipeline.testMessageFilterChain","0"
"grpc/grpc-java","io.grpc.benchmarks.netty.MaxQpsBenchmark.measureUnary","0"
"grpc/grpc-java","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark.pingPong","0"
"grpc/grpc-java","io.grpc.benchmarks.netty.HandlerRegistryBenchmark.lookupMethod","0"
"grpc/grpc-java","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark.unary","0"
"grpc/grpc-java","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark.blockingUnary","0"
"grpc/grpc-java","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark.stream","0"
"grpc/grpc-java","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark.unary","0"
"grpc/grpc-java","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark.stream","0"
"grpc/grpc-java","io.grpc.benchmarks.TransportBenchmark.unaryCall1024","0"
"grpc/grpc-java","io.grpc.netty.HeadersBenchmark.convertClientHeaders","0"
"grpc/grpc-java","io.grpc.netty.HeadersBenchmark.convertServerHeaders","0"
"grpc/grpc-java","io.grpc.DecompressorRegistryBenchmark.dynamicAcceptEncoding","0"
"grpc/grpc-java","io.grpc.DecompressorRegistryBenchmark.staticAcceptEncoding","0"
"grpc/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark.withOption","0"
"grpc/grpc-java","io.grpc.benchmarks.CallOptionsBenchmark.withOptionDuplicates","0"
"grpc/grpc-java","io.grpc.netty.HeadersBenchmark.encodeClientHeaders","0"
"grpc/grpc-java","io.grpc.StatusBenchmark.messageEncodePlain","0"
"grpc/grpc-java","io.grpc.StatusBenchmark.messageEncodeEscape","0"
"grpc/grpc-java","io.grpc.StatusBenchmark.messageDecodePlain","0"
"grpc/grpc-java","io.grpc.StatusBenchmark.messageDecodeEscape","0"
"grpc/grpc-java","io.grpc.StatusBenchmark.codeEncode","0"
"grpc/grpc-java","io.grpc.StatusBenchmark.codeDecode","0"
"grpc/grpc-java","io.grpc.netty.OutboundHeadersBenchmark.convertClientHeaders","0"
"grpc/grpc-java","io.grpc.netty.OutboundHeadersBenchmark.convertServerHeaders","0"
"grpc/grpc-java","io.grpc.netty.OutboundHeadersBenchmark.encodeClientHeaders","0"
"grpc/grpc-java","io.grpc.netty.InboundHeadersBenchmark.grpcHeaders_serverHandler","0"
"grpc/grpc-java","io.grpc.netty.InboundHeadersBenchmark.defaultHeaders_serverHandler","0"
"grpc/grpc-java","io.grpc.netty.InboundHeadersBenchmark.grpcHeaders_clientHandler","0"
"grpc/grpc-java","io.grpc.netty.InboundHeadersBenchmark.defaultHeaders_clientHandler","0"
"grpc/grpc-java","io.grpc.netty.MethodDescriptorBenchmark.old","0"
"grpc/grpc-java","io.grpc.netty.MethodDescriptorBenchmark.transportSpecific","0"
"grpc/grpc-java","io.grpc.netty.MethodDescriptorBenchmark.direct","0"
"grpc/grpc-java","io.grpc.DecompressorRegistryBenchmark.marshalOld","0"
"grpc/grpc-java","io.grpc.internal.StatsTraceContextBenchmark.newClientContext","0"
"grpc/grpc-java","io.grpc.internal.StatsTraceContextBenchmark.newServerContext_empty","0"
"grpc/grpc-java","io.grpc.internal.SerializingExecutorBenchmark.oneRunnableLatency","0"
"grpc/grpc-java","io.grpc.internal.SerializingExecutorBenchmark.manyRunnables","0"
"grpc/grpc-java","io.grpc.context.ContextBenchmark.attachDetach","0"
"grpc/grpc-java","io.grpc.CallOptionsBenchmark.withOption","0"
"grpc/grpc-java","io.grpc.CallOptionsBenchmark.withOptionDuplicates","0"
"grpc/grpc-java","io.grpc.AttachDetachBenchmark.attachDetach","0"
"grpc/grpc-java","io.grpc.ReadBenchmark.testContextLookup","0"
"grpc/grpc-java","io.grpc.WriteBenchmark.doWrite","0"
"grpc/grpc-java","io.grpc.AttributesBenchmark.chain","0"
"grpc/grpc-java","io.grpc.AttributesBenchmark.lookup","0"
"grpc/grpc-java","io.grpc.internal.ChannelzBenchmark.addNavigable","0"
"grpc/grpc-java","io.grpc.internal.ChannelzBenchmark.add","0"
"grpc/grpc-java","io.grpc.internal.ChannelzBenchmark.addServerSocket","0"
"grpc/grpc-java","io.grpc.internal.ChannelzBenchmark.removeNavigable","0"
"grpc/grpc-java","io.grpc.internal.ChannelzBenchmark.remove","0"
"grpc/grpc-java","io.grpc.internal.ChannelzBenchmark.removeServerSocket","0"
"GumTreeDiff/gumtree","com.github.gumtree.dist.MatcherAnalyzer.testClassicGumtree","0"
"GumTreeDiff/gumtree","com.github.gumtree.dist.MatcherAnalyzer.testCompleteGumtree","0"
"guyko/weighted-lottery","com.wl.benchmark.OneSampleNoRepetitionsRandomDistBenchmark.simple_05","0"
"guyko/weighted-lottery","com.wl.benchmark.OneSampleNoRepetitionsRandomDistBenchmark.simple_07","0"
"guyko/weighted-lottery","com.wl.benchmark.OneSampleNoRepetitionsRandomDistBenchmark.simple_09","0"
"guyko/weighted-lottery","com.wl.benchmark.ManySamplesWithRepetitionsPowerDistBenchmark.simple","0"
"guyko/weighted-lottery","com.wl.benchmark.OneSampleNoRepetitionsPowerDistBenchmark.simple_05","0"
"guyko/weighted-lottery","com.wl.benchmark.OneSampleNoRepetitionsPowerDistBenchmark.simple_07","0"
"guyko/weighted-lottery","com.wl.benchmark.OneSampleNoRepetitionsPowerDistBenchmark.simple_09","0"
"guyko/weighted-lottery","com.wl.benchmark.ManySamplesNoRepetitionsRandomDistBenchmark.simple_05","0"
"guyko/weighted-lottery","com.wl.benchmark.ManySamplesNoRepetitionsRandomDistBenchmark.simple_07","0"
"guyko/weighted-lottery","com.wl.benchmark.ManySamplesNoRepetitionsRandomDistBenchmark.simple_09","0"
"guyko/weighted-lottery","com.wl.benchmark.ManySamplesWithRepetitionsRandomDistBenchmark.simple","0"
"guyko/weighted-lottery","com.wl.benchmark.OneSampleWithRepetitionsPowerDistBenchmark.simple","0"
"guyko/weighted-lottery","com.wl.benchmark.OneSampleWithRepetitionsRandomDistBenchmark.simple","0"
"guyko/weighted-lottery","com.wl.benchmark.ManySamplesNoRepetitionsPowerDistBenchmark.simple_05","0"
"guyko/weighted-lottery","com.wl.benchmark.ManySamplesNoRepetitionsPowerDistBenchmark.simple_07","0"
"guyko/weighted-lottery","com.wl.benchmark.ManySamplesNoRepetitionsPowerDistBenchmark.simple_09","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryWithRepetitionsBenchmark.simple","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryWithRepetitionsBenchmark.alias","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryWithRepetitionsBenchmark.twistedAlias","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryWithRepetitionsBenchmark.twistedSister","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryWithRepetitionsBenchmark.twistedBrother","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryNoRepetitionsBenchmark.simple_05","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryNoRepetitionsBenchmark.simple_07","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryNoRepetitionsBenchmark.reservoir","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryNoRepetitionsBenchmark.sumTree","0"
"guyko/weighted-lottery","com.wl.benchmark.LotteryNoRepetitionsBenchmark.statefulTwisted","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.sleepOneMs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.sleepTwoMs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.sleepOneNs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.parkOneMs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.parkTwoMs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.parkOneNs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.burnOneMs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.burnTwoMs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.burnOneNs","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.time.TimeKillerBenchmark.getNanoTime","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark.plainLocalRead","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark.plainLocalIncrement","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark.plainSharedRead","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark.plainSharedIncrement","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark.plainVolatileRead","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.concurrency.VolatileBenchmark.plainVolatileIncrement","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.BusinessLogicBenchmark.measureBaseline","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.BusinessLogicBenchmark.measureNaive","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.BusinessLogicBenchmark.measureClever","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis.baseline_returnObject","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis.baseline_returnInt","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis.measureEscape","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis.measureDeadCode","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EscapeAnalysis.measureNoEscape","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.DeadCode.measureA","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.DeadCode.measureB","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues.baseline","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues.measureBuiltin","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues.measureManualArray","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues.measureCached","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.EnumValues.measureCachedMap","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.LoopConditionals.measureInternal","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.LoopConditionals.measureExternal","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.AutoboxingElimination.baseline_returnObject","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.AutoboxingElimination.baseline_returnInt","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.AutoboxingElimination.measure_autoUnboxed","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.AutoboxingElimination.measure_manualUnboxed","0"
"gvsmirnov/java-perv","ru.gvsmirnov.perv.labs.jit.AutoboxingElimination.measure_Boxed","0"
"gvsmirnov/jmh-gradle-sample","sample.SampleBenchmark.measureHypot_baseline","0"
"gvsmirnov/jmh-gradle-sample","sample.SampleBenchmark.measureHypot_direct","0"
"gvsmirnov/jmh-gradle-sample","sample.SampleBenchmark.measureHypot_wrapped","0"
"gvsmirnov/jmh-gradle-sample","sample.SampleBenchmark.measureLog_direct","0"
"gvsmirnov/jmh-gradle-sample","sample.SampleBenchmark.measureLog_wrapped","0"
"gvsmirnov/jmh-gradle-sample","sample.ParserBenchmark.measureBaseline","0"
"gvsmirnov/jmh-gradle-sample","sample.ParserBenchmark.measureSax_pre_check","0"
"gvsmirnov/jmh-gradle-sample","sample.ParserBenchmark.measureSax_post_check","0"
"h2oai/h2o-3","water.ChunkBench.rawArrayRead","0"
"h2oai/h2o-3","water.ChunkBench.rowsColsRead","0"
"h2oai/h2o-3","water.ChunkBench.colsRowsRead","0"
"h2oai/h2o-3","water.ChunkBench.colsRowsReadWithTypeDispatch","0"
"h2oai/h2o-3","water.ChunkBench.colsRowsWithBulkRead","0"
"h2oai/h2o-3","water.ChunkBench.colsRowsReadWithFinalChunk","0"
"h2oai/h2o-3","water.KeyEqualsBench.keyEquals","0"
"h2oai/h2o-3","water.KeyEqualsBench.keyHash","0"
"h2oai/h2o-3","water.mojo.glm.GlmMultinomialMojoBench.score0_nRows","0"
"h2oai/h2o-3","water.mojo.glm.GlmMojoBench.score0_nRows","0"
"h2oai/h2o-3","hex.pca.PCAImputeMissingTrainingBench.measureImputeMissingTraining","0"
"h2oai/h2o-3","hex.pca.PCAWideDataSetsScoringBench.measureWideDataSetsBenchScoringCase","0"
"h2oai/h2o-3","hex.pca.PCAImputeMissingScoringBench.measureImputeMissingScoring","0"
"h2oai/h2o-3","hex.pca.PCAWideDataSetsTrainingBench.measureWideDataSetsBenchTrainingCase","0"
"h2oai/h2o-3","hex.AUCBuilderBench.perRow","0"
"h2oai/h2o-3","hex.pca.PCACatOnlyPUBDEV3988Bench.measureImputeMissingScoring","0"
"h2oai/h2o-3","hex.pca.PCAJMHTraining.measureQuasarTraining","0"
"h2oai/h2o-3","hex.pca.PCAJMHScoring.measureQuasarScoring","0"
"h2oai/h2o-3","water.NewChunkBench.writeIntegers","0"
"h2oai/h2o-3","water.NewChunkBench.writeFloats","0"
"h2oai/h2o-3","water.NewChunkBench.writeDoubles","0"
"h2oai/h2o-3","water.NewChunkBench.writeLongs","0"
"h2oai/h2o-3","water.NewChunkBench.writeIntegersConstants","0"
"h2oai/h2o-3","water.NewChunkBench.writeFloatsConstants","0"
"h2oai/h2o-3","water.NewChunkBench.writeDoublesConstants","0"
"h2oai/h2o-3","water.NewChunkBench.writeLongsConstants","0"
"h2oai/h2o-3","water.NewChunkBench.writeNaNConstants","0"
"h2oai/h2o-3","water.NewChunkBench.writeIntegersSparse","0"
"h2oai/h2o-3","water.NewChunkBench.writeFloatsSparse","0"
"h2oai/h2o-3","water.NewChunkBench.writeDoublesSparse","0"
"h2oai/h2o-3","water.NewChunkBench.writeLongsSparse","0"
"h2oai/h2o-3","hex.tree.gbm.GbmMojoScoringBench.measureGbmScore0","0"
"h2oai/h2o-3","hex.tree.gbm.GbmDistributionBench.trainGbmModel","0"
"h2oai/h2o-3","hex.psvm.SupportVectorScorerBench.perRowScoring","0"
"h2oai/h2o-3","hex.psvm.SupportVectorScorerBench.bulkScoringRaw","0"
"h2oai/h2o-3","hex.psvm.SupportVectorScorerBench.bulkScoringParsed","0"
"Hanmourang/Pinot","com.linkedin.pinot.perf.BenchmarkFileRead.readSVs","0"
"Hanmourang/Pinot","com.linkedin.pinot.perf.BenchmarkQueryEngine.sendQueryToPinot","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.guava","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.jdk","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.f8","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.jchardetNsDetector","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.jchardetNsVerifier","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.testLegal","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.testIllegal","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.testArrayValidity","0"
"HansBrende/f8","org.rypt.f8.Utf8Benchmark.testStreamValidity","0"
"haozhun/regexp-bench","com.facebook.presto.regexpbench.RegexpLibraryBenchmark.benchmarkJoniPattern","0"
"haozhun/regexp-bench","com.facebook.presto.regexpbench.RegexpLibraryBenchmark.benchmarkJavaPattern","0"
"haozhun/regexp-bench","com.facebook.presto.regexpbench.RegexpLibraryBenchmark.benchmarkJavaPlusConversion","0"
"haozhun/regexp-bench","com.facebook.presto.regexpbench.RegexpLibraryBenchmark.benchmarkRe2jPattern","0"
"haozhun/regexp-bench","com.facebook.presto.regexpbench.RegexpLibraryBenchmark.benchmarkRe2jniPattern","0"
"hawkular/hawkular-metrics","org.hawkular.metrics.benchmark.jmh.InsertBenchmark.insertBenchmarkSingle","0"
"hawkular/hawkular-metrics","org.hawkular.metrics.benchmark.jmh.InsertBenchmark.insertBenchmarkRxJava1","0"
"hawkular/hawkular-metrics","org.hawkular.metrics.benchmark.jmh.InsertBenchmark.insertToMultiplePartitions","0"
"hawkular/hawkular-metrics","org.hawkular.metrics.benchmark.jmh.InsertBenchmark.insertToSinglePartition","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_portable_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_portable_nested_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_portable_nested_collection_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_portable_nestedTwice_collection_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_portable_extractor_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_portable_extractor_nested_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_object_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_object_nested_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_object_nested_collection_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_object_nestedTwice_collection_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_object_extractor_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceTest.query_object_extractor_nested_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readByte","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readShort","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readInt","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readLong","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readFloat","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readDouble","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readBoolean","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readChar","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readUTF","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readByteArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readShortArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readIntArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readLongArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readFloatArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readDoubleArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readBooleanArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readCharArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readUTFArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readPortable","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readPortableArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readPortableInt_nested","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readPortablePortableInt_nestedTwice","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderPerformanceTest.readPortableFromArray","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_portable_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_portable_nested_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_portable_nested_collection_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_portable_nestedTwice_collection_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_portable_extractor_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_portable_extractor_nested_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_object_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_object_nested_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_object_nested_collection_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_object_nestedTwice_collection_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_object_extractor_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.query.impl.QueryPerformanceBenchmark.query_object_extractor_nested_equalsPredicate","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readByte","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readShort","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readInt","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readLong","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readFloat","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readDouble","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readBoolean","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readChar","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readUTF","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readByteArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readShortArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readIntArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readLongArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readFloatArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readDoubleArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readBooleanArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readCharArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readUTFArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readPortable","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readPortableArray","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readPortableInt_nested","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readPortablePortableInt_nestedTwice","0"
"hazelcast/hazelcast","com.hazelcast.nio.serialization.impl.DefaultPortableReaderBenchmark.readPortableFromArray","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.updateAdd_heap_4G","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.updateAdd_heap_2G","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.updateAdd_heap_1G","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.updateReplace","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.updateRemove","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.add_java_HashSet","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.add_hz_OAHashSet","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.add_hz_OAHashSet_withHash","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.contains_java_HashSet","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.contains_hz_OAHashSet","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.contains_hz_OAHashSet_withHash","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.remove_java_HashSet","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.remove_hz_OAHashSet","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.remove_hz_OAHashSet_withHash","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.clear_100","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.clear_271","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.createMerkleTree_100","0"
"hazelcast/hazelcast","com.hazelcast.wan.merkletree.ArrayMerkleTreeBenchmark.createMerkleTree_271","0"
"hazelcast/hazelcast","com.hazelcast.projection.Query2Benchmark.testAllIndices","0"
"hazelcast/hazelcast","com.hazelcast.projection.Query2Benchmark.testSuppression","0"
"hazelcast/hazelcast","com.hazelcast.projection.QueryBenchmark.testAllIndices","0"
"hazelcast/hazelcast","com.hazelcast.projection.QueryBenchmark.testSuppression","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.clear","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.instanceCreation_case1_10K","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.instanceCreation_case2_100K","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.instanceCreation_case3_1M","0"
"hazelcast/hazelcast","com.hazelcast.util.collection.OAHashSetBenchmark.instanceCreation_case4_10M","0"
"hazelcast/hazelcast","com.hazelcast.query.CompositeIndexesBenchmark.benchmarkRegularPointQuery","0"
"hazelcast/hazelcast","com.hazelcast.query.CompositeIndexesBenchmark.benchmarkCompositePointQuery","0"
"hazelcast/hazelcast","com.hazelcast.query.CompositeIndexesBenchmark.benchmarkRegularRangeQuery","0"
"hazelcast/hazelcast","com.hazelcast.query.CompositeIndexesBenchmark.benchmarkCompositeRangeQuery","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.updateAdd_heap_4G","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.updateAdd_heap_2G","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.updateAdd_heap_1G","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.updateReplace","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.updateRemove","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.clear_100","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.clear_271","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.createMerkleTree_100","0"
"hazelcast/hazelcast","com.hazelcast.wan.impl.merkletree.ArrayMerkleTreeBenchmark.createMerkleTree_271","0"
"HBTGmbH/java-propertyname","de.hbt.propertyname.Bench.single","0"
"HBTGmbH/java-propertyname","de.hbt.propertyname.Bench.chain","0"
"HBTGmbH/java-propertyname","de.hbt.propertyname.Bench.collection","0"
"hekate-io/hekate","io.hekate.microbench.BenchmarkContext.measure","0"
"hekate-io/hekate","io.hekate.microbench.LocksBenchmark.measure","0"
"hhu-stups/bmoth","de.bmoth.performance.ModelCheckerPerformanceTest.testLeuschelPerformanceMachines1","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark.combinedFindAndUpdate","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark.combinedFindAndUpdateWithThreadCount_025","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark.combinedFindAndUpdateWithThreadCount_050","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmCombinedBenchmark.combinedFindAndUpdateWithThreadCount_100","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark.insertEntitiesUsingIdentity","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark.insertEntitiesUsingSequence","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark.insertEntitiesUsingSequenceWithThreadCount_025","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark.insertEntitiesUsingSequenceWithThreadCount_050","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark.insertEntitiesUsingSequenceWithThreadCount_100","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmInsertBenchmark.insertEntitiesWithElementCollection","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationFindBenchmark.getEntitiesWithAssociationById","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmAssociationInsertBenchmark.insertEntitiesWithAssociation","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark.findEntityById","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark.findEntityByPropertyUsingNativeQuery","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark.findEntityByPropertyUsingNativeQueryWithManualFlushing","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark.findEntityByPropertyUsingJpql","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.ogm.HibernateOgmFindBenchmark.findEntityByPropertyUsingJpqlNamedQuery","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark.insertEntities","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark.insertEntitiesUsingBulking","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark.insertEntitiesUsingBulkingWithThreadCount_025","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark.insertEntitiesUsingBulkingWithThreadCount_050","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark.insertEntitiesUsingBulkingWithThreadCount_100","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiInsertBenchmark.insertEntitiesWithElementCollection","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark.findEntityById","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiFindBenchmark.findEntityByProperty","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationFindBenchmark.getEntitiesWithAssociationById","0"
"hibernate/hibernate-ogm","org.hibernate.ogm.perftest.mongodb.nativeapi.NativeApiAssociationInsertBenchmark.insertEntitiesWithAssociation","0"
"hibernate/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedValidation.testCascadedValidation","1"
"hibernate/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedValidation.testCascadedValidationIterative","1"
"hibernate/hibernate-validator","org.hibernate.validator.performance.simple.SimpleValidation.testSimpleBeanValidation","1"
"hibernate/hibernate-validator","org.hibernate.validator.performance.simple.SimpleValidation.testSimpleBeanValidationRecreatingValidatorFactory","1"
"hibernate/hibernate-validator","org.hibernate.validator.performance.statistical.StatisticalValidation.testValidationWithStatisticalGraphDepthAndConstraintValidator","1"
"hibernate/hibernate-validator","org.hibernate.validator.performance.multilevel.MultiLevelContainerValidation.testMultiLevelPreGeneratedValidation","0"
"hibernate/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedWithLotsOfItemsValidation.testCascadedValidationWithLotsOfItems","0"
"hibernate/hibernate-validator","org.hibernate.validator.performance.cascaded.CascadedWithLotsOfItemsAndMoreConstraintsValidation.testCascadedValidationWithLotsOfItems","0"
"hibernate/hibernate-validator","org.hibernate.validator.performance.multilevel.MultiLevelContainerValidation.testMultiLevelPreGeneratedWithRandomRuntimeContainersValidation","0"
"hibernate/hibernate-validator","org.hibernate.validator.performance.simple.SimpleComposingConstraintValidation.testSimpleComposingConstraintValidation","0"
"hibernate/hibernate-validator","org.hibernate.validator.performance.unconstrained.UnconstrainedBeanValidation.testUnconstrainedBeanValidation","0"
"hmarchadour/EasyCDO","fr.hma.easycdo.perf.benchmarks.GetBranches.internalBranchManager","0"
"hmarchadour/EasyCDO","fr.hma.easycdo.perf.benchmarks.GetBranches.internalBranchManager2","0"
"hmarchadour/EasyCDO","fr.hma.easycdo.perf.benchmarks.GetBranches.sessionBranchManager","0"
"hmarchadour/EasyCDO","fr.hma.easycdo.perf.benchmarks.GetBranches.sessionBranchManager2","0"
"hmarchadour/EasyCDO","fr.hma.easycdo.perf.benchmarks.MillionBaby.readAllObjectsWithoutPrefetch","0"
"hmarchadour/EasyCDO","fr.hma.easycdo.perf.benchmarks.MillionBaby.readAllObjects","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.linked_list_add","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.array_list_add","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.consp_plus","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.treePVector_plus","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.hashSet_plus","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.hashTreePMap_plus","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.intTreePMap_plus","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.contains","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks._notContains","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.get","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.iterator","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.put","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.mapContainsKey","0"
"hrldcpr/pcollections","org.pcollections.benchmark.Benchmarks.mapNotContainsKey","0"
"hsqlu/coding-lab","org.sample.MyBenchmark.testMethod","0"
"hsqlu/coding-lab","org.sample.MyBenchmark.measureThroughput","0"
"hsqlu/coding-lab","org.sample.MyBenchmark.measureAvgTime","0"
"hsqlu/coding-lab","org.sample.MyBenchmark.measureSamples","0"
"hsqlu/coding-lab","org.sample.MyBenchmark.measureSingleShot","0"
"hsqlu/coding-lab","org.sample.MyBenchmark.measureMultiple","0"
"hsqlu/coding-lab","org.sample.MyBenchmark.measureAll","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.HelloWorld.wellHelloThere","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.States.measureUnshared","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.States.measureShared","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.BenchmarkModes.measureThroughput","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.BenchmarkModes.measureAvgTime","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.BenchmarkModes.measureSamples","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.BenchmarkModes.measureSingleShot","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.BenchmarkModes.measureMultiple","0"
"hsqlu/coding-lab","com.hsqlu.jmh.samples.BenchmarkModes.measureAll","0"
"HubSpot/jinjava","com.hubspot.jinjava.benchmarks.liquid.LiquidBenchmark.parse","0"
"HubSpot/jinjava","com.hubspot.jinjava.benchmarks.liquid.LiquidBenchmark.parseAndRender","0"
"HubSpot/jinjava","com.hubspot.jinjava.benchmarks.jinja2.Jinja2Benchmark.realWorldishBenchmark","0"
"HubSpot/jinjava","com.hubspot.jinjava.benchmarks.jinja2.Jinja2Benchmark.precompiledBenchmark","0"
"huxi/sulky","de.huxhorn.sulky.ulid.ULIDBenchmark.ulidNextULIDThroughput","0"
"huxi/sulky","de.huxhorn.sulky.ulid.ULIDBenchmark.ulidNextULIDAverage","0"
"huxi/sulky","de.huxhorn.sulky.ulid.ULIDBenchmark.ulidNextValuetoStringThroughput","0"
"huxi/sulky","de.huxhorn.sulky.ulid.ULIDBenchmark.ulidNextValuetoStringAverage","0"
"huxi/sulky","de.huxhorn.sulky.ulid.ULIDBenchmark.uuidRandomUUIDtoStringThroughput","0"
"huxi/sulky","de.huxhorn.sulky.ulid.ULIDBenchmark.uuidRandomUUIDtoStringAverage","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.StringToDoubleBenchmark.parseDouble","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.StringToDoubleBenchmark.doubleWrapper","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.StringToDoubleBenchmark.bigDecimal","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.StringToDoubleBenchmark.decimalFormat","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringWithSideEffectBenchmark.concat_postfix_no_side_effect","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringWithSideEffectBenchmark.concat_postfix","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringWithSideEffectBenchmark.concat_prefix_no_side_effect","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringWithSideEffectBenchmark.concat_prefix","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringWithSideEffectBenchmark.stringValueOf_no_side_effect","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringWithSideEffectBenchmark.stringValueOf","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringWithSideEffectBenchmark.integerToString_no_side_effect","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringWithSideEffectBenchmark.integerToString","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringBenchmark.concat_postfix","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringBenchmark.concat_prefix","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringBenchmark.stringValueOf","0"
"iamdarksorcerer/java-jmh-benchmarks","net.nineseventwo.IntegerToStringBenchmark.integerToString","0"
"ibodrov/bpm","jet.bpm.benchmark.PersistenceBenchmark.test","0"
"ibodrov/bpm","jet.bpm.benchmark.Linear10DelegateBenchmark.test","0"
"ibodrov/bpm","jet.bpm.benchmark.Linear10JuelInMemBenchmark.test","0"
"identifiers/identifiers-java","benchmarks.CodecBenchmark.timeBase32RandomBytes","0"
"identifiers/identifiers-java","benchmarks.CodecBenchmark.timeBase32RandomValues","0"
"identifiers/identifiers-java","benchmarks.CodecBenchmark.timeBase128RandomBytes","0"
"identifiers/identifiers-java","benchmarks.CodecBenchmark.timeBase128RandomValues","0"
"igorgallon/DC-UFSCar-ES2-201601--GrupoAbeliano","net.sf.jabref.benchmarks.Benchmarks.parse","0"
"igorgallon/DC-UFSCar-ES2-201601--GrupoAbeliano","net.sf.jabref.benchmarks.Benchmarks.write","0"
"igorgallon/DC-UFSCar-ES2-201601--GrupoAbeliano","net.sf.jabref.benchmarks.Benchmarks.search","0"
"igorgallon/DC-UFSCar-ES2-201601--GrupoAbeliano","net.sf.jabref.benchmarks.Benchmarks.inferBibDatabaseMode","0"
"iksmada/DC-UFSCar-ES2-201601-GrupoDilema","net.sf.jabref.benchmarks.Benchmarks.parse","0"
"iksmada/DC-UFSCar-ES2-201601-GrupoDilema","net.sf.jabref.benchmarks.Benchmarks.write","0"
"iksmada/DC-UFSCar-ES2-201601-GrupoDilema","net.sf.jabref.benchmarks.Benchmarks.search","0"
"iksmada/DC-UFSCar-ES2-201601-GrupoDilema","net.sf.jabref.benchmarks.Benchmarks.inferBibDatabaseMode","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledHeapAllocAndFree","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledDirectAllocAndFree","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledHeapAllocAndFree","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledDirectAllocAndFree","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledHeapAllocAndFree","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledDirectAllocAndFree","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetInt","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetShort","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetLong","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetInt","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetShort","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetLong","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArray","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArrayWrapped","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiString","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringWrapped","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArray","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArrayWrapped","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAscii","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiWrapped","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArray","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArrayWrapped","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8String","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringWrapped","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArray","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArrayWrapped","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8Wrapped","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.http.HttpRequestDecoderBenchmark.testDecodeWholeRequestInMultipleStepsMixedDelimiters","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.concurrent.FastThreadLocalBenchmark.jdkThreadLocalGet","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.concurrent.FastThreadLocalBenchmark.fastThreadLocal","0"
"iloveyou416068/CookNIOServer","io.netty.microbench.internal.RecyclableArrayListBenchmark.recycleSameThread","0"
"imglib/imglib2","net.imglib2.loops.ClassCopyProviderBenchmark.sumMinMax","0"
"imglib/imglib2","net.imglib2.loops.ClassCopyProviderBenchmark.sumMinMax_using_ClassCopyProvider","0"
"imglib/imglib2","net.imglib2.loops.LoopPerformanceBenchmark.gradient_niceAndSlow","1"
"imglib/imglib2","net.imglib2.loops.LoopPerformanceBenchmark.gradient_better","1"
"imglib/imglib2","net.imglib2.loops.LoopPerformanceBenchmark.gradient_niceAndFast","0"
"imglib/imglib2","net.imglib2.loops.LoopPerformanceBenchmark.copy_pairedView","0"
"imglib/imglib2","net.imglib2.loops.LoopPerformanceBenchmark.copy_loopBuilder","1"
"imglib/imglib2","net.imglib2.loops.SyncedPositionablesBenchmark.benchmark2","0"
"imglib/imglib2","net.imglib2.loops.SyncedPositionablesBenchmark.benchmark3","0"
"imglib/imglib2","net.imglib2.loops.SyncedPositionablesBenchmark.benchmark4","0"
"imglib/imglib2","net.imglib2.loops.SyncedPositionablesBenchmark.benchmark5","0"
"imglib/imglib2","net.imglib2.loops.SyncedPositionablesBenchmark.benchmark6","0"
"imglib/imglib2","net.imglib2.util.FlatCollectionsBenchmark.benchmarkSumList","0"
"imglib/imglib2","net.imglib2.util.FlatCollectionsBenchmark.benchmarkSumImg","0"
"imglib/imglib2","net.imglib2.converter.RealTypeConvertersBenchmark.converter","0"
"imglib/imglib2","net.imglib2.loops.LoopBuilderVsCursorsBenchmark.flatCopy","0"
"imglib/imglib2","net.imglib2.loops.LoopBuilderVsCursorsBenchmark.loopBuilder","0"
"imglib/imglib2","net.imglib2.loops.LoopPerformanceBenchmark.gradient_LoopBuilder","0"
"imglib/imglib2","net.imglib2.loops.LoopPerformanceBenchmark.gradient_LoopBuilder_MultiThreaded","0"
"imglib/imglib2","net.imglib2.loops.LoopPerformanceBenchmark.copy_flatIterable","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.autojackson","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.pojojackson","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.pojoGson","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.immutablesGson","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.immutables","0"
"immutables/samples","org.immutables.samples.json.MicroBenchmarks.arrayList","0"
"immutables/samples","org.immutables.samples.json.MicroBenchmarks.listArray","0"
"immutables/samples","org.immutables.samples.json.MicroBenchmarks.imlist","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.autoJackson","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.pojoJackson","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.pojoGsonJackson","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.immutablesGsonJackson","0"
"immutables/samples","org.immutables.samples.json.NarrowJsonBenchmarks.immutablesGsonJackson","0"
"immutables/samples","org.immutables.samples.json.HashCodeBench.c1","0"
"immutables/samples","org.immutables.samples.json.HashCodeBench.c2","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.pojoMoshi","0"
"immutables/samples","org.immutables.samples.json.JsonBenchmarks.immutablesMoshi","0"
"iNikem/clean","eu.plumbr.clean.FinalizerBenchmark.plainMovie","0"
"iNikem/clean","eu.plumbr.clean.FinalizerBenchmark.finalizableMovie","0"
"iNikem/clean","eu.plumbr.clean.FinalizerBenchmark.referenceMovie","0"
"insano10/puzzlers","com.insano10.puzzlers.benchmarks.QuickSortBenchmark.benchmarkQuickSortWithExtraDataStructures","0"
"insano10/puzzlers","com.insano10.puzzlers.benchmarks.QuickSortBenchmark.benchmarkQuickSortWithArrayLists","0"
"insano10/puzzlers","com.insano10.puzzlers.benchmarks.QuickSortBenchmark.benchmarkQuickSortInPlace","0"
"insano10/puzzlers","com.insano10.puzzlers.benchmarks.FrogJmpBenchmark.benchmarkFrogJump","0"
"inspectIT/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest.queryTimerDataForkJoin","0"
"inspectIT/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest.queryTimerData15MinsTimeframeForkJoin","0"
"inspectIT/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest.queryTimerDataMethodForkJoin","0"
"inspectIT/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest.queryInvocationOverviewForkJoin","0"
"inspectIT/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest.queryTimerData","0"
"inspectIT/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest.queryTimerData15MinsTimeframe","0"
"inspectIT/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest.queryTimerDataMethod","0"
"inspectIT/inspectIT","info.novatec.inspectit.indexing.IndexingTreePerfTest.queryInvocationOverview","0"
"inspectIT/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest.queryTimerDataForkJoin","0"
"inspectIT/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest.queryTimerData15MinsTimeframeForkJoin","0"
"inspectIT/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest.queryTimerDataMethodForkJoin","0"
"inspectIT/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest.queryInvocationOverviewForkJoin","0"
"inspectIT/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest.queryTimerData","0"
"inspectIT/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest.queryTimerData15MinsTimeframe","0"
"inspectIT/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest.queryTimerDataMethod","0"
"inspectIT/inspectIT","rocks.inspectit.server.indexing.IndexingTreePerfTest.queryInvocationOverview","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.instrumentation.DigestUtilsPerfTest.sha256Hex","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.instrumentation.DigestUtilsPerfTest.baseline","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.instrumentation.asm.ClassInstrumenterPerfTest.instrument","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.instrumentation.asm.ClassAnalyzerPerfTest.parse","0"
"inspectIT/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest.findBaseline","0"
"inspectIT/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest.findExact","0"
"inspectIT/inspectIT","rocks.inspectit.server.instrumentation.classcache.index.FqnIndexerPerfTest.findStartWith","0"
"inspectIT/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest.testDiagnosisServiceWithIterativeInvocationSequences","0"
"inspectIT/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest.testDiagnosisServiceWithRecursiveInvocationSequences","0"
"inspectIT/inspectIT","rocks.inspectit.server.diagnosis.engine.session.SessionPerfTest.testDiagnosisServiceWithNplusOneProblem","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.invocationsequence.InvocationHookPerfTest.startAnInvocation","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.invocationsequence.InvocationHookPerfTest.startAnInvocationPlusMethod","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest.baseline","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest.parameterIsSpanStore","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest.tracerIsNotActive","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.special.ExecutorIntercepterHookPerfTest.tracerIsActive","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookWithInvocationPerfTest.measureMethodWithStartedInvocation","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookWithInvocationPerfTest.measureMethodWithinInvocationNoThreadCPU","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest.measureMethod","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest.measureMethodWithReturnValueCapturing","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest.measureMethodWithParameterValueCapturing","0"
"inspectIT/inspectIT","rocks.inspectit.agent.java.sensor.method.timer.TimerHookPerfTest.measureMethodNoThreadCPU","0"
"intropro/prairie","com.intropro.prairie.benchmarks.yarn.YarnStartBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.yarn.YarnStopBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.zookeeper.ZookeeperStopBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.zookeeper.ZookeeperStartBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.oozie.OozieStopBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.oozie.OozieStartBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.kafka.KafkaStopBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.kafka.KafkaStartBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.flume.FlumeStartBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.flume.FlumeStopBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2StopBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2StartBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.pig.PigStopBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.pig.PigStartBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hdfs.HdfsStartBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hdfs.HdfsStopBenchmark.measureHdfsStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.yarn.YarnStartBenchmark.measureStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.yarn.YarnStopBenchmark.measureStop","0"
"intropro/prairie","com.intropro.prairie.benchmarks.zookeeper.ZookeeperStopBenchmark.measureStop","0"
"intropro/prairie","com.intropro.prairie.benchmarks.zookeeper.ZookeeperStartBenchmark.measureStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.oozie.OozieStopBenchmark.measureStop","0"
"intropro/prairie","com.intropro.prairie.benchmarks.oozie.OozieStartBenchmark.measureStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.kafka.KafkaStopBenchmark.measureStop","0"
"intropro/prairie","com.intropro.prairie.benchmarks.kafka.KafkaStartBenchmark.measureStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.flume.FlumeStartBenchmark.measureStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.flume.FlumeStopBenchmark.measureStop","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2StopBenchmark.measureStop","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2StartBenchmark.measureStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.pig.PigStopBenchmark.measureStop","0"
"intropro/prairie","com.intropro.prairie.benchmarks.pig.PigStartBenchmark.measureStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hdfs.HdfsStartBenchmark.measureStart","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hdfs.HdfsStopBenchmark.measureStop","0"
"intropro/prairie","com.intropro.prairie.benchmarks.yarn.YarnBenchmarks.measureRun","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2ExternalTableBenchmark.measureExternalTable","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2Benchmark.measureCreateTable","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2Benchmark.measureShowTables","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2Benchmark.measureInsert","0"
"intropro/prairie","com.intropro.prairie.benchmarks.hive2.Hive2Benchmark.measureSelect","0"
"intropro/prairie","com.intropro.prairie.benchmarks.pig.PigUnitBenchmark.measureStop","0"
"InvisibleTech/state","org.invisibletech.CompareMethodPerformanceTest.benchmarkNonClustered","0"
"InvisibleTech/state","org.invisibletech.CompareMethodPerformanceTest.benchmark8Clustered","0"
"InvisibleTech/state","org.invisibletech.CompareMethodPerformanceTest.benchmark6Clustered","0"
"iok1979/test","ru.fgv.jmhprojecttest.MyBenchmark.testFormat","0"
"iok1979/test","ru.fgv.jmhprojecttest.MyBenchmark.testValueOf","0"
"iok1979/test","ru.fgv.jmhprojecttest.MyBenchmark.testPlus","0"
"iok1979/test","ru.fgv.jmhprojecttest.MyBenchmark.testStringBuilder","0"
"iok1979/test","ru.fgv.jmhprojecttest.MyBenchmark.testLog","0"
"ipogudin/examples","examples.java.TypesComparison.primitiveInt","0"
"ipogudin/examples","examples.java.TypesComparison.wrapperInteger","0"
"ipogudin/examples","examples.java.TypesComparison.justReturnIncrementedInt","0"
"irobertson/invokedynamic-talk-code","json.benchmarks.JsonBenchmark.beanReflection","0"
"irobertson/invokedynamic-talk-code","json.benchmarks.JsonBenchmark.beanHandCoded","0"
"irobertson/invokedynamic-talk-code","json.benchmarks.JsonBenchmark.beanFactoryIndy","0"
"irobertson/invokedynamic-talk-code","json.benchmarks.JsonBenchmark.biggerBeanReflection","0"
"irobertson/invokedynamic-talk-code","json.benchmarks.JsonBenchmark.biggerBeanHandCoded","0"
"irobertson/invokedynamic-talk-code","json.benchmarks.JsonBenchmark.biggerBeanHandDump","0"
"irobertson/invokedynamic-talk-code","json.benchmarks.JsonBenchmark.biggerBeanFactoryIndy","0"
"irobertson/StringBuilderInvokeDynamicBenchmark","benchmark.Benchmarks.benchmarkMarshal","0"
"IRus/Instanceof-vs-Try-Catch","by.ibragimov.Main.instanceOfException","0"
"IRus/Instanceof-vs-Try-Catch","by.ibragimov.Main.throwException","0"
"isalnikov/ACMP","ru.isalnikov.tests.sorts.SortsTest.stream","0"
"isalnikov/ACMP","ru.isalnikov.tests.sorts.SortsTest.parallelstream","0"
"isalnikov/ACMP","ru.isalnikov.jmh.test.sort.SortsTest.stream","0"
"isalnikov/ACMP","ru.isalnikov.jmh.test.sort.SortsTest.parallelstream","0"
"isalnikov/ACMP","ru.isalnikov.jmh.test.coin.CoinTest.test","0"
"ivgiuliani/cuckoohash","com.github.kratorius.cuckoohash.JMHGet.measureGetCuckooHashMap","0"
"ivgiuliani/cuckoohash","com.github.kratorius.cuckoohash.JMHGet.measureGetHashMap","0"
"ivgiuliani/cuckoohash","com.github.kratorius.cuckoohash.JMHPut.measurePutCuckooHashMap","0"
"ivgiuliani/cuckoohash","com.github.kratorius.cuckoohash.JMHPut.measurePutHashMap","0"
"ivgiuliani/jelf","com.github.kratorius.jefs.SPSCQueueBenchmark.offer","0"
"ivgiuliani/jelf","com.github.kratorius.jefs.SPSCQueueBenchmark.poll","0"
"ivgiuliani/jelf","com.github.kratorius.jefs.LFStackBenchmark.add","0"
"ivgiuliani/jelf","com.github.kratorius.jefs.LFStackBenchmark.remove","0"
"j-easy/easy-batch","org.easybatch.bench.Benchmark.runBatch","0"
"j-musca/kata08-conflicting-objectives","org.sample.MyBenchmark.testExtensible","0"
"j-musca/kata08-conflicting-objectives","org.sample.MyBenchmark.testPerformance","0"
"j-musca/kata08-conflicting-objectives","org.sample.MyBenchmark.testReadable","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.parse","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.write","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.search","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.inferBibDatabaseMode","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.latexToUnicodeConversion","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.latexToHTMLConversion","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.htmlToLatexConversion","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.keywordGroupContains","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.keywordGroupContainsWord","0"
"JabRef/jabref","net.sf.jabref.benchmarks.Benchmarks.parallelSearch","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.parse","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.write","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.search","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.parallelSearch","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.inferBibDatabaseMode","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.latexToUnicodeConversion","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.latexToHTMLConversion","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.htmlToLatexConversion","0"
"JabRef/jabref","org.jabref.benchmarks.Benchmarks.keywordGroupContains","0"
"jad7/AtomicIncrementBenchmark","com.jad.benchmark.IncrementBench.incrementAtomic","0"
"jad7/AtomicIncrementBenchmark","com.jad.benchmark.IncrementBench.incrementCustomAtomic","0"
"jad7/AtomicIncrementBenchmark","com.jad.benchmark.IncrementBench.lockInt","0"
"jad7/AtomicIncrementBenchmark","com.jad.benchmark.IncrementBench.onlyWithWork","0"
"jad7/AtomicIncrementBenchmark","com.jad.benchmark.IncrementBench.incrementAtomicWithWork","0"
"jad7/AtomicIncrementBenchmark","com.jad.benchmark.IncrementBench.incrementCustomAtomicWithWork","0"
"jad7/AtomicIncrementBenchmark","com.jad.benchmark.IncrementBench.lockIntWithWork","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.TreeTest.warmUp","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.TreeTest.insertManyThreads","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.TreeTest.insertOneThread","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.JMHSample_01_HelloWorld.wellHelloThere","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.TreeTest2.insert_performance","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.AbstractMapTest.insert_performance","1"
"jajir/jblinktree","com.coroptis.jblinktree.example.ExampleBenchmark.simpleTest","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.locking.IdGeneratorTest.g1_atomicInt","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.locking.IdGeneratorTest.g2_reentrantLock","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.type.IntegerLoadBenchmark.simple_valueOf","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.type.IntegerLoadBenchmark.simple_boxing","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.type.ComparingBytesAndValuesBenchmark.simple_cmp_objects","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.type.ComparingBytesAndValuesBenchmark.simple_cmp_bytes","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.cache.CacheLruBenchmark.simpleTest","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.type.DoubleConvertorBenchmark.simple_valueOf","0"
"jajir/jblinktree","com.coroptis.jblinktree.performance.type.DoubleConvertorBenchmark.simple_manuall","0"
"jasobrown/barker","jmh.barker.KeyStoreLoad.readFromKeyStore","0"
"jasobrown/barker","jmh.barker.KeyStoreLoad.readFromCache","0"
"jasobrown/barker","jmh.barker.CountDownLatchBenchmark.testZeroAwait","0"
"jasobrown/barker","jmh.barker.CountDownLatchBenchmark.testGetCount","0"
"jasobrown/barker","jmh.barker.CountDownLatchBenchmark.testCurrentThread","0"
"jasobrown/barker","jmh.barker.EncryptBench.encrypt_CBC_bouncycastle","0"
"jasobrown/barker","jmh.barker.EncryptBench.generateCleartext","0"
"jasobrown/barker","jmh.barker.EncryptBench.encrypt_CBC_JDKDefault","0"
"jasobrown/barker","jmh.barker.EncryptBench.encrypt_GCM_bouncycastle","0"
"jasobrown/barker","jmh.barker.EncryptBench.encrypt_GCM_JDKDefault","0"
"jasobrown/barker","jmh.barker.ChecksumBench.reuseBuffer","0"
"jasobrown/barker","jmh.barker.ChecksumBench.randomBuffer","0"
"jasobrown/barker","jmh.barker.SecureRandomBench.newPlainIV","1"
"jasobrown/barker","jmh.barker.SecureRandomBench.newSecureIV","1"
"jasobrown/barker","jmh.barker.DecryptBench.decrypt_CBC_bouncycastle","0"
"jasobrown/barker","jmh.barker.DecryptBench.decrypt_CBC_JDKDefault","0"
"jasobrown/barker","jmh.barker.CipherReuse.newCipher_CBC_JDKDefault","0"
"jasobrown/barker","jmh.barker.CipherReuse.newCipher_CBC_BouncyCastle","0"
"jasobrown/barker","jmh.barker.CipherReuse.newCipher_GCM_JDKDefault","0"
"jasobrown/barker","jmh.barker.CipherReuse.newCipher_GCM_BoucyCastle","0"
"jasobrown/barker","jmh.barker.CipherReuse.reuseCipher_CBC_newIV_JDKDefault","0"
"jasobrown/barker","jmh.barker.CipherReuse.reuseCipher_CBC_newIV_BouncyCastle","0"
"jasobrown/barker","jmh.barker.CipherReuse.reuseCipher_GCM_callOldParamSpec_BouncyCastle","0"
"jasobrown/barker","jmh.barker.CipherReuse.reuseCipher_GCM_callOldParamSpec_JDKDefault","0"
"jasobrown/barker","jmh.barker.CipherReuse.reuseCipher_GCM_newParamSpec_JDKDefault","0"
"jasobrown/barker","jmh.barker.CipherReuse.reuseCipher_GCM_newParamSpec_BouncyCastle","0"
"jasobrown/barker","jmh.barker.CWestinForLoop.standardLoop","0"
"jasobrown/barker","jmh.barker.CWestinForLoop.westinLoop","0"
"jasobrown/barker","jmh.barker.CWestinForLoop.standardArrayLoop","0"
"jasobrown/barker","jmh.barker.CWestinForLoop.westinArrayLoop","0"
"jasobrown/barker","jmh.barker.SystemNanoTime.standardLoop","0"
"jasobrown/barker","jmh.barker.ShortCircuitOperator.simpleCompare_WithinRange_LogicalAnd","0"
"jasobrown/barker","jmh.barker.ShortCircuitOperator.simpleCompare_WithinRange_ShortCircuitAnd","0"
"jasobrown/barker","jmh.barker.ShortCircuitOperator.simpleCompare_AboveRange_LogicalAnd","0"
"jasobrown/barker","jmh.barker.ShortCircuitOperator.simpleCompare_AboveRange_ShortCircuitAnd","0"
"jasobrown/barker","jmh.barker.ShortCircuitOperator.simpleCompare_BelowRange_LogicalAnd","0"
"jasobrown/barker","jmh.barker.ShortCircuitOperator.simpleCompare_BelowRange_ShortCircuitAnd","0"
"jasobrown/barker","jmh.barker.CipherBench.cipherGetInstance","0"
"jasobrown/barker","jmh.barker.CipherBench.cipherThreadLocal","0"
"jasobrown/barker","jmh.barker.CipherReinitBench.reuseIV","0"
"jasobrown/barker","jmh.barker.CipherReinitBench.newInstance","0"
"jasobrown/barker","jmh.barker.LinkedBlockingQueueBench.readOneByOne","0"
"jasobrown/barker","jmh.barker.LinkedBlockingQueueBench.drainTo","0"
"jasobrown/barker","jmh.barker.LinkedBlockingQueueBench.clq","0"
"jasobrown/barker","jmh.barker.InstanceOfBench.enumCheck","0"
"jasobrown/barker","jmh.barker.InstanceOfBench.instanceCheck","0"
"jasobrown/barker","jmh.barker.ByteBufferInsert.byteByByte","0"
"jasobrown/barker","jmh.barker.ByteBufferInsert.byLong","0"
"jasobrown/barker","jmh.barker.ListVersusMap.lowIndex_List","0"
"jasobrown/barker","jmh.barker.ListVersusMap.lowIndex_Map","0"
"jasobrown/barker","jmh.barker.ListVersusMap.midIndex_List","0"
"jasobrown/barker","jmh.barker.ListVersusMap.midIndex_Map","0"
"jasobrown/barker","jmh.barker.ListVersusMap.highIndex_List","0"
"jasobrown/barker","jmh.barker.ListVersusMap.highIndex_Map","0"
"jasobrown/barker","jmh.barker.ByteBufferRead.arrayRead","0"
"jasobrown/barker","jmh.barker.ByteBufferRead.byteBufferHeapRead","0"
"jasobrown/barker","jmh.barker.ByteBufferRead.byteBufferOffHeapRead","0"
"jasobrown/barker","jmh.barker.ByteBufferRead.byteBufHeapRead","0"
"jasobrown/barker","jmh.barker.ByteBufferRead.byteBufDirectRead","0"
"jasobrown/barker","jmh.barker.InstanceOfBench.enumCheck_ViaMethodCall","0"
"jasobrown/barker","jmh.barker.InstanceOfBench.enumCheck_ViaMemberDerefernce","0"
"jasobrown/barker","jmh.barker.OptionalVsNull.nullCheck","0"
"jasobrown/barker","jmh.barker.OptionalVsNull.emptyCheck","0"
"jasobrown/barker","jmh.barker.NettyWriteByte.write4Bytes","0"
"jasobrown/barker","jmh.barker.NettyWriteByte.writeInt","0"
"jasobrown/barker","jmh.barker.NettyWriteByte.writeArray","0"
"jasobrown/barker","jmh.barker.MapLookup.fromMap","0"
"jasobrown/barker","jmh.barker.MapLookup.fromSwitchFirstCase","0"
"jasobrown/barker","jmh.barker.MapLookup.fromSwitchDefault","0"
"jasobrown/barker","jmh.barker.MapLookup.fromOr","0"
"jasobrown/barker","jmh.barker.LazySet.viaCtor","0"
"jasobrown/barker","jmh.barker.LazySet.viaLazySet","0"
"jasobrown/barker","jmh.barker.stream.StreamingLove.readBuf_AcrossBuffers_CIS","0"
"jasobrown/barker","jmh.barker.stream.StreamingLove.readBuf_AcrossBuffers_ABAIS","0"
"jasobrown/barker","jmh.barker.MultipleInstanceOfChecks.firstCheck","0"
"jasobrown/barker","jmh.barker.MultipleInstanceOfChecks.secondCheck","0"
"jasobrown/barker","jmh.barker.MultipleInstanceOfChecks.thridCheck","0"
"jasobrown/barker","jmh.barker.ArrayRemove.arrayRemove","0"
"jasobrown/barker","jmh.barker.ArrayRemove.arrayCopy","0"
"jasobrown/barker","jmh.barker.ArrayRemove.arrayListRemove","0"
"jasobrown/barker","jmh.barker.ArrayRemove.arrayListCopy","0"
"jasobrown/barker","jmh.barker.BinarySearchVsLinearScan.lowIndex_LinearScan","0"
"jasobrown/barker","jmh.barker.BinarySearchVsLinearScan.lowIndex_BinarySearch","0"
"jasobrown/barker","jmh.barker.BinarySearchVsLinearScan.midIndex_LinearScan","0"
"jasobrown/barker","jmh.barker.BinarySearchVsLinearScan.midIndex_BinarySearch","0"
"jasobrown/barker","jmh.barker.BinarySearchVsLinearScan.highIndex_LinearScan","0"
"jasobrown/barker","jmh.barker.BinarySearchVsLinearScan.highIndex_BinarySearch","0"
"jasobrown/barker","jmh.barker.InstanceOfVersusClassBench.instanceOfCheck","0"
"jasobrown/barker","jmh.barker.InstanceOfVersusClassBench.getClassCheck","0"
"jasobrown/barker","jmh.barker.AtomicIntegerBench.atomicInteger","0"
"jasobrown/barker","jmh.barker.AtomicIntegerBench.atomicIntegerFieldUpdater","0"
"jasobrown/barker","jmh.barker.GenerateRandomBench.oneRandomCall","0"
"jasobrown/barker","jmh.barker.GenerateRandomBench.looping","0"
"jasobrown/barker","jmh.barker.ReflectedMethodCalls.fromMap","0"
"jasobrown/barker","jmh.barker.ReflectedMethodCalls.viaReflection","0"
"Java-Courses/collections-m0e4","io.kovalevskyi.collections.test.CollectionTest.testArrayListAddMethod","0"
"Java-Courses/collections-m0e4","io.kovalevskyi.collections.test.CollectionTest.testLinkedListAddMethod","0"
"java8/Java8InAction","lambdasinaction.chap7.ParallelStreamBenchmark.iterativeSum","0"
"java8/Java8InAction","lambdasinaction.chap7.ParallelStreamBenchmark.sequentialSum","0"
"java8/Java8InAction","lambdasinaction.chap7.ParallelStreamBenchmark.parallelSum","0"
"java8/Java8InAction","lambdasinaction.chap7.ParallelStreamBenchmark.rangedSum","0"
"java8/Java8InAction","lambdasinaction.chap7.ParallelStreamBenchmark.parallelRangedSum","0"
"Javalbert/faster-than-reflection","com.github.javalbert.FasterThanReflectionBenchmark.testFieldAccessDirect","0"
"Javalbert/faster-than-reflection","com.github.javalbert.FasterThanReflectionBenchmark.testFieldAccessFasterThanReflection","0"
"Javalbert/faster-than-reflection","com.github.javalbert.FasterThanReflectionBenchmark.testFieldAccessReflectAsm","0"
"Javalbert/faster-than-reflection","com.github.javalbert.FasterThanReflectionBenchmark.testFieldAccessReflectionApi","0"
"Javalbert/faster-than-reflection","com.github.javalbert.FasterThanReflectionBenchmark.testPropertyAccessDirect","0"
"Javalbert/faster-than-reflection","com.github.javalbert.FasterThanReflectionBenchmark.testPropertyAccessFasterThanReflection","0"
"Javalbert/faster-than-reflection","com.github.javalbert.FasterThanReflectionBenchmark.testPropertyAccessReflectAsm","0"
"Javalbert/faster-than-reflection","com.github.javalbert.FasterThanReflectionBenchmark.testPropertyAccessReflectionApi","0"
"Javalbert/sql-builder-orm","com.github.javalbert.SqlbuilderOrmBenchmark.testRetrievalHibernateStatelessSession","0"
"Javalbert/sql-builder-orm","com.github.javalbert.SqlbuilderOrmBenchmark.testRetrievalJdbc","0"
"Javalbert/sql-builder-orm","com.github.javalbert.SqlbuilderOrmBenchmark.testRetrievalSql2o","0"
"Javalbert/sql-builder-orm","com.github.javalbert.SqlbuilderOrmBenchmark.testRetrievalSqlbuilderOrm","0"
"Javalbert/sql-builder-orm","com.github.javalbert.EntityByIdBenchmark.testRetrievalHibernateGetById","0"
"Javalbert/sql-builder-orm","com.github.javalbert.EntityByIdBenchmark.testRetrievalHibernateQueryById","0"
"Javalbert/sql-builder-orm","com.github.javalbert.EntityByIdBenchmark.testRetrievalJdbc","0"
"Javalbert/sql-builder-orm","com.github.javalbert.EntityByIdBenchmark.testRetrievalJooq","0"
"Javalbert/sql-builder-orm","com.github.javalbert.EntityByIdBenchmark.testRetrievalSql2o","0"
"Javalbert/sql-builder-orm","com.github.javalbert.EntityByIdBenchmark.testRetrievalSqlbOrmGetById","0"
"Javalbert/sql-builder-orm","com.github.javalbert.EntityByIdBenchmark.testRetrievalSqlbOrmQueryById","0"
"javolution/javolution","javolution.jmh.benchmark.FastMapBenchmark.measureGet","0"
"javolution/javolution","javolution.jmh.benchmark.JAXBAnnotatedObjectWriterBenchmark.measureJavolution","0"
"javolution/javolution","javolution.jmh.benchmark.JAXBUnmarshallingWithJDKBenchmark.measureJDK","0"
"javolution/javolution","javolution.jmh.benchmark.JAXBUnmarshallingWithJDKSingleThreadedBenchmark.measureJDK","0"
"javolution/javolution","javolution.jmh.benchmark.IdentityHashMapBenchmark.measureGet","0"
"javolution/javolution","javolution.jmh.benchmark.JAXBMarshallingWithJDKSingleThreadedBenchmark.measureJDK","0"
"javolution/javolution","javolution.jmh.benchmark.JAXBMarshallingWithJDKBenchmark.measureJDK","0"
"javolution/javolution","javolution.jmh.benchmark.FastIdentityMapBenchmark.measureGet","0"
"javolution/javolution","javolution.jmh.benchmark.HashMapBenchmark.measureGet","0"
"javolution/javolution","javolution.jmh.benchmark.JAXBAnnotatedObjectReaderBenchmark.measureJavolution","0"
"jayjaykim/jmh-sample","com.jayjaylab.sample.StreamBenchmark.testSummingByForLoop","0"
"jayjaykim/jmh-sample","com.jayjaylab.sample.StreamBenchmark.testSummingByStream","0"
"jayjaykim/jmh-sample","com.jayjaylab.sample.JITBenchmark.testUnnecessaryCode","0"
"jayjaykim/jmh-sample","com.jayjaylab.sample.JITBenchmark.testOptimizedCode","0"
"jayjaylab-benchmark/retrofitvsokhttp","com.jayjaylab.benchmark.AndroidHttpLibraryBenchmark.testRetrofit2","0"
"jayjaylab-benchmark/retrofitvsokhttp","com.jayjaylab.benchmark.AndroidHttpLibraryBenchmark.testOkhttp3","0"
"jayware/entity-essentials","org.jayware.e2.entity.impl.Benchmark_CreateEntity.benchmark","0"
"jayware/entity-essentials","org.jayware.e2.entity.impl.Benchmark_DeleteEntity.benchmark","0"
"jayware/entity-essentials","org.jayware.e2.component.impl.Benchmark_ComponentPushPull.pushTo","0"
"jayware/entity-essentials","org.jayware.e2.component.impl.Benchmark_ComponentPushPull.pullFrom","0"
"jchambers/java-otp","com.eatthepath.otp.HmacOneTimePasswordGeneratorBenchmark.benchmarkGenerateOneTimePassword","0"
"jchambers/jeospatial","com.eatthepath.jeospatial.VPTreeConstructionBenchmark.benchmarkConstructVpTree","0"
"jchambers/jeospatial","com.eatthepath.jeospatial.VPTreeQueryBenchmark.benchmarkNaiveSearch","0"
"jchambers/jeospatial","com.eatthepath.jeospatial.VPTreeQueryBenchmark.benchmarkQueryTree","0"
"jchambers/jvptree","com.eatthepath.jvptree.VPTreeConstructionBenchmark.benchmarkConstructTreeWithPoints","0"
"jchambers/jvptree","com.eatthepath.jvptree.VPTreeConstructionBenchmark.benchmarkConstructAndAddPoints","0"
"jchambers/jvptree","com.eatthepath.jvptree.VPTreeQueryBenchmark.benchmarkNaiveSearch","0"
"jchambers/jvptree","com.eatthepath.jvptree.VPTreeQueryBenchmark.benchmarkQueryTree","0"
"jchambers/jvptree","com.eatthepath.jvptree.ThresholdSelectionBenchmark.benchmarkRandomThresholdSelection","0"
"jchambers/jvptree","com.eatthepath.jvptree.ThresholdSelectionBenchmark.benchmarkMedianThresholdSelection","0"
"jchambers/jvptree","com.eatthepath.jvptree.ThresholdSelectionBenchmark.benchmarkSamplingMedianThresholdSelection","0"
"jchambers/jvptree","com.eatthepath.jvptree.ThresholdSelectionBenchmark.benchmarkNaiveMedianThresholdSelection","0"
"JCTools/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithThreads.ping","0"
"JCTools/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups.ping","0"
"JCTools/JCTools","org.jctools.jmh.latency.spsc.RingCqBurstRoundTripWithGroups.loop","0"
"JCTools/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups.ping","0"
"JCTools/JCTools","org.jctools.jmh.latency.spsc.RingBurstRoundTripWithGroups.loop","0"
"JCTools/JCTools","org.jctools.jmh.baseline.QueueOfferPoll.offerAndPollLoops","0"
"JCTools/JCTools","org.jctools.jmh.baseline.SingleThreadedOffer.offerLoop","0"
"JCTools/JCTools","org.jctools.jmh.baseline.BaselinePingPong.ping","0"
"JCTools/JCTools","org.jctools.jmh.baseline.BaselinePingPong.pong","0"
"JCTools/JCTools","org.jctools.jmh.baseline.SingleThreadedPoll.poll","0"
"JCTools/JCTools","org.jctools.jmh.baseline.ConcQOfferPoll.offerAndPoll","0"
"JCTools/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone.offer","1"
"JCTools/JCTools","org.jctools.jmh.throughput.QueueThroughputBackoffNone.poll","1"
"JCTools/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy.offer","0"
"JCTools/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputBusy.poll","0"
"JCTools/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield.offer","0"
"JCTools/JCTools","org.jctools.jmh.throughput.spsc.ConcurrentQueueThroughputYield.poll","0"
"JCTools/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone.offer","0"
"JCTools/JCTools","org.jctools.jmh.throughput.channels.ChannelThroughputBackoffNone.poll","0"
"JCTools/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest.writeBusy","0"
"JCTools/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest.readBusy","0"
"JCTools/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest.write","0"
"JCTools/JCTools","org.jctools.jmh.throughput.channels.SpscChannelThroughputTest.read","0"
"JCTools/JCTools","org.jctools.jmh.collections.SetOps.add","0"
"JCTools/JCTools","org.jctools.jmh.collections.SetOps.remove","0"
"JCTools/JCTools","org.jctools.jmh.collections.SetOps.contains","0"
"JCTools/JCTools","org.jctools.jmh.collections.SetOps.sum","0"
"JCTools/JCTools","org.jctools.jmh.latency.spsc.BenchmarkBurstCost.burstCost","0"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone.offerNoR","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone.pollNoR","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone.offerBothR","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone.pollBothR","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone.offerPR","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone.pollPR","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone.offerCR","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqThroughputBackoffNone.pollCR","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqDrainFillThroughputBackoffNone.fill","1"
"JCTools/JCTools","org.jctools.jmh.throughput.MpqDrainFillThroughputBackoffNone.drain","1"
"JCTools/JCTools","org.jctools.jmh.latency.spsc.QueueBurstCost.burstCost","0"
"JCTools/JCTools","org.jctools.jmh.latency.spsc.MpqRelaxedBurstCost.burstCost","0"
"JCTools/JCTools","org.jctools.jmh.latency.QueueBurstCost.burstCost","0"
"JCTools/JCTools","org.jctools.jmh.counters.CountersBenchmark.inc","0"
"JCTools/JCTools","org.jctools.jmh.counters.CountersBenchmark.get","0"
"JCTools/JCTools","org.jctools.jmh.latency.MpqBurstCost.burstCost","0"
"JCTools/JCTools","org.jctools.maps.nhbm_test.jmh.ConcurrentMapThroughput.randomGetPutRemove","0"
"JCTools/JCTools","org.jctools.jmh.throughput.IntrusiveQueueThroughputBackoffNone.offer","0"
"JCTools/JCTools","org.jctools.jmh.throughput.IntrusiveQueueThroughputBackoffNone.poll","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.oneObjectArgBaseline","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.oneObjectArgCaller","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.oneObjectArgProcessor","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.oneReferenceArgBaseline","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.oneReferenceArgCaller","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.oneReferenceArgProcessor","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.twoMixedLengthPrimitiveArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.twoMixedLengthPrimitiveArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.twoMixedLengthPrimitiveArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.onePrimitiveArgBaseline","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.onePrimitiveArgCaller","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.onePrimitiveArgProcessor","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.noArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.noArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.noArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.tenMixedArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.tenMixedArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.tenMixedArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.alignedPrimitiveArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.alignedPrimitiveArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.alignedPrimitiveArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.unalignedPrimitiveArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.unalignedPrimitiveArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.spsc.SpscProxyChannelBenchmark.unalignedPrimitiveArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.oneObjectArgBaseline","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.oneObjectArgCaller","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.oneObjectArgProcessor","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.oneReferenceArgBaseline","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.oneReferenceArgCaller","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.oneReferenceArgProcessor","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.twoMixedLengthPrimitiveArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.twoMixedLengthPrimitiveArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.twoMixedLengthPrimitiveArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.onePrimitiveArgBaseline","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.onePrimitiveArgCaller","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.onePrimitiveArgProcessor","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.noArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.noArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.noArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.tenMixedArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.tenMixedArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.tenMixedArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.alignedPrimitiveArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.alignedPrimitiveArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.alignedPrimitiveArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.unalignedPrimitiveArgsBaseline","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.unalignedPrimitiveArgsCaller","0"
"JCTools/JCTools","org.jctools.channels.mpsc.MpscProxyChannelBenchmark.unalignedPrimitiveArgsProcessor","0"
"JCTools/JCTools","org.jctools.channels.spsc.QueueThroughputBaseline.offer","0"
"JCTools/JCTools","org.jctools.channels.spsc.QueueThroughputBaseline.poll","0"
"JCTools/JCTools","org.jctools.jmh.collections.ConcurrentSetThroughput.randomContainsAddRemove","0"
"JCTools/JCTools","org.jctools.jmh.collections.ConcurrentSetThroughput.randomGet","0"
"JCTools/JCTools","org.jctools.maps.nbhm_test.jmh.ConcurrentMapThroughput.randomGetPutRemove","0"
"jenetics/jenetics","org.jenetics.util.RandomEnginePerf$Base.nextInt","0"
"jenetics/jenetics","org.jenetics.util.RandomEnginePerf$Base.nextLong","0"
"jenetics/jenetics","org.jenetics.util.RandomEnginePerf$Base.nextFloat","0"
"jenetics/jenetics","org.jenetics.util.RandomEnginePerf$Base.nextDouble","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.getFromArray","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.forLoopArray","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.getFromSeq","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.forLoopSeq","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.forEachLoopSeq","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf10","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf15","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf20","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf40","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf80","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf160","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf250","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf10","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf15","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf20","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf40","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf80","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf160","0"
"jenetics/jenetics","org.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf250","0"
"jenetics/jenetics","org.jenetics.internal.util.IndexSorterPerf.insertionSort80","0"
"jenetics/jenetics","org.jenetics.internal.util.IndexSorterPerf.insertionSort160","0"
"jenetics/jenetics","org.jenetics.internal.util.IndexSorterPerf.insertionSort250","0"
"jenetics/jenetics","org.jenetics.internal.util.IndexSorterPerf.insertionSort320","0"
"jenetics/jenetics","org.jenetics.internal.util.IndexSorterPerf.heapSort80","0"
"jenetics/jenetics","org.jenetics.internal.util.IndexSorterPerf.heapSort160","0"
"jenetics/jenetics","org.jenetics.internal.util.IndexSorterPerf.heapSort250","0"
"jenetics/jenetics","org.jenetics.internal.util.IndexSorterPerf.heapSort320","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.newObject","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.arrayClone","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.arrayCopy","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.getFromProxy","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.array_get","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.array_set","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.array_forLoop","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.array_copy","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.arrayList_get","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.arrayList_set","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.arrayList_forLoop","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.arrayList_forEachLoop","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.arrayList_contains","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.arrayList_copy","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.mseq_get","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.mseq_set","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.mseq_forLoop","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.mseq_forEachLoop","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.mseq_contains","0"
"jenetics/jenetics","org.jenetics.util.SeqPerf.mseq_copy","0"
"jenetics/jenetics","org.jenetics.random.modulusPerf.systemModulus","0"
"jenetics/jenetics","org.jenetics.random.modulusPerf.optimizedModulus","0"
"jenetics/jenetics","org.jenetics.random.modulusPerf.systemAdd","0"
"jenetics/jenetics","org.jenetics.random.modulusPerf.optimizedAdd","0"
"jenetics/jenetics","org.jenetics.random.RandomEnginePerf$Base.nextIntRange","0"
"jenetics/jenetics","org.jenetics.random.RandomEnginePerf$Base.nextInt","0"
"jenetics/jenetics","org.jenetics.random.RandomEnginePerf$Base.nextLong","0"
"jenetics/jenetics","org.jenetics.random.RandomEnginePerf$Base.nextFloat","0"
"jenetics/jenetics","org.jenetics.random.RandomEnginePerf$Base.nextDouble","0"
"jenetics/jenetics","org.jenetics.xml.GenotypeWritePerf.object","0"
"jenetics/jenetics","org.jenetics.xml.GenotypeWritePerf.jaxb","0"
"jenetics/jenetics","org.jenetics.xml.GenotypeWritePerf.stream","0"
"jenetics/jenetics","org.jenetics.xml.GenotypeWritePerf.emptyStream","0"
"jenetics/jenetics","org.jenetics.xml.GenotypeReadPerf.object","0"
"jenetics/jenetics","org.jenetics.xml.GenotypeReadPerf.jaxb","0"
"jenetics/jenetics","org.jenetics.xml.GenotypeReadPerf.stream","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf10","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf15","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf20","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf40","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf80","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf160","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.binaryIndexOf250","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf10","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf15","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf20","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf40","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf80","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf160","0"
"jenetics/jenetics","io.jenetics.ProbabilitySelectorIndexOfPerf.serialIndexOf250","0"
"jenetics/jenetics","io.jenetics.util.RandomEnginePerf$Base.nextInt","0"
"jenetics/jenetics","io.jenetics.util.RandomEnginePerf$Base.nextLong","0"
"jenetics/jenetics","io.jenetics.util.RandomEnginePerf$Base.nextFloat","0"
"jenetics/jenetics","io.jenetics.util.RandomEnginePerf$Base.nextDouble","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.array_get","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.array_set","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.array_forLoop","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.array_copy","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.arrayList_get","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.arrayList_set","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.arrayList_forLoop","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.arrayList_forEachLoop","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.arrayList_contains","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.arrayList_copy","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.mseq_get","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.mseq_set","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.mseq_forLoop","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.mseq_forEachLoop","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.mseq_contains","0"
"jenetics/jenetics","io.jenetics.util.SeqPerf.mseq_copy","0"
"jenetics/jenetics","io.jenetics.internal.util.IndexSorterPerf.insertionSort80","0"
"jenetics/jenetics","io.jenetics.internal.util.IndexSorterPerf.insertionSort160","0"
"jenetics/jenetics","io.jenetics.internal.util.IndexSorterPerf.insertionSort250","0"
"jenetics/jenetics","io.jenetics.internal.util.IndexSorterPerf.insertionSort320","0"
"jenetics/jenetics","io.jenetics.internal.util.IndexSorterPerf.heapSort80","0"
"jenetics/jenetics","io.jenetics.internal.util.IndexSorterPerf.heapSort160","0"
"jenetics/jenetics","io.jenetics.internal.util.IndexSorterPerf.heapSort250","0"
"jenetics/jenetics","io.jenetics.internal.util.IndexSorterPerf.heapSort320","0"
"jenetics/jenetics","io.jenetics.xml.GenotypeWritePerf.object","0"
"jenetics/jenetics","io.jenetics.xml.GenotypeWritePerf.jaxb","0"
"jenetics/jenetics","io.jenetics.xml.GenotypeWritePerf.stream","0"
"jenetics/jenetics","io.jenetics.xml.GenotypeWritePerf.emptyStream","0"
"jenetics/jenetics","io.jenetics.xml.GenotypeReadPerf.object","0"
"jenetics/jenetics","io.jenetics.xml.GenotypeReadPerf.jaxb","0"
"jenetics/jenetics","io.jenetics.xml.GenotypeReadPerf.stream","0"
"jenetics/jenetics","io.jenetics.PhenotypeEvaluationPerf.baselineUnevaluated","0"
"jenetics/jenetics","io.jenetics.PhenotypeEvaluationPerf.unevaluated","0"
"jenetics/jenetics","io.jenetics.PhenotypeEvaluationPerf.baselineEvaluated","0"
"jenetics/jenetics","io.jenetics.PhenotypeEvaluationPerf.evaluated","0"
"jenetics/jenetics","io.jenetics.PhenotypeEvaluationPerf.baselineHalfEvaluated","0"
"jenetics/jenetics","io.jenetics.PhenotypeEvaluationPerf.halfEvaluated","0"
"jenetics/jenetics","io.jenetics.util.ThreadIDPerf.getThread","0"
"jenetics/jenetics","io.jenetics.util.ThreadIDPerf.getThreadId","0"
"jenetics/jenetics","io.jenetics.ext.util.TreePerf.size","0"
"jenetics/jenetics","io.jenetics.ext.util.TreePerf.flatSize","0"
"jenetics/jenetics","io.jenetics.ext.util.TreePerf.count","0"
"jenetics/jenetics","io.jenetics.ext.util.TreePerf.flatCount","0"
"jenetics/prngine","org.jenetics.random.modulusPerf.systemModulus","0"
"jenetics/prngine","org.jenetics.random.modulusPerf.optimizedModulus","0"
"jenetics/prngine","org.jenetics.random.modulusPerf.systemAdd","0"
"jenetics/prngine","org.jenetics.random.modulusPerf.optimizedAdd","0"
"jenetics/prngine","org.jenetics.random.RandomEnginePerf$Base.nextInt","0"
"jenetics/prngine","org.jenetics.random.RandomEnginePerf$Base.nextLong","0"
"jenetics/prngine","org.jenetics.random.RandomEnginePerf$Base.nextFloat","0"
"jenetics/prngine","org.jenetics.random.RandomEnginePerf$Base.nextDouble","0"
"jenetics/prngine","org.jenetics.random.RandomEnginePerf$Base.nextIntRange","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextIntRange","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextInt","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextLong","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextFloat","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextDouble","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextIntRangeOriginBound","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextLongRange","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextLongRangeOriginBound","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextFloatRange","0"
"jenetics/prngine","io.jenetics.prngine.RandomEnginePerf$Base.nextDoubleRange","0"
"JeremyLWright/euler","com.codestrokes.EulerBenchmark.Problem001","0"
"jerrinot/FieldMagic","uk.co.rockstable.experiements.codegen.reflection.ReflectionTest.directMatcher","0"
"jerrinot/FieldMagic","uk.co.rockstable.experiements.codegen.reflection.ReflectionTest.cachingReflectionMatcher","0"
"jerrinot/FieldMagic","uk.co.rockstable.experiements.codegen.reflection.ReflectionTest.naiveReflectionMatcher","0"
"jerrinot/FieldMagic","uk.co.rockstable.experiements.codegen.reflection.perf.PerformanceTest.benchmarkQueryLikeWorkload","0"
"jerrinot/FieldMagic","uk.co.rockstable.experiements.codegen.reflection.perf.PerformanceTest.benchmarkStringExtraction","0"
"jerrinot/FieldMagic","uk.co.rockstable.experiements.codegen.reflection.perf.PerformanceTest.benchmarkIntegerExtraction","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountBoolean.countMales","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountBoolean.countFemales","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountBoolean.countBoth","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountInteger.countMales","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountInteger.countFemales","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountInteger.countBoth","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountChar.countMales","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountChar.countFemales","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.StudentCountChar.countBoth","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.ClassNameHashCode.countClassSeenViaRandomSelection","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.IntegerCompareViaSort.integerCompareSortThenCount","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.IntegerCompareViaSort.aMinusBCompareSortThenCount","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.GuanineCytosineCount.countUsingSimpleIfStatements","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.GuanineCytosineCount.countUsingSimpleBooleanToIntConversionStatements","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.GuanineCytosineCount.countUsingSwitchStatements","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.GuanineCytosineCount.countUsingAnArray","0"
"JervenBolleman/java-benchmarks","sib.swiss.swissprot.ClassHashCode.countClassSeenViaRandomSelection","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.env.JMHEnvTokyoCabinetReadBenchmark.successiveRead","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.env.JMHEnvTokyoCabinetReadBenchmark.randomRead","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.env.JMHEnvTokyoCabinetWriteBenchmark.successiveWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.env.JMHEnvTokyoCabinetWriteBenchmark.randomWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetLikeWriteBenchmark.successiveWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetLikeWriteBenchmark.randomWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetLikeReadBenchmark.successiveRead","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetLikeReadBenchmark.randomRead","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHHashContainersBenchmark.hashMapGet","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHHashContainersBenchmark.hashMapGetMissingKey","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHObjectCacheBenchmark.cacheTryKey","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHObjectCacheBenchmark.cacheTryMissingKey","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHHashMapBenchmark.hashMapGet","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHHashMapBenchmark.hashMapGetMissingKey","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.mapdb.JMHMapDbTokyoCabinetWriteBenchmark.successiveWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.mapdb.JMHMapDbTokyoCabinetWriteBenchmark.randomWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.mapdb.JMHMapDbTokyoCabinetReadBenchmark.successiveRead","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.mapdb.JMHMapDbTokyoCabinetReadBenchmark.randomRead","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetReadBenchmark.successiveRead","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetReadBenchmark.randomRead","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetWriteBenchmark.successiveWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.je.JMH_JETokyoCabinetWriteBenchmark.randomWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.chronicle.JMHChronicleMapTokyoCabinetReadBenchmark.successiveRead","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.chronicle.JMHChronicleMapTokyoCabinetReadBenchmark.randomRead","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.chronicle.JMHChronicleMapTokyoCabinetWriteBenchmark.successiveWrite","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.chronicle.JMHChronicleMapTokyoCabinetWriteBenchmark.randomWrite","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.h2.JMH_MVStoreTokyoCabinetWriteBenchmark.successiveWrite","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.h2.JMH_MVStoreTokyoCabinetWriteBenchmark.randomWrite","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.h2.JMH_MVStoreTokyoCabinetReadBenchmark.successiveRead","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.h2.JMH_MVStoreTokyoCabinetReadBenchmark.randomRead","1"
"JetBrains/xodus","jetbrains.exodus.benchmark.lmdb.JMH_LMDBTokyoCabinetWriteBenchmark.successiveWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.lmdb.JMH_LMDBTokyoCabinetWriteBenchmark.randomWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.lmdb.JMH_LMDBTokyoCabinetReadBenchmark.successiveRead","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.lmdb.JMH_LMDBTokyoCabinetReadBenchmark.randomRead","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringInternerBenchmark.jdkIntern","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringInternerBenchmark.xdIntern","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLong23TreeBenchmark.getExisting","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLong23TreeBenchmark.getMissing","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLong23TreeBenchmark.treeMapGetExisting","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLong23TreeBenchmark.treeMapGetMissing","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringInternerMacroBenchmark.jdkInternDefault","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringInternerMacroBenchmark.jdkInternSparse","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringInternerMacroBenchmark.xdInternDefault","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringInternerMacroBenchmark.xdInternSparse","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHSmallHashMapBenchmark.newXodusMap","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHSmallHashMapBenchmark.newJdkMap","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHSmallHashMapBenchmark.newEmptyXodusMap","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.JMHSmallHashMapBenchmark.newEmptyJdkMap","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetIterationBenchmark.iterate23Tree","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetIterationBenchmark.iterateBitTree","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetIterationBenchmark.iterateTreeMap","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetBenchmark.get23TreeExisting","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetBenchmark.get23TreeMissing","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetBenchmark.getBitTreeExisting","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetBenchmark.getBitTreeMissing","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetBenchmark.treeMapGetExisting","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetBenchmark.treeMapGetMissing","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetFillBenchmark.fillTreeMap","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetFillBenchmark.fill23Tree","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.dataStructures.persistent.JMHPersistentLongSetFillBenchmark.fillBitTree","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.persistit.JMHPersistItTokyoCabinetWriteBenchmark.successiveWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.persistit.JMHPersistItTokyoCabinetWriteBenchmark.randomWrite","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.persistit.JMHPersistItTokyoCabinetReadBenchmark.successiveRead","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.persistit.JMHPersistItTokyoCabinetReadBenchmark.randomRead","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testMergeSort","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testMergeSortWithArrayList","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testMergeSortWithValueGetter","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testTimSort","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testQuickSort","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testHeapSort","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testHeapSortWithValueGetter","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testNoSort","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testKeapSort","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.query.InMemorySortBenchmark.testBoundedSort","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.crypto.JMHStreamCipherBenchmarks.getSalsa20Provider","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.crypto.JMHStreamCipherBenchmarks.getChaChaProvider","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.crypto.JMHStreamCipherBenchmarks.initSalsa20Cipher","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.crypto.JMHStreamCipherBenchmarks.initChaChaCipher","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.crypto.JMHStreamCipherBenchmarks.salsa20Crypt","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.crypto.JMHStreamCipherBenchmarks.chaChaCrypt","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringBindingTest.byteArray2string","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringBindingTest.byteArray2byteArray","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringBindingTest.stringBinding2string","0"
"JetBrains/xodus","jetbrains.exodus.benchmark.util.JMHStringBindingTest.stringBinding2byteArray","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogSumExpBenchmark.scalarLSE","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogSumExpBenchmark.scalarLSEUnrolled2","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogSumExpBenchmark.scalarLSEUnrolled4","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogSumExpBenchmark.vectorLSE","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.ExpBenchmark.scalarFastMathExp","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.ExpBenchmark.vectorExp","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogAddExpBenchmark.scalar","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogAddExpBenchmark.vector","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.Expm1Benchmark.scalarFastMath","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.Expm1Benchmark.scalarMath","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.Expm1Benchmark.vector","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.WeightedSumBenchmark.simpleDot","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.WeightedSumBenchmark.dot","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.WeightedSumBenchmark.nativeDot","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.WeightedSumBenchmark.shortDot","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.SumBenchmark.simpleSum","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.SumBenchmark.javaSum","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.SumBenchmark.nativeSum","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.SDBenchmark.simpleSD","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.SDBenchmark.javaSD","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.SDBenchmark.nativeSD","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogBenchmark.scalar","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogBenchmark.vectorBoostSimd","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.LogBenchmark.vectorYeppp","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.Log1pBenchmark.scalarFastMath","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.Log1pBenchmark.scalarMath","0"
"JetBrains-Research/viktor","org.jetbrains.bio.viktor.Log1pBenchmark.vector","0"
"jfaleiro/keyvalue","keyvalue.DefaultKeyValueBenchmark.get","0"
"jgrapht/jgrapht","org.jgrapht.alg.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.flow.MaximumFlowAlgorithmPerformanceTest$RandomGraphBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase.generateGraphBenchmark","0"
"jgrapht/jgrapht","org.jgrapht.perf.graph.GraphPerformanceTest$DirectedGraphBenchmarkBase.graphPerformanceBenchmark","0"
"jgrapht/jgrapht","org.jgrapht.perf.matching.PathGrowingWeightedMatchingPerformanceTest$RandomGraphBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.clique.MaximalCliqueEnumerationPerformanceTest$RandomGraphBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphVSStaticGraphPerformanceTest$DynamicCycleDetectorRandomGraphBenchmark.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphVSStaticGraphPerformanceTest$StaticGraphWithCycleDetectorRandomGraphBenchmark.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.graph.DirectedAcyclicGraphPerformanceTest$RandomGraphBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.matching.MaxCardinalityMatchingPerformanceTest$RandomGraphBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.matching.MaximumCardinalityBipartiteMatchingPerformanceTest$RandomGraphBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.lca.LowestCommonAncestorAlgorithmPerformanceTest$RandomTreeBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.lca.LowestCommonAncestorAlgorithmPerformanceTest$RandomForestBenchmarkBase.run","0"
"jgrapht/jgrapht","org.jgrapht.perf.matching.blossom.v5.KolmogorovMinimumWeightPerfectMatchingPerformanceTest.testBlossomV","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDeltaSteppingGnm","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDijkstraGnm","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testBellmanFordGnm","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDeltaSteppingGnp","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDijkstraGnp","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testBellmanFordGnp","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDeltaSteppingBarabasiAlbert","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDijkstraBarabasiAlbert","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testBellmanFordBarabasiAlbert","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDeltaSteppingWattsStogatz","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDijkstraWattsStogatz","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testBellmanFordWattsStogatz","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDeltaSteppingComplete","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testDijkstraComplete","0"
"jgrapht/jgrapht","org.jgrapht.perf.shortestpath.DeltaSteppingShortestPathPerformance.testBellmanFordComplete","0"
"jharting/weld-collections-benchmark","org.jboss.weld.benchmark.set.performance.AbstractSetPerformanceBenchmark.testSetHit","0"
"jharting/weld-collections-benchmark","org.jboss.weld.benchmark.set.performance.AbstractSetPerformanceBenchmark.testSetMiss","0"
"jharting/weld-collections-benchmark","org.jboss.weld.benchmark.set.performance.AbstractSetPerformanceBenchmark.testIterator","0"
"jharting/weld-collections-benchmark","org.jboss.weld.benchmark.cache.performance.AbstractCacheBenchmark.testGetValue","0"
"jhawo82882/MDP3Sample","uk.co.real_logic.protobuf.MarketDataBenchmark.testEncode","0"
"jhawo82882/MDP3Sample","uk.co.real_logic.protobuf.MarketDataBenchmark.testDecode","0"
"jhawo82882/MDP3Sample","uk.co.real_logic.protobuf.CarBenchmark.testEncode","0"
"jhawo82882/MDP3Sample","uk.co.real_logic.protobuf.CarBenchmark.testDecode","0"
"jhawo82882/MDP3Sample","uk.co.real_logic.sbe.MarketDataBenchmark.testEncode","0"
"jhawo82882/MDP3Sample","uk.co.real_logic.sbe.MarketDataBenchmark.testDecode","0"
"jhawo82882/MDP3Sample","uk.co.real_logic.sbe.CarBenchmark.testEncode","0"
"jhawo82882/MDP3Sample","uk.co.real_logic.sbe.CarBenchmark.testDecode","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.artificerPoc.SimpleArtificerGraphBenchmark.testBasicApiWithSout","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphBenchmark.testBasicBlueprintsApiWithSout","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphBenchmark.testBasicBlueprintsApi","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphBenchmark.testBasicBlueprintsApiForAllNodesFindSomethingComplex","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphBenchmark.testBasicBlueprintsApiForAllEdgesAddTheReverseOne","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphBenchmark.testBasicBlueprintsApiGraphQuerying","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphIndexedBenchmark.testBasicBlueprintsApiWithSout","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphIndexedBenchmark.testBasicBlueprintsApi","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphIndexedBenchmark.testBasicBlueprintsApiForAllNodesFindSomethingComplex","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphIndexedBenchmark.testBasicBlueprintsApiForAllEdgesAddTheReverseOne","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphIndexedBenchmark.testBasicBlueprintsApiGraphQuerying","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphGremlinBenchmark.testGremlinSimpleQuery","0"
"Jiri-Kremser/inventory-benchmark","org.hawkular.inventory.titanPoc.SimpleTitanGraphGremlinBenchmark.testGremlinCompiledQuery","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.read.IapBooleanReadBenchmark.iapReadSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.read.IapBooleanReadBenchmark.iapReadMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.read.IapBooleanReadBenchmark.jacksonReadSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.read.IapBooleanReadBenchmark.jacksonReadMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.read.IapTableReadBenchmark.iapReadTable","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.read.IapTableReadBenchmark.jacksonReadTable","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.read.IonObjectReaderBenchmark.testIapReader","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.performance.IapReadLengthBenchmarks.oldReadLength","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.performance.IapReadLengthBenchmarks.newReadLength","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.performance.IapReadLengthBenchmarks.switchReadLength","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenHashMapBenchmark.mapIap10Keys","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenHashMapBenchmark.mapJdk10Keys","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenArrayListBenchmark.openArrayList10Sum","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenArrayListBenchmark.openArrayList100Sum","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenArrayListBenchmark.jdkArrayList10SumUsingGet","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenArrayListBenchmark.jdkArrayList100SumUsingGet","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenArrayListBenchmark.jdkArrayList10SumUsingForEach","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenArrayListBenchmark.jdkArrayList100SumUsingForEach","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenArrayListBenchmark.jdkArrayList10SumUsingIterator","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.util.OpenArrayListBenchmark.jdkArrayList100SumUsingIterator","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapStringWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapStringWriteBenchmark.iapWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapStringWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapStringWriteBenchmark.jacksonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapLongWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapLongWriteBenchmark.iapWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapLongWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapLongWriteBenchmark.jacksonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.iapIonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.iapIonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.iapIonWriteArray10x10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.iapIonWriteArray1000x10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonJsonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonJsonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonJsonWriteArray10x10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonJsonWriteArray1000x10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonMsgPackWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonMsgPackWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonMsgPackWriteArray10x10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonMsgPackWriteArray1000x10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonCborWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonCborWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonCborWriteArray10x10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapBooleanWriteBenchmark.jacksonCborWriteArray1000x10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapDoubleWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapDoubleWriteBenchmark.iapWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapDoubleWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapDoubleWriteBenchmark.jacksonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapMixedWriteBenchmark.ionWriter","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapMixedWriteBenchmark.ionWriterOptimized","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapMixedWriteBenchmark.ionObjectWriter","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapMixedWriteBenchmark.jsonWrite","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapMixedWriteBenchmark.msgPackWrite","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapMixedWriteBenchmark.cborWrite","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapMixedWriteBenchmark.protoBufWrite","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.custom.IonIntCustomWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.custom.IonIntCustomWriteBenchmark.iapCustomWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.custom.IonIntCustomWriteBenchmark.iapWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.custom.IonIntCustomWriteBenchmark.iapCustomWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.custom.IonIntCustomWriteBenchmark.iapCustomWriteMultiOptimized","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.custom.IonIntCustomWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.custom.IonIntCustomWriteBenchmark.jacksonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapShortWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapShortWriteBenchmark.iapWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapShortWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapShortWriteBenchmark.jacksonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapFloatWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapFloatWriteBenchmark.iapWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapFloatWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapFloatWriteBenchmark.jacksonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonWriterBenchmark.protoBufWritePojo10Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonWriterBenchmark.ionWriterPojo1Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonWriterBenchmark.ionWriterPojo10Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonWriterBenchmark.ionWriterPojo10LongNoObject","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonWriterBenchmark.ionWriterPojo10LongNoObjectNoKeys","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonWriterBenchmark.ionWriterPojo10LongNoKeys","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonWriterBenchmark.ionObjectWriterPojo1Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonWriterBenchmark.ionObjectWriterPojo10Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IonObjectWriterBenchmark.testIapWriter","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapTableWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapTableWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapIntWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapIntWriteBenchmark.iapWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapIntWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.write.IapIntWriteBenchmark.jacksonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.proto.ProtocolBuffersWriteBenchmarks.testSerialize","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.ionRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.ionReadArray10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.ionReadArray100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.ionReadArray1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.ionRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.ionReadArray10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.ionReadArray100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.ionReadArray1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.jsonRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.jsonRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.jsonRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.jsonRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.jsonRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.jsonRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.jsonRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.jsonRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.msgPackRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.msgPackRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.msgPackRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.msgPackRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.msgPackRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.msgPackRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.msgPackRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.msgPackRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.cborRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.cborRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.cborRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.cborRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.cborRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.cborRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.cborRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonLongReadBenchmark.cborRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.ionRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.ionReadArray10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.ionReadArray100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.ionReadArray1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.ionRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.ionReadArray10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.ionReadArray100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.ionReadArray1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.jsonRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.jsonRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.jsonRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.jsonRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.jsonRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.jsonRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.jsonRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.jsonRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.msgPackRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.msgPackRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.msgPackRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.msgPackRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.msgPackRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.msgPackRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.msgPackRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.msgPackRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.cborRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.cborRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.cborRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.cborRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.cborRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.cborRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.cborRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonDoubleReadBenchmark.cborRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.ionObjectReaderRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.ionObjectReaderRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.ionReaderRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.ionReaderOptimizedRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.ionReaderOptimizedStreamRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.jsonRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.jsonRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.msgPackRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.msgPackRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.cborRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.cborRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonMixedReadBenchmark.protobufRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.ionRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.ionReadArray10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.ionReadArray100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.ionReadArray1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.ionRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.ionReadArray10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.ionReadArray100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.ionReadArray1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.jsonRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.jsonRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.jsonRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.jsonRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.jsonRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.jsonRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.jsonRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.jsonRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.msgPackRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.msgPackRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.msgPackRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.msgPackRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.msgPackRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.msgPackRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.msgPackRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.msgPackRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.cborRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.cborRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.cborRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.cborRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.cborRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.cborRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.cborRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonBooleanReadBenchmark.cborRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.ionRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.ionReadArray10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.ionReadArray100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.ionReadArray1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.ionRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.ionReadArray10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.ionReadArray100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.ionReadArray1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.jsonRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.jsonRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.jsonRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.jsonRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.jsonRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.jsonRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.jsonRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.jsonRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.msgPackRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.msgPackRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.msgPackRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.msgPackRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.msgPackRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.msgPackRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.msgPackRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.msgPackRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.cborRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.cborRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.cborRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.cborRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.cborRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.cborRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.cborRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonStringReadBenchmark.cborRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.ionRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.ionReadArray10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.ionReadArray100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.ionReadArray1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.ionRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.ionReadArray10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.ionReadArray100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.ionReadArray1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.jsonRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.jsonRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.jsonRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.jsonRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.jsonRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.jsonRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.jsonRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.jsonRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.msgPackRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.msgPackRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.msgPackRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.msgPackRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.msgPackRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.msgPackRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.msgPackRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.msgPackRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.cborRead1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.cborRead10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.cborRead100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.cborRead1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.cborRead1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.cborRead10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.cborRead100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.read.IonFloatReadBenchmark.cborRead1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.readanduse.IonReadAndUseBenchmark.iapReadObjectAndUse","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.readanduse.IonReadAndUseBenchmark.iapReadDirectAndUse","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.performance.IapReadLengthBenchmarks.oldReadLength","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.performance.IapReadLengthBenchmarks.newReadLength","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.performance.IapReadLengthBenchmarks.switchReadLength","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.proto.ProtocolBuffersWriteBenchmarks.testSerialize","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenHashMapBenchmark.mapIap10Keys","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenHashMapBenchmark.mapJdk10Keys","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenArrayListBenchmark.openArrayList10Sum","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenArrayListBenchmark.openArrayList100Sum","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenArrayListBenchmark.jdkArrayList10SumUsingGet","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenArrayListBenchmark.jdkArrayList100SumUsingGet","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenArrayListBenchmark.jdkArrayList10SumUsingForEach","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenArrayListBenchmark.jdkArrayList100SumUsingForEach","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenArrayListBenchmark.jdkArrayList10SumUsingIterator","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.util.OpenArrayListBenchmark.jdkArrayList100SumUsingIterator","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.ionWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.ionWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.ionWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.ionWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.ionWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.ionWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.ionWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.ionWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonJsonWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonJsonWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonJsonWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonJsonWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonJsonWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonJsonWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonJsonWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonJsonWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonMsgPackWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonMsgPackWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonMsgPackWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonMsgPackWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonMsgPackWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonMsgPackWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonMsgPackWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonMsgPackWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonCborWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonCborWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonCborWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonCborWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonCborWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonCborWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonCborWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonBooleanWriteBenchmark.jacksonCborWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonTableWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonTableWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.ionWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.ionWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.ionWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.ionWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.ionWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.ionWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.ionWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.ionWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonJsonWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonJsonWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonJsonWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonJsonWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonJsonWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonJsonWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonJsonWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonJsonWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonMsgPackWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonMsgPackWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonMsgPackWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonMsgPackWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonMsgPackWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonMsgPackWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonMsgPackWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonMsgPackWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonCborWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonCborWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonCborWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonCborWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonCborWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonCborWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonCborWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonFloatWriteBenchmark.jacksonCborWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.ionWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.ionWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.ionWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.ionWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.ionWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.ionWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.ionWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.ionWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonJsonWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonJsonWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonJsonWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonJsonWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonJsonWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonJsonWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonJsonWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonJsonWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonMsgPackWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonMsgPackWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonMsgPackWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonMsgPackWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonMsgPackWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonMsgPackWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonMsgPackWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonMsgPackWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonCborWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonCborWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonCborWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonCborWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonCborWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonCborWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonCborWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonLongWriteBenchmark.jacksonCborWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.ionWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.ionWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.ionWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.ionWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.ionWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.ionWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.ionWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.ionWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonJsonWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonJsonWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonJsonWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonJsonWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonJsonWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonJsonWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonJsonWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonJsonWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonMsgPackWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonMsgPackWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonMsgPackWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonMsgPackWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonMsgPackWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonMsgPackWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonMsgPackWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonMsgPackWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonCborWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonCborWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonCborWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonCborWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonCborWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonCborWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonCborWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonDoubleWriteBenchmark.jacksonCborWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.custom.IonIntCustomWriteBenchmark.iapWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.custom.IonIntCustomWriteBenchmark.iapCustomWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.custom.IonIntCustomWriteBenchmark.iapWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.custom.IonIntCustomWriteBenchmark.iapCustomWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.custom.IonIntCustomWriteBenchmark.iapCustomWriteMultiOptimized","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.custom.IonIntCustomWriteBenchmark.jacksonWriteSingle","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.custom.IonIntCustomWriteBenchmark.jacksonWriteMulti","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonWriterBenchmark.protoBufWritePojo10Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonWriterBenchmark.ionWriterPojo1Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonWriterBenchmark.ionWriterPojo10Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonWriterBenchmark.ionWriterPojo10LongNoObject","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonWriterBenchmark.ionWriterPojo10LongNoObjectNoKeys","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonWriterBenchmark.ionWriterPojo10LongNoKeys","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonWriterBenchmark.ionObjectWriterPojo1Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonWriterBenchmark.ionObjectWriterPojo10Long","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonMixedWriteBenchmark.ionWriter","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonMixedWriteBenchmark.ionWriterOptimized","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonMixedWriteBenchmark.ionObjectWriter","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonMixedWriteBenchmark.jsonWrite","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonMixedWriteBenchmark.msgPackWrite","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonMixedWriteBenchmark.cborWrite","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonMixedWriteBenchmark.protoBufWrite","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.ionWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.ionWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.ionWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.ionWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.ionWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.ionWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.ionWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.ionWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonJsonWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonJsonWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonJsonWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonJsonWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonJsonWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonJsonWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonJsonWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonJsonWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonMsgPackWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonMsgPackWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonMsgPackWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonMsgPackWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonMsgPackWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonMsgPackWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonMsgPackWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonMsgPackWrite1000_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonCborWrite1_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonCborWrite10_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonCborWrite100_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonCborWrite1000_1","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonCborWrite1_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonCborWrite10_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonCborWrite100_10","0"
"jjenkov/iap-tools-java-benchmarks","com.jenkov.iap.ion.write.IonStringWriteBenchmark.jacksonCborWrite1000_10","0"
"jkirsch/spex","edu.tuberlin.spex.block.BlockCompressedSparseRowFormatBenchmark.CompressSparseRow","0"
"jkirsch/spex","edu.tuberlin.spex.block.BlockCompressedSparseRowFormatBenchmark.BlockCompressedSparseRow","0"
"jkirsch/spex","edu.tuberlin.spex.compression.CompressionTest.multiplySparse","0"
"jkirsch/spex","edu.tuberlin.spex.compression.CompressionTest.multiplyCompressed","0"
"jkirsch/spex","edu.tuberlin.spex.compression.CompressedMultiplicationBenchmark.compressionTest","0"
"jkirsch/spex","edu.tuberlin.spex.compression.CompressedMultiplicationBenchmark.decompressisonTest","0"
"jkirsch/spex","edu.tuberlin.spex.yeppp.MultiplicationBenchmark.mjt","0"
"jkirsch/spex","edu.tuberlin.spex.yeppp.MultiplicationBenchmark.yepp","0"
"jmiettinen/jradixheap","fi.eonwe.heaps.HeapBenchmarks.insertHPPCRT","0"
"jmiettinen/jradixheap","fi.eonwe.heaps.HeapBenchmarks.insertRadix","0"
"jmiettinen/jradixheap","fi.eonwe.heaps.HeapBenchmarks.insertFibo","0"
"jmiettinen/jradixheap","fi.eonwe.heaps.HeapBenchmarks.insertJDK","0"
"jmiettinen/jradixheap","fi.eonwe.heaps.PriorityHeapBenchmarks.decreaseAndRemoveMinRadix","0"
"jmiettinen/jradixheap","fi.eonwe.heaps.PriorityHeapBenchmarks.decreaseAndRemoveMinFibonacci","0"
"jmnarloch/trie","io.jmnarloch.trie.BaseTrieBenchmark.benchmarkPut","0"
"jmnarloch/trie","io.jmnarloch.trie.BaseTrieBenchmark.benchmarkGet","0"
"jmnarloch/trie","io.jmnarloch.trie.BaseTrieBenchmark.benchmarkContains","0"
"jmnarloch/trie","io.jmnarloch.trie.BaseTrieBenchmark.benchmarkPrefix","0"
"jmnarloch/trie","io.jmnarloch.trie.BaseTrieBenchmark.benchmarkPrefixKey","0"
"jmnarloch/trie","io.jmnarloch.trie.BaseTrieBenchmark.benchmarkKeys","0"
"jnordwick/zerog-grisu","zerog.util.grisu.IntBenchmark.ints_doubleto","0"
"jnordwick/zerog-grisu","zerog.util.grisu.IntBenchmark.ints_grisustr","0"
"jnordwick/zerog-grisu","zerog.util.grisu.IntBenchmark.ints_grisubuf","0"
"jnordwick/zerog-grisu","zerog.util.grisu.LowPrecBenchmark.lowp_doubleto","0"
"jnordwick/zerog-grisu","zerog.util.grisu.LowPrecBenchmark.lowp_grisustr","0"
"jnordwick/zerog-grisu","zerog.util.grisu.LowPrecBenchmark.lowp_grisubuf","0"
"jnordwick/zerog-grisu","zerog.util.grisu.RandomBenchmark.rand_doubleto","0"
"jnordwick/zerog-grisu","zerog.util.grisu.RandomBenchmark.rand_grisustr","0"
"jnordwick/zerog-grisu","zerog.util.grisu.RandomBenchmark.rand_grisubuf","0"
"johnlcox/motif","com.leacox.motif.benchmarks.FactorialBenchmark.factorialConditional","0"
"johnlcox/motif","com.leacox.motif.benchmarks.FactorialBenchmark.factorialPatternMatching","0"
"johnlcox/motif","com.leacox.motif.benchmarks.FizzBuzzBenchmark.fizzbuzzConditional","0"
"johnlcox/motif","com.leacox.motif.benchmarks.FizzBuzzBenchmark.fizzBuzzPatternMatching","0"
"jon-hanson/funcj","org.javafp.parsec4j.expr.JmhTest.testGood","0"
"jon-hanson/funcj","org.javafp.parsec4j.expr.JmhTest.testBad","0"
"jon-hanson/funcj","org.javafp.parsec4j.text.JmhTest.testGood","0"
"jon-hanson/funcj","org.javafp.parsec4j.text.JmhTest.testBad","0"
"jon-hanson/funcj","org.funcj.json.JmhTest.testSuccessParse","0"
"jon-hanson/funcj","org.funcj.parsec4j.expr.JmhTest.testGood","0"
"jon-hanson/funcj","org.funcj.parsec4j.expr.JmhTest.testBad","0"
"jon-hanson/funcj","org.funcj.json.JsonTest.benchSuccessParse","0"
"jon-hanson/funcj","org.funcj.parser.expr.GrammarTest.testGood","0"
"jon-hanson/funcj","org.funcj.parser.expr.GrammarTest.testBad","0"
"jon-hanson/funcj","org.typemeta.funcj.codec.json.JmhCodecTest.testAll","0"
"josegom/training","org.apache.kerby.benchmark.JsonBackendBenchmark.queryTest","0"
"josegom/training","org.apache.kerby.benchmark.KrbCodecBenchmark.decodeWithKerby","0"
"josegom/training","org.apache.kerby.benchmark.KrbCodecBenchmark.decodeWithApacheDS","0"
"joyent/java-http-signature","com.joyent.http.signature.BenchmarkSigner.signHeaderThroughput","0"
"joyent/java-http-signature","com.joyent.http.signature.BenchmarkSigner.signHeaderLatency","0"
"joyent/java-http-signature","com.joyent.http.signature.BenchmarkSigner.verifyHeaderThroughput","0"
"joyent/java-http-signature","com.joyent.http.signature.BenchmarkSigner.verifyHeaderLatency","0"
"joyent/java-http-signature","com.joyent.http.signature.BenchmarkKeyFingerprinter.fingerprintThroughput","0"
"joyent/java-http-signature","com.joyent.http.signature.BenchmarkKeyFingerprinter.fingerprintLatency","0"
"joyent/java-http-signature","com.joyent.http.signature.DefaultSignDateAsStringBenchmark.thread1","0"
"joyent/java-http-signature","com.joyent.http.signature.DefaultSignDateAsStringBenchmark.thread4","0"
"joyent/java-http-signature","com.joyent.http.signature.DefaultSignDateAsStringBenchmark.thread64","0"
"joyent/java-manta","com.joyent.manta.benchmark.EncryptingEntityBenchmark.encryptOneMiB","0"
"joyent/java-manta","com.joyent.manta.benchmark.EncryptingEntityBenchmark.encryptAndDigestOneMiB","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTest.javaSystem","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTest.jodaNow","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTest.jodaNowUTC","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTest.jodaNowInstant","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTest.javaNow","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTest.javaNowUTC","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTest.javaNowInstant","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTest.jodaNew","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.logger.ChronicleBench.writeWithCommit","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.logger.DisruptorBench.processEvents","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.HazelcastMap.hazelcastMapGet","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBOffHeap.writeNoCommit","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBOffHeap.writeWithCommit","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBOffHeap.writeAnd4Reads","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBOffHeap.readOnly","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBBenchmark.writeNoCommit","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBBenchmark.writeWithCommit","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBBenchmark.writeAnd4Reads","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBBenchmark.readOnly","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBBenchmarkInMem.writeNoCommit","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBBenchmarkInMem.writeWithCommit","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBBenchmarkInMem.writeAnd4Reads","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.MapDBBenchmarkInMem.readOnly","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.HugeCollections.write","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.HugeCollections.writeReadRead","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.jodaNow","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.jodaNew","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.guavaPutNoTO","1"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.guavaPutWrTO","1"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.guavaPutRdTO","1"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.mapPut","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.guavaGetNoTO","1"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.guavaGetWrTO","1"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.guavaGetRdTO","1"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.mapGet","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.JavaAndGuava.javaHashMapGet","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.JavaAndGuava.javaConcurrentMapGet","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.JavaAndGuava.guavaCacheGetNoTO","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.JavaAndGuava.guavaCacheGetWrTO","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.JavaAndGuava.guavaCacheGetRdTO","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteSerializers.serKryoDefault","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteSerializers.serCompactId","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteSerializers.serCompactPqon","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteSerializers.serByteArrayCompactId","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteSerializers.serByteArrayCompactPqon","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteSerializers.serByteArray","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteSerializers.serStringBuilder","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteDeserializers.deserByteArray","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.propsVsAnnos.Properties.getClassAnnotationValue","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.propsVsAnnos.Properties.getFieldAnnotationValue","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.propsVsAnnos.Properties.getClassPropertyValue","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.propsVsAnnos.Properties.getFieldPropertyValue","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.hash.HashCode.hashCodeBonaPortable","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.hash.HashCode.hashCodeBonaPortableClass","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.hash.HashCode.hashCodeMyEnum","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.hash.HashCode.hashCodeJavaEnum","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.compression.LZ4.compressString","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.compression.LZ4.compressClass","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.compression.LZ4.uncompressString","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.compression.LZ4.uncompressClass","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.compression.LZ4.uncompressKnownSizeString","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.compression.LZ4.uncompressKnownSizeClass","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.StringSerializers.empty","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.StringSerializers.getPrivateCharAddress","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.StringSerializers.copyNewArray","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.StringSerializers.copyToExistingArray","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.StringSerializers.getMaxCodeWithCharAt","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.StringSerializers.getMaxCodeWithReflection","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.threads.BenchThreadLocal.javaPrimitive","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.threads.BenchThreadLocal.javaWrapper","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.threads.BenchThreadLocal.javaAtomic","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.threads.BenchThreadLocal.javaThreadLocal","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTestInNanos.javaSystem","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTestInNanos.jodaNow","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTestInNanos.jodaNowUTC","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTestInNanos.jodaNowInstant","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTestInNanos.javaNow","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTestInNanos.javaNowUTC","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTestInNanos.javaNowInstant","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.datetime.TimeTestInNanos.jodaNew","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.lambda.LambdaTest.javaClassicPrimitive","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.lambda.LambdaTest.javaClassicWrapper","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.lambda.LambdaTest.javaLambda","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.lambda.LambdaTest.javaClassicList","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.lambda.LambdaTest.javaLambdaListIterator","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.lambda.LambdaTest.javaLambdaParallel","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.lambda.LambdaTest.javaLambdaListIteratorParallel","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.chmPut","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.hmPut","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.chmGet","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.map.GuavaCache.hmGet","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteBoxedVsPrimitives.serializeCompactPrimitives","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteBoxedVsPrimitives.serializeCompactBoxed","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteBoxedVsPrimitives.serializeAsciiPrimitives","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteBoxedVsPrimitives.serializeAsciiBoxed","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteBoxedVsPrimitives.parseCompactPrimitives","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteBoxedVsPrimitives.parseCompactBoxed","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteBoxedVsPrimitives.parseAsciiPrimitives","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.BonaparteBoxedVsPrimitives.parseAsciiBoxed","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.EnumIterators.empty","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.EnumIterators.oldSchool","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.EnumIterators.usual","0"
"jpaw/bonaparte-java","de.jpaw.bonaparte.benchmarks.EnumIterators.newGenerated","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.countLeadingBits","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.multFPintMult","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.multFPsubNoScale","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.multFPsubWithScale","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.multFPsubWithScaleWithBD","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.multFPsubWithScaleWithBest","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.roundFast","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.roundSlow","0"
"jpaw/fixedpoint","de.jpaw.fixedpoint.benchmarks.FPMult.roundNot","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.JdpBench.callSingletons","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.JdpBench.callException","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.JdpBench.callDependents","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.JdpBench.injectSingleton","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.JdpBench.injectDependent","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.callSingletons","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.callDependents","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.callApplicationScoped","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.callDefault","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.callException","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.callASException","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.injectSingleton","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.injectDependent","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.injectApplicationScoped","0"
"jpaw/jdp","de.jpaw.jdp.benchmarks.WeldBench.injectDefault","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.MiscJava.justReset","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.MiscJava.twoCharAppends","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.MiscJava.threeCharAppends","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.MiscJava.fourCharAppends","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.MiscJava.singleStringAppend2Chars","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.MiscJava.singleStringAppend4Chars","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.MiscJava.singleStringAppend6Chars","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.MiscJava.singleStringAppend8Chars","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringConversion.withText","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringConversion.withCharset","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringConversion.encodeText","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringConversion.encodeCharset","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringConversion.encodeCesu","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringConversion.encodeCesu2","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringConversion.encodeCesuWithUnsafe","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ModVsAnd.modulusRand","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ModVsAnd.bitwiseRand","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ModVsAnd.modulusConst","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ModVsAnd.bitwiseConst","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.Autoboxing.returnNative","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.Autoboxing.returnAutoboxed","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ClassVsInterface.callInterface","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ClassVsInterface.callClass","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.Hashes.intHash","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.Hashes.byteHash","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.Hashes.shortStringHash","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.Hashes.longerStringHash","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringShortConversion.withText","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringShortConversion.withCharset","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringShortConversion.encodeText","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringShortConversion.encodeCharset","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringShortConversion.encodeCesu","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringShortConversion.encodeCesu2","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringShortConversion.encodeCesuWithUnsafe","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ByteBuilderBench.intBb","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ByteBuilderBench.charBb","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ByteBuilderBench.intDos","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.ByteBuilderBench.charDos","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringEscapers.escape2JavaApache1","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringEscapers.escape2JavaJpaw1","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringEscapers.escape2JavaApache5","0"
"jpaw/jpaw","de.jpaw.benchmarks.misc.StringEscapers.escape2JavaJpaw5","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.threads.BenchThreadLocal.javaPrimitive","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.threads.BenchThreadLocal.javaWrapper","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.threads.BenchThreadLocal.javaAtomic","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.threads.BenchThreadLocal.javaThreadLocal","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.javaSystemNanoTime","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.javaSystemMillis","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.jodaNow","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.jodaNowUTC","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.jodaNowInstant","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.javaNow","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.javaNowUTC","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.javaNowInstant","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTestInNanos.jodaNew","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTest.javaSystem","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTest.jodaNow","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTest.jodaNowUTC","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTest.jodaNowInstant","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTest.javaNow","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTest.javaNowUTC","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTest.javaNowInstant","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.datetime.TimeTest.jodaNew","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LmaxTest.jpawBatchLmaxMap","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LmaxTest.jpawBatchLmaxSetup","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LmaxTest.jpawBatchSequentialMap","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LmaxTest.jpawBatchSequentialSetup","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LmaxTest.jpawBatchParallelMap","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LmaxTest.jpawBatchParallelSetup","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LambdaTest.javaClassicPrimitive","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LambdaTest.javaClassicWrapper","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LambdaTest.javaLambda","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LambdaTest.javaClassicList","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LambdaTest.javaLambdaListIterator","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LambdaTest.javaLambdaParallel","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.LambdaTest.javaLambdaListIteratorParallel","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.StreamsTest.javaStreamSequentialMap","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.StreamsTest.javaStreamSequentialSetup","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.StreamsTest.jpawBatchSequentialMap","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.lambda.StreamsTest.jpawBatchSequentialSetup","0"
"jpaw/jpaw8","de.jpaw8.benchmarks.nashorn.CallJS.invokeSimpleJS","0"
"json-iterator/java","com.jsoniter.demo.LazyAny.jsoniter","0"
"json-iterator/java","com.jsoniter.demo.LazyAny.jsoniter_object","0"
"json-iterator/java","com.jsoniter.demo.StringOutput.jsoniter","0"
"json-iterator/java","com.jsoniter.demo.StringOutput.jackson","0"
"json-iterator/java","com.jsoniter.demo.StringOutput.dsljson","0"
"json-iterator/java","com.jsoniter.demo.ConstructorBinding.withJsoniterHashMode","0"
"json-iterator/java","com.jsoniter.demo.ConstructorBinding.withJsoniterStrictMode","0"
"json-iterator/java","com.jsoniter.demo.ConstructorBinding.withJsoniterReflection","0"
"json-iterator/java","com.jsoniter.demo.ConstructorBinding.withJackson","0"
"json-iterator/java","com.jsoniter.demo.ModelTest.jsoniter","0"
"json-iterator/java","com.jsoniter.demo.ModelTest.jsoniter_easy_mode","0"
"json-iterator/java","com.jsoniter.demo.ModelTest.fastjson","0"
"json-iterator/java","com.jsoniter.demo.ModelTest.jackson","0"
"json-iterator/java","com.jsoniter.demo.ObjectOutput.jsoniter","0"
"json-iterator/java","com.jsoniter.demo.ObjectOutput.jsoniter_easy_mode","0"
"json-iterator/java","com.jsoniter.demo.ObjectOutput.jackson","0"
"json-iterator/java","com.jsoniter.demo.ObjectOutput.dsljson","0"
"json-iterator/java","com.jsoniter.demo.ArrayBinding.withJsoniterBinding","0"
"json-iterator/java","com.jsoniter.demo.ArrayBinding.withJsoniterIterator","0"
"json-iterator/java","com.jsoniter.demo.ArrayBinding.withJackson","0"
"json-iterator/java","com.jsoniter.demo.ArrayBinding.withDsljson","0"
"json-iterator/java","com.jsoniter.demo.ListBinding.withJsoniterBinding","0"
"json-iterator/java","com.jsoniter.demo.ListBinding.withJackson","0"
"json-iterator/java","com.jsoniter.demo.ListBinding.withDsljson","0"
"json-iterator/java","com.jsoniter.demo.IntegerOutput.jsoniter","0"
"json-iterator/java","com.jsoniter.demo.IntegerOutput.jackson","0"
"json-iterator/java","com.jsoniter.demo.IntegerOutput.dsljson","0"
"json-iterator/java","com.jsoniter.demo.SetterBinding.withJsoniterHashMode","0"
"json-iterator/java","com.jsoniter.demo.SetterBinding.withJsoniterStrictMode","0"
"json-iterator/java","com.jsoniter.demo.SetterBinding.withJsoniterReflection","0"
"json-iterator/java","com.jsoniter.demo.SetterBinding.withJackson","0"
"json-iterator/java","com.jsoniter.demo.MapBinding.withJsoniterBinding","0"
"json-iterator/java","com.jsoniter.demo.MapBinding.withJackson","0"
"json-iterator/java","com.jsoniter.demo.MapBinding.withDsljson","0"
"json-iterator/java","com.jsoniter.demo.SimpleObjectBinding.withoutExistingObject","0"
"json-iterator/java","com.jsoniter.demo.SimpleObjectBinding.withBindApiStrictMode","0"
"json-iterator/java","com.jsoniter.demo.SimpleObjectBinding.withReflection","0"
"json-iterator/java","com.jsoniter.demo.SimpleObjectBinding.withExistingObject","0"
"json-iterator/java","com.jsoniter.demo.SimpleObjectBinding.withJacksonAfterburner","0"
"json-iterator/java","com.jsoniter.demo.SimpleObjectBinding.withJacksonNoAfterburner","0"
"json-iterator/java","com.jsoniter.demo.SimpleObjectBinding.withDsljson","0"
"json-iterator/java","com.jsoniter.demo.SimpleObjectBinding.withFastjson","0"
"json-iterator/java","com.jsoniter.demo.FloatOutput.jsoniter","0"
"json-iterator/java","com.jsoniter.demo.FloatOutput.jackson","0"
"json-iterator/java","com.jsoniter.demo.FloatOutput.dsljson","0"
"json-iterator/java","com.jsoniter.demo.FieldMatching.iter0","0"
"json-iterator/java","com.jsoniter.demo.FieldMatching.iter1Success","0"
"json-iterator/java","com.jsoniter.demo.PrivateFieldBinding.withJsoniter","0"
"json-iterator/java","com.jsoniter.demo.PrivateFieldBinding.withJackson","0"
"json-iterator/java","com.jsoniter.demo.ModelTest.moshi","0"
"json-iterator/java","com.jsoniter.demo.ReadString.jsoniter","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_field.BenchJsoniter.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_field.BenchJsoniter.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_field.BenchThrift.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_field.BenchThrift.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_field.BenchDslJson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_field.BenchDslJson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_field.BenchJackson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_field.BenchJackson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_int_field.BenchJsoniter.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_int_field.BenchJsoniter.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_int_field.BenchThrift.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_int_field.BenchThrift.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_int_field.BenchDslJson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_int_field.BenchDslJson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_int_field.BenchJackson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_int_field.BenchJackson.deser","0"
"json-iterator/java","com.jsoniter.demo.ReadString.dsljson","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_double_field.BenchJsoniter.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_double_field.BenchJsoniter.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_double_field.BenchThrift.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_double_field.BenchThrift.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_double_field.BenchJackson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_1_double_field.BenchJackson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_15_fields.BenchJsoniter.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_15_fields.BenchJsoniter.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_15_fields.BenchDslJson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_15_fields.BenchDslJson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_15_fields.BenchJackson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_15_fields.BenchJackson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_10_fields.BenchJsoniter.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_10_fields.BenchJsoniter.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_10_fields.BenchDslJson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_10_fields.BenchDslJson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_10_fields.BenchJackson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_10_fields.BenchJackson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_5_fields.BenchJsoniter.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_5_fields.BenchJsoniter.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_5_fields.BenchThrift.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_5_fields.BenchThrift.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_5_fields.BenchDslJson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_5_fields.BenchDslJson.deser","0"
"json-iterator/java","com.jsoniter.demo.object_with_5_fields.BenchJackson.ser","0"
"json-iterator/java","com.jsoniter.demo.object_with_5_fields.BenchJackson.deser","0"
"json-iterator/java","com.jsoniter.BenchGson.gsonDecoder","0"
"json-iterator/java","com.jsoniter.BenchGson.jsoniterReflectionDecoder","0"
"jsubercaze/simhashdb","fr.ujm.tse.lt2c.satin.simhash.benchmark.AverageTimeBenchmark.benchArrayList","1"
"jsubercaze/simhashdb","fr.ujm.tse.lt2c.satin.simhash.benchmark.AverageTimeBenchmark.benchGuava","1"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJson.benchmarkSimpleSufer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJson.benchmarkGsonSufer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJson.benchmarkJacksonSufer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJsonWithoutStreaming.benchmarkRawGson","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJsonWithoutStreaming.benchmarkRawJackson","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkGsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkJacksonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkSimpleSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkGson","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkJackson","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLongText.benchmarkGson","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLongText.benchmarkJackson","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLongText.benchmarkGsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLongText.benchmarkJacksonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLongText.benchmarkSimpleSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJson.benchmarkJsonSimpleWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJson.benchmarkGsonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJson.benchmarkJacksonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectObject.benchmarkGsonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectObject.benchmarkJacksonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectObject.benchmarkJsonSimpleWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkGsonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkJacksonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkJsonSimpleWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkFastjsonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectSingleValue.benchmarkFastjson","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLargeJson.benchmarkFastJsonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkCollectObject.benchmarkFastJsonWithJsonSurfer","0"
"jsurfer/JsonSurfer","org.jsfr.json.BenchmarkParseLongText.benchmarkFastJsonSurfer","0"
"jthelin/orbit","com.ea.orbit.actors.test.SingleNodeBenchmark.requestThroughput","0"
"jthelin/orbit","com.ea.orbit.actors.test.SingleNodeBenchmark.avgRequestTime_singleThread","0"
"jthelin/orbit","com.ea.orbit.actors.test.SingleNodeBenchmark.avgRequestTime_batched","0"
"jthelin/orbit","cloud.orbit.actors.test.SingleNodeBenchmark.requestThroughput","0"
"jthelin/orbit","cloud.orbit.actors.test.SingleNodeBenchmark.avgRequestTime_singleThread","0"
"jthelin/orbit","cloud.orbit.actors.test.SingleNodeBenchmark.avgRequestTime_batched","0"
"jthelin/orbit","cloud.orbit.actors.test.ConcurrentHashMapBenchmark.concurrentHashMap_computeIfAbsent","0"
"jthelin/orbit","cloud.orbit.actors.test.ConcurrentHashMapBenchmark.concurrentHashMap_getThenComputeIfAbsent","0"
"junkdog/artemis-odb","com.artemis.benchmark.InjectionBenchmark.createWorld_with_injectionCache","0"
"junkdog/artemis-odb","com.artemis.benchmark.InjectionBenchmark.createWorld_with_injectionCache2","0"
"junkdog/entity-system-benchmarks","com.artemis.BaselineBenchmark.baseline_world","0"
"junkdog/entity-system-benchmarks","com.artemis.PackedComponentBenchmark.packed_world","0"
"junkdog/entity-system-benchmarks","com.artemis.PlainComponentBenchmark.plain_world","0"
"junkdog/entity-system-benchmarks","com.artemis.PooledComponentBenchmark.pooled_world","0"
"junkdog/entity-system-benchmarks","com.github.esfbench.ashley.BaselineBenchmark.baseline_world","0"
"junkdog/entity-system-benchmarks","com.github.esfbench.ashley.PlainComponentBenchmark.plain_engine","0"
"junkdog/entity-system-benchmarks","com.artemis.PooledComponentBenchmark.plain_world","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.insert_remove_world","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.create_reflect","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.create_plain","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.create_handle","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.create_handle_unreflect","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.create_reflect_packed","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.create_handle_packed","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.create_handle_unreflect_packed","0"
"junkdog/entity-system-benchmarks","com.artemis.ConstructorBenchmark.create_reflect","0"
"junkdog/entity-system-benchmarks","com.artemis.ConstructorBenchmark.create_plain","0"
"junkdog/entity-system-benchmarks","com.artemis.ConstructorBenchmark.create_handle","0"
"junkdog/entity-system-benchmarks","com.artemis.ConstructorBenchmark.create_handle_unreflect","0"
"junkdog/entity-system-benchmarks","com.artemis.FastSpeedBenchmark.plain_world","0"
"junkdog/entity-system-benchmarks","com.artemis.UnpackedPackedComponentBenchmarkSimple.unpacked_world","0"
"junkdog/entity-system-benchmarks","com.artemis.NormalSpeedBenchmark.plain_world","0"
"junkdog/entity-system-benchmarks","com.artemis.UnpackedPackedComponentBenchmarkOld.unpacked_world","0"
"junkdog/entity-system-benchmarks","com.artemis.UnpackedPackedComponentBenchmark.unpacked_world","0"
"junkdog/entity-system-benchmarks","com.artemis.InsertRemoveBenchmark.insert_remove","0"
"junkdog/entity-system-benchmarks","com.artemis.BaselineBenchmark.baseline","0"
"junkdog/entity-system-benchmarks","com.artemis.PackedComponentBenchmark.packed","0"
"junkdog/entity-system-benchmarks","com.artemis.PlainComponentBenchmark.plain","0"
"junkdog/entity-system-benchmarks","com.artemis.PooledComponentBenchmark.pooled","0"
"junkdog/entity-system-benchmarks","com.github.esfbench.ashley.InsertRemoveBenchmark.insert_remove","0"
"junkdog/entity-system-benchmarks","com.github.esfbench.ashley.BaselineBenchmark.baseline","0"
"junkdog/entity-system-benchmarks","com.github.esfbench.ashley.PlainComponentBenchmark.plain","0"
"junkdog/entity-system-benchmarks","com.github.esfbench.ashley.PooledComponentBenchmark.pooled","0"
"junkdog/entity-system-benchmarks","com.artemis.TransmuterBenchmark.entity_edit","0"
"junkdog/entity-system-benchmarks","com.artemis.TransmuterBenchmark.transmuter","0"
"junkdog/entity-system-benchmarks","com.artemis.LegacyInsertRemoveBenchmark.insert_remove_legacy","0"
"junkdog/entity-system-benchmarks","com.artemis.LegacyBaselineBenchmark.baseline_legacy","0"
"junkdog/entity-system-benchmarks","com.artemis.LegacyPooledComponentBenchmark.pooled_legacy","0"
"junkdog/entity-system-benchmarks","com.artemis.LegacyPlainComponentBenchmark.plain_legacy","0"
"junkdog/entity-system-benchmarks","com.artemis.LegacyTransmuterBenchmark.entity_edit_legacy","0"
"junkdog/entity-system-benchmarks","com.artemis.LegacyTransmuterBenchmark.transmuter_legacy","0"
"junkdog/entity-system-benchmarks","com.github.antag99.retinazer.TransmuterBenchmark.entity_edit","0"
"junkdog/entity-system-benchmarks","com.github.antag99.retinazer.InsertRemoveBenchmark.insert_remove","0"
"junkdog/entity-system-benchmarks","com.github.antag99.retinazer.BaselineBenchmark.baseline","0"
"junkdog/entity-system-benchmarks","com.github.antag99.retinazer.PlainComponentBenchmark.plain","0"
"jvcaquino/DC-UFSCar-ES2-201601-Grupo6","net.sf.jabref.benchmarks.Benchmarks.parse","0"
"jvcaquino/DC-UFSCar-ES2-201601-Grupo6","net.sf.jabref.benchmarks.Benchmarks.write","0"
"jvcaquino/DC-UFSCar-ES2-201601-Grupo6","net.sf.jabref.benchmarks.Benchmarks.search","0"
"jvcaquino/DC-UFSCar-ES2-201601-Grupo6","net.sf.jabref.benchmarks.Benchmarks.inferBibDatabaseMode","0"
"jvz/nio-logger","org.musigma.logging.jmh.TimestampBenchmark.viaInstantToString","0"
"jvz/nio-logger","org.musigma.logging.jmh.TimestampBenchmark.viaDateToString","0"
"jvz/nio-logger","org.musigma.logging.jmh.FileChannelAppenderBenchmark.logToFile","0"
"jvz/nio-logger","org.musigma.logging.jmh.AsyncFileChannelAppenderBenchmark.logToFile","0"
"jvz/nio-logger","org.musigma.logging.jmh.LayoutBenchmark.simpleLayoutEncode1","0"
"jvz/nio-logger","org.musigma.logging.jmh.LayoutBenchmark.simpleLayoutEncode2","0"
"jvz/nio-logger","org.musigma.logging.jmh.LayoutBenchmark.asciiLayoutEncode1","0"
"jvz/nio-logger","org.musigma.logging.jmh.LayoutBenchmark.asciiLayoutEncode2","0"
"jvz/nio-logger","org.musigma.logging.jmh.LayoutBenchmark.asciiLayoutEncode3","0"
"jvz/nio-logger","org.musigma.logging.jmh.FileOutputStreamAppenderBenchmark.logToFile","0"
"jvz/nio-logger","org.musigma.logging.jmh.MemoryMappedFileAppenderBenchmark.logToFile","0"
"jvz/nio-logger","org.musigma.logging.jmh.RandomAccessFileAppenderBenchmark.logToFile","0"
"jvz/nio-logger","org.musigma.logging.jmh.NioFileOutputStreamAppenderBenchmark.logToFile","0"
"jvz/nio-logger","org.musigma.logging.jmh.ByteBufferBenchmark.copyViaHeap","0"
"jvz/nio-logger","org.musigma.logging.jmh.ByteBufferBenchmark.copyDirectly","0"
"kaazing/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM.testAsyncConnector","0"
"kaazing/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM.testSyncConnector","0"
"kaazing/gateway","org.kaazing.gateway.transport.udp.UdpConnectorBM.testDatagramSocket","0"
"kaazing/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM.testAsyncConnector","0"
"kaazing/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM.testSyncConnector","0"
"kaazing/gateway","org.kaazing.gateway.transport.udp.UdpAcceptorBM.testDatagramSocket","0"
"karlicoss/autohash","benchmarks.TestBenchmark.combineHashCodes","0"
"karlicoss/autohash","benchmarks.TestBenchmark.getFromSmallHashSet","1"
"karlicoss/autohash","benchmarks.TestBenchmark.putInHashSet","0"
"karlicoss/autohash","benchmarks.TestBenchmark.putInHashSetAndQuery","0"
"karlicoss/autohash","benchmarks.TestBenchmark.putInHashSetAndQueryThreeTimes","0"
"karlicoss/autohash","benchmarks.TestBenchmark.putInHashSetAndQueryOnce","0"
"karlicoss/autohash","benchmarks.TestBenchmark.putInHashSetAndQueryTenTimes","0"
"karlicoss/autohash","benchmarks.TestBenchmark.putInHashSetAndGetOnce","0"
"karlicoss/autohash","benchmarks.TestBenchmark.putInHashSetAndGetTenTimes","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledHeapAllocAndFree","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledDirectAllocAndFree","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledHeapAllocAndFree","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledDirectAllocAndFree","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledHeapAllocAndFree","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledDirectAllocAndFree","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetInt","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetShort","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetLong","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetInt","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetShort","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetLong","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArray","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArrayWrapped","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiString","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringWrapped","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArray","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArrayWrapped","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAscii","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiWrapped","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArray","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArrayWrapped","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8String","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringWrapped","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArray","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArrayWrapped","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8Wrapped","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.http.HttpRequestDecoderBenchmark.testDecodeWholeRequestInMultipleStepsMixedDelimiters","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.concurrent.FastThreadLocalBenchmark.jdkThreadLocalGet","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.concurrent.FastThreadLocalBenchmark.fastThreadLocal","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbench.internal.RecyclableArrayListBenchmark.recycleSameThread","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv4","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv6","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv6","0"
"kaustubh-walokar/grpc-poll-service","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv4","0"
"kawasima/copyfile-benchmark","net.unit8.benchmark.InputStream2OutputStream.benchmark","0"
"kawasima/copyfile-benchmark","net.unit8.benchmark.NIO2Files.benchmark","0"
"kawasima/copyfile-benchmark","net.unit8.benchmark.NIOFileChannel.benchmark","0"
"kennyledet/Algorithm-Implementations","Factorial.testStreamedParallel","0"
"kennyledet/Algorithm-Implementations","Factorial.testTreeFactorial","0"
"kevoree-modeling/benchmark","org.kevoree.modeling.Base64BenchmarkTest.parseLongTest","0"
"kevoree-modeling/benchmark","org.kevoree.modeling.Base64BenchmarkTest.base64longTest","0"
"kevoree-modeling/benchmark","org.kevoree.modeling.Finalizer.createNormal","0"
"kevoree-modeling/benchmark","org.kevoree.modeling.Finalizer.createWithFinalizer","0"
"kevoree-modeling/benchmark","org.kevoree.modeling.OffHeapLongTreeBenchmark.test","0"
"kevoree-modeling/benchmark","org.kevoree.modeling.MassiveInsertTest.test","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.ml.PolynomialRead.benchPolynomial","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.ml.GMM.benchGMM","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.ml.KDTree.benchKDTree","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.ml.PolynomialWrite.benchPolynomial","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.core.LookupNodes.benchLookupNodes","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.core.WorldStairRead.benchWorldStairRead","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.core.TimeLineInsert.benchTimeLineInsert","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.core.WorldInsert.benchWorldInsert","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.core.NewNodes.benchNewNodes","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.core.WorldRead.benchWorldRead","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.core.AddRelation.benchAddRelation","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.core.TimeLineRead.benchTimeLineRead","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.general.HashFunction.javaHashFunction","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.general.Empty.emptyBench","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.general.JavaRandom.benchJavaRandom","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.general.JavaKDTree.javaKDTree","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.ml.KDTreeTaskInsert.KDTreeTaskInsert","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.ml.KDTreeAsyncInsert.KDTreeAsyncInsert","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.ml.KDTreeTaskFind.KDTreeTaskFind","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.general.JavaKDTreeFind.KDTreeRead","0"
"kevoree-modeling/benchmark","org.kevoree.mwg.benchmark.general.JavaKDTreeInsert.javaKDTree","0"
"kgilmer/XMLObjectIterable","benchmarks.ParsingTransformBenchmarks.testReadRSSItems","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.MapConcurrency.hashtable","1"
"kickass-jmh/riviera","fr.rivieradev.jmh.MapConcurrency.concurrentMap","1"
"kickass-jmh/riviera","fr.rivieradev.jmh.JmhSimpleBenchmark.search","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.BewareTheLoops.measureRight","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.BewareTheLoops.measureWrong_1","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.BewareTheLoops.measureWrong_10","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.BewareTheLoops.measureWrong_100","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.BewareTheLoops.measureWrong_1000","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.BewareTheLoops.measureWrong_10000","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.BewareTheLoops.measureWrong_100000","0"
"kickass-jmh/riviera","fr.rivieradev.jmh.Profilers.measure","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.EmptySessionWithInsertionsAndFireBenchmark.testCreateEmptySession","1"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.UpdatesOnJoinBenchmark.test","1"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.RuleUnlikingBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.EmptySessionFireBenchmark.testCreateEmptySession","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.UpdateFireLoopBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.InsertFireLoopBenchmark.test","2"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.EmptyStatelessSessionBenchmark.testCreateEmptySession","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.UpdateJoinRootFactAndFireBenchmark.test","1"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.EmptySessionBenchmark.testCreateEmptySession","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.NodeLinkingBenchmark.test","1"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.SegmentPropagationBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.operators.BasicOperatorsBenchmark.test","2"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.OverlapsBenchmark.testOverlapsOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.AfterBenchmark.testAfterOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.BeforeBenchmark.testBeforeOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.OverlappedByBenchmark.testOverlappedByOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.FireOnlyBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.InsertOnlyBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.FireUntilHaltBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.EmptySessionFireBenchmark.testFire","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.RuleUnlinkingBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.MetByBenchmark.testMetByOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.StartedByBenchmark.testStartedByOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.IncludesBenchmark.testIncludesOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.StartsBenchmark.testStartsOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.DuringBenchmark.testDuringOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.CoincidesBenchmark.testCoincidesOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.FinishedByBenchmark.testFinishedByOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.MeetsBenchmark.testMeetsOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.cep.FinishesBenchmark.testFinishesOperator","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.throughput.EventTriggersOneAgendaFireUntilHaltBenchmark.insertEventBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.throughput.EventTriggersOneAgendaFireAllRulesBenchmark.insertEventBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.throughput.EventTriggersAllAgendasFireAllRulesBenchmark.insertEventBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.throughput.EventTriggersAllAgendasFireUntilHaltBenchmark.insertEventBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.InsertNoFireBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.AfterBeforeFusionBenchmark.timeEventsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.MeetsMetbyFusionBenchmark.timeEventsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.AdvOperatorsExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.AdvOperators2ExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.RetractFactsFromWmExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.AdvOperators4ExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.SimpleDummyFactsMatchRatioExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.CoincidesDuringFusionBenchmark.timeEventsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.UpdateFactsInWmExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.InsertLogicalFactsIntoWmExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.FinishesFinishedbyFusionBenchmark.timeEventsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.StandardOperatorsExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.StartsStartedbyFusionBenchmark.timeEventsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.SimpleRealFactsMatchRatioExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.SimpleRealFactsMatchRatioExpertBenchmark.timeFactsInsertionAndRulesFiringStateless","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.AdvOperators3ExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.InsertFactsIntoWmExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.WmManipulationExpertBenchmark.timeFactsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.OverlapsOverlappedbyFusionBenchmark.timeEventsInsertionAndRulesFiring","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.reproducers.Drools1387AccumulateBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.reproducers.Drools1387ExistsBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.buildtime.KBaseCreationFromMultipleResourcesBenchmark.timeKBaseCreationFromMultipleResources","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.buildtime.KBaseCreationFromDslAndDslrBenchmark.timeBaseCreationFromSimpleDslrAndDsl","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.buildtime.KBaseCreationFromDTablesBenchmark.timeKBaseCreationFromOneBigAndOneSmallDTable","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.buildtime.KBaseCreationFromDrlBenchmark.timeKBaseCreationFromDrl","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.InsertFireCancelSecondRuleBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.InsertFireHighestSalienceBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.InsertChainedFireBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.operators.EvalBenchmark.test","1"
"kiegroup/kie-benchmarks","org.drools.benchmarks.operators.ExistsBenchmark.test","1"
"kiegroup/kie-benchmarks","org.drools.benchmarks.operators.AccumulateBenchmark.test","1"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.runtime.SimpleRealFactsMatchRatioExpertBenchmark.timeFactsInsertionAndRulesFiringStateful","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathBuildXLSBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathComparisonRelationalVariationInsertBenchmark.testInsert","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathComparisonFromVariationInsertBenchmark.testInsert","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathBuildDRLBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathComparisonRelationalVariationUpdateBenchmark.testUpdate","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathBuildXLSXBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathBuildCSVBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathComparisonFromVariationUpdateBenchmark.testUpdate","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathComparisonOOpathVariationInsertBenchmark.testInsert","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.OOPathComparisonOOpathVariationUpdateBenchmark.testUpdate","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.comparison.OOPathComparisonRelationalVariationInsertBenchmark.testInsert","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.comparison.OOPathComparisonFromVariationInsertBenchmark.testInsert","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.comparison.OOPathComparisonRelationalVariationUpdateBenchmark.testUpdate","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.comparison.OOPathComparisonFromVariationUpdateBenchmark.testUpdate","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.comparison.OOPathComparisonOOpathVariationInsertBenchmark.testInsert","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.comparison.OOPathComparisonOOpathVariationUpdateBenchmark.testUpdate","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.runtime.AbstractOOPathInsertRuntimeBenchmark.insertFacts","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.runtime.OOPathAccumulateInsertRuntimeBenchmark.insertFacts","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.runtime.AbstractOOPathFireRuntimeBenchmark.fireRules","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.runtime.OOPathAccumulateFireRuntimeBenchmark.fireRules","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.buildtime.OOPathBuildXLSBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.buildtime.OOPathBuildDRLBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.buildtime.OOPathBuildXLSXBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.oopath.buildtime.OOPathBuildCSVBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.buildtime.BuildDRLWithoutKieBaseBenchmark.timeKBaseCreationFromDrl","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.buildtime.DMNBuildDecisionBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.buildtime.BuildKieBaseFromContainerBenchmark.getKieBaseFromContainer","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.buildtime.DMNBuildComplexDMNModelBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.buildtime.DMNBuildContextBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.buildtime.DMNBuildBusinessKnowledgeModelBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.buildtime.DMNBuildDecisionTableBenchmark.testBuildKieBase","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.buildtime.DMNBuildKJarBenchmark.createDMNRuntime","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.buildtime.BuildKJarFromResourceBenchmark.createKJarFromResource","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.FEELConditionAndLoopBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELNullComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELListComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELBooleanComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELStringComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELContextComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELRangeComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELDurationComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELNumberComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.valuescomparison.FEELDateTimeComparisonBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.FEELContextBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.mathoperations.FEELDateTimeMathOperationsBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.mathoperations.FEELDurationMathOperationsBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.mathoperations.FEELMathOperationsBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.extended.FEELTodayFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.extended.FEELModuloFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.extended.FEELNowFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.extended.FEELSplitFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELSumFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELFloorFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELMaxFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELSubstringAfterFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELStartsWithFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELSubstringFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELLowerCaseFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELUpperCaseFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELContainsFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELSubstringBeforeFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELEndsWithFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELReplaceFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELStringLengthFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELStringFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.string.FEELMatchesFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELDecimalFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELNumberFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELCountFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELCeilingFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELMinFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELReverseFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELRemoveFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELSublistFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELListContainsFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELIndexOfFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELDistinctValuesFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELAppendFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELConcatenateFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELInsertBeforeFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELSortFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.list.FEELUnionFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.functions.FEELMeanFunctionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.datetime.FEELDateTimeUnitSelectionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.datetime.FEELTimeBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.datetime.FEELDateBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.datetime.FEELTimeUnitSelectionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.datetime.FEELDurationBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.datetime.FEELDateUnitSelectionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.datetime.FEELDateTimeBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.datetime.FEELDurationUnitSelectionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.lists.FEELListFilteringBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.lists.FEELListBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.lists.FEELListSelectionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.FEELValuesConstantsBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.FEELTernaryLogicBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.expressions.FEELQuantifiedExpressionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.expressions.FEELPathExpressionBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.FEELRangeBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.operators.FEELNotOperatorBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.operators.FEELInstanceOfOperatorBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.operators.FEELInOperatorBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.operators.FEELBetweenOperatorBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.runtime.DMNEvaluateBKModelBenchmark.evaluateBusinessKnowledgeModel","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.runtime.DMNEvaluateDecisionBenchmark.evaluateDecision","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.runtime.DMNEvaluateContextBenchmark.evaluateContext","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.runtime.DMNEvaluateDecisionTableBenchmark.evaluateDecisionTable","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.EmptyStatelessSessionConcurrentBenchmark.testCreateEmptySession","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.projectjobscheduling.moveselector.ProjectJobSchedulingChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.projectjobscheduling.moveselector.ProjectJobSchedulingPillarChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.tsp.moveselector.TSPTailChainSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.tsp.moveselector.TSPSubChainSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.tsp.moveselector.TSPSubChainChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.tsp.moveselector.TSPChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.tsp.moveselector.TSPSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.heuristics.VRPTWLateAcceptanceBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.heuristics.VRPTWSimulatedAnnealingBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.heuristics.VRPTWTabuSearchBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.heuristics.VRPTWHillClimbingBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.heuristics.VRPTWStepHillClimbingBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.moveselector.VRPTWSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.moveselector.VRPTWSubChainSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.moveselector.VRPTWChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.moveselector.VRPTWSubChainChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrptw.moveselector.VRPTWTailChainSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.heuristics.CloudBalanceHillClimbingSearchBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.heuristics.CloudBalanceLateAcceptanceBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.heuristics.CloudBalanceTabuSearchBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.heuristics.CloudBalanceSimulatedAnnealingBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.heuristics.CloudBalanceStepHillClimbingBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.moveselector.CloudBalancePillarChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.moveselector.CloudBalancePillarSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.moveselector.CloudBalanceChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.cloudbalance.moveselector.CloudBalanceSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrp.moveselector.VRPSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrp.moveselector.VRPTailChainSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrp.moveselector.VRPSubChainChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrp.moveselector.VRPChangeMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.localsearch.vrp.moveselector.VRPSubChainSwapMoveSelectorBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.construction.projectjobscheduling.ProjectJobSchedulingConstructionBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.construction.tsp.TSPConstructionBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.construction.cloudbalance.CloudBalanceConstructionBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.construction.vrp.VRPConstructionBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.construction.vrp.VRPTimeWindowedConstructionBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.manual.BuildKieBaseFromContainerManyRulesBenchmark.getKieBaseFromContainer","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.AbstractFEELBenchmark.evaluateExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.AbstractFEELBenchmark.evaluateCompiledJavaExpressionBenchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.feel.AbstractFEELBenchmark.evaluateCompiledButInterpretedExpression","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.runtime.DMNEvaluatePojoInputBenchmark.evaluateModel","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.scalability.VRPMultithreadedSolvingScalabilityBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.scalability.CloudBalancingMultithreadedSolvingScalabilityBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.UpdatesOnJoinUnmatchRootNodeBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.FireOnlyWithJoinsBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.InsertFireLoopWithJoinsBenchmark.test","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.sessionpool.GetSessionBenchmark.measureKieSession","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.sessionpool.DisposeSessionBenchmark.getKieSessionFromContainer","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.reproducers.DMNEvaluateDecisionNameLengthBenchmark.evaluateDecision","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.realworld.cloudbalancing.CloudBalanceBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.realworld.vrp.VehicleRoutingBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.turtle.reproducers.DMNEvaluateDecisionNameLengthJITCompilationBenchmark.evaluateDecision","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.session.sessionpool.DisposeSessionWithProcessRuntimeBenchmark.getKieSessionFromContainer","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.buildtime.BuildKieBaseFromContainerBenchmark.getKieBaseFromContainer","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.buildtime.BuildKJarFromResourceBenchmark.createKJarFromResource","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.realworld.conferencescheduling.ConferenceSchedulingBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.jboss.qa.brms.performance.realworld.nurserostering.NurseRosteringBenchmark.benchmark","0"
"kiegroup/kie-benchmarks","org.drools.benchmarks.dmn.runtime.DMNEvaluateDecisionTablesSparseBenchmark.evaluateDecision","0"
"kno10/reversegeocode","com.kno10.reversegeocode.bench.BenchmarkReverseGeocoder.randomNumberGeneration","0"
"kno10/reversegeocode","com.kno10.reversegeocode.bench.BenchmarkReverseGeocoder.lookup","0"
"kno10/reversegeocode","com.kno10.reversegeocode.bench.BenchmarkReverseGeocoder.lookupUncached","0"
"kno10/reversegeocode","com.kno10.reversegeocode.bench.BenchmarkReverseGeocoder.openQueryClose","1"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GaussianBenchmark.javaUtilRandom","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GaussianBenchmark.threadLocalRandom","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GaussianBenchmark.fastRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GammaBenchmark.commonsMath3","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GammaBenchmark.fastRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.ExponentialBenchmark.commonsMath3_algorithmSA","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.ExponentialBenchmark.fastRng_fast","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.ExponentialBenchmark.fastRng_general","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GaussianBenchmark.fastRngWithThreadLocalRandom","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GaussianBenchmark.fastRngWithJavaUtilRandom","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GaussianBenchmark.generalRngWithThreadLocalRandom","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GaussianBenchmark.generalRngWithJavaUtilRandom","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GammaBenchmark$FixedParameters.commonsMath3","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GammaBenchmark$FixedParameters.fastRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GammaBenchmark$FixedParameters.generalRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GammaBenchmark$ArbitraryParameters.commonsMath3","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GammaBenchmark$ArbitraryParameters.fastRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.GammaBenchmark$ArbitraryParameters.generalRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.BetaBenchmark$FixedParameters.commonsMath","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.BetaBenchmark$FixedParameters.fastRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.BetaBenchmark$FixedParameters.generalRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.BetaBenchmark$ArbitraryParameters.commonsMath","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.BetaBenchmark$ArbitraryParameters.fastRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.BetaBenchmark$ArbitraryParameters.generalRng","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.NextIntWithBoundBenchmark$FixedBound.jdk","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.NextIntWithBoundBenchmark$FixedBound.nearlyDivisionless","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.NextIntWithBoundBenchmark$ArbitraryBounds.jdk","0"
"komiya-atsushi/fast-rng-java","biz.k11i.rng.NextIntWithBoundBenchmark$ArbitraryBounds.nearlyDivisionless","0"
"konik-io/itext-carriage","io.konik.benchmark.XmpAppenderBenchmark.append","0"
"konik-io/itext-carriage","io.konik.benchmark.XmpAppenderBenchmark.append_with4Threads3","0"
"konik-io/itext-carriage","io.konik.benchmark.ITextPdfInvoiceAppenderBenchmark.append_witStreams","0"
"konik-io/itext-carriage","io.konik.benchmark.ITextPdfInvoiceAppenderBenchmark.append_witStreamsAndThreads","0"
"konik-io/itext-carriage","io.konik.benchmark.ITextPdfInvoiceAppenderBenchmark.append_withByteArray","0"
"konik-io/itext-carriage","io.konik.carriage.itext.benchmark.ITextPdfInvoiceAppenderBenchmark.append","0"
"konik-io/itext-carriage","io.konik.carriage.itext.benchmark.ITextPdfInvoiceAppenderBenchmark.append_threaded","0"
"konik-io/konik","io.konik.benchmark.InvoiceTransformerBenchmark.from_inputStream","0"
"konik-io/konik","io.konik.benchmark.InvoiceTransformerBenchmark.xmlToModel","0"
"konik-io/konik","io.konik.benchmark.InvoiceTransformerBenchmark.fromModelAsync","0"
"konik-io/konik","io.konik.benchmark.InvoiceTransformerBenchmark.fromModelAsyncThreads","0"
"konik-io/konik","io.konik.benchmark.InvoiceTransformerBenchmark.fromModelToPDF_8Threads","0"
"konik-io/konik","io.konik.benchmark.InvoiceTransformerBenchmark.fromModelToPDFAllinOne_8Threads","0"
"konik-io/pdfbox-carriage","io.konik.carriage.pdfbox.benchmark.InvoiceAppenderBenchmark.append_witStreams","0"
"konik-io/pdfbox-carriage","io.konik.carriage.pdfbox.benchmark.InvoiceAppenderBenchmark.append_witStreamsAndThreads","0"
"konik-io/pdfbox-carriage","io.konik.carriage.pdfbox.benchmark.InvoiceAppenderBenchmark.append_withByteArray","0"
"konik-io/pdfbox-carriage","io.konik.carriage.pdfbox.benchmark.InvoiceAppenderBenchmark.append","0"
"konik-io/pdfbox-carriage","io.konik.carriage.pdfbox.benchmark.InvoiceAppenderBenchmark.append_witAndThreads","0"
"konik-io/pdfbox-carriage","io.konik.carriage.pdfbox.benchmark.InvoiceAppenderBenchmark.append_with4Threads","0"
"konmik/collection-benchmark","com.konmik.collectionbenchmark.BenchmarkJmh.kotlinSequence","0"
"konmik/collection-benchmark","com.konmik.collectionbenchmark.BenchmarkJmh.kotlinList","0"
"konmik/collection-benchmark","com.konmik.collectionbenchmark.BenchmarkJmh.java8","0"
"konmik/collection-benchmark","com.konmik.collectionbenchmark.BenchmarkJmh.solid","0"
"konmik/collection-benchmark","com.konmik.collectionbenchmark.BenchmarkJmh.copyList","0"
"konmik/collection-benchmark","com.konmik.collectionbenchmark.BenchmarkJmh.pass","0"
"konmik/collection-benchmark","com.konmik.collectionbenchmark.BenchmarkJmh.passUnoptimized","0"
"konmik/collection-benchmark","com.konmik.collectionbenchmark.BenchmarkJmh.imperative","0"
"Konstantin8105/Triangulation","perfomance.TriangulationBenchmark.triangulationMesh","0"
"Konstantin8105/Triangulation","perfomance.TriangulationAdvanceBenchmark.triangulationMesh","0"
"Konstantin8105/Triangulation","performance.BenchmarkSearchers.triangulationMesh","0"
"Konstantin8105/Triangulation","performance.BenchmarkCleaning.triangulationMesh","0"
"Konstantin8105/Triangulation","performance.PerformanceMemory.add","0"
"Konstantin8105/Triangulation","performance.PerformanceBenchmark.triangulationMesh","0"
"Konstantin8105/Triangulation","performance.Benchmark1000.triangulationMesh","0"
"Konstantin8105/Triangulation","performance.Benchmark10000Detail.triangulationMesh","0"
"kpavlov/fixio","org.sample.DecoderBenchmark.testDecodeMessage","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testSimpleLoop","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testSimpleLoopResultLongInnerClass","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testSimpleLoopResultTemplateClass","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testStreamReduceMethod","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testMTStreamReduceMethod","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testForEachAtomicLong","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testForEachResultTemplateClass","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testForEachResultLongClass","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.StringsBenchmark.testSimpleLoop","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.StringsBenchmark.testSimpleIteratorLoop","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.StringsBenchmark.testSimpleLoopStringBuilder","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.StringsBenchmark.testSimpleIteratorLoopStringBuilder","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.SortingBenchmark.testStringListSort","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.SortingBenchmark.testCollectionsStringListSort","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.SortingBenchmark.testStreamStringListSort","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.SortingBenchmark.testParallelStreamStringListSort","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.PrimesESBenchmark.testEratosthenesSieveV1","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.PrimesESBenchmark.testEratosthenesSieveV2","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.PrimesESBenchmark.testEratosthenesSieveV3","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testForEachSyncLong","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.testForEachArrayLong","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.executorServiceResultLong","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.basicThreadsServiceResultLong","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.IntAdderBenchmark.forkJoinResultLong","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.PrimesESBenchmark.testEratosthenesSieveV3a","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.PrimesESBenchmark.testEratosthenesSieveV4","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.StringConcatZipLoop.testLoopWithConcat","0"
"krystian-k/java-feature-bench","org.hcm.jfbench.benchmarks.StringConcatZipLoop.testLoopWithDoubleWrite","0"
"kvnxiao/kommandant","com.github.kvnxiao.ProcessingBenchmark.testMethod","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkLwfuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkGuava","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkSpring","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkLwfuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkGuava","1"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkSpring","1"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkJdk","1"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkLwfuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkGuava","1"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkSpring","1"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkLwfuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkGuava","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkSpring","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkLwfuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkGuava","1"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkSpring","1"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkLwfuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkGuava","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkSpring","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkGuava","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerAsyncBenchmark.benchmarkSpring","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkGuava","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerAsyncBenchmark.benchmarkSpring","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePreListenerBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.TriplePreListenerBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkGuava","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.SinglePostListenerAsyncBenchmark.benchmarkSpring","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkGuava","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.NoListenerAsyncBenchmark.benchmarkSpring","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkJdk","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkGuava","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerAsyncBenchmark.benchmarkSpring","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.DoublePreListenerBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-concurrent-pof","cz.znj.kvr.sw.pof.concurrent.lwfuture.concurrent.benchmark.MixedListenerBenchmark.benchmarkLwFuture","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.csv.FutureBenchmark.benchmarkSplitRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.csv.FutureBenchmark.benchmarkCsvRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.csv.ParsersBenchmark.benchmarkSplitRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.csv.ParsersBenchmark.benchmarkCsvRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.keyvaluedb.MapDbBenchmark.benchmarkSequentialSingle1M","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.keyvaluedb.MapDbBenchmark.benchmarkSequentialMulti1M","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.keyvaluedb.JavaHashMapBenchmark.benchmarkSequentialSingle1M","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.keyvaluedb.JavaHashMapBenchmark.benchmarkSequentialMulti1M","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.compress.ReadBenchmark.benchmarkStoredSingleThreadRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.compress.ReadBenchmark.benchmarkStoredMultiThreadRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.compress.ReadBenchmark.benchmarkDeflatedSingleThreadRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.compress.ReadBenchmark.benchmarkDeflatedMultiThreadRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.keyvaluedb.ChronicleMapBenchmark.benchmarkSequentialSingle1M","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.keyvaluedb.ChronicleMapBenchmark.benchmarkSequentialMulti1M","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.compress.benchmark.ZipFileParallelReadBenchmark.benchmarkStoredSingleThreadRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.compress.benchmark.ZipFileParallelReadBenchmark.benchmarkStoredMultiThreadRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.compress.benchmark.ZipFileParallelReadBenchmark.benchmarkDeflatedSingleThreadRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.commons.compress.benchmark.ZipFileParallelReadBenchmark.benchmarkDeflatedMultiThreadRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.Lz4Benchmark.benchmarkLz4JavaSingle","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.Lz4Benchmark.benchmarkLz4JavaMulti","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.Lz4Benchmark.benchmarkLz4CommonsBlockSingle","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.Lz4Benchmark.benchmarkLz4CommonsBlockMulti","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.Lz4Benchmark.benchmarkLz4CommonsFramedSingle","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.Lz4Benchmark.benchmarkLz4CommonsFramedMulti","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.JacksonBenchmark.benchmarkBytesRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.JacksonBenchmark.benchmarkStringRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.JacksonBenchmark.benchmarkStreamRead","0"
"kvr000/zbynek-java-exp","cz.znj.kvr.sw.exp.java.benchmark.compress.JacksonBenchmark.benchmarkMultiStreamRead","0"
"Lawrence-zxc/springStarter","org.springframework.boot.context.embedded.netty.HttpContentInputStreamBenchmark.addContent","0"
"Lawrence-zxc/springStarter","org.springframework.boot.context.embedded.netty.HttpContentInputStreamBenchmark.read","0"
"Lawrence-zxc/springStarter","org.springframework.boot.context.embedded.netty.NettyHttpServletResponseBenchmark.setContentType","0"
"Lawrence-zxc/springStarter","org.springframework.boot.context.embedded.netty.NettyHttpServletResponseBenchmark.setContentTypeHeader","0"
"Lawrence-zxc/springStarter","org.springframework.boot.context.embedded.netty.NettyHttpServletResponseBenchmark.getFormattedDate","0"
"Lawrence-zxc/springStarter","org.springframework.boot.context.embedded.netty.HttpResponseOutputStreamBenchmark.writeByte","0"
"Lawrence-zxc/springStarter","org.springframework.boot.context.embedded.netty.HttpResponseOutputStreamBenchmark.writeBytes","0"
"leeyikjiun/blog","sg.yikjiun.blog.TrieBenchmark.measureArrayList","0"
"leeyikjiun/blog","sg.yikjiun.blog.TrieBenchmark.measureSet","0"
"leeyikjiun/blog","sg.yikjiun.blog.TrieBenchmark.measureTrie","0"
"leeyikjiun/blog","sg.yikjiun.blog.TrieBenchmark.measureApachePatriciaTrie","0"
"leeyikjiun/blog","sg.yikjiun.blog.TrieBenchmark.measureMlaroccaPatriciaTrie","0"
"leeyikjiun/blog","sg.yikjiun.blog.TrieBenchmark.measureConcurrentRadixTree","0"
"leeyikjiun/blog","sg.yikjiun.blog.TrieBenchmark.measureTrieST","0"
"leeyikjiun/blog","sg.yikjiun.blog.RemoveFromBenchmark.eugene","0"
"leeyikjiun/blog","sg.yikjiun.blog.RemoveFromBenchmark.google","0"
"leeyikjiun/blog","sg.yikjiun.blog.RemoveFromBenchmark.yikjiun","0"
"leeyikjiun/blog","sg.yikjiun.blog.ArrayBenchmark.measureArrayListAdd","0"
"leeyikjiun/blog","sg.yikjiun.blog.ArrayBenchmark.measureArrayListAddWithSize","0"
"leeyikjiun/blog","sg.yikjiun.blog.ArrayBenchmark.measureArrayFor","0"
"leeyikjiun/blog","sg.yikjiun.blog.ArrayBenchmark.measureArrayForWithLen","0"
"leeyikjiun/blog","sg.yikjiun.blog.ArrayBenchmark.measureArrayListFor","0"
"leeyikjiun/blog","sg.yikjiun.blog.ArrayBenchmark.measureArrayListForWithLen","0"
"leeyikjiun/blog","sg.yikjiun.blog.ArrayBenchmark.measureArrayListForeach","0"
"Leibnizhu/spring-boot-starter-netty","io.gitlab.leibnizhu.sbnetty.benchmark.NettyServletBenchmark.plaintext","0"
"Leibnizhu/spring-boot-starter-netty","io.gitlab.leibnizhu.sbnetty.benchmark.NettyServletBenchmark.json","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.RFastbench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.Fastbench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.Basicbench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.RBasicbench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.Smartbench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.RSmartbench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.Sillybench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.Fixedbench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.integersum.SumBenchmark.RFixedbench","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.IntBinarySearch.standardBinarySearch","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.IntBinarySearch.aaa_hybridBinarySearch0","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.IntBinarySearch.aaa_hybridBinarySearch4","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.IntBinarySearch.aaa_hybridBinarySearch8","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.IntBinarySearch.aaa_hybridBinarySearch16","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.IntBinarySearch.aaa_hybridBinarySearch32","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.IntBinarySearch.aaa_hybridBinarySearch64","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.aaa_hybridUnsignedBinarySearch8","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.aaa_hybridUnsignedBinarySearch16","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.aaa_hybridUnsignedBinarySearch32","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.aaa_hybridUnsignedBinarySearch64","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.aaa_hybridUnsignedBinarySearch","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.branchlessBinarySearch","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.branchyBinarySearch","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.WordBitFlip.simpleFlip","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.WordBitFlip.simpleFlip2","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.ShortArrayRunCount.simplerCountRun","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.ShortArrayRunCount.simplerCountRun2","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.ShortArrayRunCount.unrolledCountRun","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.ShortArrayRunCount.countRun","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.ShortArrayRunCount.branchlessCountRun","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.ShortArrayRunCount.simplerBranchlessCountRun2","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.ShortArrayRunCount.simplerBranchlessCountRun3","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitmapOR.justClone","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitmapOR.justOr","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitmapOR.orCard","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitmapRunCount.approxNumberOfRuns","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitmapRunCount.numberOfRuns","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitSetFun.branchlessModifyAndCard","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitSetFun.branchlessModifyAndCard2","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitSetFun.branchlessModify","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitSetFun.branchymodifyAndCard","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitSetFunXor.branchlessModify","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitSetFunXor.branchlessModifyAndCard","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.countruns.BitSetFunXor.branchyModifyAndCard","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHash","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.hashCode","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHash4","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHash8","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHashByte","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.hashCodeByte","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHashByte4","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHashByte8","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHashByteBuffer","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHashByteBuffer4","0"
"lemire/microbenchmarks","me.lemire.hashing.InterleavedHash.standardHashByteBuffer8","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.algorithms.Shuffle.basicshuffle","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.algorithms.Shuffle.basicshuffle_MT","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.algorithms.Shuffle.fastFshuffle","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.algorithms.Shuffle.fastFshuffle_MT","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.aaa_linear256_16","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.RandomNumberGenerator.basicJavaRandom","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.RandomNumberGenerator.manualJavaRandom","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.RandomNumberGenerator.pcgJavaRandom","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.hybridUnsignedBinarySearch32","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.binarysearch.ShortBinarySearch.linear","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.RandomNumberGenerator.basicJavaRandomRanged1000","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.RandomNumberGenerator.basicThreadLocalRandom","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.RandomNumberGenerator.basicThreadLocalRandomRanged1000","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.RandomNumberGenerator.pcgJavaRandomRanged1000","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.Division.precompDivision","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.Division.division","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.Division.divisionBy3","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.random.Division.divisionBy3ThroughMultiplication","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.bytebuffer.DirectVSHeapVSArray.arrayTest","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.bytebuffer.DirectVSHeapVSArray.directTest","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.bytebuffer.DirectVSHeapVSArray.heapTest","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.bitset.Bitset.construct","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.bitset.Bitset.count","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.bitset.Bitset.iterate","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.basicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.tweakedbasicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.mergebasicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.basicstreamstringbuilder","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.tweakedbasicstreamstringbuilder","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.nullbasicstreamstringbuilder","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.basicsum","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.basicsumnull","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.basicsum_tostring","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.basicsumnull_tostring","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.basicstream_tostring","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.tweakedbasicstream_tostring","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.nullbasicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambda.betanullbasicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambdaJustCopy.basicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambdaJustCopy.tweakedbasicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambdaJustCopy.nullbasicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.MysteriousLambdaJustCopy.betanullbasicstream","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.StringMerge.stringsum","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.mysteries.StringMerge.stringsum_withexcept","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.rangequery.RangeMinimum.embeddedmin","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.rangequery.RangeMinimum.fncmin","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.arrays.ArraysBench.basicsum","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.arrays.ArraysBench.bufbasicsum","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.arrays.ArraysBench.basiclistsum","0"
"lemire/microbenchmarks","me.lemire.microbenchmarks.arrays.ArraysBench.bufbasiclistsum","0"
"Lessnic/CAISS","benchmarks.control.JMHBenchmarksRunner.matrixPow","0"
"Lessnic/CAISS","benchmarks.matrixes.JMHBenchmarksRunner.matrixPow","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandHandlerBenchmark.measureUserWrite","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandHandlerBenchmark.measureNettyWrite","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.RedisStateMachineBenchmark.measureDecode","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandBenchmark.createCommandUsingByteArrayCodec","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandBenchmark.createCommandUsingStringCodec","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandBenchmark.encodeCommandUsingByteArrayCodec","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandBenchmark.encodeCommandUsingByteArrayCodec2","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandBenchmark.encodeCommandUsingStringCodec","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.codec.StringCodecBenchmark.encodeUtf8Unpooled","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.codec.StringCodecBenchmark.encodeUtf8ToBuf","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.codec.StringCodecBenchmark.encodeUtf8PlainStringToBuf","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.codec.StringCodecBenchmark.encodeAsciiToBuf","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.codec.StringCodecBenchmark.encodeIsoToBuf","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.codec.StringCodecBenchmark.decodeUtf8Unpooled","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.codec.Utf8StringCodecBenchmark.encodeUnpooled","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.codec.Utf8StringCodecBenchmark.decodeUnpooled","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandBenchmark.encodeCommandUsingOldStringCodec","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.CommandBenchmark.encodeCommandUsingNewStringCodec","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.protocol.RedisEndpointBenchmark.measureUserWrite","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.RedisClusterClientBenchmark.asyncSet","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.RedisClusterClientBenchmark.asyncSetBatch","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.RedisClusterClientBenchmark.asyncSetBatchFlush","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.RedisClusterClientBenchmark.syncSet","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.RedisClusterClientBenchmark.reactiveSet","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.RedisClusterClientBenchmark.reactiveSetBatch","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.RedisClusterClientBenchmark.reactiveSetBatchFlush","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.ClusterDistributionChannelWriterBenchmark.writeKeyedCommand","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.ClusterDistributionChannelWriterBenchmark.writePlainCommand","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.RedisClientBenchmark.asyncSet","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.RedisClientBenchmark.asyncSetBatch","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.RedisClientBenchmark.asyncSetBatchFlush","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.RedisClientBenchmark.syncSet","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.RedisClientBenchmark.reactiveSet","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.RedisClientBenchmark.reactiveSetBatch","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.RedisClientBenchmark.reactiveSetBatchFlush","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.ClusterDistributionChannelWriterBenchmark.write3KeyedCommands","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.cluster.ClusterDistributionChannelWriterBenchmark.write3KeyedCommandsAsBatch","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.dynamic.RedisCommandsBenchmark.asyncSet","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.dynamic.RedisCommandsBenchmark.batchSet","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.dynamic.RedisCommandFactoryBenchmark.createRegularCommands","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.dynamic.RedisCommandFactoryBenchmark.createBatchCommands","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.dynamic.RedisCommandFactoryBenchmark.executeCommandInterfaceCommand","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.dynamic.RedisCommandFactoryBenchmark.executeAsyncCommand","0"
"lettuce-io/lettuce-core","com.lambdaworks.redis.dynamic.intercept.InvocationProxyFactoryBenchmark.run","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.RedisClusterClientBenchmark.asyncSet","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.RedisClusterClientBenchmark.asyncSetBatch","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.RedisClusterClientBenchmark.asyncSetBatchFlush","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.RedisClusterClientBenchmark.syncSet","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.RedisClusterClientBenchmark.reactiveSet","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.RedisClusterClientBenchmark.reactiveSetBatch","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.RedisClusterClientBenchmark.reactiveSetBatchFlush","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.ClusterDistributionChannelWriterBenchmark.writeKeyedCommand","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.ClusterDistributionChannelWriterBenchmark.write3KeyedCommands","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.ClusterDistributionChannelWriterBenchmark.write3KeyedCommandsAsBatch","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.ClusterDistributionChannelWriterBenchmark.writePlainCommand","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWrite","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.RedisStateMachineBenchmark.measureDecode","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandBenchmark.createCommandUsingByteArrayCodec","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandBenchmark.createCommandUsingStringCodec","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandBenchmark.encodeCommandUsingByteArrayCodec","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandBenchmark.encodeCommandUsingOldStringCodec","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandBenchmark.encodeCommandUsingNewStringCodec","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.RedisEndpointBenchmark.measureUserWrite","0"
"lettuce-io/lettuce-core","io.lettuce.core.RedisClientBenchmark.asyncSet","0"
"lettuce-io/lettuce-core","io.lettuce.core.RedisClientBenchmark.asyncSetBatch","0"
"lettuce-io/lettuce-core","io.lettuce.core.RedisClientBenchmark.asyncSetBatchFlush","0"
"lettuce-io/lettuce-core","io.lettuce.core.RedisClientBenchmark.syncSet","0"
"lettuce-io/lettuce-core","io.lettuce.core.RedisClientBenchmark.reactiveSet","0"
"lettuce-io/lettuce-core","io.lettuce.core.RedisClientBenchmark.reactiveSetBatch","0"
"lettuce-io/lettuce-core","io.lettuce.core.RedisClientBenchmark.reactiveSetBatchFlush","0"
"lettuce-io/lettuce-core","io.lettuce.core.dynamic.RedisCommandsBenchmark.asyncSet","0"
"lettuce-io/lettuce-core","io.lettuce.core.dynamic.RedisCommandsBenchmark.batchSet","0"
"lettuce-io/lettuce-core","io.lettuce.core.dynamic.RedisCommandFactoryBenchmark.createRegularCommands","0"
"lettuce-io/lettuce-core","io.lettuce.core.dynamic.RedisCommandFactoryBenchmark.createBatchCommands","0"
"lettuce-io/lettuce-core","io.lettuce.core.dynamic.RedisCommandFactoryBenchmark.executeCommandInterfaceCommand","0"
"lettuce-io/lettuce-core","io.lettuce.core.dynamic.RedisCommandFactoryBenchmark.executeAsyncCommand","0"
"lettuce-io/lettuce-core","io.lettuce.core.dynamic.intercept.InvocationProxyFactoryBenchmark.run","0"
"lettuce-io/lettuce-core","io.lettuce.core.codec.StringCodecBenchmark.encodeUtf8Unpooled","0"
"lettuce-io/lettuce-core","io.lettuce.core.codec.StringCodecBenchmark.encodeUtf8ToBuf","0"
"lettuce-io/lettuce-core","io.lettuce.core.codec.StringCodecBenchmark.encodeUtf8PlainStringToBuf","0"
"lettuce-io/lettuce-core","io.lettuce.core.codec.StringCodecBenchmark.encodeAsciiToBuf","0"
"lettuce-io/lettuce-core","io.lettuce.core.codec.StringCodecBenchmark.encodeIsoToBuf","0"
"lettuce-io/lettuce-core","io.lettuce.core.codec.StringCodecBenchmark.decodeUtf8Unpooled","0"
"lettuce-io/lettuce-core","io.lettuce.core.codec.Utf8StringCodecBenchmark.encodeUnpooled","0"
"lettuce-io/lettuce-core","io.lettuce.core.codec.Utf8StringCodecBenchmark.decodeUnpooled","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.SlotHashBenchmark.measureSlotHashHeap","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.SlotHashBenchmark.measureSlotHashDirect","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.SlotHashBenchmark.measureSlotHashTaggedHeap","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.SlotHashBenchmark.measureSlotHashTaggedDirect","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandBenchmark.createAsyncCommandUsingByteArrayCodec","0"
"lettuce-io/lettuce-core","io.lettuce.core.output.ValueListOutputBenchmark.measureZeroElement","0"
"lettuce-io/lettuce-core","io.lettuce.core.output.ValueListOutputBenchmark.measureSingleElement","0"
"lettuce-io/lettuce-core","io.lettuce.core.output.ValueListOutputBenchmark.measure16Elements","0"
"lettuce-io/lettuce-core","io.lettuce.core.output.ValueListOutputBenchmark.measure16ElementsWithResizeElement","0"
"lettuce-io/lettuce-core","io.lettuce.core.output.ValueListOutputBenchmark.measure100Elements","0"
"lettuce-io/lettuce-core","io.lettuce.core.output.ValueListOutputBenchmark.measure100ElementsWithResizeElement","0"
"lettuce-io/lettuce-core","io.lettuce.core.RedisClientBenchmark.syncList","0"
"lettuce-io/lettuce-core","io.lettuce.core.support.AsyncConnectionPoolBenchmark.singleConnection","0"
"lettuce-io/lettuce-core","io.lettuce.core.support.AsyncConnectionPoolBenchmark.twentyConnections","0"
"lettuce-io/lettuce-core","io.lettuce.core.support.GenericConnectionPoolBenchmark.singleConnection","0"
"lettuce-io/lettuce-core","io.lettuce.core.support.GenericConnectionPoolBenchmark.twentyConnections","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteBatch1","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteBatch10","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteBatch100","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteBatch1000","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.models.partitions.RedisClusterNodeBenchmark.createClusterNodeAllSlots","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.models.partitions.RedisClusterNodeBenchmark.createClusterNodeLowerSlots","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.models.partitions.RedisClusterNodeBenchmark.querySlotStatusPresent","0"
"lettuce-io/lettuce-core","io.lettuce.core.cluster.models.partitions.RedisClusterNodeBenchmark.querySlotStatusAbsent","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteAndRead","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteAndReadBatch1","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteAndReadBatch10","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteAndReadBatch100","0"
"lettuce-io/lettuce-core","io.lettuce.core.protocol.CommandHandlerBenchmark.measureNettyWriteAndReadBatch1000","0"
"lexas2509/perf","org.lex.perf.engine.BenchmarkTimeSlotTest.testGetSlotAndAddHit","0"
"lexas2509/perf","org.lex.perf.engine.BenchmarkTimeSlotTest.testCTM","0"
"lexas2509/perf","org.lex.perf.engine.BenchmarkTimeSlotTest.testNano","0"
"lexas2509/perf","org.lex.perf.engine.BenchmarkTimeSlotTest.testAddHit","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren004","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren010","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren004","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010WithBackpressure","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren032","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren032","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren128","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren128","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren004","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren010","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren004","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren010","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren032","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren032","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren128","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren128","0"
"lhyqie/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeDeleteOneEveryOccurrenceFromGreekDataChildren010","0"
"line/armeria","com.linecorp.armeria.server.thrift.PooledResponseBufferBenchmark.pooled","0"
"line/armeria","com.linecorp.armeria.server.thrift.PooledResponseBufferBenchmark.unpooled","0"
"line/armeria","com.linecorp.armeria.benchmarks.HttpServerBenchmark.empty","0"
"line/armeria","com.linecorp.armeria.grpc.downstream.DownstreamSimpleBenchmark.simple","0"
"line/armeria","com.linecorp.armeria.grpc.downstream.DownstreamSimpleBenchmark.empty","0"
"line/armeria","com.linecorp.armeria.grpc.upstream.UpstreamSimpleBenchmark.simple","0"
"line/armeria","com.linecorp.armeria.grpc.upstream.UpstreamSimpleBenchmark.empty","0"
"line/armeria","com.linecorp.armeria.thrift.PooledResponseBufferBenchmark.pooled","0"
"line/armeria","com.linecorp.armeria.thrift.PooledResponseBufferBenchmark.unpooled","0"
"line/armeria","com.linecorp.armeria.core.HttpServerBenchmark.empty","0"
"line/armeria","com.linecorp.armeria.internal.PathParsingBenchmark.normal","0"
"line/armeria","com.linecorp.armeria.internal.PathParsingBenchmark.normal_cacheDisabled","0"
"line/armeria","com.linecorp.armeria.internal.PathParsingBenchmark.cachedAndNotCached","0"
"line/armeria","com.linecorp.armeria.internal.PathParsingBenchmark.cachedAndNotCached_cacheDisabled","0"
"line/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark.noExecutor","0"
"line/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark.jmhEventLoop","0"
"line/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark.notJmhEventLoop","0"
"line/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark.writeFirst","0"
"line/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark.writeLast","0"
"line/armeria","com.linecorp.armeria.common.stream.StreamMessageBenchmark.writeOnDemand","0"
"line/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase.simple","0"
"line/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase.simpleNonBlocking","0"
"line/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase.empty","0"
"line/armeria","com.linecorp.armeria.grpc.shared.SimpleBenchmarkBase.emptyNonBlocking","0"
"line/armeria","com.linecorp.armeria.common.HttpHeadersBenchmark.parseKnown","0"
"line/armeria","com.linecorp.armeria.common.HttpHeadersBenchmark.parseUnknown","0"
"line/armeria","com.linecorp.armeria.grpc.downstream.LargePayloadBenchmark.normal","0"
"line/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark.sameWeight","0"
"line/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark.randomMainly1Max30","0"
"line/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark.randomMax10","0"
"line/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark.randomMax100","0"
"line/armeria","com.linecorp.armeria.core.client.endpoint.WeightedRoundRobinStrategyBenchmark.unique","0"
"line/armeria","com.linecorp.armeria.retrofit2.shared.SimpleBenchmarkBase.empty","0"
"line/armeria","com.linecorp.armeria.core.client.retry.RetryingHttpClientBase.empty","0"
"line/armeria","com.linecorp.armeria.common.MediaTypesBenchmark.simpleMatch","0"
"line/armeria","com.linecorp.armeria.common.MediaTypesBenchmark.simpleNotMatch","0"
"line/armeria","com.linecorp.armeria.common.MediaTypesBenchmark.complexMatch","0"
"line/armeria","com.linecorp.armeria.common.MediaTypesBenchmark.complexNotMatch","0"
"line/armeria","com.linecorp.armeria.common.MediaTypesBenchmark.all","0"
"line/armeria","com.linecorp.armeria.core.client.endpoint.DnsEndpointGroupBenchmark.resolveLocalhost","0"
"line/armeria","com.linecorp.armeria.core.client.retry.BackoffBenchmark.exponential","0"
"linkedin/parseq","com.linkedin.parseq.IdGeneratorBenchmark.getNextId","0"
"linkedin/parseq","com.linkedin.parseq.LongIdGeneratorBenchmark.getNextId","0"
"LiveMyKarma/Finalizer","com.livemykarma.gc.finalizer.BenchmarkWithGCProfiler.testNonFinalizable","0"
"LiveMyKarma/Finalizer","com.livemykarma.gc.finalizer.BenchmarkWithGCProfiler.testFinalizable","0"
"LiveMyKarma/Finalizer","com.livemykarma.gc.finalizer.SimpleBenchmark.testNonFinalizable","0"
"LiveMyKarma/Finalizer","com.livemykarma.gc.finalizer.SimpleBenchmark.testFinalizable","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.StoreBenchmark.quickTest","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaAgrona.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaAgrona.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaAgrona.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaAgrona.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaAgrona.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaAgrona.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MvStore.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MvStore.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MvStore.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MvStore.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MvStore.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MvStore.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaByteBuffer.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaByteBuffer.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaByteBuffer.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaByteBuffer.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaByteBuffer.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJavaByteBuffer.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJni.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJni.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJni.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJni.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJni.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbJni.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.RocksDb.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.RocksDb.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.RocksDb.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.RocksDb.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.RocksDb.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.RocksDb.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MapDb.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MapDb.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MapDb.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MapDb.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MapDb.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.MapDb.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LevelDb.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LevelDb.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LevelDb.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LevelDb.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LevelDb.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LevelDb.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.Chronicle.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.Chronicle.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.Xodus.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.Xodus.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.Xodus.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.Xodus.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.Xodus.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.Xodus.write","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbLwjgl.readCrc","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbLwjgl.readKey","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbLwjgl.readRev","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbLwjgl.readSeq","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbLwjgl.readXxh64","0"
"lmdbjava/benchmarks","org.lmdbjava.bench.LmdbLwjgl.write","0"
"loxal/template","net.loxal.template.TemplateTest.someTest","0"
"LucasPickering/terra","me.lucaspickering.terra.world.WorldBenchmark.measureGenerate","0"
"lucwillems/JavaLinuxNet","org.it4y.benchmarks.TimeBenchmark.benchmarkMonotonicCoarse","0"
"lucwillems/JavaLinuxNet","org.it4y.benchmarks.TimeBenchmark.benchmarkMonotonicRaw","0"
"lucwillems/JavaLinuxNet","org.it4y.benchmarks.TimeBenchmark.benchmarkClockMonotonicCoarse","0"
"lucwillems/JavaLinuxNet","org.it4y.benchmarks.TimeBenchmark.benchmarkUsecTime","0"
"lucwillems/JavaLinuxNet","org.it4y.benchmarks.TimeBenchmark.benchmarkUsecTimeBaseOnCLOCKMONOTONICCOARSE","0"
"lucwillems/JavaLinuxNet","org.it4y.benchmarks.TimeBenchmark.benchmarknanoTime","0"
"lucwillems/JavaLinuxNet","org.it4y.benchmarks.TimeBenchmark.benchmarkusecCLOCK_MONOTONIC_COARSE_TimeAccurancy","0"
"lucwillems/JavaLinuxNet","org.it4y.benchmarks.TimeBenchmark.benchmarkgetTimeCLOCK_MONOTONIC_COARSE_TimeAccurancy","0"
"m0wfo/false-sharing-demo","com.logentries.blog.JMHBenchmark.updateUnpaddedA","0"
"m0wfo/false-sharing-demo","com.logentries.blog.JMHBenchmark.updateUnpaddedB","0"
"m0wfo/false-sharing-demo","com.logentries.blog.JMHBenchmark.updatePaddedA","0"
"m0wfo/false-sharing-demo","com.logentries.blog.JMHBenchmark.updatePaddedB","0"
"magneticflux-/gridsim","org.skaggsm.gridsim.TemperatureBenchmark.measureTick","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_vw_1","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_vw_1","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_aw_1_2","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_aw_1_2","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_vw_99_900","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_vw_99_900","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_vw_99_22222","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_vw_99_22222","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_aw_100_900","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_aw_100_900","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.split3_aw_10_long_text","0"
"manhcuongkd/blynk-server","cc.blynk.utils.StringUtilPerfTest.customSplit3_aw_10_long_text","0"
"manhcuongkd/blynk-server","cc.blynk.utils.DashSerializationPerfTest.oldMethod","0"
"manhcuongkd/blynk-server","cc.blynk.utils.DashSerializationPerfTest.newMethod","0"
"manhcuongkd/blynk-server","cc.blynk.server.core.model.auth.StringToByteBufPerfTest.optimizedBlynkWay","0"
"manhcuongkd/blynk-server","cc.blynk.server.core.model.auth.StringToByteBufPerfTest.blynkWay","0"
"manhcuongkd/blynk-server","cc.blynk.server.core.model.auth.SessionPerfTest.sendMessageToHardware_1Channel","0"
"manhcuongkd/blynk-server","cc.blynk.server.core.model.auth.SessionPerfTest.sendMessageToHardware_2Channels","0"
"manhcuongkd/blynk-server","cc.blynk.server.core.model.auth.SessionPerfTest.sendMessageToHardware_3Channels","0"
"manhcuongkd/blynk-server","cc.blynk.server.core.model.auth.SessionPerfTest.sendMessageToHardware_4Channels","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark.testCreateNeighbor","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark.testGetCost_FirstCall","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark.testGetCost_SecondCall","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark.testGetCostWhenFirstCall","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark.testGetCostWhenSecondCall","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.collections.SortedSetVsLinkedList.testSortedSetAdd","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.collections.SortedSetVsLinkedList.testSortedSetAddRandomIncrement","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.collections.SortedSetVsLinkedList.testCustomLinkedListAdd","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.collections.SortedSetVsLinkedList.testCustomLinkedListAddReversed","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.collections.SortedSetVsLinkedList.testCustomLinkedListAddRandomIncrement","0"
"manoelcampos/cloudsim-plus","org.cloudsimplus.collections.SortedSetVsLinkedList.testCustomLinkedListAddReversedRandomIncrement","0"
"marcelmay/hadoop-hdfs-fsimage-exporter","de.m3y.prometheus.exporter.fsimage.BenchmarkIT.pollExporter","0"
"marcelodeolive1ra/DC-UFSCar-ES2-201601-GrupoHelloWorld","net.sf.jabref.benchmarks.Benchmarks.parse","0"
"marcelodeolive1ra/DC-UFSCar-ES2-201601-GrupoHelloWorld","net.sf.jabref.benchmarks.Benchmarks.write","0"
"marcelodeolive1ra/DC-UFSCar-ES2-201601-GrupoHelloWorld","net.sf.jabref.benchmarks.Benchmarks.search","0"
"marcelodeolive1ra/DC-UFSCar-ES2-201601-GrupoHelloWorld","net.sf.jabref.benchmarks.Benchmarks.inferBibDatabaseMode","0"
"MaridProject/typedmap","org.marid.typedmap.identity.benchmark.TypedMapGetBenchmark.get","1"
"MaridProject/typedmap","org.marid.typedmap.identity.benchmark.TypedMapPutBenchmark.put","0"
"MaridProject/typedmap","org.marid.typedmap.identity.benchmark.TypedMapGetContendedBenchmark.get","0"
"MaridProject/typedmap","org.marid.typedmap.sparsed.SparsedStructBenchmark.pojo","0"
"MaridProject/typedmap","org.marid.typedmap.sparsed.SparsedStructBenchmark.linked","0"
"MaridProject/typedmap","org.marid.typedmap.sparsed.SparsedStructBenchmark.byte8","0"
"MaridProject/typedmap","org.marid.typedmap.sparsed.SparsedStructBenchmark.byte16","0"
"marklogic/marklogic-jena","com.marklogic.semantics.jena.benchmarks.MarkLogicDatasetGraphNaivePerfTest.perfNaiveQuery1","0"
"marklogic/marklogic-jena","com.marklogic.jena.examples.NaiveBenchmarkExample.perfNaiveQuery1","0"
"marklogic/marklogic-sesame","com.marklogic.semantics.sesame.benchmarks.example.HelloWorld.wellHelloThere","0"
"marklogic/marklogic-sesame","com.marklogic.semantics.sesame.benchmarks.MarkLogicRepositoryConnectionNaivePerfTest.perfNaiveQuery1","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseIntSmall","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseIntSmallJdk","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseIntSmallExact","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseIntLarge","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseIntLargeExact","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseIntLargeJdk","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseLongSmall","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseLongSmallExact","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseLongSmallJdk","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseLongLarge","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseLongLargeExact","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseDecimalBenchmark.parseLongLargeJdk","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseUuidBenchmark.parseCharSequences","0"
"marschall/charsequences","com.github.marschall.charsequences.ParseUuidBenchmark.parseJdk","0"
"marschall/line-parser","com.github.marschall.lineparser.Utf8DecoderBenchmark.shortAsciiJdk","0"
"marschall/line-parser","com.github.marschall.lineparser.Utf8DecoderBenchmark.shortAsciiLineParser","0"
"marschall/line-parser","com.github.marschall.lineparser.Utf8DecoderBenchmark.longAsciiJdk","0"
"marschall/line-parser","com.github.marschall.lineparser.Utf8DecoderBenchmark.longAsciiLineParser","0"
"marschall/line-parser","com.github.marschall.lineparser.Utf8DecoderBenchmark.shortLatinJdk","0"
"marschall/line-parser","com.github.marschall.lineparser.Utf8DecoderBenchmark.shortLatinLineParser","0"
"marschall/line-parser","com.github.marschall.lineparser.Utf8DecoderBenchmark.longLatinJdk","0"
"marschall/line-parser","com.github.marschall.lineparser.Utf8DecoderBenchmark.longLatinLineParser","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.equalsMini","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.equalsCommons","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.hashCodeMini","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.hashCodeCommons","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.arrayEqualsMini","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.arrayEqualsCommons","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.arrayHashCodeMini","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.arrayHashCodeCommons","0"
"marschall/mini-commons","com.github.marschall.minicommons.StringUtilsBenchmark.originalSmall","0"
"marschall/mini-commons","com.github.marschall.minicommons.StringUtilsBenchmark.fillSmall","0"
"marschall/mini-commons","com.github.marschall.minicommons.StringUtilsBenchmark.fillByteSmall","0"
"marschall/mini-commons","com.github.marschall.minicommons.StringUtilsBenchmark.builderSmall","0"
"marschall/mini-commons","com.github.marschall.minicommons.StringUtilsBenchmark.originalMedium","0"
"marschall/mini-commons","com.github.marschall.minicommons.StringUtilsBenchmark.fillMedium","0"
"marschall/mini-commons","com.github.marschall.minicommons.StringUtilsBenchmark.fillByteMedium","0"
"marschall/mini-commons","com.github.marschall.minicommons.StringUtilsBenchmark.builderMedium","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.equalsManual","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.equalsReflection","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.hashCodeManual","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.hashCodeReflection","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.longHashCodeMini","0"
"marschall/mini-commons","com.github.marschall.minicommons.CommonsBenchmark.longHashCodeCommons","0"
"marschall/sets","com.github.marschall.sets.ArraySetBenchmark.hashSet3","0"
"marschall/sets","com.github.marschall.sets.ArraySetBenchmark.hashSet6","0"
"marschall/sets","com.github.marschall.sets.ArraySetBenchmark.arraySet3","0"
"marschall/sets","com.github.marschall.sets.ArraySetBenchmark.arraySet6","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateAllSize_allSet","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateAllSize_lowSet","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateAllSize_low4","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateAllSize_high4","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateAllSize_highSet","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateDirect_allSet","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateDirect_lowSet","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateDirect_low4","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateDirect_high4","0"
"marschall/sets","com.github.marschall.sets.IterationBenchmark.iterateDirect_highSet","0"
"marsorp/blog","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark.read","0"
"marsorp/blog","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark.write","0"
"marsorp/blog","com.facebook.presto.BenchmarkPagesIndexPageSorter.runBenchmark","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksAdd","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksSubtract","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksMultiply","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksDivide","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksNegate","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineAdd","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineSubtract","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineMultiply","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineDivide","0"
"marsorp/blog","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineNegate","0"
"marsorp/blog","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller.write","0"
"marsorp/blog","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller.read","0"
"marsorp/blog","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators.benchmarkBuildHash","0"
"marsorp/blog","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators.benchmarkJoinHash","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkMapConcat.mapConcat","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkArraySort.arraySort","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkArrayTransform.benchmark","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkMapSubscript.mapSubscript","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLength","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStart","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLength","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartFromEnd","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLengthFromEnd","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkReverse","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLeftTrim","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkRightTrim","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkTrim","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkUpper","0"
"marsorp/blog","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLower","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator.arrayHashCode","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkArrayJoin.benchmark","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.doubleActual","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.doubleBaseline","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.floatActual","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.floatBaseline","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct.arrayDistinct","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkArraySubscript.arraySubscript","0"
"marsorp/blog","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLikeJoni","0"
"marsorp/blog","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLikeRe2J","0"
"marsorp/blog","com.facebook.presto.operator.scalar.BenchmarkArrayFilter.benchmark","0"
"marsorp/blog","com.facebook.presto.operator.BenchmarkGroupByHash.groupByHashPreCompute","0"
"marsorp/blog","com.facebook.presto.operator.BenchmarkGroupByHash.addPagePreCompute","0"
"marsorp/blog","com.facebook.presto.operator.BenchmarkGroupByHash.bigintGroupByHash","0"
"marsorp/blog","com.facebook.presto.operator.BenchmarkGroupByHash.baseline","0"
"marsorp/blog","com.facebook.presto.operator.BenchmarkGroupByHash.baselineBigArray","0"
"marsorp/blog","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark.benchmark","0"
"marsorp/blog","com.facebook.presto.sql.gen.PageProcessorBenchmark.rowOriented","0"
"marsorp/blog","com.facebook.presto.sql.gen.PageProcessorBenchmark.columnOriented","0"
"marsorp/blog","com.facebook.presto.sql.gen.PageProcessorBenchmark.columnOrientedDictionary","0"
"marsorp/blog","com.facebook.presto.sql.gen.BenchmarkPageProcessor.handCoded","0"
"marsorp/blog","com.facebook.presto.sql.gen.BenchmarkPageProcessor.compiled","0"
"marsorp/blog","com.facebook.presto.execution.BenchmarkNodeScheduler.benchmark","0"
"marsorp/blog","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup.benchmark","0"
"marsorp/blog","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength1","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength2","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength3","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength4","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength5","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength6","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength7","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength256","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength1","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength2","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength3","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength4","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength5","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength6","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength7","0"
"marsorp/blog","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength256","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.Jade.simple_template","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.Jade.with_layout","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.Thymeleaf.simple_template","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.Thymeleaf.with_layout","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.hellotest.impl.Jade.simple_template","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.hellotest.impl.Jade.with_layout","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.hellotest.impl.Handlebars.simple_template","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.hellotest.impl.Handlebars.with_layout","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.hellotest.impl.Mvel.simple_template","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.hellotest.impl.Mvel.with_layout","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.hellotest.impl.Thymeleaf.simple_template","0"
"Mart-Bogdan/vertx-hello","com.innahema.hellos.vertxhello.benchmark.hellotest.impl.Thymeleaf.with_layout","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ConstructFastMoneyBenchmark.baseline","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ConstructFastMoneyBenchmark.api","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ConstructFastMoneyBenchmark.reflection","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadJsonNumberBenchmark.baseline","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadJsonNumberBenchmark.api_trycatch","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadJsonNumberBenchmark.api_bigdecimal","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadJsonNumberBenchmark.impl_refcheck","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadJsonNumberBenchmark.impl_charcheck_switch","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadJsonNumberBenchmark.impl_charcheck_ifelse","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ChronicleMapBaselineBenchmark.createPrice","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ChronicleMapBaselineBenchmark.hashMap","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ChronicleMapBaselineBenchmark.concurrentHashMap","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ChronicleMapBaselineBenchmark.chronicleMap","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ConstructMoneyBenchmark.baseline","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ConstructMoneyBenchmark.api","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ConstructMoneyBenchmark.reflection","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadFastMoneyNumberBenchmark.baseline","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadFastMoneyNumberBenchmark.api","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadFastMoneyNumberBenchmark.reflection","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ChronicleMapRealBenchmark.benchmark","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadMoneyNumberBenchmark.baseline","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadMoneyNumberBenchmark.api","0"
"MartinanderssonDotcom/money-profiling","com.martinandersson.money.benchmark.ReadMoneyNumberBenchmark.reflection","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkConstructingSwitch","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkPreConstructedSwitch","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkConstructingIfElse","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkPreConstructedIfElse","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkConstructingSupplier","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkPreConstructedSupplier","0"
"matthew-dailey/java-playaround","matt.benchmarks.NoOpBenchmark.noop","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkConstructingSwitchFewOptions","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkPreConstructedSwitchFewOptions","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkConstructingIfElseFewOptions","0"
"matthew-dailey/java-playaround","matt.benchmarks.BranchingBenchmark.benchmarkPreConstructedIfElseFewOptions","0"
"maxdemarzi/ChronicleGraph","com.maxdemarzi.ChronicleGraphBenchmark.measureCreateEmptyNodes","0"
"maxdemarzi/ChronicleGraph","com.maxdemarzi.ChronicleGraphBenchmark.measureCreateNodesWithProperties","0"
"maxdemarzi/ChronicleGraph","com.maxdemarzi.ChronicleGraphBenchmark.measureCreateEmptyNodesAndRelationships","0"
"maxdemarzi/ChronicleGraph","com.maxdemarzi.ChronicleGraphBenchmark.measureTraverse","0"
"maxdemarzi/ChronicleGraph","com.maxdemarzi.ChronicleGraphBenchmark.measureTraverseAndGetNodes","0"
"maxdemarzi/ChronicleGraph","com.maxdemarzi.ChronicleGraphBenchmark.measureSingleTraversal","0"
"maxdemarzi/ChronicleGraph","com.maxdemarzi.ChronicleGraphBenchmark.measureSingleTraversalAndGetNodes","0"
"maxdemarzi/ChronicleGraph","com.maxdemarzi.ChronicleGraphRecommendationBenchmark.measureRecommendationTraversal","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.PageRankPerformance.measurePageRank","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.PageRankPerformance.measurePageRank2","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.PageRankPerformance.measurePageRank3","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.UnionFindPerformance.measurePageRank","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.LabelPropagationPerformance.measurePageRank","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.DegreeCentralityPerformance.measureInDegreeCentrality","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.DegreeCentralityPerformance.measureOutDegreeCentrality","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.DegreeCentralityPerformance.measureDegreeCentrality","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.LabelPropagationPerformance.measureLabelPropagation","0"
"maxdemarzi/graph_processing","com.maxdemarzi.processing.performance.LabelPropagationPerformance.measureLabelPropagation2","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBRecommendationBenchmark.measureRecommendationTraversal","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureCreateEmptyNodes","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureCreateNodesWithProperties","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureCreateEmptyNodesAndRelationships","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureTraverse","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureTraverseAndGetNodes","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureSingleTraversal","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureSingleTraversalAndGetNodes","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureCreateEmptyNode","0"
"maxdemarzi/GuancialeDB","com.maxdemarzi.GuancialeDBBenchmark.measureCreateNodeWithProperties","0"
"maxdemarzi/neo_dislikes","com.maxdemarzi.ServiceBenchmark.measureRecommend","0"
"maxdemarzi/neo_dislikes","com.maxdemarzi.ServiceBenchmark.measureRecommend2","0"
"maxifier/mxcache","com.maxifier.mxcache.benchmark.MxCacheBenchmark.manualCache","0"
"maxifier/mxcache","com.maxifier.mxcache.benchmark.MxCacheBenchmark.staticManualCache","0"
"maxifier/mxcache","com.maxifier.mxcache.benchmark.MxCacheBenchmark.mxCache","0"
"maxifier/mxcache","com.maxifier.mxcache.benchmark.MxCacheBenchmark.mxCacheGuava","0"
"maxifier/mxcache","com.maxifier.mxcache.benchmark.MxCacheBenchmark.manualGuava","0"
"maxifier/mxcache","com.maxifier.mxcache.benchmark.MxCacheBenchmark.staticMxCache","0"
"maxifier/mxcache","com.maxifier.mxcache.benchmark.MxCacheBenchmark.cleanManualCache","0"
"maxifier/mxcache","com.maxifier.mxcache.benchmark.MxCacheBenchmark.cleanMxCache","0"
"maximenajim/nashorn-react-jmh-microbenchmark","com.github.maximenajim.ReactMicroBenchmark.microbenchmark","0"
"mbosecke/pebble-benchmark","com.mitchellbosecke.pebble.benchmark.ConcurrentEvaluationsBenchmark.concurrentEvaluationsBenchmark","0"
"mbosecke/pebble-benchmark","com.mitchellbosecke.pebble.benchmark.EvaluationBenchmark.evaluationsBenchmark","0"
"mbosecke/pebble-benchmark","com.mitchellbosecke.pebble.benchmark.CompilationBenchmark.compilationsBenchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.FreemarkerBenchmark.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.ThymeleafBenchmark.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.PebbleBenchmark.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.MoustacheBenchmark.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.VelocityBenchmark.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.Freemarker.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.Trimou.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.Velocity.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.Thymeleaf.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.Pebble.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.Mustache.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.Rocker.benchmark","0"
"mbosecke/template-benchmark","com.mitchellbosecke.benchmark.Handlebars.benchmark","0"
"mdhorton/experiments","net.nostromo.experiments.system.SyscallPerf.syscall","0"
"mdhorton/experiments","net.nostromo.experiments.system.SystemTimePerf.nanoTime","0"
"mdhorton/experiments","net.nostromo.experiments.system.SystemTimePerf.currentTimeMillis","0"
"mdhorton/experiments","net.nostromo.experiments.system.SystemTimePerf.tsc","0"
"mdhorton/experiments","net.nostromo.experiments.system.SystemTimePerf.monotonic","0"
"mdhorton/experiments","net.nostromo.experiments.system.SystemTimePerf.monotonicCoarse","0"
"mdhorton/experiments","net.nostromo.experiments.system.SystemTimePerf.monotonicRaw","0"
"mdhorton/experiments","net.nostromo.experiments.system.SystemTimePerf.realtime","0"
"mdhorton/experiments","net.nostromo.experiments.system.SystemTimePerf.realtimeCoarse","0"
"mdhorton/experiments","net.nostromo.experiments.system.JniPerf.noop","0"
"mdhorton/experiments","net.nostromo.experiments.system.SleepPerf.parkNanos","0"
"mdhorton/experiments","net.nostromo.experiments.system.SleepPerf.nanoSleep","0"
"mdhorton/experiments","net.nostromo.experiments.system.SleepPerf.clockNanoSleep","0"
"mdhorton/experiments","net.nostromo.experiments.misc.VolatilePerf.write","0"
"mdhorton/experiments","net.nostromo.experiments.misc.VolatilePerf.read","0"
"mdhorton/experiments","net.nostromo.experiments.network.local_throughput.BaseLocalThroughputPerf.benchmark","0"
"mdhorton/experiments","net.nostromo.experiments.lock.CasLockPerf.cas","0"
"mdhorton/experiments","net.nostromo.experiments.lock.CasLockPerf.tcas","0"
"mdhorton/experiments","net.nostromo.experiments.lock.ParkPerf.park","0"
"mdhorton/experiments","net.nostromo.experiments.lock.LockPerf.lock","0"
"mdhorton/experiments","net.nostromo.experiments.collections.MapPerf.fastutilLongGet","0"
"mdhorton/experiments","net.nostromo.experiments.collections.MapPerf.fastutilIntGet","0"
"mdhorton/experiments","net.nostromo.experiments.collections.MapPerf.troveLongGet","0"
"mdhorton/experiments","net.nostromo.experiments.collections.MapPerf.troveIntGet","0"
"mdhorton/experiments","net.nostromo.experiments.collections.MapPerf.kolobokeIntGet","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueueBlockedPerf.arrayBlockingQueuePut","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueueBlockedPerf.arrayBlockingQueueTake","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueueBlockedPerf.linkedBlockingQueuePut","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueueBlockedPerf.linkedBlockingQueueTake","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueuePerf.arrayBlockingQueuePut","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueuePerf.arrayBlockingQueuePoll","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueuePerf.linkedBlockingQueueOffer","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueuePerf.linkedBlockingQueuePoll","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueuePerf.concurrentLinkedQueueOffer","0"
"mdhorton/experiments","net.nostromo.experiments.collections.QueuePerf.concurrentLinkedQueuePoll","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.readPointer","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.readByteArray","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.readLongBuffer","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.readLongBufferDirect","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.readByteBuffer","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.readByteBufferDirect","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.writePointer","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.writeByteArray","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.writeLongBuffer","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.writeLongBufferDirect","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.writeByteBuffer","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesPerf.writeByteBufferDirect","0"
"mdhorton/experiments","net.nostromo.experiments.memory.CopyMemoryPerf.write","0"
"mdhorton/experiments","net.nostromo.experiments.memory.CopyMemoryPerf.read","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesObjectPerf.readByteArray","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesObjectPerf.writeByteArray","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesObjectPerf.readPointer","0"
"mdhorton/experiments","net.nostromo.experiments.memory.BytesObjectPerf.writePointer","0"
"mdhorton/experiments","net.nostromo.experiments.network.node_latency.LatencyPerf.nioLatency","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledHeapAllocAndFree","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledDirectAllocAndFree","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledHeapAllocAndFree","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledDirectAllocAndFree","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledHeapAllocAndFree","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledDirectAllocAndFree","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetInt","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetShort","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetLong","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetInt","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetShort","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetLong","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArray","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArrayWrapped","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiString","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringWrapped","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArray","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArrayWrapped","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAscii","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiWrapped","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArray","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArrayWrapped","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8String","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringWrapped","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArray","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArrayWrapped","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8","0"
"meghana0507/grpc-java-poll","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8Wrapped","0"
"meghana0507/grpc-java-poll","io.netty.microbench.http.HttpRequestDecoderBenchmark.testDecodeWholeRequestInMultipleStepsMixedDelimiters","0"
"meghana0507/grpc-java-poll","io.netty.microbench.concurrent.FastThreadLocalBenchmark.jdkThreadLocalGet","0"
"meghana0507/grpc-java-poll","io.netty.microbench.concurrent.FastThreadLocalBenchmark.fastThreadLocal","0"
"meghana0507/grpc-java-poll","io.netty.microbench.internal.RecyclableArrayListBenchmark.recycleSameThread","0"
"meghana0507/grpc-java-poll","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv4","0"
"meghana0507/grpc-java-poll","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv6","0"
"meghana0507/grpc-java-poll","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv6","0"
"meghana0507/grpc-java-poll","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv4","0"
"melix/jmh-gradle-plugin","me.champeau.gradle.jmh.sample.SampleBenchmark.sqrtBenchmark","1"
"melix/jmh-gradle-plugin","me.champeau.gradle.jmh.mixlang.JavaBenchmark.sqrtBenchmark","0"
"melix/jmh-gradle-plugin","me.champeau.gradle.jmh.JavaBenchmark.sqrtBenchmark","0"
"melix/jmh-gradle-plugin","me.champeau.gradle.jmh.JavaBenchmarkThatDependsOnTest.sqrtBenchmark","0"
"melix/jmh-gradle-plugin","me.champeau.gradle.jmh.mixlang.JavaMultiBenchmark.sqrtBenchmark","0"
"Mercateo/json-schema","com.mercateo.jsonschema.Benchmarks.createRepeatedSchema","0"
"Mercateo/json-schema","com.mercateo.jsonschema.Benchmarks.createSchema","0"
"Mercateo/reflection","com.mercateo.reflection.Benchmarks.createProxy","0"
"Mercateo/reflection","com.mercateo.reflection.Benchmarks.interceptCall","0"
"Mercateo/reflection","com.mercateo.reflection.Benchmarks.createCachedProxy","0"
"Mercateo/rest-schemagen","com.mercateo.common.rest.schemagen.Benchmarks.createLinkFactory","0"
"Mercateo/rest-schemagen","com.mercateo.common.rest.schemagen.Benchmarks.createLink","0"
"MeteoGroup/jbrotli","com.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.brotli_compression_with_BrotliCompressor_using_byte_array","0"
"MeteoGroup/jbrotli","com.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.brotli_compression_with_BrotliCompressor_using_ByteBuffer","0"
"MeteoGroup/jbrotli","com.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.brotli_compression_with_BrotliStreamCompressor_using_byte_array","0"
"MeteoGroup/jbrotli","com.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.brotli_compression_with_BrotliStreamCompressor_using_ByteBuffer","0"
"MeteoGroup/jbrotli","com.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.gzip_compression","0"
"MeteoGroup/jbrotli","org.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.brotli_compression_with_BrotliCompressor_using_byte_array","0"
"MeteoGroup/jbrotli","org.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.brotli_compression_with_BrotliCompressor_using_ByteBuffer","0"
"MeteoGroup/jbrotli","org.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.brotli_compression_with_BrotliStreamCompressor_using_byte_array","0"
"MeteoGroup/jbrotli","org.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.brotli_compression_with_BrotliStreamCompressor_using_ByteBuffer","0"
"MeteoGroup/jbrotli","org.meteogroup.jbrotli.performance.Brotli_vs_Gzip_Benchmark.gzip_compression","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_00","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_01","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_02","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_03","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_04","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_05","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_06","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_07","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_08","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_09","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.fixed_args_10","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_00","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_01","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_02","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_03","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_04","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_05","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_06","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_07","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_08","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_09","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_clone_10","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_00","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_01","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_02","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_03","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_04","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_05","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_06","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_07","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_08","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_09","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.varargs_switch_10","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_00","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_01","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_02","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_03","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_04","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_05","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_06","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_07","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_08","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_09","0"
"michaelhixson/jmh-benchmark-listof","rnd.Benchmark_ListOf.via_interface_10","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.JMHPerformanceTest.measureClassicValues","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.JMHPerformanceTest.measureAtomicValues","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.JMHPerformanceTest.measureArrayValues","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.JMHPerformanceTest.measureClassValues","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.JMHMobyDickPerformanceTest.measureClassicValues","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.JMHMobyDickPerformanceTest.measureAtomicValues","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.JMHMobyDickPerformanceTest.measureArrayValues","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.JMHMobyDickPerformanceTest.measureClassValues","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.PerformanceTest.measureGuava","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.PerformanceTest.measureStream","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.Benchmarks.measureMathOpsMul","0"
"michaljonko/blog-examples","pl.coffeepower.blog.examples.Benchmarks.measureMathOpsDiv","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.CounterBenchmark.spectatorCounter","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.CounterBenchmark.bootCounter","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.CounterBenchmark.prometheusCounter","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.CounterBenchmark.datadogStatsdCounter","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.CounterBenchmark.dropwizardCounter","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.QuantilesBenchmark.frugal2uQuantiles","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.QuantilesBenchmark.ckmsQuantiles","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.QuantilesBenchmark.gkQuantiles","0"
"micrometer-metrics/micrometer","org.springframework.metrics.benchmark.QuantilesBenchmark.windowQuantiles","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.SimpleMeasureBenchmark.timerMeasure","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.SimpleMeasureBenchmark.longTaskTimerMeasure","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.SimpleMeasureBenchmark.counterMeasure","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.SimpleMeasureBenchmark.gaugeMeasure","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.SimpleMeasureBenchmark.distributionSummaryMeasure","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.QuantilesBenchmark.frugal2uQuantiles","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.QuantilesBenchmark.ckmsQuantiles","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.QuantilesBenchmark.gkQuantiles","0"
"micrometer-metrics/micrometer","io.micrometer.core.benchmark.QuantilesBenchmark.windowQuantiles","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.MeterRegistrationBenchmark.insert10_000","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.MeterRegistrationBenchmark.sum","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.CounterBenchmark.countSum","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.CounterBenchmark.countSumWithRegistryLookup","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.CounterBenchmark.sum","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.TimerBenchmark.sumTimedWithSupplier","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.TimerBenchmark.sumTimedWithSample","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.TimerBenchmark.sumTimedWithRegistryLookup","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.TimerBenchmark.sum","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.compare.CompareHistogramsWithOtherLibraries.micrometerPlainHistogram","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.compare.CompareCountersWithOtherLibraries.micrometerCounterTags","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.compare.CompareCountersWithOtherLibraries.prometheusCounterWithTags","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.TagsBenchmark.of","0"
"micrometer-metrics/micrometer","io.micrometer.benchmark.core.TagsBenchmark.dotAnd","0"
"mikeb01/scratch","org.sample.ordered.OrderedBenchmark.lookBySort","0"
"mikeb01/scratch","org.sample.ordered.OrderedBenchmark.lookByTree","0"
"mikeb01/scratch","org.sample.signalling.UnparkBenchmark.run","0"
"mikeb01/scratch","org.sample.signalling.SignalBenchmark.run","0"
"mikeb01/scratch","org.sample.MyBenchmark.testMethod","0"
"mikvor/hashmapTest","tests.MapTestRunner.testRandom","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testAddToEmptyRegionQuadTree","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testAddToBasicRegionQuadTree","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testAddToComplexRegionQuadTree","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testEmptyRegionQuadTreeIntersectingLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testBasicRegionQuadTreeIntersectingLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testComplexRegionQuadTreeIntersectingLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testEmptyRegionQuadTreeIntersectingRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testBasicRegionQuadTreeIntersectingRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.collisions.RegionQuadTreePerformanceTest.testComplexRegionQuadTreeIntersectingRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testContainsXY","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testNotContainsXY","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testRotate","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testRotateContains","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testNotRotateContains","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testNotIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testRotateIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testRotateNotIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testNotIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testRotateIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testRotateNotIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testIntersectsTriangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testNotIntersectsTriangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testRotateIntersectsTriangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.TrianglePerformanceTest.testRotateNotIntersectsTriangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest.testContainsXY","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest.testNotContainsXY","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest.testIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest.testNotIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest.testIntersectsCircle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest.testNotIntersectsCircle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest.testIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.CirclePerformanceTest.testNotIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testContainsXY","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testNotContainsXY","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotate","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateContains","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testNotRotateContains","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testNotIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateNotIntersectsRectangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testNotIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateNotIntersectsLineSegment","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testIntersectsTriangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testNotIntersectsTriangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateIntersectsTriangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateNotIntersectsTriangle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testIntersectsCircle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testNotIntersectsCircle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateIntersectsCircle","0"
"mini2Dx/mini2Dx","org.mini2Dx.core.geom.RectanglePerformanceTest.testRotateNotIntersectsCircle","0"
"mini2Dx/mini2Dx","org.mini2Dx.ui.RenderTreeLayoutPerformanceTest.testInitialLayout","0"
"mjeffrey/log-sanitizer","be.sysa.log.sanitize.MyBenchmark.testJson","0"
"mjeffrey/log-sanitizer","be.sysa.log.sanitize.MyBenchmark.testIban","0"
"mjeffrey/log-sanitizer","be.sysa.log.sanitize.MyBenchmark.testPan","0"
"mjeffrey/log-sanitizer","be.sysa.log.sanitize.MyBenchmark.testUuid","0"
"mjeffrey/log-sanitizer","be.sysa.log.sanitize.MyBenchmark.testBase64","0"
"mjeffrey/log-sanitizer","be.sysa.log.sanitize.MyBenchmark.testToString","0"
"mkosem/stringsplitting","mkosem.TokenizeBench.benchmarkStringTokenizer","0"
"mkosem/stringsplitting","mkosem.TokenizeBench.benchmarkIndexOfTokenize","0"
"mkosem/stringsplitting","mkosem.TokenizeBench.benchmarkSplitter","0"
"mkosem/stringsplitting","mkosem.TokenizeBench.benchmarkSplitter2","0"
"mkosem/stringsplitting","mkosem.TokenizeBench.benchmarkSplit","0"
"mkraemerx/algorithm-art","de.postlab.lab.alg.QuickSortBenchmark.testMethod","0"
"mkraemerx/algorithm-art","de.postlab.lab.alg.StdQuicksortSmplBenchmark.testMethod","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_AllModes.kryo","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_AllModes.fastSerializer","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_AllModes.blixtser","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_AllModes.java_built_in_serializer","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_AverageTime.kryo","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_AverageTime.fastSerializer","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_AverageTime.blixtser","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_AverageTime.java_built_in_serializer","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_SingleShotTime.kryo","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_SingleShotTime.fastSerializer","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_SingleShotTime.blixtser","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_SingleShotTime.java_built_in_serializer","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_SampleTime.kryo","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_SampleTime.fastSerializer","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_SampleTime.blixtser","0"
"Mojang/blixtser","com.mojang.blixtser.benchmark.MicroBenchmark_SampleTime.java_built_in_serializer","0"
"mono-plane/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.handCoded","0"
"mono-plane/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.compiled","0"
"mono-plane/presto","com.facebook.presto.operator.BenchmarkGroupByHash.runBenchmark","0"
"mono-plane/presto","com.facebook.presto.BenchmarkHashPagePartitionFunction.runBenchmark","0"
"mono-plane/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter.runBenchmark","0"
"MorganBauer/java-experiments","mhb.projectEuler.MyBenchmark.benchDirectMethod","0"
"MorganBauer/java-experiments","mhb.projectEuler.MyBenchmark.benchOneMethod","0"
"MorganBauer/java-experiments","mhb.projectEuler.MyBenchmark.benchOneStreamSumMethod","0"
"MorganBauer/java-experiments","mhb.projectEuler.MyBenchmark.benchOneParallelStreamSumMethod","0"
"MorganBauer/java-experiments","mhb.projectEuler.MyBenchmark.benchOneStreamsMethod","0"
"MorganBauer/java-experiments","mhb.projectEuler.MyBenchmark.benchOneStreamMethod","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSByte","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPByte","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSInt","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPInt","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSLong","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPLong","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSMixed","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPMixed","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyStringBOS","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyStringBDOSP","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyLegacyWriteUTF","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallStringBOS","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallStringBDOSP","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallLegacyWriteUTF","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeStringBOS","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeStringBDOSP","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeLegacyWriteUTF","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyStringBOS","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyStringBDOSP","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyLegacyWriteUTF","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallStringBOS","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallStringBDOSP","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallLegacyWriteUTF","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeStringBOS","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeStringBDOSP","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeLegacyWriteUTF","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.Sample.lz4","0"
"mourao666/cassandra-sim","org.apache.cassandra.test.microbench.Sample.snappy","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.SLList.main","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.traverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.buildAndTraverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.reverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefBTDLL.getLeftBT","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.binary_search","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefBT.getLeft","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefBT.getLeftmostChild","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.search","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.insert","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.delete","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.binary_search_and_back","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.binary_search_and_swap_subtrees","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.insert","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.left_rotate","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.left_right_rotate","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.right_rotate","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.right_left_rotate","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.min_value","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.max_value","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefBT.lindstromTraverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.TreeFlatten.push","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.TreeFlatten.pushTree","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.TreeFlatten.flatten","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.Intree.find","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.buildList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.MC_Completeness_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.MC_NeighbourhoodPreservance_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.MC_Reach_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.MC_Shape_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.MC_Completeness_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.MC_NeighbourhoodPreservance_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.MC_Reach_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.MC_Shape_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_Completeness_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_Completeness_traverseWithInitialListWithNullVisit","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_NeighbourhoodPreservance_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_Reach_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_Shape_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_Completeness_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_NeighbourhoodPreservance_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_Reach_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.MC_Shape_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefBT.lindstromTraverse_visited","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefBT.lindstromTraverse_shape","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefBT.lindstromTraverse_terminateAtSen","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefBT.lindstromTraverse_neighbourhood","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.search_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.search_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.insert_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.insert_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.delete_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.BiMap.delete_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.binary_search_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.binary_search_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.binary_search_S_final","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.search_and_back","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.search_and_back_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.search_and_back_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.search_and_swap","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.search_and_swap_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.search_and_swap_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.min_value_S_final","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.min_value_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.min_value_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.rebalance","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.rebalance_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.rebalance_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.insert_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.list_to_avl","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.list_to_avl_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.AVLTree.list_to_avl_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.CEG_reverse_final_pos","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.CEG_traverse_inverse_final_pos","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.CEG_walkAround_return","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.CEG_dummyReverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.CEG_dummyWalkAround","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefDLL.CEG_findLast_spurious","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.RefSLL.CEG_reverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterDLL.dll_rev","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterDLL.dll_insert","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterDLL.cdll","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterDLL.dll_insertsort1","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterDLL.dll_insertsort2","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterSLL.sll_rev","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterSLL.sll_delete","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterSLL.sll_bubblesort","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterSLL.sll_insertsort","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterSLL.sll_headptr","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterSLL.sll_listofclists","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.Recursive.sll_rec_traversal","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.Recursive.sll_rec_build","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.Recursive.tree_rec_traversal","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterTree.tree_constructor","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestor.examples.ForesterTree.tree_dsw","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.Recursive.sll_rec_traversal","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.Recursive.sll_rec_build","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.Recursive.tree_rec_traversal","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.Recursive.sll_rec_zip","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterDLL.dll_rev","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterDLL.dll_insert","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterDLL.cdll","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterDLL.dll_insertsort1","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterDLL.dll_insertsort2","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.SLList.reverseSLList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterTree.tree_constructor","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterTree.tree_dsw","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.reverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_Completeness_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_Completeness_traverseWithInitialListWithNullVisit","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_NeighbourhoodPreservance_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_Reach_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_Shape_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_Completeness_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_NeighbourhoodPreservance_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_Reach_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_Shape_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.CEG_reverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefBT.getLeft","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefBT.getLeftmostChild","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefBT.lindstromTraverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefBT.lindstromTraverse_visited","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefBT.lindstromTraverse_shape","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefBT.lindstromTraverse_terminateAtSen","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefBT.lindstromTraverse_neighbourhood","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.traverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.faultyReverse1_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.faultyReverse2_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.faultyReverse3_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.buildList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.buildAndTraverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.MC_Completeness_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.MC_NeighbourhoodPreservance_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.MC_Reach_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.MC_Shape_traverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.MC_Completeness_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.MC_NeighbourhoodPreservance_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.MC_Reach_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.MC_Shape_reverseWithInitialList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.CEG_reverse_final_pos","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.CEG_traverse_inverse_final_pos","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.CEG_walkAround_return","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.CEG_dummyReverse","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.CEG_dummyWalkAround","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefDLL.CEG_findLast_spurious","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.lindstromTreeTraversal_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.lindstromTreeTraversal_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.lindstromTreeTraversal_V","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.lindstromTreeTraversal_N","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.lindstromTreeTraversal_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.binarySearchAVLTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.binarySearchAVLTree_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.leftMostInsertAVLTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.leftMostInsertAVLTree_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.insertAVLTree_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.insertAVLTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.sllToAVLTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.sllToAVLTree_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.sllToAVLTree_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.searchAndBackAVLTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.searchAndBackAVLTree_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.searchAndBackAVLTree_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.searchAndSwapAVLTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.searchAndSwapAVLTree_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.searchAndSwapAVLTree_C","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndReverseSLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndReverseSLL_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndReverseSLL_R","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.traverseSLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.traverseSLL_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.traverseSLL_N","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.traverseSLL_R","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.traverseSLL_V","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseSLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseSLL_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseSLL_V","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseSLL_NX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseSLL_R","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveReverseSLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveReverseSLL_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveReverseSLL_VX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveReverseSLL_NX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.findMiddleSLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.findMiddleSLL_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.findMiddleSLL_V","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.findMiddleSLL_N","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.findMiddleSLL_R","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveBuildAndTraverseTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveBuildAndTraverseTree_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveTraverseTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveTraverseTree_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.recursiveTraverseTree_N","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndTraverseListOfCyclicLists_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndReverseDLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndInsertDLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndInsertsortDLL1_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndInsertsortDLL2_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildCyclicDLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndBubbleSortSLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndDeleteElementSLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildSLLWithHeadPtr_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.buildAndInsertsortSLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.DSWTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.constructTree_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.faultyReverseDLL_CX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.findLastDLL_CY","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseDLL_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseDLL_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseDLL_CX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseDLL_R","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseDLL_V","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseDLL_NX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.traverseDLL_S","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.skipList_buildList_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.skipList_insert_M","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.findMiddleSLL_VX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.findMiddleSLL_RX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.reverseDLL_SX","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.CAV2018Examples.traverseSLL_X","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterSLL.sll_rev","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterSLL.sll_delete","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterSLL.sll_bubblesort","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterSLL.sll_insertsort","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterSLL.sll_headptr","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.ForesterSLL.sll_listofclists","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.SLList.SIDreverseSLList","0"
"moves-rwth/attestor-examples","de.rwth.i2.attestorExamples.RefSLL.MC_Shape_SH_traverseWithInitialList","0"
"MovingBlocks/gestalt","org.terasology.entitysystem.jmh.EntitySystemBenchmark.testCreateComponent","0"
"MovingBlocks/gestalt","org.terasology.entitysystem.jmh.EntitySystemBenchmark.testCreateDirectComponent","0"
"MovingBlocks/gestalt","org.terasology.entitysystem.jmh.EntitySystemBenchmark.addComponent","0"
"MovingBlocks/gestalt","org.terasology.entitysystem.jmh.EntitySystemBenchmark.removeComponent","0"
"mox601/mybatis-pool-jmh","fm.mox.mybatis.jmh.BaseConnectionPoolBenchmark.testGetById","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessage","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToJSON","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToJSONPooledHeap","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToJSONPooledDirect","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToTCPBuffer","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToTCPBufferPooledHeap","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToTCPPooledDirect","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToUDPBuffer","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToUDPBufferPooledHeap","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerPerf.createMessageToUDPBufferPooledDirect","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessage","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToJSON","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToJSONPooledHeap","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToJSONPooledDirect","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToTCPBuffer","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToTCPBufferPooledHeap","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToTCPPooledDirect","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToUDPBuffer","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToUDPBufferPooledHeap","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.GelfMessageAssemblerBenchmark.createMessageToUDPBufferPooledDirect","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.intern.GelfMessageBenchmark.discoverStringField","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.intern.GelfMessageBenchmark.discoverLongField","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.intern.GelfMessageBenchmark.discoverDoubleField","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.intern.GelfMessageBenchmark.configuredStringField","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.intern.GelfMessageBenchmark.configuredLongField","0"
"mp911de/logstash-gelf","biz.paluch.logging.gelf.intern.GelfMessageBenchmark.configuredDoubleField","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeContainsKey","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeIteration","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeEntryIteration","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeInsert","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeEqualsRealDuplicate","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeEqualsDeltaDuplicate","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeContainsKey","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeIteration","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeInsert","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeEqualsRealDuplicate","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeEqualsDeltaDuplicate","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeRemoveKey","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeRemoveKey","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeContainsKeySingle","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeInsertSingle","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeJoin","0"
"msteindorfer/criterion","dom.JmhCfgDominatorBenchmarks.timeDominatorCalculation","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_Constructor","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_Unsafe_ConstantOffsets","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_Unsafe_RunningOffsets","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_Unsafe_OffsetLookup1","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_Unsafe_OffsetLookup2","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeContainsKeyNotContained","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeInsertContained","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeRemoveKeyNotContained","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeEqualsRealDuplicateModified","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeContainsKeyNotContained","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeInsertContained","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeRemoveKeyNotContained","0"
"msteindorfer/criterion","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeEqualsRealDuplicateModified","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_Unsafe_ConstantOffsets_32bit","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_Unsafe_ConstantOffsets_64bit","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_Unsafe_RunningOffsetsVarargs","0"
"msteindorfer/criterion","fundamentals.BitmapIndexingBenchmark.timeCaseDistinctionBase_CHAMP","0"
"msteindorfer/criterion","fundamentals.BitmapIndexingBenchmark.timeCaseDistinctionBase_HETEROGENEOUS_CHAMP_1","0"
"msteindorfer/criterion","fundamentals.BitmapIndexingBenchmark.timeCaseDistinctionBase_HETEROGENEOUS_CHAMP_2","0"
"msteindorfer/criterion","fundamentals.BitmapIndexingBenchmark.timeCaseDistinctionBase_HETEROGENEOUS_CHAMP_3","0"
"msteindorfer/criterion","fundamentals.BitmapIndexingBenchmark.timeCaseDistinctionBase_HETEROGENEOUS_IDEA","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_MethodHandle","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_MethodHandle_invokeWithArguments","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_MethodHandle_invoke","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeClassInstanziation_MethodHandle_invokeExact","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeRangecopy_Array_SystemArraycopy","0"
"msteindorfer/criterion","fundamentals.ClassInitializationBenchmark.timeRangecopy_ObjectRegionThrows_ConstantOffsets_32bit","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeContainsKey","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeContainsKeyNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeIteration","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeInsert","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeInsertContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeRemoveKey","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeRemoveKeyNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeEqualsRealDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeEqualsRealDuplicateModified","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeEqualsDeltaDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeContainsKey","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeContainsKeyNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMultimapLikeContainsTuple","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMultimapLikeContainsTupleNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeIterationKey","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeIterationNativeEntry","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikePut","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikePutContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMultimapLikeInsertTuple","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeRemoveNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeRemove","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMultimapLikeRemoveTuple","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeEqualsRealDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeEqualsDeltaDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeContainsKey","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeContainsKeyInt","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeContainsKeyNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeIteration","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeEntryIteration","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeInsert","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeInsertInt","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeInsertContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeRemoveKeyNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeRemoveKey","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeEqualsRealDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeEqualsRealDuplicateModified","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeEqualsDeltaDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMultimapLikeIterationFlattenedEntry","0"
"msteindorfer/criterion","dom.JmhCfgDominatorBenchmarks.timeDominatorCalculationInstrumented","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeHashCodeOnce","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeHashCode","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMultimapLikeKeySet","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMultimapLikeKeySetEqualsCanonicalSet","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMultimapLikeKeySetCachedEqualsCanonicalSet","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhTernaryRelationBenchmarks.timeContainsTriple","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhTernaryRelationBenchmarks.timeContainsTripleNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhTernaryRelationBenchmarks.timeInsertTriple","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeMapLikeContainsValue","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeSize","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeHashCode","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeUnionStructural","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeUnionStructuralOneBigger","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeUnionStructuralOfIdentical","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeUnionStructuralOfDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeUnionFunction","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeUnionFunctionOneBigger","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeUnionFunctionOfIdentical","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeUnionFunctionOfDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeIntersectStructural","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeIntersectStructuralOneBigger","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeIntersectStructuralOfIdentical","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeIntersectStructuralOfDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeIntersectFunction","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeIntersectFunctionOneBigger","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeIntersectFunctionOfIdentical","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeIntersectFunctionOfDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeSubtractStructural","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeSubtractStructuralOneBigger","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeSubtractStructuralOfIdentical","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeSubtractStructuralOfDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeSubtractFunction","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeSubtractFunctionOneBigger","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeSubtractFunctionOfIdentical","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhCapsuleSetBenchmark.timeSubtractFunctionOfDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeKeySetWithBuilder","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeKeySet","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeKeySetEqualsCanonicalSet","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetMultimapBenchmarks.timeKeySetCachedEqualsCanonicalSet","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhMapBenchmarks.timeIterationEntry","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeLookup","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeLookupKeyContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeLookupKeyNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeInsertNotContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeRemove","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeRemoveKeyContained","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeEqualsWorstCase","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeEqualsGoodCase","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeSubsetOf","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeUnionRealDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeUnionDeltaDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeUnionDifferent","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeSubtractRealDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeSubtractDeltaDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeSubtractDifferent","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeIntersectRealDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeIntersectDeltaDuplicate","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.timeIntersectDifferent","0"
"msteindorfer/criterion","io.usethesource.criterion.JmhSetBenchmarks.footprint","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeContainsKey","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeContainsKeyNotContained","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeIteration","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeInsert","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeInsertContained","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeRemoveKey","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeRemoveKeyNotContained","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeEqualsRealDuplicate","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeEqualsRealDuplicateModified","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhSetBenchmarks.timeEqualsDeltaDuplicate","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeContainsKey","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeContainsKeyNotContained","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeIteration","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeEntryIteration","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeInsert","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeInsertContained","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeRemoveKeyNotContained","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeRemoveKey","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeEqualsRealDuplicate","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeEqualsRealDuplicateModified","0"
"msteindorfer/oopsla15-artifact","nl.cwi.swat.jmh_dscg_benchmarks.JmhMapBenchmarks.timeEqualsDeltaDuplicate","0"
"msteindorfer/oopsla15-artifact","dom.JmhCfgDominatorBenchmarks.timeDominatorCalculation","0"
"mweirauch/micrometer-jvm-extras","io.github.mweirauch.micrometer.jvm.extras.procfs.ProcfsSmapsBenchmark.collectSingle","0"
"mweirauch/micrometer-jvm-extras","io.github.mweirauch.micrometer.jvm.extras.procfs.ProcfsStatusBenchmark.collectSingle","0"
"myzhan/locust4j","com.github.myzhan.locust4j.utils.BenchmarkMD5.calculateMD5","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.keyGeneration","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.encryptUnsafe","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.encryptSafe","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.addEncryptedToEncryptedSameExponent","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.addEncryptedToEncryptedDifferentExponent","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.addEncodedToEncryptedSameExponent","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.paillierMultiply","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.addEncodedToEncryptedDifferentExponent","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.doublePrecicionAdd","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.doublePrecicionMultiply","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark.additiveInverse","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark$DifferentKeySize.keyGeneration","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark$DifferentKeySize.safeEncryption","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark$DifferentKeySize.unsafeEncryption","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark$DifferentKeySize.decryption","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark$DifferentKeySize.encryptedAddEncrypted","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark$DifferentKeySize.encryptedAddEncoded","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark$DifferentKeySize.encryptedMultiplyEncoded","0"
"n1analytics/javallier","com.n1analytics.paillier.JavallierBenchmark$DifferentKeySize.encryptedAdditiveInverse","0"
"Nawy/UnsafeCollections","org.megalabs.collection.advanced.AdvArrayListBenchmark.benchmarkArrayListAdd","0"
"Nawy/UnsafeCollections","org.megalabs.collection.advanced.AdvArrayListBenchmark.benchmarkAdvArrayListAdd","0"
"Nawy/UnsafeCollections","org.megalabs.collection.advanced.AdvArrayListBenchmark.benchmarkArrayListContains","0"
"Nawy/UnsafeCollections","org.megalabs.collection.advanced.AdvArrayListBenchmark.benchmarkAdvArrayListContains","0"
"Nawy/UnsafeCollections","org.megalabs.collection.test.BenchmarkTest.benchmarkArrayList","0"
"Nawy/UnsafeCollections","org.megalabs.collection.test.BenchmarkTest.benchmarkUnsafeArayList","0"
"Nawy/UnsafeCollections","org.megalabs.collection.test.BenchmarkTest.benchmarkArrayListInsert","0"
"Nawy/UnsafeCollections","org.megalabs.collection.test.BenchmarkTest.benchmarkUnsafeArayListInsert","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmark._01_lightGraph","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmark._02_lightGraphReuseGraph","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmark._03_heavyGraph","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmark._04_heavyGraphReuseGraph","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmark._05_neo4jView","0"
"neo4j-contrib/neo4j-graph-algorithms","algo.bench.ConnectedComponentsBenchmark.wccCount","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark._01_unbufferedUnionFind","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark._02_bufferedUnionFind","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark._03_heavyGraphUnionFind","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark._04_lightGraphUnionFind","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark._05_buildBufferedDataSource","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark._06_buildHeavyGraph","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark._07_buildLightGraph","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ShortestPathsComparisionBenchmark._01_benchmark_deltaStepping","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ShortestPathsComparisionBenchmark._02_benchmark_singleDijkstra","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LabelPropagationBenchmarkLdbc._01_algo","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LabelPropagationBenchmarkLdbc._02_apoc","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LabelPropagationBenchmarkLdbc._03_direct","1"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ShortestPathBenchmark._01_benchmark","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.parallelUnionFindQueue_200000","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.parallelUnionFindQueue_400000","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.parallelUnionFindQueue_800000","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.parallelUnionFindForkJoinMerge_400000","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.parallelUnionFindForkJoinMerge_800000","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.parallelUnionFindForkJoin_400000","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.parallelUnionFindForkJoin_800000","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.sequentialUnionFind","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmark.run","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PageRankBenchmarkLdbc.run","2"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BetweennessCentralityBenchmark._01_benchmark","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MultistepSCCBenchmark._01_multistepSCCsequential","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MultistepSCCBenchmark._02_multistepSCCparallel","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MultistepSCCBenchmark._03_multistepSCCtarjan","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MSBFSBenchmark.measureMemory","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ClosenessCentralityBenchmark._01_benchmark","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.AllShortestPathsComparisionBenchmark._01_benchmark_ASP","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.AllShortestPathsComparisionBenchmark._03_benchmark_MS_ASP","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BetweennessComparisionBenchmark._01_benchmark_sequential","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BetweennessComparisionBenchmark._04_benchmark_parallel8","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BetweennessComparisionBenchmark._05_benchmark_sucessorBrandes","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ParallelUnionFindBenchmark.multiSourceColoring","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark._08_multiSourceBFSColoringUnionFind","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.GraphLoadLdbc.run","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.impl.msbfs.MSBitSetBenchmark.initBits","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.impl.msbfs.MSBFSBenchmark.measure","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.TriangleCountBenchmark._01_triangleCount","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.TriangleCountBenchmark._02_triangleCountExp","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.GraphLoadLdbc.load","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.AllShortestPathsComparisionBenchmark._02_benchmark_MS_ASP","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.AllShortestPathsComparisionBenchmark._03_benchmark_Huge_MS_ASP","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.impl.msbfs.MSBFSComparisonBenchmark._01_normal","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.impl.msbfs.MSBFSComparisonBenchmark._02_huge","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.SBCBenchmarkLdbc._01_sbcParallel","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.TriangleCountBenchmark.triangleCountExp2_multiThreaded","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.TriangleCountBenchmark.triangleCountExp3_multiThreaded","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.TriangleCountBenchmark.triangleCountExp3_Coefficients_multiThreaded","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.UnionFindBenchmark.unionFind","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LouvainBenchmarkLdbc._01_louvainParallel","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.TriangleCountBenchmark._01_queue","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.TriangleCountBenchmark._02_forkJoin","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.TriangleCountBenchmark._03_stream","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._01_primitive_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._02_primitive_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._03_paged_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._04_paged_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._05_sparse_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._06_sparse_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._07_offHeap_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._08_offHeap_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._09_chunked_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark._10_chunked_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.MsBfsBenchmarkLdbc.run","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.primitive_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.primitive_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.paged_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.paged_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.huge_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.huge_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.sparse_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.sparse_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.offHeap_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.offHeap_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.chunked_get","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.utils.LongArrayBenchmark.chunked_set","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.impl.msbfs.MSBFSComparisonBenchmark.default_msbfs","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.impl.msbfs.MSBFSComparisonBenchmark.huge_msbfs","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.IntersectionBenchmark.intersection","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.IntersectionBenchmark.intersection2","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.IntersectionBenchmark.intersection3","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.IntersectionBenchmark.intersection4","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.SquareDeltasBenchmark.sumSquares","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.SquareDeltasBenchmark.sumSquaresMany","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.CosineSimilarityBenchmark.cosineSquares","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.CosineSimilarityBenchmark.cosineSquareRoots","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.CosineSimilarityBenchmark.sumSquaresMany","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.WeightedPageRankBenchmarkLdbc.run","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.WeightedPageRankBenchmark.run","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.CosineSimilarityBenchmark.cosineSquaresRle","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PearsonSimilarityBenchmark.pearsonSquares","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PearsonSimilarityBenchmark.pearsonSquaresSkip","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.PearsonSimilarityBenchmark.pearsonSquaresRle","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.RadixSortBenchmark.juArraysSort","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.RadixSortBenchmark.radixSort1","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.RadixSortBenchmark.radixSort2","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.SimilarityStreamGeneratorBenchmark.allPairs","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.SimilarityStreamGeneratorBenchmark.allPairsBlankSourceTarget","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.InfoMapYelp.infoMap","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ClusteringBenchmark._01_louvain","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.ClusteringBenchmark._02_infoMap","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.InfoMapBenchmarkLdbc._01_infoMap","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LongIteratorsBenchmark._01_javaStreamIterator","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LongIteratorsBenchmark._02_javaStreamRandomIterator","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LongIteratorsBenchmark._03_neoRange","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LongIteratorsBenchmark._04_idIterator","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LongIteratorsBenchmark._05_switchingIterator","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.LongIteratorsBenchmark._06_randomIterator","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BFSBenchmark.bfs","0"
"neo4j-contrib/neo4j-graph-algorithms","org.neo4j.graphalgo.bench.BFSBenchmark.dfs","0"
"neo4j-contrib/neo4j-jdbc","it.larusba.neo4j.jdbc.bolt.SamplePT.testSimpleQueryJDBC","0"
"neo4j-contrib/neo4j-jdbc","it.larusba.neo4j.jdbc.bolt.SamplePT.testSimpleQueryBoltDriver","0"
"neo4j-contrib/neo4j-jdbc","it.larusba.neo4j.jdbc.bolt.SamplePT.testSimpleQueryWithDebugJDBC","0"
"neo4j-contrib/neo4j-jdbc","org.neo4j.jdbc.bolt.SamplePT.testSimpleQueryJDBC","0"
"neo4j-contrib/neo4j-jdbc","org.neo4j.jdbc.bolt.SamplePT.testSimpleQueryBoltDriver","0"
"neo4j-contrib/neo4j-jdbc","org.neo4j.jdbc.bolt.SamplePT.testSimpleQueryWithDebugJDBC","0"
"neo4j-contrib/neo4j-jdbc","org.neo4j.jdbc.bolt.ExecutePT.testExecuteNoMetadata","0"
"neo4j-contrib/neo4j-jdbc","org.neo4j.jdbc.bolt.ExecutePT.testExecuteQueryNoMetadata","0"
"neo4j-contrib/neo4j-jdbc","org.neo4j.jdbc.bolt.ExecutePT.testExecuteQueryWithMetadata","0"
"neo4j-contrib/neo4j-jdbc","org.neo4j.jdbc.bolt.ExecutePT.testExecuteWithMetadata","0"
"neowu/core-ng-demo-project","core.framework.api.crypto.HashBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.api.util.JSONAfterburnerBenchmark.fromJSONBytesWithAfterburner","0"
"neowu/core-ng-demo-project","core.framework.api.util.JSONAfterburnerBenchmark.fromJSONBytes","0"
"neowu/core-ng-demo-project","core.framework.api.util.ASCIIToUpperCaseBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.api.util.StopWatchBenchmark.milliTime","0"
"neowu/core-ng-demo-project","core.framework.api.util.StopWatchBenchmark.nanoTime","0"
"neowu/core-ng-demo-project","core.framework.api.util.StopWatchBenchmark.cpuTime","0"
"neowu/core-ng-demo-project","core.framework.api.util.URIEncodingBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.api.util.InputStreamsBenchmark.oldVersion","0"
"neowu/core-ng-demo-project","core.framework.api.util.InputStreamsBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.api.util.JSONBenchmark.toJSONBytes","0"
"neowu/core-ng-demo-project","core.framework.api.util.JSONBenchmark.toJSONBytesWithMapper","0"
"neowu/core-ng-demo-project","core.framework.api.util.JSONBenchmark.toJSONString","0"
"neowu/core-ng-demo-project","core.framework.api.util.JSONBenchmark.fromJSONString","0"
"neowu/core-ng-demo-project","core.framework.api.util.JSONBenchmark.fromJSONBytes","0"
"neowu/core-ng-demo-project","core.framework.api.util.JSONBenchmark.fromJSONBytesWithMapper","0"
"neowu/core-ng-demo-project","core.framework.api.util.StringsSplitBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.api.util.StringsSplitBenchmark.jdk","0"
"neowu/core-ng-demo-project","core.framework.impl.template.HTMLTemplateBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.crypto.HashBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.util.ASCIIToUpperCaseBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.util.StopWatchBenchmark.milliTime","0"
"neowu/core-ng-demo-project","core.framework.util.StopWatchBenchmark.nanoTime","0"
"neowu/core-ng-demo-project","core.framework.util.StopWatchBenchmark.cpuTime","0"
"neowu/core-ng-demo-project","core.framework.util.URIEncodingBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.util.InputStreamsBenchmark.oldVersion","0"
"neowu/core-ng-demo-project","core.framework.util.InputStreamsBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.util.StringsSplitBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.util.StringsSplitBenchmark.jdk","0"
"neowu/core-ng-demo-project","core.framework.util.StringJoinBenchmark.stringJoin","0"
"neowu/core-ng-demo-project","core.framework.util.StringJoinBenchmark.stringBuilderAppend","0"
"neowu/core-ng-demo-project","core.framework.util.StringJoinBenchmark.stringBuilderRemove","0"
"neowu/core-ng-demo-project","core.framework.util.StringReplaceBenchmark.append","0"
"neowu/core-ng-demo-project","core.framework.util.StringReplaceBenchmark.append1","0"
"neowu/core-ng-demo-project","core.framework.util.StringReplaceBenchmark.replace","0"
"neowu/core-ng-demo-project","core.framework.impl.log.filter.JSONParamBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.impl.log.filter.JSONParamBenchmark.oldV0","0"
"neowu/core-ng-demo-project","core.framework.impl.log.filter.JSONParamBenchmark.oldV1","0"
"neowu/core-ng-demo-project","core.framework.util.StringEncodingBenchmark.jdkWithUTF8","0"
"neowu/core-ng-demo-project","core.framework.util.StringEncodingBenchmark.custom","0"
"neowu/core-ng-demo-project","core.framework.impl.log.message.ActionLogDateBenchmark.zonedDateTimeJSON","0"
"neowu/core-ng-demo-project","core.framework.impl.log.message.ActionLogDateBenchmark.instantJSON","0"
"neowu/core-ng-demo-project","core.framework.impl.log.message.ActionLogDateBenchmark.zonedDateTime","0"
"neowu/core-ng-demo-project","core.framework.impl.log.message.ActionLogDateBenchmark.instant","0"
"neowu/core-ng-demo-project","core.framework.impl.log.KafkaAppenderBenchmark.array","0"
"neowu/core-ng-demo-project","core.framework.impl.log.KafkaAppenderBenchmark.linked","0"
"neowu/core-ng-demo-project","core.framework.impl.log.ActionLogBenchmark.arrayList","0"
"neowu/core-ng-demo-project","core.framework.impl.log.ActionLogBenchmark.linkedList","0"
"neowu/core-ng-demo-project","core.framework.util.HexEncodingBenchmark.hex","0"
"neowu/core-ng-demo-project","core.framework.util.HexEncodingBenchmark.hex2","0"
"neowu/core-ng-demo-project","core.framework.impl.log.IdGeneratorBenchmark.uuid","0"
"neowu/core-ng-demo-project","core.framework.impl.log.IdGeneratorBenchmark.custom","0"
"neowu/core-ng-demo-project","core.framework.impl.db.ResultSetIndexBenchmark.hashMap","0"
"neowu/core-ng-demo-project","core.framework.impl.db.ResultSetIndexBenchmark.treeMap","0"
"neowu/core-ng-demo-project","core.framework.impl.web.HttpStringBenchmark.string","0"
"neowu/core-ng-demo-project","core.framework.impl.web.HttpStringBenchmark.httpString","0"
"neowu/core-ng-demo-project","core.framework.impl.web.request.EnumSetBenchmark.enumSet","0"
"neowu/core-ng-demo-project","core.framework.impl.web.request.EnumSetBenchmark.condition","0"
"neowu/core-ng-demo-project","core.framework.impl.web.route.RouteBenchmark.v0","0"
"neowu/core-ng-demo-project","core.framework.impl.web.route.RouteBenchmark.current","0"
"neowu/core-ng-demo-project","core.framework.json.JSONBenchmark.withString","0"
"neowu/core-ng-demo-project","core.framework.json.JSONBenchmark.withBytes","0"
"neowu/core-ng-demo-project","core.framework.internal.log.message.ActionLogDateBenchmark.zonedDateTimeJSON","0"
"neowu/core-ng-demo-project","core.framework.internal.log.message.ActionLogDateBenchmark.instantJSON","0"
"neowu/core-ng-demo-project","core.framework.internal.log.message.ActionLogDateBenchmark.zonedDateTime","0"
"neowu/core-ng-demo-project","core.framework.internal.log.message.ActionLogDateBenchmark.instant","0"
"neowu/core-ng-demo-project","core.framework.impl.web.InetAddressBenchmark.jdk","0"
"neowu/core-ng-demo-project","core.framework.impl.web.http.IPRangeBenchmark.cidr","0"
"neowu/core-ng-demo-project","core.framework.impl.web.http.IPRangeBenchmark.ranges","0"
"neowu/core-ng-demo-project","core.framework.internal.db.ResultSetIndexBenchmark.hashMap","0"
"neowu/core-ng-demo-project","core.framework.internal.db.ResultSetIndexBenchmark.treeMap","0"
"neowu/core-ng-project","core.framework.api.util.URIBuilderEncodePathSegmentBenchmark.current","0"
"neowu/core-ng-project","core.framework.api.util.ASCIIToUpperCaseBenchmark.current","0"
"neowu/core-ng-project","core.framework.api.util.StringsSplitBenchmark.current","0"
"neowu/core-ng-project","core.framework.api.util.StringsSplitBenchmark.jdk","0"
"neowu/core-ng-project","core.framework.impl.template.HTMLTemplateBenchmark.current","0"
"neowu/core-ng-project","core.framework.api.crypto.HashBenchmark.current","0"
"neowu/core-ng-project","core.framework.api.redis.RedisBenchmark.current","0"
"neowu/core-ng-project","core.framework.api.util.URIEncodingBenchmark.current","0"
"neowu/core-ng-project","core.framework.api.util.JSONAfterburnerBenchmark.fromJSONBytesWithAfterburner","0"
"neowu/core-ng-project","core.framework.api.util.JSONAfterburnerBenchmark.fromJSONBytes","0"
"neowu/core-ng-project","core.framework.api.util.InputStreamsBenchmark.oldVersion","0"
"neowu/core-ng-project","core.framework.api.util.InputStreamsBenchmark.current","0"
"neowu/core-ng-project","core.framework.api.util.JSONBenchmark.toJSONBytes","0"
"neowu/core-ng-project","core.framework.api.util.JSONBenchmark.toJSONBytesWithMapper","0"
"neowu/core-ng-project","core.framework.api.util.JSONBenchmark.toJSONString","0"
"neowu/core-ng-project","core.framework.api.util.JSONBenchmark.fromJSONString","0"
"neowu/core-ng-project","core.framework.api.util.JSONBenchmark.fromJSONBytes","0"
"neowu/core-ng-project","core.framework.api.util.JSONBenchmark.fromJSONBytesWithMapper","0"
"neowu/core-ng-project","core.framework.api.util.StopWatchBenchmark.milliTime","0"
"neowu/core-ng-project","core.framework.api.util.StopWatchBenchmark.nanoTime","0"
"neowu/core-ng-project","core.framework.api.util.StopWatchBenchmark.cpuTime","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.ArrayIterationComparison.testVanilla","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.ArrayIterationComparison.testLambda","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.ArrayListIterationComparison.testVanilla","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.ArrayListIterationComparison.testLambda","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.ArrayListIterationComparison.testArray","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.HashSetIterationComparison.testVanilla","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.HashSetIterationComparison.testLambda","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.HashSetIterationComparison.testArray","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.LinkedListIterationComparison.testVanilla","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.LinkedListIterationComparison.testLambda","0"
"nesteant/java-tests","com.apps4j.javatests.collection_iteration.LinkedListIterationComparison.testArray","0"
"nesteant/java-tests","com.apps4j.javatests.lambdas.IterationComparison.vanilla","0"
"nesteant/java-tests","com.apps4j.javatests.lambdas.IterationComparison.stream","0"
"nesteant/java-tests","com.apps4j.javatests.lambdas.IterationComparison.parallelStream","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineExecute","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineQueue","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineSyncObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineAsyncComputationObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.baselineAsyncCustomThreadPoolObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.hystrixExecute","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.hystrixQueue","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.hystrixObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionPerfTest.hystrixToObservable","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest.writeHeavyCommandExecution","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest.writeHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest.evenSplitOfWritesAndReadsCommandExecution","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest.evenSplitOfWritesAndReadsReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest.readHeavyCommandExecution","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.MultiThreadedMetricsTest.readHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest.writeOnly","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest.readOnly","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest.writeHeavyLatencyAdd","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest.writeHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest.evenSplitLatencyAdd","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest.evenSplitReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest.readHeavyLatencyAdd","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingPercentilePerfTest.readHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest.writeOnly","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest.readOnly","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest.writeHeavyCounterAdd","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest.writeHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest.evenSplitCounterAdd","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest.evenSplitReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest.readHeavyCounterAdd","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingNumberPerfTest.readHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest.writeOnly","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest.readOnly","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest.writeHeavyUpdateMax","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest.writeHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest.evenSplitUpdateMax","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest.evenSplitReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest.readHeavyUpdateMax","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.RollingMaxPerfTest.readHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.baselineExecute","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.baselineQueue","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.baselineSyncObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.baselineAsyncComputationObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.baselineAsyncCustomThreadPoolObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.hystrixExecute","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.hystrixQueue","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.hystrixObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandSetterExecutionPerfTest.hystrixToObservable","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.baselineExecute","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.baselineQueue","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.baselineSyncObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.baselineAsyncComputationObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.baselineAsyncCustomThreadPoolObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.hystrixExecute","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.hystrixQueue","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.hystrixObserve","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandGroupKeyExecutionPerfTest.hystrixToObservable","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.ObservableCollapserPerfTest.observeCollapsedAndWait","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CollapserPerfTest.observeCollapsedAndWait","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandConstructionPerfTest.constructHystrixCommandByGroupKeyOnly","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.writeHeavyCommandExecution","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.writeHeavyReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.evenSplitOfWritesAndReadsCommandExecution","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.evenSplitOfWritesAndReadsReadMetrics","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.readHeavyCommandExecution","0"
"Netflix/Hystrix","com.netflix.hystrix.perf.CommandExecutionAndConcurrentMetricsReadPerfTest.readHeavyReadMetrics","0"
"Netflix/servo","com.netflix.servo.publish.atlas.ValidCharactersBench.testUsingRegex","0"
"Netflix/servo","com.netflix.servo.publish.atlas.ValidCharactersBench.testNewByHand","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cachedIncrement","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookupIncrement","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cachedIncrement_T1","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookupIncrement_T1","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cachedIncrement_T2","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookupIncrement_T2","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cachedIncrement_T4","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookupIncrement_T4","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cachedIncrement_T8","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookupIncrement_T8","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Record.defaultRecord_T1","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Record.defaultRecord_T2","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Record.defaultRecord_T4","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Record.defaultRecord_T8","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Record.digestRecord_T1","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Record.digestRecord_T2","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Record.digestRecord_T4","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Record.digestRecord_T8","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Merge.treeMerge_10","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Merge.treeMerge_100","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Merge.treeMerge_1000","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Merge.avlMerge_10","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Merge.avlMerge_100","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Merge.avlMerge_1000","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Merge.avlMerge_02","0"
"Netflix/spectator","com.netflix.spectator.tdigest.Merge.avlMerge_05","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.justName","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.baseline","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.withTag","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.withTagsVararg","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.withTagsMap","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.append1","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.append2","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.append4","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T001","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T001","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T001","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T002","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T002","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T002","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T004","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T004","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T004","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T008","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T008","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T008","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T016","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T016","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T016","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T032","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T032","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T032","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T064","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T064","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T064","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T128","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T128","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T128","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached_T256","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup_T256","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random_T256","0"
"Netflix/spectator","com.netflix.spectator.perf.PercentileTimers.defaultTimerGet","0"
"Netflix/spectator","com.netflix.spectator.perf.PercentileTimers.percentileTimerGet","0"
"Netflix/spectator","com.netflix.spectator.perf.PercentileTimers.defaultTimerReuse","0"
"Netflix/spectator","com.netflix.spectator.perf.PercentileTimers.percentileTimerReuse","0"
"Netflix/spectator","com.netflix.spectator.perf.StringForeach.arrayForLoop","0"
"Netflix/spectator","com.netflix.spectator.perf.StringForeach.arrayForeach","0"
"Netflix/spectator","com.netflix.spectator.perf.StringForeach.strForLoop","0"
"Netflix/spectator","com.netflix.spectator.perf.StringForeach.stream","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.ok_naive","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.ok_stringBuilder","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.ok_array","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.ok_checkFirst","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.ok_asciiSet","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.bad_naive","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.bad_stringBuilder","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.bad_array","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.bad_checkFirst","0"
"Netflix/spectator","com.netflix.spectator.perf.StringReplace.bad_asciiSet","0"
"Netflix/spectator","com.netflix.spectator.perf.StringCreate.naive","0"
"Netflix/spectator","com.netflix.spectator.perf.StringCreate.reflection","0"
"Netflix/spectator","com.netflix.spectator.perf.StringCreate.methodHandle","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.cached","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.lookup","0"
"Netflix/spectator","com.netflix.spectator.perf.Counters.random","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.withTagsVarargSorted","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.append4sorted","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.emptyAppend1","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.emptyAppend2","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.emptyAppend4","0"
"Netflix/spectator","com.netflix.spectator.perf.Ids.emptyAppend4sorted","0"
"Netflix/spectator","com.netflix.spectator.ipc.ServerGroupParsing.string","0"
"Netflix/spectator","com.netflix.spectator.ipc.ServerGroupParsing.charSequence","0"
"Netflix/spectator","com.netflix.spectator.ipc.ServerGroupParsing.frigga","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.prefixString","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.prefixJava","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.prefixRe2j","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.prefixCustom","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.substrString","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.substrJava","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.substrRe2j","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.substrCustom","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.startIndexOfJava","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.startIndexOfRe2j","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.startIndexOfCustom","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.multiIndexOfJava","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.multiIndexOfRe2j","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.multiIndexOfCustom","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.orJava","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.orRe2j","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.orCustom","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.listJava","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.listRe2j","0"
"Netflix/spectator","com.netflix.spectator.perf.PatternMatching.listCustom","0"
"Netflix/spectator","com.netflix.spectator.perf.PercentileTimers.percentileTimerBuilder","0"
"Netflix/spectator","com.netflix.spectator.perf.Caching.allMissesSpectator","0"
"Netflix/spectator","com.netflix.spectator.perf.Caching.allMissesCaffeine","0"
"Netflix/spectator","com.netflix.spectator.perf.Caching.typicalSpectator","0"
"Netflix/spectator","com.netflix.spectator.perf.Caching.typicalCaffeine","0"
"Netflix/spectator","com.netflix.spectator.perf.IdTraversal.iterator","0"
"Netflix/spectator","com.netflix.spectator.perf.IdTraversal.forEach","0"
"netty/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledHeapAllocAndFree","0"
"netty/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledDirectAllocAndFree","0"
"netty/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledHeapAllocAndFree","0"
"netty/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledDirectAllocAndFree","0"
"netty/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledHeapAllocAndFree","0"
"netty/netty","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledDirectAllocAndFree","0"
"netty/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetInt","0"
"netty/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetShort","0"
"netty/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetLong","0"
"netty/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetInt","0"
"netty/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetShort","0"
"netty/netty","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetLong","0"
"netty/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark.jdkThreadLocalGet","0"
"netty/netty","io.netty.microbench.concurrent.FastThreadLocalBenchmark.fastThreadLocal","0"
"netty/netty","io.netty.microbench.internal.RecyclableArrayListBenchmark.recycleSameThread","0"
"netty/netty","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv4","0"
"netty/netty","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv6","0"
"netty/netty","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv6","0"
"netty/netty","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv4","0"
"netty/netty","io.netty.microbench.http.HttpRequestDecoderBenchmark.testDecodeWholeRequestInMultipleStepsMixedDelimiters","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArray","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArrayWrapped","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiString","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringWrapped","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArray","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArrayWrapped","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAscii","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiWrapped","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArray","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArrayWrapped","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8String","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringWrapped","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArray","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArrayWrapped","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8Wrapped","0"
"netty/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark.writeData","0"
"netty/netty","io.netty.microbench.http2.Http2FrameWriterBenchmark.writeHeaders","0"
"netty/netty","io.netty.microbench.http2.Http2PriorityTreeBenchmark.prioritizeStreams","0"
"netty/netty","io.netty.microbench.internal.PlatformDependentBenchmark.unsafeBytesEqual","0"
"netty/netty","io.netty.microbench.internal.PlatformDependentBenchmark.arraysBytesEqual","0"
"netty/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark.put","0"
"netty/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark.lookup","0"
"netty/netty","io.netty.microbenchmark.common.IntObjectHashMapBenchmark.remove","0"
"netty/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark.appendCheckBeforeCopy","0"
"netty/netty","io.netty.microbenchmark.common.AppendableCharSequenceBenchmark.appendCatchExceptionAfter","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.httpRemove","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.httpGet","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.httpPut","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.httpIterate","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2Remove","2"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2Get","2"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2Put","2"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2IterateNew","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2IterateOld","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.decodeStringAscii","0"
"netty/netty","io.netty.microbench.buffer.ByteBufUtilBenchmark.decodeStringUtf8","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2Iterate","0"
"netty/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark.writeAsciiStringSlice","0"
"netty/netty","io.netty.microbench.buffer.SlicedByteBufBenchmark.writeAsciiStringSliceAbstract","0"
"netty/netty","io.netty.microbench.buffer.ByteBufBenchmark.setByteBufferHeap","0"
"netty/netty","io.netty.microbench.buffer.ByteBufBenchmark.setByteBufferDirect","0"
"netty/netty","io.netty.microbench.buffer.ByteBufBenchmark.setByteBufHeap","0"
"netty/netty","io.netty.microbench.buffer.ByteBufBenchmark.setByteBufDirect","0"
"netty/netty","io.netty.microbench.buffer.ByteBufBenchmark.setByteBufDirectPooled","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getByteUnsafe","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getByte","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getShortUnsafe","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getShort","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getMediumUnsafe","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getMedium","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getIntUnsafe","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getInt","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getLongUnsafe","0"
"netty/netty","io.netty.microbench.buffer.HeapByteBufBenchmark.getLong","0"
"netty/netty","io.netty.microbench.util.ResourceLeakDetectorBenchmark.open","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.httpAddAllFastest","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.httpAddAllFast","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2AddAllFastest","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2AddAllFast","0"
"netty/netty","io.netty.microbench.headers.HeadersBenchmark.http2AddAllSlow","0"
"netty/netty","io.netty.microbench.http2.NoPriorityByteDistributionBenchmark.write","0"
"netty/netty","io.netty.microbench.http2.hpack.DecoderBenchmark.decode","0"
"netty/netty","io.netty.microbench.http2.hpack.EncoderBenchmark.encode","0"
"netty/netty","io.netty.microbenchmark.common.AsciiStringBenchmark.hashCodeBenchBytesOld","0"
"netty/netty","io.netty.microbenchmark.common.AsciiStringBenchmark.hashCodeBenchBytesNew","0"
"netty/netty","io.netty.microbenchmark.common.AsciiStringBenchmark.hashCodeBenchCharSequenceOld","0"
"netty/netty","io.netty.microbenchmark.common.AsciiStringBenchmark.hashCodeBenchCharSequenceNew","0"
"netty/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark.jdkThreadLocalGet","0"
"netty/netty","io.netty.microbench.concurrent.FastThreadLocalFastPathBenchmark.fastThreadLocal","0"
"netty/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark.jdkThreadLocalGet","0"
"netty/netty","io.netty.microbench.concurrent.FastThreadLocalSlowPathBenchmark.fastThreadLocal","0"
"netty/netty","io.netty.microbench.http2.internal.hpack.DecoderBenchmark.decode","0"
"netty/netty","io.netty.microbench.http2.internal.hpack.EncoderBenchmark.encode","1"
"netty/netty","io.netty.microbenchmark.common.MathOperationsBenchmark.nextIndexNoConditionals","0"
"netty/netty","io.netty.microbenchmark.common.MathOperationsBenchmark.nextIndexConditionals","0"
"netty/netty","io.netty.handler.codec.CodecOutputListBenchmark.codecOutList","0"
"netty/netty","io.netty.handler.codec.CodecOutputListBenchmark.recyclableArrayList","0"
"netty/netty","io.netty.handler.codec.CodecOutputListBenchmark.arrayList","0"
"netty/netty","io.netty.microbench.http2.internal.hpack.HpackUtilBenchmark.oldEquals","0"
"netty/netty","io.netty.microbench.http2.internal.hpack.HpackUtilBenchmark.newEquals","0"
"netty/netty","io.netty.microbench.http.ClientCookieDecoderBenchmark.decodeCookieWithRfc1123ExpiresField","0"
"netty/netty","io.netty.handler.codec.DateFormatterBenchmark.parseHttpHeaderDateFormatter","0"
"netty/netty","io.netty.handler.codec.DateFormatterBenchmark.parseHttpHeaderDateFormat","0"
"netty/netty","io.netty.handler.codec.DateFormatterBenchmark.formatHttpHeaderDateFormatter","0"
"netty/netty","io.netty.handler.codec.DateFormatterBenchmark.formatHttpHeaderDateFormat","0"
"netty/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark.defaultTrailers","0"
"netty/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark.readOnlyTrailers","0"
"netty/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark.defaultClientHeaders","0"
"netty/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark.readOnlyClientHeaders","0"
"netty/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark.defaultServerHeaders","0"
"netty/netty","io.netty.microbench.headers.ReadOnlyHttp2HeadersBenchmark.readOnlyServerHeaders","0"
"netty/netty","io.netty.microbench.http2.internal.hpack.DecoderULE128Benchmark.decodeMaxLong","0"
"netty/netty","io.netty.microbench.http2.internal.hpack.DecoderULE128Benchmark.decodeMaxIntWithLong","0"
"netty/netty","io.netty.microbench.http2.internal.hpack.DecoderULE128Benchmark.decodeMaxInt","0"
"netty/netty","io.netty.microbench.http2.internal.hpack.DecoderULE128Benchmark.decodeMaxIntUsingLong","0"
"netty/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark.testWithSMNoPrivileged","0"
"netty/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark.testWithSM","0"
"netty/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark.testWithSMWithNullCheck","0"
"netty/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark.testWithoutSMNoPrivileged","0"
"netty/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark.testWithoutSM","0"
"netty/netty","io.netty.microbench.internal.PrivilegedSocketOperationsBenchmark.testWithoutSMWithNullCheck","0"
"netty/netty","io.netty.buffer.ByteBufNoCleanerChangeCapacityBenchmark.capacityChange","0"
"netty/netty","io.netty.buffer.ByteBufNoCleanerAllocReleaseBenchmark.allocateRelease","0"
"netty/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark.writeRead","0"
"netty/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark.write","0"
"netty/netty","io.netty.microbench.buffer.PooledByteBufAllocatorAlignBenchmark.read","0"
"netty/netty","io.netty.microbench.handler.ssl.SslEngineWrapBenchmark.wrap","0"
"netty/netty","io.netty.microbench.handler.ssl.SslEngineEchoBenchmark.wrapUnwrap","0"
"netty/netty","io.netty.microbench.handler.ssl.SslEngineHandshakeBenchmark.handshake","0"
"netty/netty","io.netty.microbench.buffer.ByteBufAllocatorConcurrentBenchmark.allocateRelease","0"
"netty/netty","io.netty.microbench.handler.ssl.SslHandlerEchoBenchmark.wrapUnwrap","0"
"netty/netty","io.netty.handler.codec.http2.HpackEncoderBenchmark.encode","0"
"netty/netty","io.netty.handler.codec.http2.HpackUtilBenchmark.oldEquals","0"
"netty/netty","io.netty.handler.codec.http2.HpackUtilBenchmark.newEquals","0"
"netty/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark.decodeMaxLong","0"
"netty/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark.decodeMaxIntWithLong","0"
"netty/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark.decodeMaxInt","0"
"netty/netty","io.netty.handler.codec.http2.HpackDecoderULE128Benchmark.decodeMaxIntUsingLong","0"
"netty/netty","io.netty.handler.codec.http2.HpackDecoderBenchmark.decode","0"
"netty/netty","io.netty.microbench.internal.UnitializedArrayBenchmark.allocateInitializedByteArray","0"
"netty/netty","io.netty.microbench.internal.UnitializedArrayBenchmark.allocateUninitializedByteArray","0"
"netty/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark.isValidIpV4AddressOld","0"
"netty/netty","io.netty.microbenchmark.common.IsValidIpV4Benchmark.isValidIpV4AddressNew","0"
"netty/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark.isValidIpV6AddressOld","0"
"netty/netty","io.netty.microbenchmark.common.IsValidIpV6Benchmark.isValidIpV6AddressNew","0"
"netty/netty","io.netty.microbench.internal.EscapeCsvBenchmark.escapeCsvOld","0"
"netty/netty","io.netty.microbench.internal.EscapeCsvBenchmark.escapeCsvNew","0"
"netty/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark.oldEncoder","0"
"netty/netty","io.netty.handler.codec.http.HttpRequestEncoderInsertBenchmark.newEncoder","0"
"netty/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark.shortInt","0"
"netty/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark.mediumInt","0"
"netty/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark.byteArray2","0"
"netty/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark.byteArray3","0"
"netty/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark.chainedBytes2","0"
"netty/netty","io.netty.handler.codec.http.WriteBytesVsShortOrMediumBenchmark.chainedBytes3","0"
"netty/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark.record","0"
"netty/netty","io.netty.microbench.util.ResourceLeakDetectorRecordBenchmark.recordWithHint","0"
"netty/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark.retainReleaseUncontended","0"
"netty/netty","io.netty.buffer.AbstractReferenceCountedByteBufBenchmark.retainReleaseContended","0"
"netty/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark.cancelInOrder","0"
"netty/netty","io.netty.microbench.concurrent.ScheduledFutureTaskBenchmark.cancelInReverseOrder","0"
"netty/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark.oldMapKnownMethods","0"
"netty/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark.newMapKnownMethods","0"
"netty/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark.oldMapMixMethods","0"
"netty/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark.newMapMixMethods","0"
"netty/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark.oldMapUnknownMethods","0"
"netty/netty","io.netty.handler.codec.http.HttpMethodMapBenchmark.newMapUnknownMethods","0"
"netty/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark.newWriter","0"
"netty/netty","io.netty.handler.codec.http2.Http2FrameWriterDataBenchmark.oldWriter","0"
"netty/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark.fullMessage","0"
"netty/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark.contentLength","0"
"netty/netty","io.netty.microbench.http.HttpObjectEncoderBenchmark.chunked","0"
"netty/netty","io.netty.microbench.redis.RedisEncoderBenchmark.writeArray","0"
"netty/netty","io.netty.handler.codec.AdvancedCodecOutputListBenchmark.codecOutListAllocRecycle","0"
"netty/netty","io.netty.microbench.buffer.ByteBufCopyBenchmark.setBytes","0"
"netty/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark.setGetLongUnsafeByteBuf","0"
"netty/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark.setGetLongByteBuffer","0"
"netty/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark.setLongUnsafeByteBuf","0"
"netty/netty","io.netty.microbench.buffer.UnsafeByteBufBenchmark.setLongByteBuffer","0"
"netty/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark.pingPong","0"
"netty/netty","io.netty.buffer.ByteBufUtilDecodeStringBenchmark.decodeString","0"
"netty/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark.getCharSequence","0"
"netty/netty","io.netty.buffer.AbstractByteBufGetCharSequenceBenchmark.getCharSequenceOld","0"
"netty/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark.writeCBB","0"
"netty/netty","io.netty.buffer.CompositeByteBufWriteOutBenchmark.writeFCBB","0"
"netty/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark.setGetLong","0"
"netty/netty","io.netty.buffer.CompositeByteBufRandomAccessBenchmark.setLong","0"
"netty/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark.forEachByte","0"
"netty/netty","io.netty.buffer.CompositeByteBufSequentialBenchmark.sequentialWriteAndRead","0"
"netty/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark.test1Producer","0"
"netty/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark.test2Producers","0"
"netty/netty","io.netty.microbench.concurrent.BurstCostExecutorsBenchmark.test3Producers","0"
"netty/netty","io.netty.buffer.ByteBufAccessBenchmark.setGetLong","0"
"netty/netty","io.netty.buffer.ByteBufAccessBenchmark.setLong","0"
"netty/netty","io.netty.buffer.ByteBufAccessBenchmark.readBatch","0"
"netty/netty","io.netty.handler.codec.DateFormatter2Benchmark.parseHttpHeaderDateFormatterNew","0"
"netty/netty","io.netty.microbench.channel.DefaultChannelPipelineBenchmark.propagateEvent","0"
"netty/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark.executeSingle","0"
"netty/netty","io.netty.microbench.channel.epoll.EpollSocketChannelBenchmark.executeMulti","0"
"netzwerg/paleo","ch.netzwerg.paleo.io.ParserBenchmarks.parseWithSchema","0"
"netzwerg/paleo","ch.netzwerg.paleo.CategoryColumnBenchmarks.buildCategoryColumn","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.ObjectPoolBenchmark.test","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.LitePoolBenchmark.lite_pool_01_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.LitePoolBenchmark.lite_pool_02_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.LitePoolBenchmark.lite_pool_05_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.LitePoolBenchmark.lite_pool_10_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.LitePoolBenchmark.lite_pool_20_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.LitePoolBenchmark.lite_pool_50_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.CommonsPool2Benchmark.commons_pool2_01_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.CommonsPool2Benchmark.commons_pool2_02_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.CommonsPool2Benchmark.commons_pool2_05_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.CommonsPool2Benchmark.commons_pool2_10_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.CommonsPool2Benchmark.commons_pool2_20_thread","0"
"nextopcn/lite-pool","cn.nextop.lite.pool.benchmark.CommonsPool2Benchmark.commons_pool2_50_thread","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectStringRead1Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectBufferRead1Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapStringRead1Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapBufferRead1Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectStringRead56Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectBufferRead56Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapStringRead56Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapBufferRead56Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectStringRead118Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectBufferRead118Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapStringRead118Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapBufferRead118Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectStringRead614Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectBufferRead614Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapStringRead614Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapBufferRead614Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectStringWrite1Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectStringWrite56Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectStringWrite118Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectStringWrite614Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectBufferWrite1Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectBufferWrite56Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectBufferWrite118Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.DirectBufferWrite614Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapStringWrite1Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapStringWrite56Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapStringWrite118Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapStringWrite614Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapBufferWrite1Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapBufferWrite56Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapBufferWrite118Kb","0"
"nickman/json-benchmark","com.heliosapm.benchmarks.json.JSONUnmarshalling.HeapBufferWrite614Kb","0"
"nickman/UnsafeAdapter","perf.com.heliosapm.trove.BenchmarkAlocationPointer.testAllocationPointer","0"
"nickman/UnsafeAdapter","perf.com.heliosapm.trove.BenchmarkAlocationPointer.testAllocationPointerMemTracking","0"
"nickman/UnsafeAdapter","perf.com.heliosapm.trove.BenchmarkAlocationPointer.testAllocationPointerMemAlignTracking","0"
"nickman/UnsafeAdapter","perf.com.heliosapm.trove.BenchmarkAlocationPointer.testAllocationPointerAuto","0"
"nickman/UnsafeAdapter","perf.com.heliosapm.trove.BenchmarkAlocationPointer.testAllocationPointerMemTrackingAuto","0"
"nickman/UnsafeAdapter","perf.com.heliosapm.trove.BenchmarkAlocationPointer.testAllocationPointerMemAlignTrackingAuto","0"
"nickman/UnsafeAdapter","perf.com.heliosapm.trove.BenchmarkTroveLongLongMap.testUnsafeTroveLongLongMap","0"
"nicoulaj/jmh-utils","net.nicoulaj.jmh.profilers.TestBenchmark.benchmark","0"
"nicoulaj/jmh-utils","net.nicoulaj.jmh.assertions.TestBenchmark.benchmark","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.android6Chrome46","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.androidPhone","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.googlebot","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.googleBotMobileAndroid","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.googleAdsBot","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.googleAdsBotMobile","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.iPhone","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.iPhoneFacebookApp","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.iPad","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.win7ie11","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.win10Edge13","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.win10Chrome51","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.win10IE11","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.hackerSQL","0"
"nielsbasjes/yauaa","nl.basjes.parse.useragent.benchmarks.AnalyzerBenchmarks.hackerShellShock","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.EqualsBuilderBenchmark.classic","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.EqualsBuilderBenchmark.eager","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.EqualsBuilderBenchmark.apache","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.dispatch.MegamorphicBenchamark.equalsBuilderMonomorphic","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.dispatch.MegamorphicBenchamark.equalsBuilderMonomorphicBoxed","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.dispatch.MegamorphicBenchamark.equalsBuilderBimorphic","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.dispatch.MegamorphicBenchamark.equalsBuilderBimorphicBoxed","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.dispatch.MegamorphicBenchamark.equalsBuilderMegamorphic","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.dispatch.MegamorphicBenchamark.equalsBuilderMegamorphicStrings","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.dispatch.MegamorphicBenchamark.equalsBuilderMegamorphicBoxed","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.multifield.MultiFieldComparisonBenchmark.baseline","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.multifield.MultiFieldComparisonBenchmark.equalsBuilder","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.multifield.MultiFieldComparisonBenchmark.classic","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.multifield.MultiFieldComparisonBenchmark.java7","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.multifield.MultiFieldComparisonBenchmark.apacheCommons","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.multifield.MultiFieldComparisonBenchmark.classicWithGetters","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.multifield.MultiFieldComparisonBenchmark.java7WithGetters","0"
"nikarh/equals-builder","net.arhipov.equalsbuilder.multifield.MultiFieldComparisonBenchmark.apacheCommonsWithGetters","0"
"nithril/packedobject-test","com.github.nithril.PackedObjectBench.benchDefaultSum","0"
"nithril/packedobject-test","com.github.nithril.PackedObjectBench.benchSum","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.HibernateBenchmark.findAuthorsWithBooksUsingCriteria","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.HibernateBenchmark.findAuthorsWithBooksUsingNamedQuery","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.HibernateBenchmark.findAuthorsWithBooksUsingSpringData","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.SqlBenchmark.reference","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.SqlBenchmark.findAuthorsWithBooksJooqStreamedGroupBy","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.SqlBenchmark.findAuthorsWithBooksJdbcStreamed","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.SqlBenchmark.findAuthorsWithBooksJooqOldFashionGroupBy","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.SqlBenchmark.findAuthorsWithBooksJdbc","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.SqlBenchmark.findAuthorsWithBooksJooqIntoGroup","0"
"nithril/sandbox-query-benchmark-jooq-hibernate-jdbc","demo.SqlBenchmark.findAuthorsWithBooksLazyGroupBy","0"
"nitram509/intellij-idea-plugin-serializer-toolbox","org.example.testcases.JacksonSerializerBenchmark.jacksonManualStreamSerialization","0"
"nitram509/intellij-idea-plugin-serializer-toolbox","org.example.testcases.JacksonSerializerBenchmark.jacksonDatabindingSerialization","0"
"nitram509/intellij-idea-plugin-serializer-toolbox","org.example.testcases.JacksonDeSerializerBenchmark.jacksonManualStreamDeSerialization","0"
"nitram509/intellij-idea-plugin-serializer-toolbox","org.example.testcases.JacksonDeSerializerBenchmark.jacksonDatabindingDeSerialization","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkLazySet.measureUnshared","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkLazySet.measureShared","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkVolatile.measureUnshared","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkVolatile.measureShared","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkPlain.measureUnshared","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.FalseSharingBenchmarkPlain.measureShared","0"
"nitsanw/jmh-samples","psy.lob.saw.utf8.Utf8EncodingBenchmark.customEncoder","0"
"nitsanw/jmh-samples","psy.lob.saw.utf8.Utf8EncodingBenchmark.stringGetBytes","0"
"nitsanw/jmh-samples","psy.lob.saw.utf8.Utf8EncodingBenchmark.charsetEncoder","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.LoopyBenchmarks.goodOldLoop","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.LoopyBenchmarks.sweetLoop","0"
"nitsanw/jmh-samples","psy.lob.saw.conc.LoopyBenchmarks.goodOldLoopReturns","0"
"nitsanw/jmh-samples","psy.lob.saw.LoopyBenchmarks.goodOldLoop","0"
"nitsanw/jmh-samples","psy.lob.saw.LoopyBenchmarks.sweetLoop","0"
"nitsanw/jmh-samples","psy.lob.saw.LoopyBenchmarks.goodOldLoopReturns","0"
"nitsanw/jmh-samples","psy.lob.saw.LoopyBenchmarks.sumOldLoop","0"
"nitsanw/jmh-samples","psy.lob.saw.LoopyBenchmarks.sumSweetLoop","0"
"nitsanw/jmh-samples","psy.lob.saw.BaselineBenchmarks.noop","0"
"nitsanw/jmh-samples","psy.lob.saw.BaselineBenchmarks.increment","0"
"nitsanw/jmh-samples","psy.lob.saw.BaselineBenchmarks.incrementConsume","0"
"nitsanw/jmh-samples","psy.lob.saw.BaselineBenchmarks.consume","0"
"nitsanw/jmh-samples","psy.lob.saw.BaselineBenchmarks.consumeAdd","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.SumInt","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.sumLong","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.equalsInt","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.equalsLong","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.fillInt","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.fillLong","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.copyInt","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.copyLong","0"
"nitsanw/safepoint-experiments","safepoint.optimizations.SafepointKillLoopOptimizations.copyLongWithBatches","0"
"nitsanw/safepoint-experiments","safepoint.fair.LoveAtATimeOfSafepoints.contains1","0"
"nitsanw/safepoint-experiments","safepoint.fair.LoveAtATimeOfSafepoints.contains1ToK","0"
"nitsanw/safepoint-experiments","safepoint.fair.LoveAtATimeOfSafepoints.safepoint","0"
"nitsanw/safepoint-experiments","safepoint.fair.LoveAtATimeOfSafepoints.park","0"
"nitsanw/safepoint-experiments","safepoint.profiling.SafepointProfiling.blameSetResult","0"
"nitsanw/safepoint-experiments","safepoint.profiling.SafepointProfiling.blameSetResultDeep","0"
"nitsanw/safepoint-experiments","safepoint.profiling.SafepointProfiling.blameSetResultDeeper","0"
"nitsanw/safepoint-experiments","safepoint.profiling.SafepointProfiling.meSoHotNoInline","0"
"nitsanw/safepoint-experiments","safepoint.profiling.SafepointProfiling.meSoHotInline","0"
"nobeh/jmh-forked-main-threads","org.openjdk.jmh.bugreport.benchmark.ApplicationBenchmark.doBenchmark","0"
"nom-tam-fits/nom-tam-fits","nom.tam.manual.intergration.FitsBenchmark.helloWorld","0"
"nom-tam-fits/nom-tam-fits","nom.tam.manual.intergration.FitsBenchmark.testEmptyString1","0"
"nom-tam-fits/nom-tam-fits","nom.tam.manual.intergration.FitsBenchmark.testEmptyString2","0"
"notsyncing/cowherd","io.github.notsyncing.cowherd.tests.stress.TestApp.simpleRequestThroughNetwork","0"
"notsyncing/lightfur","io.github.notsyncing.lightfur.tests.performance.ReflectDataMapperPerformanceTest.reflectDataMapperBenchmark","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueDequeueBenchmark.OnHeapQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueDequeueBenchmark.OffHeapQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueDequeueBenchmark.MemoryMappedQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueEnqueueBenchmark.OnHeapQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueEnqueueBenchmark.OffHeapQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueEnqueueBenchmark.MemoryMappedQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueEnqueueDequeueBenchmark.OnHeapByteBufferQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueEnqueueDequeueBenchmark.OffHeapByteBufferQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytearray.ByteArrayQueueEnqueueDequeueBenchmark.MemoryMappedByteBufferQueue","0"
"npetzall/persistent-queue","npetzall.queue.bytebuffer.ByteBufferReadBenchmark.OnHeap","0"
"npetzall/persistent-queue","npetzall.queue.bytebuffer.ByteBufferReadBenchmark.OffHeap","0"
"npetzall/persistent-queue","npetzall.queue.bytebuffer.ByteBufferReadBenchmark.MemoryMappedFile","0"
"npetzall/persistent-queue","npetzall.queue.bytebuffer.ByteBufferWriteBenchmark.OnHeap","0"
"npetzall/persistent-queue","npetzall.queue.bytebuffer.ByteBufferWriteBenchmark.OffHeap","0"
"npetzall/persistent-queue","npetzall.queue.bytebuffer.ByteBufferWriteBenchmark.MemoryMappedFile","0"
"nstdio/libpgn","com.asatryan.libpgn.benchmark.LibPgnBenchmark.bench","0"
"nstdio/libpgn","com.github.nstdio.libpgn.benchmark.PgnLexerBenchmark.lexerDataWithoutCopy","0"
"nstdio/libpgn","com.github.nstdio.libpgn.benchmark.TagPairFilterBenchmark.whiteLastNameSplitImplSuccess","0"
"nstdio/libpgn","com.github.nstdio.libpgn.benchmark.TagPairFilterBenchmark.whiteLastNameSplitImplFail","0"
"nstdio/libpgn","com.github.nstdio.libpgn.benchmark.PgnParserBenchmark.bench","0"
"nstdio/libpgn","com.github.nstdio.libpgn.benchmark.PgnParserBenchmark.benchSkipTagPair","0"
"nstdio/libpgn","com.github.nstdio.libpgn.benchmark.pgn.TagPairBenchmark.rawBytes","0"
"nstdio/libpgn","com.github.nstdio.libpgn.benchmark.pgn.TagPairBenchmark.stringBased","0"
"nstdio/libpgn","com.github.nstdio.libpgn.benchmark.pgn.TagPairBenchmark.lazyStringBased","0"
"numenta/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerLocalInhibitionBenchmark.measureAvgCompute_7_Times","0"
"numenta/htm.java","org.numenta.nupic.benchmarks.SpatialPoolerGlobalInhibitionBenchmark.measureAvgCompute_7_Times","0"
"numenta/htm.java","org.numenta.nupic.benchmarks.TemporalMemoryBenchmark.measureAvgCompute_7_Times","0"
"oblac/jodd","jodd.util.StringBandBenchmark.string2","0"
"oblac/jodd","jodd.util.StringBandBenchmark.stringBand2","0"
"oblac/jodd","jodd.util.StringBandBenchmark.string3","0"
"oblac/jodd","jodd.util.StringBandBenchmark.stringBand3","0"
"oblac/jodd","jodd.lagarto.EmitStringsBenchmark.lagarto_noStrings","0"
"oblac/jodd","jodd.lagarto.EmitStringsBenchmark.lagarto_emitStrings","0"
"oblac/jodd","jodd.lagarto.EmitStringsBenchmark.lagartoDomBuilder","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringReplaceShortStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringReplaceLongStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringReplaceShortStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringReplaceLongStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringReplaceShortStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringReplaceLongStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testApacheStringUtilsReplaceShortStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testApacheStringUtilsReplaceLongStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testApacheStringUtilsReplaceShortStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testApacheStringUtilsReplaceLongStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testApacheStringUtilsReplaceShortStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testApacheStringUtilsReplaceLongStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringUtilReplaceShortStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringUtilReplaceLongStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringUtilReplaceShortStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringUtilReplaceLongStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringUtilReplaceShortStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.testStringUtilReplaceLongStringSeveralMatches","0"
"oblac/jodd","jodd.util.CharUtilIWhitespaceBenchmark.isWhitespace_Java","0"
"oblac/jodd","jodd.util.CharUtilIWhitespaceBenchmark.isWhitespace_Jodd","0"
"oblac/jodd","jodd.util.Base64Benchmark.encode_Java_Base64","0"
"oblac/jodd","jodd.util.Base64Benchmark.decode_Java_Base64","0"
"oblac/jodd","jodd.util.Base64Benchmark.encode_Apache_Base64","0"
"oblac/jodd","jodd.util.Base64Benchmark.decode_Apache_Base64","0"
"oblac/jodd","jodd.util.Base64Benchmark.encode_Jodd_Base64","0"
"oblac/jodd","jodd.util.Base64Benchmark.decode_Jodd_Base64","0"
"oblac/jodd","jodd.util.Base32Benchmark.encode_Apache_Base32","0"
"oblac/jodd","jodd.util.Base32Benchmark.decode_Apache_Base32","0"
"oblac/jodd","jodd.util.Base32Benchmark.encode_Jodd_Base32","0"
"oblac/jodd","jodd.util.Base32Benchmark.decode_Jodd_Base32","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringReplaceShortStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringReplaceLongStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringReplaceShortStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringReplaceLongStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringReplaceShortStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringReplaceLongStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.apacheStringUtilsReplaceShortStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.apacheStringUtilsReplaceLongStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.apacheStringUtilsReplaceShortStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.apacheStringUtilsReplaceLongStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.apacheStringUtilsReplaceShortStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.apacheStringUtilsReplaceLongStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringUtilReplaceShortStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringUtilReplaceLongStringNoMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringUtilReplaceShortStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringUtilReplaceLongStringOneMatch","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringUtilReplaceShortStringSeveralMatches","0"
"oblac/jodd","jodd.util.StringUtilReplaceBenchmark.stringUtilReplaceLongStringSeveralMatches","0"
"oblac/jodd","jodd.util.HashCodeBenchmark.hashCode_noInstance","0"
"oblac/jodd","jodd.util.HashCodeBenchmark.hashCode_withInstance","0"
"oblac/jodd","jodd.util.MathUtilRandomBenchmark.randomLong_with_Random","0"
"oblac/jodd","jodd.util.MathUtilRandomBenchmark.randomInt_with_Random","0"
"oblac/jodd","jodd.util.MathUtilRandomBenchmark.randomLong_with_ThreadLocalRandom","0"
"oblac/jodd","jodd.util.MathUtilRandomBenchmark.randomInt_with_ThreadLocalRandom","0"
"oblac/jodd","jodd.cache.TypeCacheBenchmark.map","0"
"oblac/jodd","jodd.cache.TypeCacheBenchmark.syncMap","0"
"oblac/jodd","jodd.cache.TypeCacheBenchmark.weakMap","0"
"oblac/jodd","jodd.cache.TypeCacheBenchmark.weakSyncMap","0"
"oblac/jodd","jodd.cache.TypeCacheBenchmark.smoothieMap","0"
"oblac/jodd","jodd.cache.TypeCacheBenchmark.simpleHashMap","0"
"oblac/jodd","jodd.cache.TypeCacheBenchmark.timedCache","0"
"oblac/jodd","jodd.buffer.FastCharBufferBenchmark.fastBuffer","0"
"oblac/jodd","jodd.buffer.FastCharBufferBenchmark.charArrayWriter","0"
"oblac/jodd","jodd.buffer.FastByteBufferBenchmark.fastBuffer","0"
"oblac/jodd","jodd.buffer.FastByteBufferBenchmark.outputStream","0"
"oblac/jodd","jodd.bean.BeanUtilBenchmark.apacheBeanUtils","0"
"oblac/jodd","jodd.bean.BeanUtilBenchmark.joddBean","0"
"octabase/fnr-java","io.octa.security.fnr.FNRCipherBenchmarkTest.FNRJavaJNAEncryption","0"
"octabase/fnr-java","io.octa.security.fnr.FNRCipherBenchmarkTest.FNRJavaBuilInAesEncryption","0"
"octabase/fnr-java","io.octa.security.fnr.FNRCipherBenchmarkTest.FNRJavaJNADecryption","0"
"octabase/fnr-java","io.octa.security.fnr.FNRCipherBenchmarkTest.FNRJavaBuiltInAesDecryption","0"
"octabase/fnr-java","io.octa.security.fnr.FNRCipherBenchmarkTest.JNAEncryption","0"
"octabase/fnr-java","io.octa.security.fnr.FNRCipherBenchmarkTest.JNADecryption","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.scaledCurrentBig","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.scaledCurrent","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.scaledPrevious","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.scaledCurrentSmall","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.unscaled","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.vanillaBaselineNoNoEntryObject","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.vanillaBaselineNoCoords","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.vanillaBaseline","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.vanillaBaselineGradientsNoOpts","0"
"OpenCubicChunks/CubicChunks","cubicchunks.worldgen.builder.BuilderBenchmark.baselineLoopOverhead","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryDatastoreWriteTransactionBenchmark.write100KSingleNodeWithOneInnerItemInOneCommitBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryDatastoreWriteTransactionBenchmark.write100KSingleNodeWithOneInnerItemInCommitPerWriteBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryDatastoreWriteTransactionBenchmark.write50KSingleNodeWithTwoInnerItemsInOneCommitBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryDatastoreWriteTransactionBenchmark.write50KSingleNodeWithTwoInnerItemsInCommitPerWriteBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryDatastoreWriteTransactionBenchmark.write10KSingleNodeWithTenInnerItemsInOneCommitBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryDatastoreWriteTransactionBenchmark.write10KSingleNodeWithTenInnerItemsInCommitPerWriteBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryBrokerWriteTransactionBenchmark.write100KSingleNodeWithOneInnerItemInOneCommitBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryBrokerWriteTransactionBenchmark.write100KSingleNodeWithOneInnerItemInCommitPerWriteBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryBrokerWriteTransactionBenchmark.write50KSingleNodeWithTwoInnerItemsInOneCommitBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryBrokerWriteTransactionBenchmark.write50KSingleNodeWithTwoInnerItemsInCommitPerWriteBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryBrokerWriteTransactionBenchmark.write10KSingleNodeWithTenInnerItemsInOneCommitBenchmark","0"
"opendaylight/controller","org.opendaylight.controller.md.sal.dom.store.benchmark.AbstractInMemoryBrokerWriteTransactionBenchmark.write10KSingleNodeWithTenInnerItemsInCommitPerWriteBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.singleNodes100KWriteBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.twoNodes50KWriteBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.tenNodes10KWriteBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write100KSingleNodeWithOneInnerItemInOneCommitBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write100KSingleNodeWithOneInnerItemInCommitPerWriteBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write50KSingleNodeWithTwoInnerItemsInOneCommitBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write50KSingleNodeWithTwoInnerItemsInCommitPerWriteBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write10KSingleNodeWithTenInnerItemsInOneCommitBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write10KSingleNodeWithTenInnerItemsInCommitPerWriteBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write100KSingleNodeWithOneInnerItemInOneCommitCursorBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write50KSingleNodeWithTwoInnerItemsInOneCommitCursorBenchmark","0"
"opendaylight/yangtools","org.opendaylight.yangtools.yang.data.impl.tree.InMemoryDataTreeBenchmark.write10KSingleNodeWithTenInnerItemsInOneCommitCursorBenchmark","0"
"OpenFeign/feign","feign.benchmark.RealRequestBenchmarks.query_baseCaseUsingOkHttp","0"
"OpenFeign/feign","feign.benchmark.RealRequestBenchmarks.query_feignUsingOkHttp","0"
"OpenFeign/feign","feign.benchmark.WhatShouldWeCacheBenchmarks.parseFeignContract","0"
"OpenFeign/feign","feign.benchmark.WhatShouldWeCacheBenchmarks.buildAndQuery_fake","0"
"OpenFeign/feign","feign.benchmark.WhatShouldWeCacheBenchmarks.buildAndQuery_fake_cachedContract","0"
"OpenFeign/feign","feign.benchmark.WhatShouldWeCacheBenchmarks.buildAndQuery_fake_cachedFeign","0"
"OpenFeign/feign","feign.benchmark.WhatShouldWeCacheBenchmarks.buildAndQuery_fake_cachedApi","0"
"OpenFeign/feign","feign.benchmark.DecoderIteratorsBenchmark.decode","0"
"OpenHFT/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes.vanillaHash","0"
"OpenHFT/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes.city11Hash","0"
"OpenHFT/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes.murmur3Hash","0"
"OpenHFT/Chronicle-Algorithms","net.openhft.chronicle.algorithms.measures.MainBytes.xx39Hash","0"
"OpenHFT/Chronicle-Logger","net.openhft.Lo4J2PerfTest.testChronicle","0"
"OpenHFT/Chronicle-Logger","net.openhft.Lo4J2PerfTest.testChronicleException","0"
"OpenHFT/Chronicle-Logger","net.openhft.Lo4J2PerfTest.testFile","0"
"OpenHFT/Chronicle-Logger","net.openhft.Lo4J2PerfTest.testFileException","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.jacksonWithTextCBytes","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.snakeYaml","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.boon","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.jackson","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.jacksonWithCBytes","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.bson","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.bsonWithCBytes","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.sbe","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.externalizable","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ComparisonMain.externalizableWithCBytes","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.twireUTF","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.twire8bit","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.bwireFFF","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.bwireFTF","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.bwireFTT","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.bwireTFF","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.bwireTTF","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.rwire8bit","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.rwireUTF","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.rwire8bit2","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.bytesMarshallableStopBit","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.bytesMarshallable","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.Main.json8bit","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newString01","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newString02","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newString04","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newString08","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newString16","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newString32","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newStringB01","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newStringB02","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newStringB04","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newStringB08","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newStringB16","0"
"OpenHFT/Chronicle-Wire","net.openhft.chronicle.wire.benchmarks.ObjectPoolMain.newStringB32","0"
"OpenHFT/jvm-micro-benchmarks","javatest.InstanceOfMain.instanceOf","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumWithCopyByByte","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumWithCopyByInt","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumWithCopyByLong","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumByteBufferByByte","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumByteBufferByInt","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumByteBufferByLong","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumNativeMemoryByByte","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumNativeMemoryByInt","0"
"OpenHFT/jvm-micro-benchmarks","encyrption.MemoryAccessMain.checkSumNativeMemoryByLong","0"
"OpenHFT/jvm-micro-benchmarks","utf8.DecodeMain.decode_fromUTF8","0"
"OpenHFT/jvm-micro-benchmarks","utf8.DecodeMain.decode_usingSimpleLoop","0"
"OpenHFT/jvm-micro-benchmarks","utf8.DecodeMain.decode_usingCharArray","0"
"OpenHFT/jvm-micro-benchmarks","utf8.DecodeMain.decode_usingCharArrayAndAddress","0"
"OpenHFT/jvm-micro-benchmarks","utf8.EncodeMain.encode_simpleToUTF8","0"
"OpenHFT/jvm-micro-benchmarks","utf8.EncodeMain.encode_usingSimpleLoop","0"
"OpenHFT/jvm-micro-benchmarks","utf8.EncodeMain.encode_usingSimpleLoopUnrolled","0"
"OpenHFT/jvm-micro-benchmarks","utf8.EncodeMain.encode_unsafeLoopCharArray","0"
"OpenHFT/jvm-micro-benchmarks","utf8.EncodeMain.encode_unsafeLoopCharAt","0"
"OpenHFT/jvm-micro-benchmarks","utf8.EncodeMain.encode_unsafeLoopCharAtUnrolled","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.javaSerialization","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.javaSerializationCapturing","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.javaSerializationWithEnum","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.wireSerialization","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.wireSerializationCapturing","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.wireSerializationWithEnum","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.textWireSerialization","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.textWireSerializationCapturing","0"
"OpenHFT/jvm-micro-benchmarks","lambda.LambdaSerialization.textWireSerializationWithEnum","0"
"openrq-team/OpenRQ","net.fec.openrq.XorTest.testArrayBytes","0"
"openrq-team/OpenRQ","net.fec.openrq.XorTest.testArrayLongs","0"
"openrq-team/OpenRQ","net.fec.openrq.XorTest.testDirectBytes","0"
"openrq-team/OpenRQ","net.fec.openrq.XorTest.testDirectLongs","0"
"openrq-team/OpenRQ","net.fec.openrq.BufferedVectorOperationTest.testArrayAddition","0"
"openrq-team/OpenRQ","net.fec.openrq.BufferedVectorOperationTest.testArrayDivision","0"
"openrq-team/OpenRQ","net.fec.openrq.BufferedVectorOperationTest.testArrayBufferAddition","0"
"openrq-team/OpenRQ","net.fec.openrq.BufferedVectorOperationTest.testArrayBufferDivision","0"
"openrq-team/OpenRQ","net.fec.openrq.BufferedVectorOperationTest.testDirectBufferAddition","0"
"openrq-team/OpenRQ","net.fec.openrq.BufferedVectorOperationTest.testDirectBufferDivision","0"
"openrq-team/OpenRQ","net.fec.openrq.BiArrayAllocationTest.testPreAllocated","0"
"openrq-team/OpenRQ","net.fec.openrq.BiArrayAllocationTest.testNewlyAllocated","0"
"openrq-team/OpenRQ","net.fec.openrq.ArrayAllocationTest.testPreAllocated","0"
"openrq-team/OpenRQ","net.fec.openrq.ArrayAllocationTest.testNewlyAllocated","0"
"openrq-team/OpenRQ","net.fec.openrq.SourceBlockEncodingTest.test","0"
"openrq-team/OpenRQ","net.fec.openrq.SourceBlockDecodingTest.test","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.ByteBoundedQueueBenchmarks.no_contention_offer","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.ByteBoundedQueueBenchmarks.no_contention_drain","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.ByteBoundedQueueBenchmarks.mild_contention_offer","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.ByteBoundedQueueBenchmarks.mild_contention_drain","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.ByteBoundedQueueBenchmarks.high_contention_offer","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.ByteBoundedQueueBenchmarks.high_contention_drain","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.benchmarks.EncodingBenchmarks.encode100Spans_thrift","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.benchmarks.EncodingBenchmarks.encode100Spans_json","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.benchmarks.EncodingBenchmarks.encodeListOf100Spans_thrift","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.benchmarks.EncodingBenchmarks.encodeListOf100Spans_json","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.AsyncReporterBenchmarks.no_contention_report","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.AsyncReporterBenchmarks.mild_contention_report","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.AsyncReporterBenchmarks.high_contention_report","0"
"openzipkin/zipkin-reporter-java","zipkin.reporter.SenderBenchmarks.report","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.SenderBenchmarks.report","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.ByteBoundedQueueBenchmarks.no_contention_offer","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.ByteBoundedQueueBenchmarks.no_contention_drain","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.ByteBoundedQueueBenchmarks.mild_contention_offer","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.ByteBoundedQueueBenchmarks.mild_contention_drain","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.ByteBoundedQueueBenchmarks.high_contention_offer","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.ByteBoundedQueueBenchmarks.high_contention_drain","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.AsyncReporterBenchmarks.no_contention_report","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.AsyncReporterBenchmarks.mild_contention_report","0"
"openzipkin/zipkin-reporter-java","zipkin2.reporter.AsyncReporterBenchmarks.high_contention_report","0"
"openzipkin/zipkin","zipkin.benchmarks.SamplerBenchmarks.traceIdSampler","0"
"openzipkin/zipkin","zipkin.benchmarks.SamplerBenchmarks.compareTraceId_mostNegativeNumberDefense","0"
"openzipkin/zipkin","zipkin.benchmarks.SamplerBenchmarks.compareTraceId_modulo10000_salted","0"
"openzipkin/zipkin","zipkin.benchmarks.SamplerBenchmarks.compareRandomNumber","0"
"openzipkin/zipkin","zipkin.benchmarks.SamplerBenchmarks.compareCounter","0"
"openzipkin/zipkin","zipkin.benchmarks.SpanBenchmarks.buildLocalSpan","0"
"openzipkin/zipkin","zipkin.benchmarks.SpanBenchmarks.buildClientOnlySpan","0"
"openzipkin/zipkin","zipkin.benchmarks.SpanBenchmarks.buildRpcSpan","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readLocalSpan_json_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readLocalSpan_json_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readLocalSpan_thrift_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readLocalSpan_thrift_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeLocalSpan_json_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeLocalSpan_json_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeLocalSpan_thrift_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeLocalSpan_thrift_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_json_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_json_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_thrift_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_thrift_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_json_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_json_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_thrift_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_thrift_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcSpan_json_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcSpan_json_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcSpan_thrift_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcSpan_thrift_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcSpan_json_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcSpan_json_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcSpan_thrift_java","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcSpan_thrift_scala","0"
"openzipkin/zipkin","zipkin.benchmarks.SamplerBenchmarks.traceIdSampler_boundary","0"
"openzipkin/zipkin","zipkin.benchmarks.SamplerBenchmarks.traceIdSampler_counting","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readLocalSpan_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readLocalSpan_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readLocalSpan_thrift_libthrift","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeLocalSpan_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeLocalSpan_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeLocalSpan_thrift_libthrift","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_thrift_libthrift","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_thrift_libthrift","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcSpan_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcSpan_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcSpan_thrift_libthrift","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcSpan_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcSpan_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcSpan_thrift_libthrift","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcV6Span_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcV6Span_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readRpcV6Span_thrift_libthrift","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcV6Span_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcV6Span_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeRpcV6Span_thrift_libthrift","0"
"openzipkin/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks.writeTo_tinySpan","0"
"openzipkin/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks.writeTo_tinySpan_prefixingTimestampMillis_withChannelBuffer","0"
"openzipkin/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks.writeTo_tinySpan_prefixingTimestampMillis_withByteArray","0"
"openzipkin/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks.writeTo_normalSpan","0"
"openzipkin/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks.writeTo_normalSpan_prefixingTimestampMillis_withChannelBuffer","0"
"openzipkin/zipkin","zipkin.benchmarks.ElasticsearchBenchmarks.writeTo_normalSpan_prefixingTimestampMillis_withByteArray","0"
"openzipkin/zipkin","zipkin.benchmarks.UtilBenchmarks.lowerHexToUnsignedLong_64","0"
"openzipkin/zipkin","zipkin.benchmarks.UtilBenchmarks.lowerHexToUnsignedLong_128","0"
"openzipkin/zipkin","zipkin.benchmarks.SpanBenchmarks.buildClientOnlySpan_clear","0"
"openzipkin/zipkin","zipkin.benchmarks.MetricsBenchmarks.incrementBytes_longSpans_inMemory","0"
"openzipkin/zipkin","zipkin.benchmarks.MetricsBenchmarks.incrementBytes_longSpans_Actuate","0"
"openzipkin/zipkin","zipkin.benchmarks.MetricsBenchmarks.incrementBytes_mediumSpans_inMemory","0"
"openzipkin/zipkin","zipkin.benchmarks.MetricsBenchmarks.incrementBytes_mediumSpans_Actuate","0"
"openzipkin/zipkin","zipkin.benchmarks.MetricsBenchmarks.incrementBytes_shortSpans_inMemory","0"
"openzipkin/zipkin","zipkin.benchmarks.MetricsBenchmarks.incrementBytes_shortSpans_Actuate","0"
"openzipkin/zipkin","zipkin.benchmarks.SpanBenchmarks.buildClientOnlySpan2","0"
"openzipkin/zipkin","zipkin.benchmarks.SpanBenchmarks.buildClientOnlySpan2_clear","0"
"openzipkin/zipkin","zipkin.benchmarks.SpanBenchmarks.buildClientOnlySpan2_clone","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readTenClientSpans_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readTenClientSpans_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeTenClientSpans_json_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeTenClientSpans_thrift_zipkin","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_json_span2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readTenClientSpans_json_span2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_json_span2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeTenClientSpans_json_span2","0"
"openzipkin/zipkin","zipkin.benchmarks.Span2ConverterBenchmarks.fromSpan_splitShared","0"
"openzipkin/zipkin","zipkin.benchmarks.Span2ConverterBenchmarks.fromSpan","0"
"openzipkin/zipkin","zipkin.benchmarks.Span2ConverterBenchmarks.toSpan","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_json_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readTenClientSpans_json_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_json_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeTenClientSpans_json_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_json_zipkin2_legacy","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeTenClientSpans_json_zipkin2_legacy","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_java_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_java_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_proto3_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readClientSpan_proto3_protobuf","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeClientSpan_proto3_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readChineseSpan_json_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readChineseSpan_proto3_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.readChineseSpan_proto3_protobuf","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeChineseSpan_json_zipkin2","0"
"openzipkin/zipkin","zipkin.benchmarks.CodecBenchmarks.writeChineseSpan_proto3_zipkin2","0"
"openzipkin/zipkin","zipkin2.EndpointBenchmarks.parseIpv4_literal","0"
"openzipkin/zipkin","zipkin2.EndpointBenchmarks.parseIpv4_addr","0"
"openzipkin/zipkin","zipkin2.EndpointBenchmarks.parseIpv6_literal","0"
"openzipkin/zipkin","zipkin2.EndpointBenchmarks.parseIpv6_addr","0"
"openzipkin/zipkin","zipkin2.internal.BufferBenchmarks.utf8SizeInBytes_chinese","0"
"openzipkin/zipkin","zipkin2.internal.BufferBenchmarks.writeUtf8_chinese","0"
"openzipkin/zipkin","zipkin2.internal.BufferBenchmarks.writeUtf8_chinese_jdk","0"
"openzipkin/zipkin","zipkin2.internal.BufferBenchmarks.varIntSizeInBytes_32","0"
"openzipkin/zipkin","zipkin2.internal.BufferBenchmarks.varIntSizeInBytes_64","0"
"openzipkin/zipkin","zipkin2.internal.BufferBenchmarks.writeVarint_32","0"
"openzipkin/zipkin","zipkin2.internal.BufferBenchmarks.writeVarint_64","0"
"openzipkin/zipkin","zipkin2.internal.BufferBenchmarks.writeLongLe","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.buildClientSpan","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.buildClientSpan_clear","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.buildClientSpan_clone","0"
"openzipkin/zipkin","zipkin2.collector.MetricsBenchmarks.incrementBytes_longSpans_inMemory","0"
"openzipkin/zipkin","zipkin2.collector.MetricsBenchmarks.incrementBytes_longSpans_Actuate","0"
"openzipkin/zipkin","zipkin2.collector.MetricsBenchmarks.incrementBytes_mediumSpans_inMemory","0"
"openzipkin/zipkin","zipkin2.collector.MetricsBenchmarks.incrementBytes_mediumSpans_Actuate","0"
"openzipkin/zipkin","zipkin2.collector.MetricsBenchmarks.incrementBytes_shortSpans_inMemory","0"
"openzipkin/zipkin","zipkin2.collector.MetricsBenchmarks.incrementBytes_shortSpans_Actuate","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_java","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_java","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_json","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_proto3","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_proto3_protobuf","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readTenClientSpans_json","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_json","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeTenClientSpans_json","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_json_legacy","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeTenClientSpans_json_legacy","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_proto3","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readChineseSpan_json","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readChineseSpan_proto3","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readChineseSpan_proto3_protobuf","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeChineseSpan_json","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeChineseSpan_proto3","0"
"openzipkin/zipkin","zipkin2.internal.DelayLimiterBenchmarks.shouldInvoke_randomData","0"
"openzipkin/zipkin","zipkin2.internal.DelayLimiterBenchmarks.shouldInvoke_sameData","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_kryo","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_kryo","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_proto3_wire","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_json_v1","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeTenClientSpans_json_v1","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_proto3_wire","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readChineseSpan_proto3_wire","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeChineseSpan_proto3_wire","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.buildClientSpan_longs","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.serialize_kryo","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.deserialize_kryo","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.padLeft_1Char","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.padLeft_15Chars","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.padLeft_17Chars","0"
"openzipkin/zipkin","zipkin2.SpanBenchmarks.padLeft_31Chars","0"
"openzipkin/zipkin","zipkin2.EndpointBenchmarks.parseIpv4_bytes","0"
"openzipkin/zipkin","zipkin2.EndpointBenchmarks.parseIpv6_bytes","0"
"openzipkin/zipkin","zipkin2.elasticsearch.internal.BulkRequestBenchmarks.writeRequest_singleSpan","0"
"openzipkin/zipkin","zipkin2.elasticsearch.internal.BulkRequestBenchmarks.buildAndWriteRequest_singleSpan","0"
"openzipkin/zipkin","zipkin2.elasticsearch.internal.BulkRequestBenchmarks.buildAndWriteRequest_tenSpans","0"
"openzipkin/zipkin","zipkin2.internal.ReadBufferBenchmarks.readLong","0"
"openzipkin/zipkin","zipkin2.internal.ReadBufferBenchmarks.readLong_localArray","0"
"openzipkin/zipkin","zipkin2.internal.ReadBufferBenchmarks.readLong_8arity_localArray","0"
"openzipkin/zipkin","zipkin2.internal.ReadBufferBenchmarks.readLong_8arity","0"
"openzipkin/zipkin","zipkin2.internal.ReadBufferBenchmarks.readLongReverseBytes","0"
"openzipkin/zipkin","zipkin2.internal.WriteBufferBenchmarks.utf8SizeInBytes_chinese","0"
"openzipkin/zipkin","zipkin2.internal.WriteBufferBenchmarks.writeUtf8_chinese","0"
"openzipkin/zipkin","zipkin2.internal.WriteBufferBenchmarks.writeUtf8_chinese_jdk","0"
"openzipkin/zipkin","zipkin2.internal.WriteBufferBenchmarks.varIntSizeInBytes_32","0"
"openzipkin/zipkin","zipkin2.internal.WriteBufferBenchmarks.varIntSizeInBytes_64","0"
"openzipkin/zipkin","zipkin2.internal.WriteBufferBenchmarks.writeVarint_32","0"
"openzipkin/zipkin","zipkin2.internal.WriteBufferBenchmarks.writeVarint_64","0"
"openzipkin/zipkin","zipkin2.internal.WriteBufferBenchmarks.writeLongLe","0"
"openzipkin/zipkin","zipkin2.codec.ProtoCodecBenchmarks.bytes_zipkinDecoder","0"
"openzipkin/zipkin","zipkin2.codec.ProtoCodecBenchmarks.bytes_protobufDecoder","0"
"openzipkin/zipkin","zipkin2.codec.ProtoCodecBenchmarks.bytes_wireDecoder","0"
"openzipkin/zipkin","zipkin2.codec.ProtoCodecBenchmarks.bytebuffer_zipkinDecoder","0"
"openzipkin/zipkin","zipkin2.codec.ProtoCodecBenchmarks.bytebuffer_protobufDecoder","0"
"openzipkin/zipkin","zipkin2.codec.ProtoCodecBenchmarks.bytebuffer_wireDecoder","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_JSON_V1","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_JSON_V2","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_PROTO3","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readClientSpan_THRIFT","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_JSON_V2","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_JSON_V1","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_PROTO3","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeClientSpan_THRIFT","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readTenClientSpans_JSON_V2","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeTenClientSpans_JSON_V2","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readChineseSpan_JSON_V1","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readChineseSpan_JSON_V2","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readChineseSpan_PROTO3","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.readChineseSpan_THRIFT","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeChineseSpan_JSON_V2","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeChineseSpan_JSON_V1","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeChineseSpan_PROTO3","0"
"openzipkin/zipkin","zipkin2.codec.CodecBenchmarks.writeChineseSpan_THRIFT","0"
"openzipkin/zipkin","zipkin2.codec.JsonCodecBenchmarks.bytes_jacksonDecoder","0"
"openzipkin/zipkin","zipkin2.codec.JsonCodecBenchmarks.bytes_moshiDecoder","0"
"openzipkin/zipkin","zipkin2.codec.JsonCodecBenchmarks.bytes_zipkinDecoder","0"
"openzipkin/zipkin","zipkin2.codec.JsonCodecBenchmarks.bytebuffer_jacksonDecoder","0"
"openzipkin/zipkin","zipkin2.codec.JsonCodecBenchmarks.bytebuffer_moshiDecoder","0"
"openzipkin/zipkin","zipkin2.codec.JsonCodecBenchmarks.bytebuffer_zipkinDecoder","0"
"openzipkin/zipkin","zipkin2.server.internal.throttle.ThrottledCallBenchmarks.execute","0"
"openzipkin/zipkin","zipkin2.server.internal.throttle.ThrottledCallBenchmarks.execute_overCapacity","0"
"openzipkin/zipkin","zipkin2.server.internal.throttle.ThrottledCallBenchmarks.execute_throttled","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.SquareMultiply.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.GeneralSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.DecomposeEigen.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.DecomposeSingular.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.SquareMultiplyTransposed.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.LeastSquaresSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.HermitianSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.optimisation.lp.netlib.NetlibDatasetsMps.solve","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.SquareMultiply.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.GeneralSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.DecomposeEigen.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.DecomposeSingular.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.SquareMultiplyTransposed.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.LeastSquaresSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.HermitianSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.SquareMultiplyLeftTransposed.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.GeneralSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.SquareMultiplyRightTransposed.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.DecomposeEigen.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.DecomposeSingular.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.Square3Multiply.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.LeastSquaresSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.FillByMultiplying.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.matrix.operation.HermitianSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.Scale.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.GeneralSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.DecomposeEigen.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.Add.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.MultiplyToProduce.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.DecomposeSVD.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.LeastSquaresSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.FillByMultiplying.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.Pseudoinverse.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.HermitianSolve.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.LeastSquaresSolver.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.DecomposeEvD.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.Transpose.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.InvertSPD.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.Determinant.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.FillByMultiplyingTransposedLeft.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.InvertGeneral.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.FillByMultiplyingTransposedRight.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.MultiplyTransposedRight.execute","0"
"optimatika/ojAlgo-linear-algebra-benchmark","org.ojalgo.benchmark.lab.MultiplyTransposedLeft.execute","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureGetVariationWithNoAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureGetVariationWithAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureGetVariationWithForcedVariation","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureGetVariationForGroupExperimentWithNoAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureGetVariationForGroupExperimentWithAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureActivateWithNoAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureActivateWithAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureActivateWithForcedVariation","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureActivateForGroupExperimentWithNoAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureActivateForGroupExperimentWithAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureActivateForGroupExperimentWithForcedVariation","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithNoAttributesAndNoRevenue","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithNoAttributesAndRevenue","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithAttributesAndNoRevenue","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithAttributesAndRevenue","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithGroupExperimentsNoAttributesNoRevenue","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithGroupExperimentsNoAttributesAndRevenue","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithGroupExperimentsNoRevenueAndAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithGroupExperimentsAndAttributesAndRevenue","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithGroupExperimentsAndForcedVariation","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBuilderBenchmark.measureOptimizelyCreation","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithNoAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithGroupExperimentsNoAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.OptimizelyBenchmark.measureTrackWithGroupExperimentsAndAttributes","0"
"optimizely/java-sdk","com.optimizely.ab.config.parser.JacksonConfigParserBenchmark.parseV2","0"
"optimizely/java-sdk","com.optimizely.ab.config.parser.JacksonConfigParserBenchmark.parseV3","0"
"optimizely/java-sdk","com.optimizely.ab.config.parser.JacksonConfigParserBenchmark.parseV4","0"
"oracle/graal","com.oracle.graal.virtual.bench.PartialEscapeBench.benchPartialEscape","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.normalArraycopy","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.arraysCopyOf","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.cloneObjectArray","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark.nullness","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark.search","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark.nullness","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark.search","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.getNodeClass","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.inputs","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.usages","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.nonNullInputs","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueEquals_STRING_EQUALS","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueEquals_HASHMAP_COMPUTE_IF_ABSENT","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueNumberLeaf_HASHMAP_COMPUTE_IF_ABSENT","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueNumberLeaf_STRING_EQUALS","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.stringEquals","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_LATEST_OPTIMAL","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_LATEST_OUT_OF_LOOPS_OPTIMAL","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_EARLIEST_OPTIMAL","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.FrameStateAssigmentPhaseBenchmark.nextToken","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark.setAgeCond","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark.getAge","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark.getAndIncAge","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.TestJMH.testJMH","0"
"oracle/graal","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench.doMinMaxInJava","0"
"oracle/graal","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench.doMinMaxWithInterOp","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.nodeBitmap","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute1","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute2","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute3","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute4","0"
"oracle/graal","com.oracle.truffle.sl.test.SLPolyglotEngineValueExecuteBenchmark.executePlus","0"
"oracle/graal","com.oracle.truffle.sl.test.SLPolyglotEngineValueExecuteBenchmark.executePlusDirectly","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark.lsra_STRING_equals","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark.lsra_HASHMAP_computeIfAbsent","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark.tracera_STRING_equals","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark.tracera_HASHMAP_computeIfAbsent","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark.compile","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark.frontend","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark.backend","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.trace.TraceBuilderBenchmark.uniDirectionalTraceBuilder","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.trace.TraceBuilderBenchmark.biDirectionalTraceBuilder","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.dataEquals","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.replaceFirstInput","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.inputsEquals","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.acceptInputs","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.createAndDeleteAdd","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.createAndDeleteConstant","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathLog","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathLog10","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathSin","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathCos","0"
"oracle/graal","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathTan","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.shallowSmallBlocks","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.shallowBigBlocks","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.deepSmallBlocks","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.deepBigBlocks","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.insertionBig","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.insertionSmall","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.replaceBig","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.replaceSmall","0"
"oracle/graal","com.oracle.truffle.api.benchmark.NodeAdoptionBenchmark.replaceALot","0"
"oracle/graal","com.oracle.graal.microbenchmarks.lir.trace.TraceLSRAIntervalBuildingBench.buildIntervals","0"
"oracle/graal","micro.benchmarks.SimpleSyncBenchmark.setAgeCond","0"
"oracle/graal","micro.benchmarks.SimpleSyncBenchmark.getAge","0"
"oracle/graal","micro.benchmarks.SimpleSyncBenchmark.getAndIncAge","0"
"oracle/graal","micro.benchmarks.ArrayDuplicationBenchmark.normalArraycopy","0"
"oracle/graal","micro.benchmarks.ArrayDuplicationBenchmark.arraysCopyOf","0"
"oracle/graal","micro.benchmarks.ArrayDuplicationBenchmark.cloneObjectArray","0"
"oracle/graal","micro.benchmarks.GuardedIntrinsicBenchmark.overrideHashCode","0"
"oracle/graal","micro.benchmarks.GuardedIntrinsicBenchmark.inheritHashCode","0"
"oracle/graal","micro.benchmarks.GuardedIntrinsicBenchmark.mixedHashCode","0"
"oracle/graal","micro.benchmarks.MathFunctionBenchmark.mathLog","0"
"oracle/graal","micro.benchmarks.MathFunctionBenchmark.mathLog10","0"
"oracle/graal","micro.benchmarks.MathFunctionBenchmark.mathSin","0"
"oracle/graal","micro.benchmarks.MathFunctionBenchmark.mathCos","0"
"oracle/graal","micro.benchmarks.MathFunctionBenchmark.mathTan","0"
"oracle/graal","org.graalvm.compiler.virtual.bench.PartialEscapeBench.benchPartialEscape","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.RegisterAllocationTimeBenchmark.lsra_STRING_equals","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.RegisterAllocationTimeBenchmark.lsra_HASHMAP_computeIfAbsent","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.RegisterAllocationTimeBenchmark.tracera_STRING_equals","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.RegisterAllocationTimeBenchmark.tracera_HASHMAP_computeIfAbsent","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.CompileTimeBenchmark.compile","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.CompileTimeBenchmark.frontend","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.CompileTimeBenchmark.backend","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.trace.TraceLSRAIntervalBuildingBench.buildIntervals","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.trace.TraceBuilderBenchmark.uniDirectionalTraceBuilder","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.trace.TraceBuilderBenchmark.biDirectionalTraceBuilder","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.TestJMH.testJMH","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.ConditionalEliminationBenchmark.nullness","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.ConditionalEliminationBenchmark.search","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.GraphCopyBenchmark.nullness","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.GraphCopyBenchmark.search","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.getNodeClass","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.dataEquals","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.replaceFirstInput","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.inputsEquals","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.inputs","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.acceptInputs","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.createAndDeleteAdd","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.createAndDeleteConstant","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.usages","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.nodeBitmap","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.valueEquals_STRING_EQUALS","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.valueEquals_HASHMAP_COMPUTE_IF_ABSENT","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.valueNumberLeaf_HASHMAP_COMPUTE_IF_ABSENT","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.NodeBenchmark.valueNumberLeaf_STRING_EQUALS","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.stringEquals","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute1","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute2","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute3","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute4","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_LATEST_OPTIMAL","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_LATEST_OUT_OF_LOOPS_OPTIMAL","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_EARLIEST_OPTIMAL","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.FrameStateAssigmentPhaseBenchmark.nextToken","0"
"oracle/graal","org.graalvm.compiler.truffle.bench.interop.JavaInteropSpeedBench.doMinMaxInJava","0"
"oracle/graal","org.graalvm.compiler.truffle.bench.interop.JavaInteropSpeedBench.doMinMaxWithInterOp","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.ConditionalEliminationBenchmark.newDominatorConditionalElimination","0"
"oracle/graal","micro.benchmarks.ConcurrentSkipListBenchmark.addBoxed","0"
"oracle/graal","micro.benchmarks.BoxingBenchmark.addBoxed","0"
"oracle/graal","micro.benchmarks.BoxingBenchmark.doNothing","0"
"oracle/graal","micro.benchmarks.ArrayListBenchmark.addBoxedAndClear","0"
"oracle/graal","micro.benchmarks.ArrayListBenchmark.addNullAndClear","0"
"oracle/graal","micro.benchmarks.ArrayListBenchmark.addNull","0"
"oracle/graal","micro.benchmarks.HashBenchmark.hash","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.lir.RegisterAllocationTimeBenchmark.allocateRegisters","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.createEngine","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.createContext","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.eval","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.executePolyglot1","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.executePolyglot2","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.executeCallTarget1","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.executeCallTarget2","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.isNativePointer","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.asNativePointer","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.hasMembers","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.putMember","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.getMember","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.hasArrayElements","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.getArrayElement","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.setArrayElement","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.canExecute","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.isHostObject","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.asHostObject","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.TestJMHWhitebox.testJMH","0"
"oracle/graal","micro.benchmarks.TestJMHBlackbox.testJMH","0"
"oracle/graal","micro.benchmarks.StringBenchmark.indexOfChar","0"
"oracle/graal","micro.benchmarks.StringBenchmark.indexOfCharNotFound","0"
"oracle/graal","micro.benchmarks.StringBenchmark.indexOfString","0"
"oracle/graal","micro.benchmarks.StringBenchmark.indexOfStringNotFound","0"
"oracle/graal","org.graalvm.compiler.truffle.bench.debugger.DebugSpeedBench.noDebugger","0"
"oracle/graal","org.graalvm.compiler.truffle.bench.debugger.DebugSpeedBench.debuggerNoAction","0"
"oracle/graal","org.graalvm.compiler.truffle.bench.debugger.DebugSpeedBench.doStepInto","0"
"oracle/graal","org.graalvm.compiler.truffle.bench.debugger.DebugSpeedBench.doStepOver","0"
"oracle/graal","org.graalvm.compiler.truffle.bench.debugger.DebugSpeedBench.doStepOut","0"
"oracle/graal","com.oracle.truffle.api.benchmark.debug.DebugSpeedBench.noDebugger","0"
"oracle/graal","com.oracle.truffle.api.benchmark.debug.DebugSpeedBench.debuggerNoAction","0"
"oracle/graal","com.oracle.truffle.api.benchmark.debug.DebugSpeedBench.doStepInto","0"
"oracle/graal","com.oracle.truffle.api.benchmark.debug.DebugSpeedBench.doStepOver","0"
"oracle/graal","com.oracle.truffle.api.benchmark.debug.DebugSpeedBench.doStepOut","0"
"oracle/graal","com.oracle.truffle.api.benchmark.interop.JavaInteropSpeedBench.doMinMaxInJava","0"
"oracle/graal","com.oracle.truffle.api.benchmark.interop.JavaInteropSpeedBench.doMinMaxWithInterOp","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_EARLIEST_WITH_GUARD_ORDER_OPTIMAL","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.scheduleEarliestIterative_LATEST_OPTIMAL","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.scheduleEarliestIterative_LATEST_OUT_OF_LOOPS_OPTIMAL","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.scheduleEarliestIterative_EARLIEST_OPTIMAL","0"
"oracle/graal","org.graalvm.compiler.microbenchmarks.graal.SchedulePhaseBenchmark.scheduleEarliestIterative_EARLIEST_WITH_GUARD_ORDER_OPTIMAL","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.executePolyglot1Void","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.executePolyglot1VoidEntered","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.executePolyglot1CallTarget","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.lookupContextSingleContext","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.lookupContextMultiContext","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.lookupContextMultiThread","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.lookupContextMultiThreadMultiContext","0"
"oracle/graal","micro.benchmarks.StringBenchmark.compareTo","0"
"oracle/graal","micro.benchmarks.StringBenchmark.indexOfSingleCharString","0"
"oracle/graal","micro.benchmarks.StringBenchmark.indexOfSingleCharStringLong","0"
"oracle/graal","micro.benchmarks.BigIntegerBenchmark.bigIntMul","0"
"oracle/graal","micro.benchmarks.BigIntegerBenchmark.bigIntMulAdd","0"
"oracle/graal","micro.benchmarks.BigIntegerBenchmark.bigIntMontgomeryMul","0"
"oracle/graal","micro.benchmarks.BigIntegerBenchmark.bigIntMontgomerySqr","0"
"oracle/graal","micro.benchmarks.StringBenchmark.compressSmallString","0"
"oracle/graal","micro.benchmarks.StringBenchmark.compressLargeString","0"
"oracle/graal","micro.benchmarks.StringBenchmark.inflateSmallString","0"
"oracle/graal","micro.benchmarks.StringBenchmark.inflateLargeString","0"
"oracle/graal","com.oracle.truffle.api.benchmark.InterpreterCallBenchmark.directCall","1"
"oracle/graal","micro.benchmarks.ArrayDuplicationBenchmark.arraysCopyOfToString","0"
"oracle/graal","micro.benchmarks.MathFunctionBenchmark.mathSqrt","0"
"oracle/graal","micro.benchmarks.MathFunctionBenchmark.strictMathSqrt","0"
"oracle/graal","com.oracle.truffle.api.benchmark.InterpreterCallBenchmark.indirectCall","0"
"oracle/graal","com.oracle.truffle.api.benchmark.InterpreterCallBenchmark.call","0"
"oracle/graal","com.oracle.truffle.api.benchmark.ByteSequenceBenchmark.testHashing","0"
"oracle/graal","com.oracle.truffle.api.benchmark.DSLInterpreterBenchmark.firstIteration","0"
"oracle/graal","com.oracle.truffle.api.benchmark.DSLInterpreterBenchmark.secondIteration","0"
"oracle/graal","micro.benchmarks.ArrayAllocationBenchmark.arrayAllocate","0"
"oracle/graal","com.oracle.truffle.api.benchmark.EngineBenchmark.lookupContextMultiContextManyLookups","0"
"orfjackal/cqrs-hotel","fi.luontola.cqrshotel.framework.InMemoryEventStore_ReadRecentEventsBenchmark.getEventsForStream","0"
"orfjackal/cqrs-hotel","fi.luontola.cqrshotel.framework.InMemoryEventStore_ReadRecentEventsBenchmark.getAllEvents","0"
"orfjackal/cqrs-hotel","fi.luontola.cqrshotel.framework.ExceptionBenchmark.tryCatchNew","0"
"orfjackal/cqrs-hotel","fi.luontola.cqrshotel.framework.ExceptionBenchmark.tryCatchReused","0"
"orfjackal/cqrs-hotel","fi.luontola.cqrshotel.framework.ExceptionBenchmark.tryCatchNoStackTrace","0"
"orfjackal/cqrs-hotel","fi.luontola.cqrshotel.framework.ExceptionBenchmark.noException","0"
"orfjackal/cqrs-hotel","fi.luontola.cqrshotel.framework.eventstore.InMemoryEventStore_ReadRecentEventsBenchmark.getEventsForStream","0"
"orfjackal/cqrs-hotel","fi.luontola.cqrshotel.framework.eventstore.InMemoryEventStore_ReadRecentEventsBenchmark.getAllEvents","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Get.testAdd_1thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Get.testAdd_2thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Get.testAdd_4thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testAdd_1thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testRemoveLRU_1thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testGet_1thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testGet_2thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testAdd_2thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testRemoveLRU_2thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testGet_4thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testAdd_4thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_Complex.testRemoveLRU_4thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddDifferentValues.testAdd_1thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddDifferentValues.testAdd_2thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddDifferentValues.testAdd_4thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddSameValue.testAdd_1thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddSameValue.testAdd_2thread","0"
"orientechnologies/orientdb","com.orientechnologies.orient.core.index.hashindex.local.cache.LRUListBenchmark_AddSameValue.testAdd_4thread","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.CounterThroughputTest.measureSimpleClientCounterThroughput","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.CounterThroughputTest.measureSimpleClientCounterThroughputWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.CounterThroughputTest.measureCounterThroughput","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.CounterThroughputTest.measureCounterThroughputWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SettableGaugeThroughputTest.measureSimpleClientGaugeThroughput","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SettableGaugeThroughputTest.measureSimpleClientGaugeThroughputWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SettableGaugeThroughputTest.measureSettableGaugeThroughput","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SettableGaugeThroughputTest.measureSettableGaugeThroughputWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.ExportLatencyTest.measurePrometheusSimpleClientTextExportLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.ExportLatencyTest.measureTextExportLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.ExportLatencyTest.measureProtobufExportLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.CounterLatencyTest.measureSimpleClientCounterLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.CounterLatencyTest.measureSimpleClientCounterLatencyWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.CounterLatencyTest.measureCounterLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.CounterLatencyTest.measureCounterLatencyWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryThroughputTest.measureSimpleClientSummaryThroughput","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryThroughputTest.measureSimpleClientSummaryThroughputWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryThroughputTest.measureSummaryThroughput","1"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryThroughputTest.measureSummaryThroughputWithLabels","1"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SettableGaugeLatencyTest.measureSimpleClientGaugeLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SettableGaugeLatencyTest.measureSimpleClientGaugeLatencyWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SettableGaugeLatencyTest.measureSettableGaugeLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SettableGaugeLatencyTest.measureSettableGaugeLatencyWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.ExportThroughputTest.measurePrometheusSimpleClientTextExportThroughput","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.ExportThroughputTest.measureTextExportThroughput","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.ExportThroughputTest.measureProtobufExportThroughput","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.HistogramLatencyTest.measureSimpleClientGaugeLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.HistogramLatencyTest.measureSimpleClientGaugeLatencyWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.HistogramLatencyTest.measureSettableGaugeLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.HistogramLatencyTest.measureSettableGaugeLatencyWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryLatencyTest.measureSimpleClientSummaryLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryLatencyTest.measureSimpleClientSummaryLatencyWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryLatencyTest.measureSettableSummaryLatency","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryLatencyTest.measureSettableSummaryLatencyWithLabels","0"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryThroughputTest.measurePrometheusSummaryThroughput","1"
"outbrain/prometheus-client","com.outbrain.swinfra.metrics.SummaryThroughputTest.measurePrometheusSummaryThroughputWithLabels","1"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.StatusUpdateBenchmark.runBenchmark","0"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetRoleSummaryBenchmark.run","0"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.ThriftApiBenchmarks$GetAllTasksBenchmark.run","0"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.SnapshotBenchmarks$RestoreSnapshotWithUpdatesBenchmark.run","0"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.SchedulingBenchmarks$AbstractBase.runBenchmark","0"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.TaskStoreBenchmarks$MemFetchTasksBenchmark.run","0"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.TaskStoreBenchmarks$DBFetchTasksBenchmark.run","0"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobDetailsBenchmark.run","0"
"PacktPublishing/Mastering-Mesos","org.apache.aurora.benchmark.UpdateStoreBenchmarks$JobInstructionsBenchmark.run","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks.singleDelete","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks.batchDelete","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetDynamicBenchmarks.getAllColumnsExplicitly","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetDynamicBenchmarks.getAllColumnsImplicitly","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetDynamicBenchmarks.getFirstColumnExplicitly","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetDynamicBenchmarks.getFirstColumnExplicitlyGetRows","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks.singleRandomPut","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks.batchRandomPut","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks.batchRandomMultiPut","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks.putUnlessExistsAndExists","1"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsPutBenchmarks.putUnlessExistsDoesNotExist","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionPutBenchmarks.singleRandomPut","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionPutBenchmarks.batchRandomPut","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getCells","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getCellsDirty","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getSingleRowWithRangeQuery","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getSingleRowWithRangeQueryDirty","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getRange","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getRangeDirty","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getSingleCell","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getSingleCellDirty","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getRanges","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetBenchmarks.getRangesDirty","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionDeleteBenchmarks.singleDelete","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionDeleteBenchmarks.batchDelete","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks.getSingleRange","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks.getSingleRangeDirty","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks.getSingleLargeRange","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks.getSingleLargeRangeDirty","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks.getMultiRange","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRangeBenchmarks.getMultiRangeDirty","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetDynamicBenchmarks.getAllColumnsExplicitly","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetDynamicBenchmarks.getAllColumnsImplicitly","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetDynamicBenchmarks.getFirstColumnExplicitly","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetDynamicBenchmarks.getFirstColumnExplicitlyGetRows","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks.singleSweepRun","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks.batchedUniformSingleSweepRun","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks.batchedSingleSweepRun","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks.multipleUniformSweepRun","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.SweepBenchmarks.multipleSweepRun","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRowsColumnRangeBenchmarks.getAllColumnsAligned","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRowsColumnRangeBenchmarks.getAllColumnsUnaligned","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.HttpBenchmarks.parseHttpHeaders","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks.batchRangeDelete","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks.allRangeDelete","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetRowsColumnRangeBenchmarks.getAllColumnsSingleBigRow","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRowsColumnRangeBenchmarks.getAllColumnsSingleBigRow","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.StreamStoreBenchmarks.loadStream","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks.fewThreadsGetFreshTimestamp","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks.manyThreadsGetFreshTimestamp","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks.manyThreadsGetFreshTimestampWithBackoff","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks.fewThreadsGetBatchOfTimestamps","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TimestampServiceBenchmarks.manyThreadsGetBatchOfTimestamps","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetRowsBenchmarks.getManyRowsWithGetRows","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.StreamStoreBenchmarks.loadSmallStream","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.StreamStoreBenchmarks.loadLargeStream","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.StreamStoreBenchmarks.loadVeryLargeStream","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks.fullTableScanCleanConservative","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks.fullTableScanCleanThorough","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks.fullTableScanDirtyConservative","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks.fullTableScanDirtyThorough","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsGetCandidateCellsForSweepingBenchmarks.fullTableScanOneWideRowThorough","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetRowsColumnRangeBenchmarks.getAllColumnsModeratelyWideRow","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetRowsColumnRangeBenchmarks.getAllColumnsModeratelyWideRowWithSomeUncommitted","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.TransactionGetRowsColumnRangeBenchmarks.getAllColumnsModeratelyWideRowWithManyUncommitted","0"
"palantir/atlasdb","com.palantir.atlasdb.performance.benchmarks.KvsDeleteBenchmarks.deleteAllTimestamps","0"
"paninij/paninij","org.paninij.TrapezoidBenchmark.runTrapezoid","0"
"pantsbuild/pants","org.pantsbuild.testproject.bench.JmhBench.wellHelloThere","0"
"paritytrading/parity","com.paritytrading.parity.match.perf.MarketBenchmark.enter","0"
"paritytrading/parity","com.paritytrading.parity.match.perf.MarketBenchmark.enterAndCancel","0"
"paritytrading/parity","com.paritytrading.parity.top.perf.MarketBenchmark.add","0"
"paritytrading/parity","com.paritytrading.parity.top.perf.MarketBenchmark.addAndModify","0"
"paritytrading/parity","com.paritytrading.parity.top.perf.MarketBenchmark.addAndExecute","0"
"paritytrading/parity","com.paritytrading.parity.top.perf.MarketBenchmark.addAndCancel","0"
"paritytrading/parity","com.paritytrading.parity.top.perf.MarketBenchmark.addAndDelete","0"
"paritytrading/parity","com.paritytrading.parity.match.perf.OrderBookBenchmark.enter","0"
"paritytrading/parity","com.paritytrading.parity.match.perf.OrderBookBenchmark.enterAndCancel","0"
"paritytrading/parity","com.paritytrading.parity.book.perf.MarketBenchmark.add","0"
"paritytrading/parity","com.paritytrading.parity.book.perf.MarketBenchmark.addAndModify","0"
"paritytrading/parity","com.paritytrading.parity.book.perf.MarketBenchmark.addAndExecute","0"
"paritytrading/parity","com.paritytrading.parity.book.perf.MarketBenchmark.addAndCancel","0"
"paritytrading/parity","com.paritytrading.parity.book.perf.MarketBenchmark.addAndDelete","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.asChar","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.setChar","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.asInt","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.setInt","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.asFloat","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.setFloat","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.asString","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.setString","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.asDate","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.setDate","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.asTimeOnly","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.setTimeOnly","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.asTimestamp","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXValueBenchmark.setTimestamp","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXTagsBenchmark.get","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXTagsBenchmark.put","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXCheckSumsBenchmark.sum","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.benchmark.FIXTimestampsBenchmark.append","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.asChar","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.setChar","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.asInt","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.setInt","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.asFloat","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.setFloat","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.asString","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.setString","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.asDate","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.setDate","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.asTimeOnly","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.setTimeOnly","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.asTimestamp","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXValueBenchmark.setTimestamp","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXTagsBenchmark.get","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXTagsBenchmark.put","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXCheckSumsBenchmark.sum","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXTimestampsBenchmark.append","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXMessageBenchmark.get","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXMessageBenchmark.put","0"
"paritytrading/philadelphia","org.jvirtanen.philadelphia.perf.FIXMessageBenchmark.formatAndPut","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.asChar","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setChar","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.asInt","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setInt","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.asFloat","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setFloat","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.asString","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setString","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.asDate","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setDate","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.asTimeOnly","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setTimeOnly","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.asTimestamp","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setTimestamp","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXTagsBenchmark.get","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXTagsBenchmark.put","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXCheckSumsBenchmark.sum","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXTimestampsBenchmark.append","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXMessageBenchmark.get","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXMessageBenchmark.put","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXMessageBenchmark.formatAndPut","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setToValue","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXTagsBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXCheckSumsBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXTimestampsBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXMessageBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.asBoolean","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.perf.FIXValueBenchmark.setBoolean","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.asBoolean","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setBoolean","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.asChar","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setChar","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.asInt","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setInt","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.asFloat","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setFloat","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.asString","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setString","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.asDate","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setDate","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.asTimeOnly","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setTimeOnly","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.asTimestamp","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setTimestamp","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXValueBenchmark.setToValue","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXTagsBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXTagsBenchmark.get","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXTagsBenchmark.put","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXCheckSumsBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXCheckSumsBenchmark.sum","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXTimestampsBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXTimestampsBenchmark.append","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXMessageBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXMessageBenchmark.get","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXMessageBenchmark.put","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXMessageBenchmark.formatAndPut","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXMessageParserBenchmark.baseline","0"
"paritytrading/philadelphia","com.paritytrading.philadelphia.FIXMessageParserBenchmark.parse","0"
"patrickfav/bytes-java","at.favre.lib.bytes.EncodingJmhBenchmark.encodeBase64Okio","0"
"pdemanget/examples","stackoverflow.StreamVsVanilla.vanilla","0"
"pdemanget/examples","stackoverflow.StreamVsVanilla.stream","0"
"peptos/traffic-shm","io.traffic.shm.test.TestBenchmark.measurePut","0"
"peptos/traffic-shm","io.traffic.shm.test.TestBenchmark.measureGet","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Snappy.snappyNormalOutput","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Snappy.snappyFramedOutput","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Snappy.snappyDecompress","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Snappy.snappyFramedDecompress","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.testFastNative64K","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.lz4Decompress","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.testFastNative128K","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.testFastNative32M","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.testHighNative","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.lz4HighDecompress","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.testFastNativeDouble64K","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.lz4Double64KDecompress","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.testFastNativeDouble32M","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.Lz4.testFastNativeTriple32M","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.JdkDeflate.deflate","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.JdkDeflate.inflate","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.GZip.gzip","0"
"person-lee/nlp","com.lbc.nlp_modules.zip.GZip.ungzip","0"
"peterszatmary/jmh-benchmark-demo","com.szatmary.peter.SampleBenchmarkTest.oldWay","0"
"peterszatmary/jmh-benchmark-demo","com.szatmary.peter.SampleBenchmarkTest.newWay","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding.utilsEncodeUTF8_old","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding.utilsEncodeUTF8_current","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding.string_getBytes","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding.charset_encode","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Encoding.encoder_byteBufferReuse","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.ParseStatement.bindExecuteFetch","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.FinalizeStatement.createAndLeak","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.core.Parser.unmarkDoubleQuestion","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection.baseline","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.connection.FinalizeConnection.createAndClose","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros.charArray","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.time.AddPaddingZeros.insert","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.time.TimestampToTime.simple","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.time.TimestampToTime.advanced","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.time.TimestampToDate.simple","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.time.TimestampToDate.advanced","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.ProcessResultSet.bindExecuteFetch","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp.timestampLocal","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.BindTimestamp.timestampCal","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.BindBoolean.boolAsInt","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.BindBoolean.boolAsBoolean","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.BindBoolean.bindBoolean","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.InsertBatch.insertBatch","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.InsertBatch.insertExecute","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.InsertBatch.insertStruct","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.InsertBatch.insertCopy","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.InsertBatch.insertBatchWithRewrite","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.escaping.EscapeProcessing.escapeFunctionWithDate","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.ProcessBoolean.getBoolean","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding.utilsDecodeUTF8_old","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding.encodingDecodeUTF8_current","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding.string_string","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding.string_charset","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.encoding.UTF8Decoding.decoder_byteBufferReuse","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.BindArray.setObject","0"
"pgjdbc/pgjdbc","org.postgresql.benchmark.statement.BindArray.setArray","0"
"PhantomThief/more-lambdas-java","com.github.phantomthief.util.CallerTrackBenchmark.testJdk8","0"
"PhantomThief/more-lambdas-java","com.github.phantomthief.util.CallerTrackBenchmark.testJdk9","0"
"PhantomThief/scope","com.github.phantomthief.scope.ScopeAsyncRetryBenchMark.testAllTimeout","0"
"PhantomThief/scope","com.github.phantomthief.scope.ScopeAsyncRetryBenchMark.testAllTimeout2","0"
"PhantomThief/scope","com.github.phantomthief.scope.ScopeThreadLocalBenchmark.benchmarkGet","0"
"PhantomThief/scope","com.github.phantomthief.scope.ScopeThreadLocalBenchmark.benchmarkFastGet","0"
"PhantomThief/scope","com.github.phantomthief.scope.ScopeAsyncRetryBenchMark.testAllTimeout3","0"
"PhantomThief/scope","com.github.phantomthief.scope.ScopeAsyncRetryBenchMark.testAllTimeout4","0"
"PhantomThief/simple-failover-java","com.github.phantomthief.failover.impl.WeightFailoverJmhTest.getAvailableOpitmized","0"
"PhantomThief/simple-failover-java","com.github.phantomthief.failover.impl.WeightFailoverJmhTest.getAvailable","0"
"PhillHenry/palgorithms","uk.co.odinconsultants.graph.search.BFSPerformanceMain.bfsTopologicalOrderingMultiThreaded","0"
"PhillHenry/palgorithms","uk.co.odinconsultants.graph.search.BFSPerformanceMain.bfsTopologicalOrdering","0"
"PhillHenry/palgorithms","uk.co.odinconsultants.graph.impl.AdjacencyListGraphPerformanceMain.bfsTopologicalOrdering","0"
"pietermartin/sqlg","org.sqlg.benchmark.MultipleGraphSimpleReadBenchmark.read1","0"
"pietermartin/sqlg","org.sqlg.benchmark.MultipleGraphSimpleReadBenchmark.read2","0"
"pietermartin/sqlg","org.sqlg.benchmark.SimpleInsertBenchmark.insert1000VerticesWith10Properties","0"
"pietermartin/sqlg","org.sqlg.benchmark.MultipleGraphSimpleInsertBenchmark.insert1000VerticesWith10Properties1","0"
"pietermartin/sqlg","org.sqlg.benchmark.MultipleGraphSimpleInsertBenchmark.insert1000VerticesWith10Properties2","0"
"pietermartin/sqlg","org.sqlg.benchmark.ReadBenchmark.readGraphStep","0"
"pietermartin/sqlg","org.sqlg.benchmark.ReadBenchmark.readVertexStep","0"
"pietermartin/sqlg","org.sqlg.benchmark.WithinBenchmark.withinWithIn","0"
"pietermartin/sqlg","org.sqlg.benchmark.WithinBenchmark.withinWithJoin","0"
"pietermartin/sqlg","org.sqlg.benchmark.ServerSideBulkEdgeCreation.bulkAddEdges","0"
"pinterest/jbender","com.pinterest.jbender.JBenderHttpBenchmark.loadtestHttpThroughput","0"
"Pitt112/night-hawk","de.moonset.engine.lib.night.hawk.lang.event.EventListenersBenchTest.measureListeners","0"
"Pitt112/night-hawk","de.moonset.engine.lib.night.hawk.lang.event.EventListenersBenchTest.measureListeners2","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerBenchmark.testStringConcat","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerBenchmark.testStringBuilderWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerBenchmark.testStringBuilderWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerBenchmark.testStringBufferWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerBenchmark.testStringBufferWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerBenchmark.testStringBundlerWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerBenchmark.testStringBundlerWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBatchesBenchmark.testStringConcat","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBatchesBenchmark.testStringBuilderWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBatchesBenchmark.testStringBuilderWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBatchesBenchmark.testStringBufferWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBatchesBenchmark.testStringBufferWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBatchesBenchmark.testStringBundlerWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBatchesBenchmark.testStringBundlerWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerWithBlackholesBenchmark.testStringConcat","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerWithBlackholesBenchmark.testStringBuilderWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerWithBlackholesBenchmark.testStringBuilderWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerWithBlackholesBenchmark.testStringBufferWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerWithBlackholesBenchmark.testStringBufferWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerWithBlackholesBenchmark.testStringBundlerWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerWithBlackholesBenchmark.testStringBundlerWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBenchmark.testStringConcat","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBenchmark.testStringConcatForEach","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBenchmark.testStringBuilderWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBenchmark.testStringBuilderWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBenchmark.testStringBufferWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBenchmark.testStringBufferWithoutInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBenchmark.testStringBundlerWithInit","0"
"planetsizebrain/stringbundler-tests","be.aca.liferay.StringBundlerRandomizedBenchmark.testStringBundlerWithoutInit","0"
"platan/idea-gradle-dependencies-formatter","com.github.platan.idea.dependencies.ConverterBenchmark.convertBenchmark","0"
"plokhotnyuk/scala-vs-java","com.github.plokhotnyuk.scala_vs_java.JavaFactorial.loop","0"
"plokhotnyuk/scala-vs-java","com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursion","0"
"plokhotnyuk/scala-vs-java","com.github.plokhotnyuk.scala_vs_java.JavaFactorial.recursionPar","0"
"plokhotnyuk/scala-vs-java","com.github.plokhotnyuk.scala_vs_java.JavaFactorial.split","0"
"plokhotnyuk/scala-vs-java","com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.formula","0"
"plokhotnyuk/scala-vs-java","com.github.plokhotnyuk.scala_vs_java.JavaSumOfArithmeticSeries.loop","0"
"plokhotnyuk/scala-vs-java","com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.loop","0"
"plokhotnyuk/scala-vs-java","com.github.plokhotnyuk.scala_vs_java.JavaFibonacci.doublingLoop","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testInstrumentedMethod","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testInstrumentedMethodPrintln1","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testInstrumentedMethodPrintln2","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testInstrumentedMethodPrintln3","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testMethod","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testInstrDuration","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testInstrDurationSampled","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testSendCommand","0"
"pombreda/btrace-hg","net.java.btrace.BTraceBench.testSampleHit10","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilter.bloomfilter1_add","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilter.bloomfilter1_test","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBitSet.custom_bitset","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBitSet.java_bitset","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBitSet.roaring_bitset","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBitSet.fastutil_bitset","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilter.bloomFilterAddLong","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilter.bloomFilterTestLong","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilter.bloom1FilterAddLong","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilter.bloom1FilterTestLong","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloom1FilterProbe.testProbe","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomFilterProbe.testProbe","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBitSet.customBitset","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBitSet.javaBitset","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBitSet.roaringBitset","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBitSet.fastutilBitset","0"
"prasanthj/bloomfilter","com.github.prasanthj.bloomfilter.benchmarks.BenchmarkBloomKFilterProbe.testProbe","0"
"prasanthj/hasher","benchmarks.Benchmark32BitHash.murmur2_32","0"
"prasanthj/hasher","benchmarks.Benchmark32BitHash.guava_murmur3_32","0"
"prasanthj/hasher","benchmarks.Benchmark32BitHash.greenrobot_murmur3a_32","0"
"prasanthj/hasher","benchmarks.Benchmark32BitHash.murmur3_32","0"
"prasanthj/hasher","benchmarks.Benchmark32BitHash.fnv1_32","0"
"prasanthj/hasher","benchmarks.Benchmark32BitHash.fnv1a_32","0"
"prasanthj/hasher","benchmarks.Benchmark128BitHash.md5","0"
"prasanthj/hasher","benchmarks.Benchmark128BitHash.sha","0"
"prasanthj/hasher","benchmarks.Benchmark128BitHash.guava_murmur3_128","0"
"prasanthj/hasher","benchmarks.Benchmark128BitHash.greenrobot_murmur3f_128","0"
"prasanthj/hasher","benchmarks.Benchmark128BitHash.murmur3_128","0"
"prasanthj/hasher","benchmarks.Benchmark64BitHash.murmur2_64","0"
"prasanthj/hasher","benchmarks.Benchmark64BitHash.guava_murmur3_64","0"
"prasanthj/hasher","benchmarks.Benchmark64BitHash.greenrobot_murmur3f_64","0"
"prasanthj/hasher","benchmarks.Benchmark64BitHash.murmur3_64","0"
"prasanthj/hasher","benchmarks.Benchmark64BitHash.fnv1_64","0"
"prasanthj/hasher","benchmarks.Benchmark64BitHash.fnv1a_64","0"
"prasanthj/hasher","benchmarks.Benchmark64BitHash.xxhash_64","0"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.ParentBenchmark.measureExpression","0"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.ExpressionProxyBenchmark.measureExpression","0"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.ExpressionProxyBenchmark.measureCounter","0"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.ExpressionProxyBenchmark.measureParent","0"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.ConstBenchmark.measureExpression","0"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.EsFileBenchmark.measureEsDirect","1"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.RandomBenchmark.measureExpression","0"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.CounterBenchmark.measureExpression","0"
"presidentio/test-data-generator","com.presidentio.testdatagenerator.benchmark.ExpressionBenchmark.measureExpression","0"
"prestodb/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.handCoded","0"
"prestodb/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.compiled","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkGroupByHash.runBenchmark","0"
"prestodb/presto","com.facebook.presto.BenchmarkHashPagePartitionFunction.runBenchmark","0"
"prestodb/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter.runBenchmark","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkGroupByHash.groupByHashPreCompute","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkGroupByHash.addPagePreCompute","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkGroupByHash.bigintGroupByHash","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baseline","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baselineBigArray","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLength","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStart","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLength","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartFromEnd","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLengthFromEnd","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkReverse","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLeftTrim","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkRightTrim","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkTrim","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkUpper","0"
"prestodb/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLower","0"
"prestodb/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLike","0"
"prestodb/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"prestodb/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark.benchmark","0"
"prestodb/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct.arrayDistinct","0"
"prestodb/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.rowOriented","0"
"prestodb/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.columnOriented","0"
"prestodb/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.columnOrientedDictionary","0"
"prestodb/presto","com.facebook.presto.execution.BenchmarkNodeScheduler.benchmark","0"
"prestodb/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark.read","0"
"prestodb/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark.write","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksAdd","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksSubtract","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksMultiply","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksDivide","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksNegate","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineAdd","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineSubtract","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineMultiply","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineDivide","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineNegate","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator.arrayHashCode","1"
"prestodb/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup.benchmark","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort.arraySort","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.doubleActual","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.doubleBaseline","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.floatActual","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.floatBaseline","0"
"prestodb/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLikeJoni","0"
"prestodb/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLikeRe2J","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators.benchmarkBuildHash","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators.benchmarkJoinHash","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript.mapSubscript","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript.arraySubscript","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength1","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength2","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength3","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength4","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength5","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength6","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength7","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength256","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength1","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength2","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength3","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength4","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength5","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength6","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength7","0"
"prestodb/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength256","0"
"prestodb/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller.write","0"
"prestodb/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller.read","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat.mapConcat","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter.benchmark","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform.benchmark","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin.benchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.castDoubleToDecimalBenchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.castDecimalToDoubleBenchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.castDecimalToVarcharBenchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.additionBenchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.multiplyBenchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.divisionBenchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.moduloBenchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.inequalityBenchmark","0"
"prestodb/presto","com.facebook.presto.type.BenchmarkDecimalOperators.decimalToShortDecimalCastBenchmark","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader.readDecimal","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation.benchmarkBuildHash","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey.benchmark","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue.benchmark","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin.benchmarkJoin","0"
"prestodb/presto","com.facebook.presto.operator.aggregation.BenchmarkArrayAggregation.arrayAggregation","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToMapCast.benchmark","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToArrayCast.benchmark","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin.benchmarkJoinWithArithmeticInPredicate","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin.benchmarkJoinWithFunctionPredicate","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin.benchmarkRangePredicateJoin","0"
"prestodb/presto","com.facebook.presto.geospatial.BenchmarkGeometryToBingTiles.geometryToBingTiles","0"
"prestodb/presto","com.facebook.presto.geospatial.BenchmarkGeometryToBingTiles.envelopeToBingTiles","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles.geometryToBingTiles","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles.envelopeToBingTiles","0"
"prestodb/presto","com.facebook.presto.sql.planner.BenchmarkPlanner.planQueries","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsInnerPointSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelopeSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelopeSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.deserializeSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.deserializeEnvelopeSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsInnerPoint","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsInnerPointDeserialized","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelope","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelopeDeserialized","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelope","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelopeDeserialized","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.deserialize","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.deserializeEnvelope","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkPartitionedOutputOperator.addPage","0"
"prestodb/presto","com.facebook.presto.operator.aggregation.BenchmarkGroupedTypedHistogram.testSharedGroupWithLargeBlocksRunner","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope.simpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope.complexGeometry","0"
"prestodb/presto","com.facebook.presto.array.BenchmarkReferenceCountMap.benchmarkInserts","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkSpatialJoin.benchmarkJoin","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkSpatialJoin.benchmarkUserOptimizedJoin","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsInnerLine","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsInnerLineSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsCrossingLine","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsCrossingLineSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineInEnvelope","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineInEnvelopeSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineNotInEnvelope","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineNotInEnvelopeSimpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin.simpleGeometry","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin.complexGeometry","0"
"prestodb/presto","com.facebook.presto.connector.informationschema.BenchmarkInformationSchema.queryInformationSchema","0"
"prestodb/presto","com.facebook.presto.block.BenchmarkMapCopy.benchmarkMapCopy","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkMapToMapCast.benchmark","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkGroupedTopNBuilder.topN","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.benchmarkDeserialize","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.benchmarkDeserializeEnvelope","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection.envelopes","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection.geometries","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializePoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializePoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializePointEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultipoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultipoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultipointEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultipoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultipoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultipointEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleLineStringEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexLineStringEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultiLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiLineStringEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultiLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiLineStringEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimplePolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimplePolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimplePolygonEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexPolygonEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultiPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiPolygonEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultiPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiPolygonEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleGeometryCollection","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleGeometryCollection","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleGeometryCollectionEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexGeometryCollection","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexGeometryCollection","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexGeometryCollectionEnvelope","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializePoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializePoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultipoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultipoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultipoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultipoint","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultiLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultiLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultiLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultiLineString","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimplePolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimplePolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultiPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultiPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultiPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultiPolygon","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleGeometryCollection","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleGeometryCollection","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexGeometryCollection","0"
"prestodb/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexGeometryCollection","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkHashAndStreamingAggregationOperators.benchmark","0"
"prestodb/presto","com.facebook.presto.hive.statistics.BenchmarkGetPartitionsSample.selectSample","0"
"prestodb/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderChainedJoins.benchmarkReorderJoins","0"
"prestodb/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins.benchmarkReorderJoins","0"
"prestodb/presto","com.facebook.presto.util.PagesSortBenchmark.runPagesIndexSortBenchmark","0"
"prestodb/presto","com.facebook.presto.util.PagesSortBenchmark.runPagesMergeSortBenchmark","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkEqualsOperator.processPage","0"
"prestodb/presto","com.facebook.presto.BenchmarkBoxedBoolean.primitive","0"
"prestodb/presto","com.facebook.presto.BenchmarkBoxedBoolean.unboxing","0"
"prestodb/presto","com.facebook.presto.BenchmarkBoxedBoolean.identity","0"
"prestodb/presto","com.facebook.presto.BenchmarkBoxedBoolean.booleanEquals","0"
"prestodb/presto","com.facebook.presto.BenchmarkBoxedBoolean.object","0"
"prestodb/presto","com.facebook.presto.BenchmarkBoxedBoolean.booleanEqualsNotNull","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin.benchmarkJoin","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin.benchmarkUserOptimizedJoin","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkBingTilesAround.benchmark","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkRowToRowCast.benchmark","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters.nanoTime","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters.cpuTime","0"
"prestodb/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters.userTime","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readBooleanNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readBooleanWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readByteNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readByteWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readDecimalNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readDecimalWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readDoubleNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readDoubleWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readFloatNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readFloatWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readLongDirectNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readLongDirectWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readSliceDictionaryNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readSliceDictionaryWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readTimestampNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readTimestampWithNull","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkWindowOperator.benchmark","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkArrayUnion","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkUnion","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkConvexHull","0"
"prestodb/presto","com.facebook.presto.operator.project.BenchmarkDictionaryBlockGetSizeInBytes.getSizeInBytes","0"
"prestodb/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithFloorMod","0"
"prestodb/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithMod","0"
"prestodb/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithMask","0"
"prestodb/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithBitShifting","0"
"prestodb/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithDivision","0"
"prestodb/presto","com.facebook.presto.operator.scalar.BenchmarkArrayIntersect.arrayIntersect","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea.stSphericalArea","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea.stSphericalArea500k","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea.stArea","0"
"prestodb/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTArea.stArea500k","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkBlockFlattener.benchmarkWithFlatten","0"
"prestodb/presto","com.facebook.presto.operator.BenchmarkBlockFlattener.benchmarkWithoutFlatten","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readAllNull","0"
"prestodb/presto","com.facebook.presto.tdigest.BenchmarkTDigest.benchmarkInsertsT","0"
"prestodb/presto","com.facebook.presto.tdigest.BenchmarkTDigest.benchmarkQuantilesT","0"
"prestodb/presto","com.facebook.presto.tdigest.BenchmarkTDigest.benchmarkCopyT","0"
"prestodb/presto","com.facebook.presto.tdigest.BenchmarkTDigest.benchmarkMergeT","0"
"prestodb/presto","com.facebook.presto.tdigest.BenchmarkTDigest.benchmarkDeserializeT","0"
"prestodb/presto","com.facebook.presto.tdigest.BenchmarkTDigest.benchmarkSerializeT","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readBooleanNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readBooleanWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readAllNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readByteNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readByteWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readShortDecimalNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readShortDecimalWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readLongDecimalNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readLongDecimalWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readDoubleNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readDoubleWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readFloatNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readFloatWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readLongDirectNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readLongDirectWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readSliceDictionaryNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readSliceDictionaryWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readTimestampNoNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkBatchStreamReaders.readTimestampWithNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkSelectiveStreamReaders.readAllNull","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkSelectiveStreamReaders.read","0"
"prestodb/presto","com.facebook.presto.orc.BenchmarkSelectiveStreamReaders.readWithFilter","0"
"prestodb/presto","com.facebook.presto.geospatial.rtree.BenchmarkJtsStrTreeQuery.rtreeQuery","0"
"prestodb/presto","com.facebook.presto.geospatial.rtree.BenchmarkJtsStrTreeBuild.buildRtree","0"
"prestodb/presto","com.facebook.presto.geospatial.rtree.BenchmarkFlatbushBuild.buildRtree","0"
"prestodb/presto","com.facebook.presto.geospatial.rtree.BenchmarkFlatbushQuery.rtreeQuery","0"
"prestosql/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.handCoded","0"
"prestosql/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.compiled","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkGroupByHash.runBenchmark","0"
"prestosql/presto","com.facebook.presto.BenchmarkHashPagePartitionFunction.runBenchmark","0"
"prestosql/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter.runBenchmark","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkGroupByHash.groupByHashPreCompute","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkGroupByHash.addPagePreCompute","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkGroupByHash.bigintGroupByHash","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baseline","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baselineBigArray","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLength","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStart","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLength","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartFromEnd","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLengthFromEnd","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkReverse","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLeftTrim","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkRightTrim","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkTrim","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkUpper","0"
"prestosql/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLower","0"
"prestosql/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLike","0"
"prestosql/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"prestosql/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark.benchmark","0"
"prestosql/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct.arrayDistinct","0"
"prestosql/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.rowOriented","0"
"prestosql/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.columnOriented","0"
"prestosql/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.columnOrientedDictionary","0"
"prestosql/presto","com.facebook.presto.execution.BenchmarkNodeScheduler.benchmark","0"
"prestosql/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark.read","0"
"prestosql/presto","com.facebook.presto.hive.benchmark.HiveFileFormatBenchmark.write","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksAdd","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksSubtract","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksMultiply","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksDivide","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.overflowChecksNegate","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineAdd","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineSubtract","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineMultiply","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineDivide","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkBigIntOperators.baseLineNegate","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkArrayHashCodeOperator.arrayHashCode","1"
"prestosql/presto","com.facebook.presto.execution.resourceGroups.BenchmarkResourceGroup.benchmark","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkArraySort.arraySort","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.doubleActual","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.doubleBaseline","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.floatActual","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkRoundFunction.floatBaseline","0"
"prestosql/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLikeJoni","0"
"prestosql/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLikeRe2J","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators.benchmarkBuildHash","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkHashBuildAndJoinOperators.benchmarkJoinHash","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkMapSubscript.mapSubscript","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkArraySubscript.arraySubscript","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength1","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength2","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength3","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength4","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength5","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength6","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength7","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.baselineLength256","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength1","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength2","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength3","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength4","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength5","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength6","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength7","0"
"prestosql/presto","com.facebook.presto.orc.stream.BenchmarkLongBitPacker.optimizedLength256","0"
"prestosql/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller.write","0"
"prestosql/presto","com.facebook.presto.operator.spiller.BenchmarkBinaryFileSpiller.read","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkMapConcat.mapConcat","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkArrayFilter.benchmark","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkArrayTransform.benchmark","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkArrayJoin.benchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.castDoubleToDecimalBenchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.castDecimalToDoubleBenchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.castDecimalToVarcharBenchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.additionBenchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.multiplyBenchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.divisionBenchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.moduloBenchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.inequalityBenchmark","0"
"prestosql/presto","com.facebook.presto.type.BenchmarkDecimalOperators.decimalToShortDecimalCastBenchmark","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkOrcDecimalReader.readDecimal","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkDecimalAggregation.benchmarkBuildHash","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkTransformKey.benchmark","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkTransformValue.benchmark","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin.benchmarkJoin","0"
"prestosql/presto","com.facebook.presto.operator.aggregation.BenchmarkArrayAggregation.arrayAggregation","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToMapCast.benchmark","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkJsonToArrayCast.benchmark","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin.benchmarkJoinWithArithmeticInPredicate","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin.benchmarkJoinWithFunctionPredicate","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkInequalityJoin.benchmarkRangePredicateJoin","0"
"prestosql/presto","com.facebook.presto.geospatial.BenchmarkGeometryToBingTiles.geometryToBingTiles","0"
"prestosql/presto","com.facebook.presto.geospatial.BenchmarkGeometryToBingTiles.envelopeToBingTiles","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles.geometryToBingTiles","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryToBingTiles.envelopeToBingTiles","0"
"prestosql/presto","com.facebook.presto.sql.planner.BenchmarkPlanner.planQueries","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsInnerPointSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelopeSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelopeSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.deserializeSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.deserializeEnvelopeSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsInnerPoint","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsInnerPointDeserialized","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelope","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelopeDeserialized","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelope","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelopeDeserialized","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.deserialize","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.deserializeEnvelope","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkPartitionedOutputOperator.addPage","0"
"prestosql/presto","com.facebook.presto.operator.aggregation.BenchmarkGroupedTypedHistogram.testSharedGroupWithLargeBlocksRunner","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope.simpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTEnvelope.complexGeometry","0"
"prestosql/presto","com.facebook.presto.array.BenchmarkReferenceCountMap.benchmarkInserts","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkSpatialJoin.benchmarkJoin","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkSpatialJoin.benchmarkUserOptimizedJoin","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsInnerLine","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsInnerLineSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsCrossingLine","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsCrossingLineSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineInEnvelope","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineInEnvelopeSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineNotInEnvelope","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineNotInEnvelopeSimpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin.simpleGeometry","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTXMin.complexGeometry","0"
"prestosql/presto","com.facebook.presto.connector.informationschema.BenchmarkInformationSchema.queryInformationSchema","0"
"prestosql/presto","com.facebook.presto.block.BenchmarkMapCopy.benchmarkMapCopy","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkMapToMapCast.benchmark","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkGroupedTopNBuilder.topN","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.benchmarkDeserialize","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSTContains.benchmarkDeserializeEnvelope","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection.envelopes","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkEnvelopeIntersection.geometries","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializePoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializePoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializePointEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultipoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultipoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultipointEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultipoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultipoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultipointEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleLineStringEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexLineStringEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultiLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiLineStringEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultiLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiLineStringEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimplePolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimplePolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimplePolygonEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexPolygonEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultiPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiPolygonEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultiPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiPolygonEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleGeometryCollection","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleGeometryCollection","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleGeometryCollectionEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.serializeComplexGeometryCollection","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexGeometryCollection","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexGeometryCollectionEnvelope","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializePoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializePoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultipoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultipoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultipoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultipoint","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultiLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultiLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultiLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultiLineString","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimplePolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimplePolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultiPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultiPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultiPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultiPolygon","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleGeometryCollection","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleGeometryCollection","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexGeometryCollection","0"
"prestosql/presto","com.facebook.presto.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexGeometryCollection","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkHashAndStreamingAggregationOperators.benchmark","0"
"prestosql/presto","com.facebook.presto.hive.statistics.BenchmarkGetPartitionsSample.selectSample","0"
"prestosql/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderChainedJoins.benchmarkReorderJoins","0"
"prestosql/presto","com.facebook.presto.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins.benchmarkReorderJoins","0"
"prestosql/presto","com.facebook.presto.util.PagesSortBenchmark.runPagesIndexSortBenchmark","0"
"prestosql/presto","com.facebook.presto.util.PagesSortBenchmark.runPagesMergeSortBenchmark","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkEqualsOperator.processPage","0"
"prestosql/presto","com.facebook.presto.BenchmarkBoxedBoolean.primitive","0"
"prestosql/presto","com.facebook.presto.BenchmarkBoxedBoolean.unboxing","0"
"prestosql/presto","com.facebook.presto.BenchmarkBoxedBoolean.identity","0"
"prestosql/presto","com.facebook.presto.BenchmarkBoxedBoolean.booleanEquals","0"
"prestosql/presto","com.facebook.presto.BenchmarkBoxedBoolean.object","0"
"prestosql/presto","com.facebook.presto.BenchmarkBoxedBoolean.booleanEqualsNotNull","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin.benchmarkJoin","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkSpatialJoin.benchmarkUserOptimizedJoin","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkBingTilesAround.benchmark","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkRowToRowCast.benchmark","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters.nanoTime","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters.cpuTime","0"
"prestosql/presto","com.facebook.presto.benchmark.BenchmarkCPUCounters.userTime","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readBooleanNoNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readBooleanWithNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readByteNoNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readByteWithNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readDecimalNoNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readDecimalWithNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readDoubleNoNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readDoubleWithNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readFloatNoNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readFloatWithNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readLongDirectNoNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readLongDirectWithNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readSliceDictionaryNoNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readSliceDictionaryWithNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readTimestampNoNull","0"
"prestosql/presto","com.facebook.presto.orc.BenchmarkStreamReaders.readTimestampWithNull","0"
"prestosql/presto","com.facebook.presto.operator.BenchmarkWindowOperator.benchmark","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkArrayUnion","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkUnion","0"
"prestosql/presto","com.facebook.presto.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkConvexHull","0"
"prestosql/presto","com.facebook.presto.operator.project.BenchmarkDictionaryBlockGetSizeInBytes.getSizeInBytes","0"
"prestosql/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithFloorMod","0"
"prestosql/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithMod","0"
"prestosql/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithMask","0"
"prestosql/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithBitShifting","0"
"prestosql/presto","com.facebook.presto.spi.block.BenchmarkComputePosition.computePositionWithDivision","0"
"prestosql/presto","com.facebook.presto.operator.scalar.BenchmarkArrayIntersect.arrayIntersect","0"
"prestosql/presto","io.prestosql.plugin.hive.benchmark.HiveFileFormatBenchmark.read","0"
"prestosql/presto","io.prestosql.plugin.hive.benchmark.HiveFileFormatBenchmark.write","0"
"prestosql/presto","io.prestosql.plugin.hive.statistics.BenchmarkGetPartitionsSample.selectSample","0"
"prestosql/presto","io.prestosql.connector.informationschema.BenchmarkInformationSchema.queryInformationSchema","0"
"prestosql/presto","io.prestosql.BenchmarkPagesIndexPageSorter.runBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.overflowChecksAdd","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.overflowChecksSubtract","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.overflowChecksMultiply","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.overflowChecksDivide","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.overflowChecksNegate","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.baseLineAdd","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.baseLineSubtract","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.baseLineMultiply","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.baseLineDivide","0"
"prestosql/presto","io.prestosql.type.BenchmarkBigIntOperators.baseLineNegate","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.castDoubleToDecimalBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.castDecimalToDoubleBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.castDecimalToVarcharBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.additionBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.multiplyBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.divisionBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.moduloBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.inequalityBenchmark","0"
"prestosql/presto","io.prestosql.type.BenchmarkDecimalOperators.decimalToShortDecimalCastBenchmark","0"
"prestosql/presto","io.prestosql.block.BenchmarkMapCopy.benchmarkMapCopy","0"
"prestosql/presto","io.prestosql.operator.BenchmarkHashAndStreamingAggregationOperators.benchmark","0"
"prestosql/presto","io.prestosql.operator.spiller.BenchmarkBinaryFileSpiller.write","0"
"prestosql/presto","io.prestosql.operator.spiller.BenchmarkBinaryFileSpiller.read","0"
"prestosql/presto","io.prestosql.operator.BenchmarkPartitionedOutputOperator.addPage","0"
"prestosql/presto","io.prestosql.operator.BenchmarkHashBuildAndJoinOperators.benchmarkBuildHash","0"
"prestosql/presto","io.prestosql.operator.BenchmarkHashBuildAndJoinOperators.benchmarkJoinHash","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkMapConcat.mapConcat","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkArraySort.arraySort","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkArrayTransform.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkMapSubscript.mapSubscript","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkLength","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStart","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLength","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartFromEnd","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLengthFromEnd","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkReverse","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkLeftTrim","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkRightTrim","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkTrim","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkUpper","0"
"prestosql/presto","io.prestosql.operator.scalar.StringFunctionsBenchmark.benchmarkLower","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkArrayHashCodeOperator.arrayHashCode","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkArrayJoin.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction.doubleActual","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction.doubleBaseline","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction.floatActual","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkRoundFunction.floatBaseline","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkArrayDistinct.arrayDistinct","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkJsonToMapCast.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkArrayIntersect.arrayIntersect","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkArraySubscript.arraySubscript","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkJsonToArrayCast.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.RegexpFunctionsBenchmark.benchmarkLikeJoni","0"
"prestosql/presto","io.prestosql.operator.scalar.RegexpFunctionsBenchmark.benchmarkLikeRe2J","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkTransformKey.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkMapToMapCast.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkTransformValue.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkArrayFilter.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkRowToRowCast.benchmark","0"
"prestosql/presto","io.prestosql.operator.scalar.BenchmarkEqualsOperator.processPage","0"
"prestosql/presto","io.prestosql.operator.aggregation.BenchmarkArrayAggregation.arrayAggregation","0"
"prestosql/presto","io.prestosql.operator.aggregation.BenchmarkGroupedTypedHistogram.testSharedGroupWithLargeBlocksRunner","0"
"prestosql/presto","io.prestosql.operator.BenchmarkWindowOperator.benchmark","0"
"prestosql/presto","io.prestosql.operator.BenchmarkGroupedTopNBuilder.topN","0"
"prestosql/presto","io.prestosql.operator.project.BenchmarkDictionaryBlockGetSizeInBytes.getSizeInBytes","0"
"prestosql/presto","io.prestosql.operator.BenchmarkGroupByHash.groupByHashPreCompute","0"
"prestosql/presto","io.prestosql.operator.BenchmarkGroupByHash.addPagePreCompute","0"
"prestosql/presto","io.prestosql.operator.BenchmarkGroupByHash.bigintGroupByHash","0"
"prestosql/presto","io.prestosql.operator.BenchmarkGroupByHash.baseline","0"
"prestosql/presto","io.prestosql.operator.BenchmarkGroupByHash.baselineBigArray","0"
"prestosql/presto","io.prestosql.sql.gen.InCodeGeneratorBenchmark.benchmark","0"
"prestosql/presto","io.prestosql.sql.gen.PageProcessorBenchmark.rowOriented","0"
"prestosql/presto","io.prestosql.sql.gen.PageProcessorBenchmark.columnOriented","0"
"prestosql/presto","io.prestosql.sql.gen.BenchmarkPageProcessor.handCoded","0"
"prestosql/presto","io.prestosql.sql.gen.BenchmarkPageProcessor.compiled","0"
"prestosql/presto","io.prestosql.sql.planner.BenchmarkPlanner.planQueries","0"
"prestosql/presto","io.prestosql.sql.planner.iterative.rule.BenchmarkReorderChainedJoins.benchmarkReorderJoins","0"
"prestosql/presto","io.prestosql.sql.planner.iterative.rule.BenchmarkReorderInterconnectedJoins.benchmarkReorderJoins","0"
"prestosql/presto","io.prestosql.util.PagesSortBenchmark.runPagesIndexSortBenchmark","0"
"prestosql/presto","io.prestosql.util.PagesSortBenchmark.runPagesMergeSortBenchmark","0"
"prestosql/presto","io.prestosql.execution.BenchmarkNodeScheduler.benchmark","0"
"prestosql/presto","io.prestosql.execution.resourceGroups.BenchmarkResourceGroup.benchmark","0"
"prestosql/presto","io.prestosql.BenchmarkBoxedBoolean.primitive","0"
"prestosql/presto","io.prestosql.BenchmarkBoxedBoolean.unboxing","0"
"prestosql/presto","io.prestosql.BenchmarkBoxedBoolean.identity","0"
"prestosql/presto","io.prestosql.BenchmarkBoxedBoolean.booleanEquals","0"
"prestosql/presto","io.prestosql.BenchmarkBoxedBoolean.object","0"
"prestosql/presto","io.prestosql.BenchmarkBoxedBoolean.booleanEqualsNotNull","0"
"prestosql/presto","io.prestosql.benchmark.BenchmarkDecimalAggregation.benchmarkBuildHash","0"
"prestosql/presto","io.prestosql.benchmark.BenchmarkCPUCounters.nanoTime","0"
"prestosql/presto","io.prestosql.benchmark.BenchmarkCPUCounters.cpuTime","0"
"prestosql/presto","io.prestosql.benchmark.BenchmarkCPUCounters.userTime","0"
"prestosql/presto","io.prestosql.benchmark.BenchmarkInequalityJoin.benchmarkJoin","0"
"prestosql/presto","io.prestosql.benchmark.BenchmarkInequalityJoin.benchmarkJoinWithArithmeticInPredicate","0"
"prestosql/presto","io.prestosql.benchmark.BenchmarkInequalityJoin.benchmarkJoinWithFunctionPredicate","0"
"prestosql/presto","io.prestosql.benchmark.BenchmarkInequalityJoin.benchmarkRangePredicateJoin","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryToBingTiles.geometryToBingTiles","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryToBingTiles.envelopeToBingTiles","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSpatialJoin.benchmarkJoin","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSpatialJoin.benchmarkUserOptimizedJoin","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsInnerPointSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelopeSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelopeSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.deserializeSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.deserializeEnvelopeSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsInnerPoint","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsInnerPointDeserialized","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelope","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointInEnvelopeDeserialized","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelope","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.stContainsOuterPointNotInEnvelopeDeserialized","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.benchmarkDeserialize","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTContains.benchmarkDeserializeEnvelope","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkEnvelopeIntersection.envelopes","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkEnvelopeIntersection.geometries","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTEnvelope.simpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTEnvelope.complexGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkArrayUnion","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkUnion","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkGeometryAggregations.benchmarkConvexHull","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects.stIntersectsInnerLine","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects.stIntersectsInnerLineSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects.stIntersectsCrossingLine","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects.stIntersectsCrossingLineSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineInEnvelope","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineInEnvelopeSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineNotInEnvelope","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTIntersects.stIntersectsOuterLineNotInEnvelopeSimpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkBingTilesAround.benchmark","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTXMin.simpleGeometry","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTXMin.complexGeometry","0"
"prestosql/presto","io.prestosql.spi.predicate.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"prestosql/presto","io.prestosql.spi.block.BenchmarkComputePosition.computePositionWithFloorMod","0"
"prestosql/presto","io.prestosql.spi.block.BenchmarkComputePosition.computePositionWithMod","0"
"prestosql/presto","io.prestosql.spi.block.BenchmarkComputePosition.computePositionWithMask","0"
"prestosql/presto","io.prestosql.spi.block.BenchmarkComputePosition.computePositionWithBitShifting","0"
"prestosql/presto","io.prestosql.spi.block.BenchmarkComputePosition.computePositionWithDivision","0"
"prestosql/presto","io.prestosql.orc.BenchmarkOrcDecimalReader.readDecimal","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.baselineLength1","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.baselineLength2","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.baselineLength3","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.baselineLength4","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.baselineLength5","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.baselineLength6","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.baselineLength7","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.baselineLength256","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.optimizedLength1","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.optimizedLength2","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.optimizedLength3","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.optimizedLength4","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.optimizedLength5","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.optimizedLength6","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.optimizedLength7","0"
"prestosql/presto","io.prestosql.orc.stream.BenchmarkLongBitPacker.optimizedLength256","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readBooleanNoNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readBooleanWithNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readByteNoNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readByteWithNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readDecimalNoNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readDecimalWithNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readDoubleNoNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readDoubleWithNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readFloatNoNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readFloatWithNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readLongDirectNoNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readLongDirectWithNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readSliceDictionaryNoNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readSliceDictionaryWithNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readTimestampNoNull","1"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readTimestampWithNull","1"
"prestosql/presto","io.prestosql.array.BenchmarkReferenceCountMap.benchmarkInserts","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializePoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializePoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializePointEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultipoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultipoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultipointEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultipoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultipoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultipointEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleLineStringEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeComplexLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexLineStringEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultiLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiLineStringEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultiLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiLineStringEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeSimplePolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimplePolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimplePolygonEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeComplexPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexPolygonEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleMultiPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleMultiPolygonEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeComplexMultiPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexMultiPolygonEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeSimpleGeometryCollection","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleGeometryCollection","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeSimpleGeometryCollectionEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.serializeComplexGeometryCollection","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexGeometryCollection","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkGeometrySerde.deserializeComplexGeometryCollectionEnvelope","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializePoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializePoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultipoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultipoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultipoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultipoint","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultiLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultiLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultiLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultiLineString","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimplePolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimplePolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleMultiPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleMultiPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexMultiPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexMultiPolygon","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeSimpleGeometryCollection","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeSimpleGeometryCollection","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.serializeComplexGeometryCollection","0"
"prestosql/presto","io.prestosql.geospatial.serde.BenchmarkJtsGeometrySerde.deserializeComplexGeometryCollection","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readAllNull","1"
"prestosql/presto","io.prestosql.operator.BenchmarkScanFilterAndProjectOperator.benchmarkColumnOriented","0"
"prestosql/presto","io.prestosql.execution.resourcegroups.BenchmarkResourceGroup.benchmark","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTArea.stSphericalArea","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTArea.stSphericalArea500k","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTArea.stArea","0"
"prestosql/presto","io.prestosql.plugin.geospatial.BenchmarkSTArea.stArea500k","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readShortDecimalNoNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readShortDecimalWithNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readLongDecimalNoNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readLongDecimalWithNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readLongNoNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readLongWithNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readIntNoNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readIntWithNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readShortNoNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readShortWithNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readSliceDirectNoNull","0"
"prestosql/presto","io.prestosql.orc.BenchmarkStreamReaders.readSliceDirectWithNull","0"
"prestosql/presto","io.prestosql.operator.BenchmarkTopNOperator.topN","0"
"prestosql/presto","io.prestosql.operator.BenchmarkUnnestOperator.unnest","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinSampleBenchmark.measureMyIsChinese","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinSampleBenchmark.measurePinyin4jIsChinese","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinSampleBenchmark.measureMyToPinyin","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinSampleBenchmark.measurePinyin4jToPinyin","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark.measureMy_toPinyin_no_dict","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark.measureMy_pinyin_init","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark.measureMy_toPinyin_one_dict","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark.measurePinyin4j_toPinyin","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark.measureMy_toPinyin_with_dict","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark1.TinyPinyin_Init_With_Small_Dict","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark1.TinyPinyin_Init_With_Large_Dict","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinSampleBenchmark.TinyPinyin_IsChinese","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinSampleBenchmark.Pinyin4j_IsChinese","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinSampleBenchmark.TinyPinyin_CharToPinyin","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinSampleBenchmark.Pinyin4j_CharToPinyin","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark2.Pinyin4j_StringToPinyin","0"
"promeG/TinyPinyin","com.github.promeg.pinyinhelper.PinyinDictBenchmark2.TinyPinyin_StringToPinyin_With_Large_Dict","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusGaugeIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusGaugeChildIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeChildIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeNoLabelsIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.codahaleCounterIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusGaugeDecBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusGaugeChildDecBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeDecBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeChildDecBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeNoLabelsDecBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.codahaleCounterDecBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusGaugeSetBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusGaugeChildSetBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeSetBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeChildSetBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.GaugeBenchmark.prometheusSimpleGaugeNoLabelsSetBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.CounterBenchmark.prometheusCounterIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.CounterBenchmark.prometheusCounterChildIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.CounterBenchmark.prometheusSimpleCounterIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.CounterBenchmark.prometheusSimpleCounterChildIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.CounterBenchmark.prometheusSimpleCounterNoLabelsIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.CounterBenchmark.codahaleCounterIncBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.CounterBenchmark.codahaleMeterMarkBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.prometheusSummaryBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.prometheusSummaryChildBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.prometheusSimpleSummaryBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.prometheusSimpleSummaryChildBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.prometheusSimpleSummaryNoLabelsBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.codahaleHistogramBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.prometheusSimpleHistogramBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.prometheusSimpleHistogramChildBenchmark","0"
"prometheus/client_java","io.prometheus.benchmark.SummaryBenchmark.prometheusSimpleHistogramNoLabelsBenchmark","0"
"protobufel/multikeymapjava","com.github.protobufel.multikeymap.JMHMultiKeyMapVsMap.baseline_getValue","0"
"protobufel/multikeymapjava","com.github.protobufel.multikeymap.JMHMultiKeyMapVsMap.getValue","0"
"protobufel/multikeymapjava","com.github.protobufel.multikeymap.JMHMultiKeyMapVsMap.baseline_put","0"
"protobufel/multikeymapjava","com.github.protobufel.multikeymap.JMHMultiKeyMapVsMap.put","0"
"protobufel/multikeymapjava","com.github.protobufel.multikeymap.JMHMultiKeyMapVsMap.baseline_remove","0"
"protobufel/multikeymapjava","com.github.protobufel.multikeymap.JMHMultiKeyMapVsMap.remove","0"
"protobufel/multikeymapjava","com.github.protobufel.multikeymap.JMHMultiKeyMapVsMap.baseline_getFullKeysByPartialKeyWithPositions","0"
"protobufel/multikeymapjava","com.github.protobufel.multikeymap.JMHMultiKeyMapVsMap.getFullKeysByPartialKeyWithPositions","0"
"protobufel/protobuf-el","com.github.protobufel.BuilderBenchmark.timeCreateAndBuildOriginalDM","0"
"protobufel/protobuf-el","com.github.protobufel.BuilderBenchmark.timeCreateAndBuildAsOriginalDM","0"
"protobufel/protobuf-el","com.github.protobufel.BuilderBenchmark.timeCreateAndBuildAsOriginalGM","0"
"protobufel/protobuf-el","com.github.protobufel.BuilderBenchmark.timeCreateAndBuildOriginalGM","0"
"protobufel/protobuf-el","com.github.protobufel.BuilderBenchmark.timeMergeAndBuild","0"
"protobufel/protobuf-el","com.github.protobufel.BuilderBenchmark.timeMergeAndBuildOriginalDM","0"
"protobufel/protobuf-el","com.github.protobufel.BuilderBenchmark.timeMergeAndBuildOriginalGM","0"
"protobufel/protobuf-el","com.github.protobufel.benchmarks.BuilderBenchmark.timeCreateAndBuildOriginalDM","0"
"protobufel/protobuf-el","com.github.protobufel.benchmarks.BuilderBenchmark.timeCreateAndBuildAsOriginalDM","0"
"protobufel/protobuf-el","com.github.protobufel.benchmarks.BuilderBenchmark.timeCreateAndBuildAsOriginalGM","0"
"protobufel/protobuf-el","com.github.protobufel.benchmarks.BuilderBenchmark.timeCreateAndBuildOriginalGM","0"
"protobufel/protobuf-el","com.github.protobufel.benchmarks.BuilderBenchmark.timeMergeAndBuild","0"
"protobufel/protobuf-el","com.github.protobufel.benchmarks.BuilderBenchmark.timeMergeAndBuildOriginalDM","0"
"protobufel/protobuf-el","com.github.protobufel.benchmarks.BuilderBenchmark.timeMergeAndBuildOriginalGM","0"
"protostuff/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark.builtInSerializer","0"
"protostuff/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark.bufferedSerializer","0"
"protostuff/protostuff","io.protostuff.benchmarks.StringSerializerBenchmark.bufferedRecycledSerializer","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.baseline","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.runtime_serialize_1_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.runtime_serialize_10_int_fields","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.generated_serialize_1_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.generated_serialize_10_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.runtime_deserialize_1_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.runtime_deserialize_10_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.runtime_sparse_deserialize_1_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.runtime_sparse_serialize_1_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.runtime_sparse_deserialize_10_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.runtime_sparse_serialize_10_int_fields","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.generated_deserialize_1_int_field","0"
"protostuff/protostuff","io.protostuff.benchmarks.RuntimeSchemaBenchmark.generated_deserialize_10_int_field","0"
"puniverse/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark.timeSimple","0"
"puniverse/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark.timeDynamicMethodHandle","0"
"puniverse/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark.timeDynamicReflection","0"
"puniverse/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark.timeDynamicUnsafe","0"
"puniverse/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark.timeDynamicGeneration","0"
"puniverse/quasar","co.paralleluniverse.data.record.RecordJMHBenchmark.timePojo","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_singleConsumerArrayObjectQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_singleConsumerArrayObjectQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_SingleConsumerLinkedObjectQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_SingleConsumerLinkedObjectQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_SingleConsumerLinkedArrayObjectQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_SingleConsumerLinkedArrayObjectQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_SingleConsumerArrayIntQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_SingleConsumerArrayIntQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_SingleConsumerLinkedIntQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_SingleConsumerLinkedIntQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_SingleConsumerLinkedArrayIntQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_SingleConsumerLinkedArrayIntQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_ArrayBlockingQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_ArrayBlockingQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_LinkedBlockingQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_LinkedBlockingQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_ConcurrentLinkedQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_ConcurrentLinkedQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.read_LinkedTransferQueue","0"
"puniverse/quasar","co.paralleluniverse.strands.queues.QueueJMHBenchmark.write_LinkedTransferQueue","0"
"puniverse/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark.read_DelayQueue","0"
"puniverse/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark.write_DelayQueue","0"
"puniverse/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark.read_DelayQueue1","0"
"puniverse/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark.write_DelayQueue1","0"
"puniverse/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark.read_SingleConsumerLinkedObjectQueue","0"
"puniverse/quasar","co.paralleluniverse.concurrent.util.DelayQueueJMHBenchmark.write_SingleConsumerLinkedObjectQueue","0"
"puniverse/quasar","co.paralleluniverse.fibers.FiberOverheadJMHBenchmark.baseline","0"
"puniverse/quasar","co.paralleluniverse.fibers.FiberOverheadJMHBenchmark.fiber","0"
"puniverse/quasar","co.paralleluniverse.fibers.FiberOverheadJMHBenchmark.fiberNoPark","0"
"Querables/querables-java","com.github.querables.benchmarks.QuerableMapBenchmark.exactMatch","0"
"Querables/querables-java","com.github.querables.benchmarks.QuerableMapBenchmark.thirdNull","0"
"Querables/querables-java","com.github.querables.benchmarks.QuerableMapBenchmark.secondNull","0"
"Querables/querables-java","com.github.querables.benchmarks.QuerableMapBenchmark.firstNull","0"
"Querables/querables-java","com.github.querables.benchmarks.QuerableMapBenchmark.firstMatch","0"
"rabbitmq/rabbitmq-perf-test","com.rabbitmq.perf.CachingRoutingKeyGeneratorBenchmark.caching","0"
"rabbitmq/rabbitmq-perf-test","com.rabbitmq.perf.CachingRoutingKeyGeneratorBenchmark.noCaching","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.plainjava.NativeBenchmark.NativeJavaserialize","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.plainjava.NativeBenchmark.NativeJavadeserialize","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.plainjava.NativeBenchmark.JAVASerialize1m","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.plainjava.NativeBenchmark.JAVADESerialize1m","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.gpb.GPBBenchmark.GPBSerialization","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.gpb.GPBBenchmark.GPBDeserialization","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.gpb.GPBBenchmark.gpbSerialize1m","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.gpb.GPBBenchmark.gpbDESerialize1m","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.Json.JSONBenchmark.JsonSerialization","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.Json.JSONBenchmark.JSONDeserialization","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.Json.JSONBenchmark.JSONSerialize1m","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.Json.JSONBenchmark.JSONDESerialize1m","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.flatBuffers.FlatBuffersBenchmark.SerializationFlatBuffers","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.flatBuffers.FlatBuffersBenchmark.DesserializationFlatBuffers","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.flatBuffers.FlatBuffersBenchmark.FlatBuffersSerialize1m","0"
"rafamonteiro/SerializationProtocolsBenchMark","br.com.tdc.benchmark.flatBuffers.FlatBuffersBenchmark.FlatBuffersDESerialize1m","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark.benchmarkByteBuddy","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark.benchmarkCglib","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark.benchmarkJavassist","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark.benchmarkJdkProxy","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark.benchmarkByteBuddy","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark.benchmarkCglib","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark.benchmarkJavassist","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark.benchmarkJdkProxy","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark.benchmarkByteBuddyWithAnnotations","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark.benchmarkByteBuddySpecialized","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark.benchmarkCglib","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark.benchmarkJavassist","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithAnnotations","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddySpecialized","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkCglib","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkJavassist","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark.benchmarkByteBuddy","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark.benchmarkCglib","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark.benchmarkJavassist","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark.benchmarkJdkProxy","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.StubInvocationBenchmark.baseline","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark.baseline","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark.baseline","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.baseline","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.TrivialClassCreationBenchmark.baseline","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark.benchmarkByteBuddyWithProxy","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark.benchmarkByteBuddyWithAccessor","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.SuperClassInvocationBenchmark.benchmarkByteBuddyWithPrefix","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithProxy","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithProxyAndReusedDelegator","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithAccessor","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithAccessorAndReusedDelegator","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithPrefix","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithPrefixAndReusedDelegator","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByImplementationBenchmark.benchmarkByteBuddyWithTypePool","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithProxyWithTypePool","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithProxyAndReusedDelegatorWithTypePool","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithAccessorWithTypePool","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithAccessorAndReusedDelegatorWithTypePool","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithPrefixWithTypePool","0"
"raphw/byte-buddy","net.bytebuddy.benchmark.ClassByExtensionBenchmark.benchmarkByteBuddyWithPrefixAndReusedDelegatorWithTypePool","0"
"raviprak/JAVABench","com.java.bench.maps.SynchronizedHashMapBench.testMap","0"
"raviprak/JAVABench","com.java.bench.maps.ConcurrentHashMapBench.testMap","0"
"raviprak/JAVABench","com.java.bench.atomic.AtomicIntegerBench.testAtomicInteger","0"
"raviprak/JAVABench","com.java.bench.intrinsic.IntrinsicLocking.increment","0"
"raviprak/JAVABench","com.java.bench.rng.RandomBench.testJavaUtilRandom","0"
"raviprak/JAVABench","com.java.bench.rng.RandomBench.testXORShift","0"
"raviprak/JAVABench","com.java.bench.rng.RandomBench.testSecureRandom","0"
"raviprak/JAVABench","com.java.bench.lookup.Lookup.testCollectionContains","0"
"raviprak/JAVABench","com.java.bench.maps.HashMapBench.testMapPut","0"
"raviprak/JAVABench","com.java.bench.maps.HashMapBench.testMapGet","0"
"raviprak/JAVABench","com.java.bench.intrinsic.NoLocking.noLockingMethod","0"
"raviprak/JAVABench","com.java.bench.intrinsic.WaitNotify.waitRoundRobinNotifyAllMethod","0"
"raviprak/JAVABench","com.java.bench.intrinsic.IntrinsicLocking.syncMethod","0"
"raviprak/JAVABench","com.java.bench.lambda.Lambdas.testCollectionContains","0"
"raviprak/JAVABench","com.java.bench.lambda.Lambdas.testLambdaCalls","0"
"raydac/java-binary-block-parser","com.igormaznitsa.jbbp.benchmarks.JBBP_Benchmark.measureParse_DynamicAndMapping","0"
"raydac/java-binary-block-parser","com.igormaznitsa.jbbp.benchmarks.JBBP_Benchmark.measureParse_Dynamic","0"
"raydac/java-binary-block-parser","com.igormaznitsa.jbbp.benchmarks.JBBP_Benchmark.measureParse_Static","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark._baseline","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark.angle","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark.angle2","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark.angle3","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark.vector","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark.vector2","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark.linear2","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark.linear4","0"
"rayrobdod/deductionTactics","com.rayrobdod.deductionTactics.DirectionWeaknessMultiplerBenchmark.linear2pair","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.UpdateBenchmark.poolPreparedBatchUpdate","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.SingleSelectBenchmark.poolPreparedQuery","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.SingleSelectBenchmark.pooledConnectionPreparedQuery","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.SingleSelectBenchmark.pooledConnectionPreparedStatementQuery","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.LargeSelectBenchmark.poolPreparedQuery","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.LargeSelectBenchmark.pooledConnectionPreparedQuery","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.LargeSelectBenchmark.pooledConnectionPreparedStatementQuery","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.PipelineBenchmark.test1","0"
"reactiverse/reactive-pg-client","io.reactiverse.pgclient.PipelineBenchmark.test2","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.UpdateBenchmark.poolPreparedBatchUpdate","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.SingleSelectBenchmark.poolPreparedQuery","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.SingleSelectBenchmark.pooledConnectionPreparedQuery","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.SingleSelectBenchmark.pooledConnectionPreparedStatementQuery","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.LargeSelectBenchmark.poolPreparedQuery","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.LargeSelectBenchmark.pooledConnectionPreparedQuery","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.LargeSelectBenchmark.pooledConnectionPreparedStatementQuery","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.PipelineBenchmark.test1","0"
"reactiverse/reactive-pg-client","io.vertx.pgclient.PipelineBenchmark.test2","0"
"ReactiveX/RxGroovy","rx.lang.groovy.ExtensionPerf.extension","0"
"ReactiveX/RxJava","rx.subjects.ReplaySubjectPerf.subscribeBeforeEvents","0"
"ReactiveX/RxJava","rx.subjects.ReplaySubjectPerf.subscribeAfterEvents","0"
"ReactiveX/RxJava","rx.schedulers.ComputationSchedulerPerf.subscribeOn","0"
"ReactiveX/RxJava","rx.schedulers.ComputationSchedulerPerf.observeOn","0"
"ReactiveX/RxJava","rx.schedulers.IOSchedulerPerf.subscribeOn","0"
"ReactiveX/RxJava","rx.schedulers.IOSchedulerPerf.observeOn","0"
"ReactiveX/RxJava","rx.PerfBaseline.observableConsumption","0"
"ReactiveX/RxJava","rx.PerfBaseline.observableViaRange","0"
"ReactiveX/RxJava","rx.PerfBaseline.iterableViaForLoopConsumption","0"
"ReactiveX/RxJava","rx.PerfBaseline.iterableViaHasNextConsumption","0"
"ReactiveX/RxJava","rx.operators.OperatorFlatMapPerf.flatMapIntPassthruSync","0"
"ReactiveX/RxJava","rx.operators.OperatorFlatMapPerf.flatMapIntPassthruAsync","0"
"ReactiveX/RxJava","rx.operators.OperatorFlatMapPerf.flatMapTwoNestedSync","0"
"ReactiveX/RxJava","rx.operators.OperatorSerializePerf.noSerializationSingleThreaded","0"
"ReactiveX/RxJava","rx.operators.OperatorSerializePerf.serializedSingleStream","0"
"ReactiveX/RxJava","rx.operators.OperatorSerializePerf.serializedTwoStreamsHighlyContended","0"
"ReactiveX/RxJava","rx.operators.OperatorSerializePerf.serializedTwoStreamsSlightlyContended","0"
"ReactiveX/RxJava","rx.operators.OperatorSerializePerf.serializedTwoStreamsOneFastOneSlow","0"
"ReactiveX/RxJava","rx.operators.OperatorMergePerf.merge1SyncStreamOfN","0"
"ReactiveX/RxJava","rx.operators.OperatorMergePerf.mergeNSyncStreamsOfN","0"
"ReactiveX/RxJava","rx.operators.OperatorMergePerf.mergeNAsyncStreamsOfN","0"
"ReactiveX/RxJava","rx.operators.OperatorMergePerf.mergeTwoAsyncStreamsOfN","0"
"ReactiveX/RxJava","rx.operators.OperatorMergePerf.mergeNSyncStreamsOf1","0"
"ReactiveX/RxJava","rx.operators.OperatorMapPerf.mapPassThruViaLift","0"
"ReactiveX/RxJava","rx.operators.OperatorMapPerf.mapPassThru","0"
"ReactiveX/RxJava","rx.operators.OperatorObserveOnPerf.observeOnComputation","0"
"ReactiveX/RxJava","rx.operators.OperatorObserveOnPerf.observeOnNewThread","0"
"ReactiveX/RxJava","rx.operators.OperatorObserveOnPerf.observeOnImmediate","0"
"ReactiveX/RxJava","rx.subjects.ReplaySubjectPerf.subscribeBeforeEventsUnbounded","0"
"ReactiveX/RxJava","rx.subjects.ReplaySubjectPerf.subscribeBeforeEventsCount1","0"
"ReactiveX/RxJava","rx.subjects.ReplaySubjectPerf.subscribeAfterEventsUnbounded","0"
"ReactiveX/RxJava","rx.subjects.ReplaySubjectPerf.subscribeAfterEventsCount1","0"
"ReactiveX/RxJava","rx.PerfBaseline.observableConsumptionUnsafe","0"
"ReactiveX/RxJava","rx.PerfBaseline.observableViaRangeUnsafe","0"
"ReactiveX/RxJava","rx.operators.OperatorMergePerf.oneStreamOfNthatMergesIn1","0"
"ReactiveX/RxJava","rx.operators.OperatorRangePerf.rangeWithBackpressureRequest","0"
"ReactiveX/RxJava","rx.operators.OperatorRangePerf.rangeWithoutBackpressure","0"
"ReactiveX/RxJava","rx.internal.IndexedRingBufferPerf.indexedRingBufferAdd","0"
"ReactiveX/RxJava","rx.internal.IndexedRingBufferPerf.indexedRingBufferAddRemove","0"
"ReactiveX/RxJava","rx.internal.RxRingBufferPerf.spmcRingBufferAddRemove1","0"
"ReactiveX/RxJava","rx.internal.RxRingBufferPerf.spmcRingBufferAddRemove1000","0"
"ReactiveX/RxJava","rx.internal.RxRingBufferPerf.spmcCreateUseAndDestroy1000","0"
"ReactiveX/RxJava","rx.internal.RxRingBufferPerf.spmcCreateUseAndDestroy1","0"
"ReactiveX/RxJava","rx.internal.RxRingBufferPerf.spscRingBufferAddRemove1","0"
"ReactiveX/RxJava","rx.internal.RxRingBufferPerf.spscRingBufferAddRemove1000","0"
"ReactiveX/RxJava","rx.internal.RxRingBufferPerf.spscCreateUseAndDestroy1000","0"
"ReactiveX/RxJava","rx.internal.RxRingBufferPerf.spscCreateUseAndDestroy1","0"
"ReactiveX/RxJava","rx.observables.BlockingObservablePerf.benchSingle","0"
"ReactiveX/RxJava","rx.observables.BlockingObservablePerf.benchFirst","0"
"ReactiveX/RxJava","rx.observables.BlockingObservablePerf.benchLast","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.volatileIntRead","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.volatileLongRead","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.volatileIntWrite","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.volatileLongWrite","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntIncrementAndGet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntGetAndIncrement","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongIncrementAndGet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongGetAndIncrement","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntLazySet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongLazySet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntCASSuccess","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongCASSuccess","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntCASCheckSuccess","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongCASCheckSuccess","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntCASFailure","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongCASFailure","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntCASCheckFailure","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongCASCheckFailure","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntFieldIncrementAndGet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntFieldGetAndIncrement","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongFieldIncrementAndGet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongFieldGetAndIncrement","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntFieldLazySet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongFieldLazySet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntFieldCASSuccess","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongFieldCASSuccess","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntFieldCASFailure","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongFieldCASFailure","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicIntGetAndSet","0"
"ReactiveX/RxJava","rx.internal.AtomicPerf.atomicLongGetAndSet","0"
"ReactiveX/RxJava","rx.subscriptions.SerialSubscriptionPerf.add","0"
"ReactiveX/RxJava","rx.subscriptions.SerialSubscriptionPerf.addLocal","0"
"ReactiveX/RxJava","rx.subscriptions.SubscriptionListPerf.addClear","0"
"ReactiveX/RxJava","rx.subscriptions.SubscriptionListPerf.addClearLocal","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionPerf.addRemove","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionPerf.addRemoveLocal","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionPerf.addClear","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionPerf.addClearLocal","0"
"ReactiveX/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf.add","0"
"ReactiveX/RxJava","rx.subscriptions.MultipleAssignmentSubscriptionPerf.addLocal","0"
"ReactiveX/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf.addClearT1","0"
"ReactiveX/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf.addClearT2","0"
"ReactiveX/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf.addClearHalfT1","0"
"ReactiveX/RxJava","rx.subscriptions.SubscriptionListConcurrentPerf.addRemoveHalfT2","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf.addRemoveT1","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf.addRemoveT2","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf.addRemoveHalfT1","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf.addRemoveHalfT2","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf.addClearT1","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf.addClearT2","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf.addClearHalfT1","0"
"ReactiveX/RxJava","rx.subscriptions.CompositeSubscriptionConcurrentPerf.addClearHalfT2","0"
"ReactiveX/RxJava","rx.operators.OperatorPublishPerf.benchmark","0"
"ReactiveX/RxJava","rx.operators.OperatorObserveOnPerf.observeOnComputationSubscribedOnComputation","0"
"ReactiveX/RxJava","rx.operators.OperatorObserveOnPerf.observeOnNewThreadSubscribedOnComputation","0"
"ReactiveX/RxJava","rx.operators.OperatorObserveOnPerf.observeOnImmediateSubscribedOnComputation","0"
"ReactiveX/RxJava","rx.operators.OperatorTakeLastOnePerf.takeLastOneUsingTakeLast","0"
"ReactiveX/RxJava","rx.operators.OperatorTakeLastOnePerf.takeLastOneUsingTakeLastOne","0"
"ReactiveX/RxJava","rx.ObservablePerfBaseline.observableConsumption","0"
"ReactiveX/RxJava","rx.ObservablePerfBaseline.observableViaRange","0"
"ReactiveX/RxJava","rx.ObservablePerfBaseline.observableConsumptionUnsafe","0"
"ReactiveX/RxJava","rx.ObservablePerfBaseline.observableViaRangeUnsafe","0"
"ReactiveX/RxJava","rx.ObservablePerfBaseline.iterableViaForLoopConsumption","0"
"ReactiveX/RxJava","rx.ObservablePerfBaseline.iterableViaHasNextConsumption","0"
"ReactiveX/RxJava","rx.SinglePerfBaseline.singleConsumption","0"
"ReactiveX/RxJava","rx.SinglePerfBaseline.singleConsumptionUnsafe","0"
"ReactiveX/RxJava","rx.SinglePerfBaseline.newSingleAndSubscriberEachTime","0"
"ReactiveX/RxJava","io.reactivex.OperatorFlatMapPerf.flatMapIntPassthruSync","0"
"ReactiveX/RxJava","io.reactivex.OperatorFlatMapPerf.flatMapIntPassthruAsync","0"
"ReactiveX/RxJava","io.reactivex.OperatorFlatMapPerf.flatMapTwoNestedSync","0"
"ReactiveX/RxJava","io.reactivex.OperatorMergePerf.oneStreamOfNthatMergesIn1","0"
"ReactiveX/RxJava","io.reactivex.OperatorMergePerf.merge1SyncStreamOfN","0"
"ReactiveX/RxJava","io.reactivex.OperatorMergePerf.mergeNSyncStreamsOfN","0"
"ReactiveX/RxJava","io.reactivex.OperatorMergePerf.mergeNAsyncStreamsOfN","0"
"ReactiveX/RxJava","io.reactivex.OperatorMergePerf.mergeTwoAsyncStreamsOfN","0"
"ReactiveX/RxJava","io.reactivex.OperatorMergePerf.mergeNSyncStreamsOf1","0"
"ReactiveX/RxJava","io.reactivex.EachTypeFlatMapPerf.bpRange","0"
"ReactiveX/RxJava","io.reactivex.EachTypeFlatMapPerf.bpRangeMapJust","0"
"ReactiveX/RxJava","io.reactivex.EachTypeFlatMapPerf.bpRangeMapRange","0"
"ReactiveX/RxJava","io.reactivex.EachTypeFlatMapPerf.nbpRange","0"
"ReactiveX/RxJava","io.reactivex.EachTypeFlatMapPerf.nbpRangeMapJust","0"
"ReactiveX/RxJava","io.reactivex.EachTypeFlatMapPerf.nbpRangeMapRange","0"
"ReactiveX/RxJava","io.reactivex.EachTypeFlatMapPerf.singleJust","0"
"ReactiveX/RxJava","io.reactivex.EachTypeFlatMapPerf.singleJustMapJust","0"
"ReactiveX/RxJava","io.reactivex.RangePerf.rangeSync","0"
"ReactiveX/RxJava","io.reactivex.RangePerf.rangeAsync","0"
"ReactiveX/RxJava","io.reactivex.RangePerf.rangePipeline","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.range","1"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.rangeNbp","1"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.rangeFlatMap","1"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.rangeNbpFlatMap","1"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.stream","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.streamFlatMap","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.streamParallel","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.streamParallelFlatMap","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.rangeFlatMapJust","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.rangeNbpFlatMapJust","0"
"ReactiveX/RxJava","io.reactivex.BlockingPerf.flowableFirst","0"
"ReactiveX/RxJava","io.reactivex.BlockingPerf.flowableLast","0"
"ReactiveX/RxJava","io.reactivex.BlockingPerf.flowableBlockingFirst","0"
"ReactiveX/RxJava","io.reactivex.BlockingPerf.flowableBlockingLast","0"
"ReactiveX/RxJava","io.reactivex.BlockingPerf.observableFirst","0"
"ReactiveX/RxJava","io.reactivex.BlockingPerf.observableLast","0"
"ReactiveX/RxJava","io.reactivex.BlockingPerf.observableBlockingFirst","0"
"ReactiveX/RxJava","io.reactivex.BlockingPerf.observableBlockingLast","0"
"ReactiveX/RxJava","io.reactivex.ObservableFlatMapPerf.flatMapXRange","0"
"ReactiveX/RxJava","io.reactivex.FlattenJustPerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.FlattenJustPerf.observable","0"
"ReactiveX/RxJava","io.reactivex.BlockingGetPerf.flowableBlockingFirst","0"
"ReactiveX/RxJava","io.reactivex.BlockingGetPerf.flowableBlockingLast","0"
"ReactiveX/RxJava","io.reactivex.BlockingGetPerf.observableBlockingLast","0"
"ReactiveX/RxJava","io.reactivex.BlockingGetPerf.observableBlockingFirst","0"
"ReactiveX/RxJava","io.reactivex.BlockingGetPerf.single","0"
"ReactiveX/RxJava","io.reactivex.BlockingGetPerf.maybe","0"
"ReactiveX/RxJava","io.reactivex.BlockingGetPerf.completable","0"
"ReactiveX/RxJava","io.reactivex.ToFlowablePerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.ToFlowablePerf.flowableInner","0"
"ReactiveX/RxJava","io.reactivex.ToFlowablePerf.observable","0"
"ReactiveX/RxJava","io.reactivex.ToFlowablePerf.observableInner","0"
"ReactiveX/RxJava","io.reactivex.FlatMapJustPerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.FlatMapJustPerf.observable","0"
"ReactiveX/RxJava","io.reactivex.FlattenCrossMapPerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.FlattenCrossMapPerf.observable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.subscribeOnFlowable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.observeOnFlowable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.pipelineFlowable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.subscribeOnObservable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.observeOnObservable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.pipelineObservable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.observeOnSingle","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.subscribeOnSingle","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.pipelineSingle","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.observeOnCompletable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.subscribeOnCompletable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.pipelineCompletable","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.observeOnMaybe","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.subscribeOnMaybe","0"
"ReactiveX/RxJava","io.reactivex.JustAsyncPerf.pipelineMaybe","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.subscribeOnFlowable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.observeOnFlowable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.pipelineFlowable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.subscribeOnObservable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.observeOnObservable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.pipelineObservable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.observeOnSingle","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.subscribeOnSingle","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.pipelineSingle","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.observeOnCompletable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.subscribeOnCompletable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.pipelineCompletable","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.observeOnMaybe","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.subscribeOnMaybe","0"
"ReactiveX/RxJava","io.reactivex.CallableAsyncPerf.pipelineMaybe","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.rangeObservable","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.rangeObservableFlatMap","0"
"ReactiveX/RxJava","io.reactivex.RxVsStreamPerf.rangeObservableFlatMapJust","0"
"ReactiveX/RxJava","io.reactivex.ReducePerf.obsSingle","0"
"ReactiveX/RxJava","io.reactivex.ReducePerf.flowSingle","0"
"ReactiveX/RxJava","io.reactivex.ReducePerf.obsMaybe","0"
"ReactiveX/RxJava","io.reactivex.ReducePerf.flowMaybe","0"
"ReactiveX/RxJava","io.reactivex.parallel.ParallelPerf.flatMap","0"
"ReactiveX/RxJava","io.reactivex.parallel.ParallelPerf.groupBy","0"
"ReactiveX/RxJava","io.reactivex.parallel.ParallelPerf.parallel","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapIterable1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapIterable0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapFlowable0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapFlowable1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapSingle1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapMaybe1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapMaybe0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapCompletable0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapIterableAsFlow1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapIterableAsFlow0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapSingleAsFlow1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapMaybeAsFlow1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapMaybeAsFlow0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.flowFlatMapCompletableAsFlow0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapIterable0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapIterable1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapObservable0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapObservable1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapSingle1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapMaybe1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapMaybe0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapCompletable0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapIterableAsObs1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapIterableAsObs0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapSingleAsObs1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapMaybeAsObs1","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapMaybeAsObs0","0"
"ReactiveX/RxJava","io.reactivex.XMapYPerf.obsFlatMapCompletableAsObs0","0"
"ReactiveX/RxJava","io.reactivex.StrictPerf.internal","0"
"ReactiveX/RxJava","io.reactivex.StrictPerf.external","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.unbounded1","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.unbounded1k","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.unbounded1m","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.bounded1","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.bounded1k","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.bounded1m","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.subject1","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.subject1k","0"
"ReactiveX/RxJava","io.reactivex.PublishProcessorPerf.subject1m","0"
"ReactiveX/RxJava","io.reactivex.FlowableFlatMapCompletableAsyncPerf.flatMapCompletable","0"
"ReactiveX/RxJava","io.reactivex.FlattenRangePerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.FlattenRangePerf.observable","0"
"ReactiveX/RxJava","io.reactivex.FlowableFlatMapCompletableSyncPerf.flatMap","0"
"ReactiveX/RxJava","io.reactivex.FlowableFlatMapCompletableSyncPerf.flatMapCompletable","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapCompletablePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapCompletablePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapCompletablePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapCompletablePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapCompletablePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapCompletablePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapCompletablePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapCompletablePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapCompletablePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybeEmptyPerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybeEmptyPerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybeEmptyPerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapSinglePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapSinglePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapSinglePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapSinglePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapSinglePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapSinglePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapSinglePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapSinglePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapSinglePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybeEmptyPerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybeEmptyPerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybeEmptyPerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapCompletablePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapCompletablePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapCompletablePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybeEmptyPerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybeEmptyPerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapMaybeEmptyPerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapSinglePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapSinglePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapSinglePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapCompletablePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapCompletablePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableSwitchMapCompletablePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybeEmptyPerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybeEmptyPerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapMaybeEmptyPerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapMaybePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapSinglePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapSinglePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableFlatMapSinglePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapSinglePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapSinglePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapSinglePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybeEmptyPerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybeEmptyPerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybeEmptyPerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybeEmptyPerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybeEmptyPerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableFlatMapMaybeEmptyPerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.ObservableConcatMapMaybePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableConcatMapMaybePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapCompletablePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapCompletablePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.xmapz.FlowableSwitchMapCompletablePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.singleFlatMapPublisher","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.singleFlatMapHidePublisher","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.singleFlattenAsPublisher","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.maybeFlatMapPublisher","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.maybeFlatMapHidePublisher","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.maybeFlattenAsPublisher","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.completableFlatMapPublisher","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.completableFlattenAsPublisher","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.singleFlatMapObservable","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.singleFlatMapHideObservable","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.singleFlattenAsObservable","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.maybeFlatMapObservable","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.maybeFlatMapHideObservable","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.maybeFlattenAsObservable","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.completableFlatMapObservable","0"
"ReactiveX/RxJava","io.reactivex.BinaryFlatMapPerf.completableFlattenAsObservable","0"
"ReactiveX/RxJava","io.reactivex.TakeUntilPerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.TakeUntilPerf.observable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.parallel.ParallelPerf.flatMap","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.parallel.ParallelPerf.groupBy","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.parallel.ParallelPerf.parallel","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapCompletablePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapCompletablePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapCompletablePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapCompletablePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapCompletablePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapCompletablePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapCompletablePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapCompletablePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapCompletablePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapMaybeEmptyPerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapMaybeEmptyPerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapMaybeEmptyPerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapSinglePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapSinglePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapSinglePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapSinglePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapSinglePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapSinglePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapSinglePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapSinglePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapSinglePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapMaybeEmptyPerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapMaybeEmptyPerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapMaybeEmptyPerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapCompletablePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapCompletablePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapCompletablePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapMaybePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapMaybePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapMaybePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapMaybePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapMaybePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapMaybePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapMaybeEmptyPerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapMaybeEmptyPerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapMaybeEmptyPerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapSinglePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapSinglePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapSinglePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapCompletablePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapCompletablePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableSwitchMapCompletablePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapMaybeEmptyPerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapMaybeEmptyPerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapMaybeEmptyPerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapMaybePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapMaybePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapMaybePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapMaybePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapMaybePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapMaybePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapSinglePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapSinglePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableFlatMapSinglePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapSinglePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapSinglePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapSinglePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapMaybeEmptyPerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapMaybeEmptyPerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapMaybeEmptyPerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapMaybeEmptyPerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapMaybeEmptyPerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableFlatMapMaybeEmptyPerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapMaybePerf.observablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapMaybePerf.observableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.ObservableConcatMapMaybePerf.observableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapMaybePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapMaybePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableConcatMapMaybePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapCompletablePerf.flowablePlain","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapCompletablePerf.flowableConvert","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.xmapz.FlowableSwitchMapCompletablePerf.flowableDedicated","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlattenJustPerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlattenJustPerf.observable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapIterable1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapIterable0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapFlowable0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapFlowable1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapSingle1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapMaybe1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapMaybe0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapCompletable0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapIterableAsFlow1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapIterableAsFlow0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapSingleAsFlow1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapMaybeAsFlow1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapMaybeAsFlow0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.flowFlatMapCompletableAsFlow0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapIterable0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapIterable1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapObservable0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapObservable1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapSingle1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapMaybe1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapMaybe0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapCompletable0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapIterableAsObs1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapIterableAsObs0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapSingleAsObs1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapMaybeAsObs1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapMaybeAsObs0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.XMapYPerf.obsFlatMapCompletableAsObs0","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlowableFlatMapCompletableAsyncPerf.flatMapCompletable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlattenRangePerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlattenRangePerf.observable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingGetPerf.flowableBlockingFirst","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingGetPerf.flowableBlockingLast","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingGetPerf.observableBlockingLast","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingGetPerf.observableBlockingFirst","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingGetPerf.single","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingGetPerf.maybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingGetPerf.completable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorFlatMapPerf.flatMapIntPassthruSync","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorFlatMapPerf.flatMapIntPassthruAsync","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorFlatMapPerf.flatMapTwoNestedSync","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ToFlowablePerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ToFlowablePerf.flowableInner","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ToFlowablePerf.observable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ToFlowablePerf.observableInner","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingPerf.flowableBlockingFirst","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingPerf.flowableBlockingLast","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingPerf.observableBlockingLast","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BlockingPerf.observableBlockingFirst","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ObservableFlatMapPerf.flatMapXRange","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorMergePerf.oneStreamOfNthatMergesIn1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorMergePerf.merge1SyncStreamOfN","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorMergePerf.mergeNSyncStreamsOfN","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorMergePerf.mergeNAsyncStreamsOfN","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorMergePerf.mergeTwoAsyncStreamsOfN","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.OperatorMergePerf.mergeNSyncStreamsOf1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.EachTypeFlatMapPerf.bpRange","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.EachTypeFlatMapPerf.bpRangeMapJust","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.EachTypeFlatMapPerf.bpRangeMapRange","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.EachTypeFlatMapPerf.nbpRange","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.EachTypeFlatMapPerf.nbpRangeMapJust","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.EachTypeFlatMapPerf.nbpRangeMapRange","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.EachTypeFlatMapPerf.singleJust","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.EachTypeFlatMapPerf.singleJustMapJust","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlatMapJustPerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlatMapJustPerf.observable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlattenCrossMapPerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlattenCrossMapPerf.observable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlowableFlatMapCompletableSyncPerf.flatMap","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.FlowableFlatMapCompletableSyncPerf.flatMapCompletable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.subscribeOnFlowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.observeOnFlowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.pipelineFlowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.subscribeOnObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.observeOnObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.pipelineObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.observeOnSingle","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.subscribeOnSingle","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.pipelineSingle","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.observeOnCompletable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.subscribeOnCompletable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.pipelineCompletable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.observeOnMaybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.subscribeOnMaybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.JustAsyncPerf.pipelineMaybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.subscribeOnFlowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.observeOnFlowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.pipelineFlowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.subscribeOnObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.observeOnObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.pipelineObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.observeOnSingle","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.subscribeOnSingle","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.pipelineSingle","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.observeOnCompletable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.subscribeOnCompletable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.pipelineCompletable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.observeOnMaybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.subscribeOnMaybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.CallableAsyncPerf.pipelineMaybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ReducePerf.obsSingle","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ReducePerf.flowSingle","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ReducePerf.obsMaybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.ReducePerf.flowMaybe","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.StrictPerf.internal","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.StrictPerf.external","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.singleFlatMapPublisher","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.singleFlatMapHidePublisher","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.singleFlattenAsPublisher","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.maybeFlatMapPublisher","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.maybeFlatMapHidePublisher","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.maybeFlattenAsPublisher","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.completableFlatMapPublisher","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.completableFlattenAsPublisher","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.singleFlatMapObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.singleFlatMapHideObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.singleFlattenAsObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.maybeFlatMapObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.maybeFlatMapHideObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.maybeFlattenAsObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.completableFlatMapObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.BinaryFlatMapPerf.completableFlattenAsObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.RxVsStreamPerf.range","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.RxVsStreamPerf.rangeObservable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.RxVsStreamPerf.rangeFlatMap","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.RxVsStreamPerf.rangeObservableFlatMap","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.RxVsStreamPerf.rangeFlatMapJust","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.RxVsStreamPerf.rangeObservableFlatMapJust","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.unbounded1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.unbounded1k","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.unbounded1m","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.bounded1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.bounded1k","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.bounded1m","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.subject1","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.subject1k","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.PublishProcessorPerf.subject1m","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.RangePerf.rangeSync","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.TakeUntilPerf.flowable","0"
"ReactiveX/RxJava","io.reactivex.rxjava3.core.TakeUntilPerf.observable","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.MergePerf.oneStreamOfNthatMergesIn1","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.MergePerf.merge1SyncStreamOfN","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.MergePerf.mergeNSyncStreamsOfN","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.MergePerf.mergeNAsyncStreamsOfN","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.MergePerf.mergeTwoAsyncStreamsOfN","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.MergePerf.mergeNSyncStreamsOf1","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.MapPerf.mapPassThruViaLift","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.MapPerf.mapPassThru","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.FlatMapPerf.flatMapIntPassthruSync","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.FlatMapPerf.flatMapIntPassthruAsync","0"
"ReactiveX/RxJavaParallel","rx.internal.operators.FlatMapPerf.flatMapTwoNestedSync","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.standard1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.shared1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.createNew1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.standard2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.shared2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.createNew2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.standard3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.shared3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatArrayPerf.createNew3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherRangePerf.standard","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherRangePerf.shared","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherRangePerf.createNew","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherArrayPerf.standard1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherArrayPerf.shared1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherArrayPerf.createNew1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherArrayPerf.standard2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherArrayPerf.shared2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherArrayPerf.createNew2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.standard1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.shared1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.createNew1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.standard2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.shared2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.createNew2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.standard3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.shared3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherConcatIterablePerf.createNew3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherIterablePerf.standard1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherIterablePerf.shared1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherIterablePerf.createNew1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherIterablePerf.standard2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherIterablePerf.shared2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherIterablePerf.createNew2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherJustPerf.standard","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherJustPerf.shared","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherJustPerf.createNew","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.atomicDecrementAndGet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.atomicCompareAndSet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.atomicGet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.atomicGetAndSet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.atomicFieldDecrementAndGet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.atomicFieldCompareAndSet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.atomicFieldGet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.atomicFieldGetAndSet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.request","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.requestField","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.requestMax","0"
"reactor/reactive-streams-commons","reactivestreams.commons.internal.BackpressureHelperPerf.requestFieldMax","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherRetryPerf.standard","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherRetryPerf.shared","0"
"reactor/reactive-streams-commons","reactivestreams.commons.PublisherRetryPerf.createNew","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherMapPerf.simple","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherMapPerf.rangeFlatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherMapPerf.rangeConcatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFlatMapPerf.baseline","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFlatMapPerf.justFlatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFlatMapPerf.justFlatMapArray","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFlatMapPerf.rangeFlatMapJust","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFlatMapPerf.justFlatMapJust","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFlatMapPerf.rangeFlatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFlatMapPerf.rangeFlatMapArray","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFilterPerf.simple","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFilterPerf.rangeFlatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFilterPerf.rangeConcatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFilterPerf.simpleSlowpath","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFilterPerf.rangeFlatMapRangeSlowpath","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherFilterPerf.rangeConcatMapRangeSlowpath","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.RangeFlatMapObserveOnPerf.benchDefault","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.RangeFlatMapObserveOnPerf.benchSpsc","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.baseline","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.justConcatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.justConcatMapArray","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.rangeConcatMapJust","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.justConcatMapJust","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.rangeConcatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.rangeConcatMapArray","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.justFlatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.justFlatMapArray","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.rangeFlatMapJust","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.justFlatMapJust","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.rangeFlatMapRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatMapPerf.rangeFlatMapArray","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.standard1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.shared1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.createNew1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.standard2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.shared2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.createNew2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.standard3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.shared3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArrayPerf.createNew3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRangePerf.standard","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRangePerf.shared","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRangePerf.createNew","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRangePerf.standardSlowpath","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.UnicastProcessorPerf.loadCLQ","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.UnicastProcessorPerf.loadADQ","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.UnicastProcessorPerf.replayCLQ","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.UnicastProcessorPerf.replayADQ","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.UnicastProcessorPerf.passthroughCLQ","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.UnicastProcessorPerf.passthroughADQ","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.HotMapScanPerf.bench","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArray2Perf.rangeConcatRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatArray2Perf.rangeConcatJust","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherObserveOnPerf.range","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherObserveOnPerf.rangeHidden","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherObserveOnPerf.array","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherObserveOnPerf.arrayHidden","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherObserveOnPerf.iterable","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherObserveOnPerf.iterableHidden","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherArrayPerf.standard1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherArrayPerf.shared1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherArrayPerf.createNew1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherArrayPerf.standard2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherArrayPerf.shared2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherArrayPerf.createNew2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRedoPerf.baseline","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRedoPerf.repeatCounted","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRedoPerf.retryCounted","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRedoPerf.repeatWhen","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRedoPerf.retryWhen","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.standard1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.shared1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.createNew1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.standard2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.shared2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.createNew2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.standard3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.shared3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherConcatIterablePerf.createNew3","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherIterablePerf.standard1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherIterablePerf.shared1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherIterablePerf.createNew1","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherIterablePerf.standard2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherIterablePerf.shared2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherIterablePerf.createNew2","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherJustPerf.standard","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherJustPerf.shared","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherJustPerf.createNew","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.atomicDecrementAndGet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.atomicCompareAndSet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.atomicGet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.atomicGetAndSet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.atomicFieldDecrementAndGet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.atomicFieldCompareAndSet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.atomicFieldGet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.atomicFieldGetAndSet","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.request","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.requestField","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.requestMax","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.internal.BackpressureHelperPerf.requestFieldMax","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRetryPerf.standard","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRetryPerf.shared","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherRetryPerf.createNew","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherZipPerf.baselineIterable","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherZipPerf.baselineArray","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherZipPerf.baselineRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherZipPerf.zipIterable","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherZipPerf.zipArray","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherZipPerf.zipRange","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.FlatMapFrontFusionPerf.unbounded","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.FlatMapFrontFusionPerf.bounded","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherAggregatePerf.range","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherAggregatePerf.array","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherAggregatePerf.rangeSlowpath","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherAggregatePerf.arraySlowpath","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.CrossRangeFlatMapObserveOnPerf.bench","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.ReactiveStreamsImpls.range_rsc","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.ReactiveStreamsImpls.rangeFlatMapJust_rsc","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.ReactiveStreamsImpls.rangeFlatMapRange_rsc","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.ReactiveStreamsImpls.rangeAsync_rsc","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.ReactiveStreamsImpls.rangePipeline_rsc","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherReducePerf.aggregateBaseline","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherReducePerf.aggregateFused","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherReducePerf.reduceBaseline","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.PublisherReducePerf.reduceFused","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.XMapAsFilterPerf.justEmptyFlatMap","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.XMapAsFilterPerf.rangeEmptyFlatMap","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.XMapAsFilterPerf.justEmptyConcatMap","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.XMapAsFilterPerf.rangeEmptyConcatMap","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.FlatMapCrossRangePerf.syncSource","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.FlatMapCrossRangePerf.asyncSource","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.FlatMapCrossRangePerf.syncSourceFused","0"
"reactor/reactive-streams-commons","reactivestreams.commons.publisher.FlatMapCrossRangePerf.asyncSourceFused","0"
"reactor/reactive-streams-commons","reactivestreams.commons.util.QueuePerf.rsc","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherReducePerf.aggregateBaseline","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherReducePerf.aggregateFused","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherReducePerf.reduceBaseline","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherReducePerf.reduceFused","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherMapPerf.simple","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherMapPerf.rangeFlatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherMapPerf.rangeConcatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.FlatMapFrontFusionPerf.unbounded","0"
"reactor/reactive-streams-commons","rsc.publisher.FlatMapFrontFusionPerf.bounded","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherAggregatePerf.range","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherAggregatePerf.array","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherAggregatePerf.rangeSlowpath","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherAggregatePerf.arraySlowpath","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlatMapPerf.baseline","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlatMapPerf.justFlatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlatMapPerf.justFlatMapArray","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlatMapPerf.rangeFlatMapJust","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlatMapPerf.justFlatMapJust","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlatMapPerf.rangeFlatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlatMapPerf.rangeFlatMapArray","0"
"reactor/reactive-streams-commons","rsc.publisher.CrossRangeFlatMapObserveOnPerf.bench","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFilterPerf.simple","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFilterPerf.rangeFlatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFilterPerf.rangeConcatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFilterPerf.simpleSlowpath","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFilterPerf.rangeFlatMapRangeSlowpath","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFilterPerf.rangeConcatMapRangeSlowpath","0"
"reactor/reactive-streams-commons","rsc.publisher.RangeFlatMapObserveOnPerf.benchDefault","0"
"reactor/reactive-streams-commons","rsc.publisher.RangeFlatMapObserveOnPerf.benchSpsc","0"
"reactor/reactive-streams-commons","rsc.publisher.ReactiveStreamsImpls.range_rsc","0"
"reactor/reactive-streams-commons","rsc.publisher.ReactiveStreamsImpls.rangeFlatMapJust_rsc","0"
"reactor/reactive-streams-commons","rsc.publisher.ReactiveStreamsImpls.rangeFlatMapRange_rsc","0"
"reactor/reactive-streams-commons","rsc.publisher.ReactiveStreamsImpls.rangeAsync_rsc","0"
"reactor/reactive-streams-commons","rsc.publisher.ReactiveStreamsImpls.rangePipeline_rsc","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.baseline","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.justConcatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.justConcatMapArray","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.rangeConcatMapJust","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.justConcatMapJust","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.rangeConcatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.rangeConcatMapArray","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.justFlatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.justFlatMapArray","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.rangeFlatMapJust","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.justFlatMapJust","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.rangeFlatMapRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapPerf.rangeFlatMapArray","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.standard1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.shared1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.createNew1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.standard2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.shared2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.createNew2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.standard3","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.shared3","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArrayPerf.createNew3","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRangePerf.standard","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRangePerf.shared","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRangePerf.createNew","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRangePerf.standardSlowpath","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapIterablePerf.justPlain","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapIterablePerf.justIterable","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapIterablePerf.rangePlain","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapIterablePerf.rangeIterable","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapIterablePerf.xrangePlain","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapIterablePerf.xrangeIterable","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapIterablePerf.chainPlain","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatMapIterablePerf.chainIterable","0"
"reactor/reactive-streams-commons","rsc.publisher.UnicastProcessorPerf.loadCLQ","0"
"reactor/reactive-streams-commons","rsc.publisher.UnicastProcessorPerf.loadADQ","0"
"reactor/reactive-streams-commons","rsc.publisher.UnicastProcessorPerf.replayCLQ","0"
"reactor/reactive-streams-commons","rsc.publisher.UnicastProcessorPerf.replayADQ","0"
"reactor/reactive-streams-commons","rsc.publisher.UnicastProcessorPerf.passthroughCLQ","0"
"reactor/reactive-streams-commons","rsc.publisher.UnicastProcessorPerf.passthroughADQ","0"
"reactor/reactive-streams-commons","rsc.publisher.HotMapScanPerf.bench","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArray2Perf.rangeConcatRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatArray2Perf.rangeConcatJust","0"
"reactor/reactive-streams-commons","rsc.publisher.XMapAsFilterPerf.justEmptyFlatMap","0"
"reactor/reactive-streams-commons","rsc.publisher.XMapAsFilterPerf.rangeEmptyFlatMap","0"
"reactor/reactive-streams-commons","rsc.publisher.XMapAsFilterPerf.justEmptyConcatMap","0"
"reactor/reactive-streams-commons","rsc.publisher.XMapAsFilterPerf.rangeEmptyConcatMap","0"
"reactor/reactive-streams-commons","rsc.publisher.FlatMapCrossRangePerf.syncSource","0"
"reactor/reactive-streams-commons","rsc.publisher.FlatMapCrossRangePerf.asyncSource","0"
"reactor/reactive-streams-commons","rsc.publisher.FlatMapCrossRangePerf.syncSourceFused","0"
"reactor/reactive-streams-commons","rsc.publisher.FlatMapCrossRangePerf.asyncSourceFused","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherObserveOnPerf.range","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherObserveOnPerf.rangeHidden","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherObserveOnPerf.array","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherObserveOnPerf.arrayHidden","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherObserveOnPerf.iterable","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherObserveOnPerf.iterableHidden","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherArrayPerf.standard1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherArrayPerf.shared1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherArrayPerf.createNew1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherArrayPerf.standard2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherArrayPerf.shared2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherArrayPerf.createNew2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRedoPerf.baseline","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRedoPerf.repeatCounted","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRedoPerf.retryCounted","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRedoPerf.repeatWhen","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRedoPerf.retryWhen","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.standard1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.shared1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.createNew1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.standard2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.shared2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.createNew2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.standard3","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.shared3","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherConcatIterablePerf.createNew3","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherIterablePerf.standard1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherIterablePerf.shared1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherIterablePerf.createNew1","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherIterablePerf.standard2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherIterablePerf.shared2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherIterablePerf.createNew2","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherJustPerf.standard","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherJustPerf.shared","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherJustPerf.createNew","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRetryPerf.standard","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRetryPerf.shared","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherRetryPerf.createNew","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherZipPerf.baselineIterable","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherZipPerf.baselineArray","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherZipPerf.baselineRange","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherZipPerf.zipIterable","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherZipPerf.zipArray","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherZipPerf.zipRange","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.atomicDecrementAndGet","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.atomicCompareAndSet","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.atomicGet","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.atomicGetAndSet","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.atomicFieldDecrementAndGet","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.atomicFieldCompareAndSet","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.atomicFieldGet","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.atomicFieldGetAndSet","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.requestField","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureHelperPerf.requestFieldMax","0"
"reactor/reactive-streams-commons","rsc.util.QueuePerf.rsc","0"
"reactor/reactive-streams-commons","rsc.scheduler.SchedulerPerf.direct_unordered","0"
"reactor/reactive-streams-commons","rsc.scheduler.SchedulerPerf.direct_ordered","0"
"reactor/reactive-streams-commons","rsc.scheduler.SchedulerPerf.worker_ordered","0"
"reactor/reactive-streams-commons","rsc.publisher.ParallelApproachesPerf.groupBy","0"
"reactor/reactive-streams-commons","rsc.publisher.ParallelApproachesPerf.window","0"
"reactor/reactive-streams-commons","rsc.publisher.ParallelApproachesPerf.flatMap","0"
"reactor/reactive-streams-commons","rsc.publisher.ParallelApproachesPerf.flatMapLimit","0"
"reactor/reactive-streams-commons","rsc.parallel.ParallelPerf.parallel","0"
"reactor/reactive-streams-commons","rsc.parallel.ParallelPerf.parallelFj","0"
"reactor/reactive-streams-commons","rsc.parallel.ParallelPerf.parallelExec","0"
"reactor/reactive-streams-commons","rsc.parallel.ParallelPerf.parallelCp","0"
"reactor/reactive-streams-commons","rsc.publisher.ParallelApproachesPerf.stream","0"
"reactor/reactive-streams-commons","rsc.publisher.ParallelApproachesPerf.streamCustom","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureProducedPerf.wipFieldCas","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureProducedPerf.wipFieldDec","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureProducedPerf.wipCas","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureProducedPerf.wipDec","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureProducedPerf.reqFieldCas","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureProducedPerf.reqFieldDec","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureProducedPerf.reqCas","0"
"reactor/reactive-streams-commons","rsc.util.BackpressureProducedPerf.reqDec","0"
"reactor/reactive-streams-commons","rsc.parallel.ParallelForkPerf.sync","0"
"reactor/reactive-streams-commons","rsc.parallel.ParallelForkPerf.async","0"
"reactor/reactive-streams-commons","rsc.parallel.ParallelForkPerf.syncReseq","0"
"reactor/reactive-streams-commons","rsc.parallel.ParallelForkPerf.asyncReseq","0"
"reactor/reactive-streams-commons","rsc.scheduler.SingleSchedulerPerf.pipeline","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlattenIterablePerf.xrangeIterable","0"
"reactor/reactive-streams-commons","rsc.publisher.PublisherFlatMapMonoPerf.complete","0"
"reactor/reactor-core","reactor.CheckpointBenchmark.withFullCheckpoint","3"
"reactor/reactor-core","reactor.CheckpointBenchmark.withLightCheckpoint","3"
"reactor/reactor-core","reactor.core.CompositeDisposableHashcodeBenchmark.setWithNativeHashcode","0"
"reactor/reactor-core","reactor.core.CompositeDisposableHashcodeBenchmark.setWithCachingHashcode","0"
"reactor/reactor-core","reactor.core.CompositeDisposableHashcodeBenchmark.listWithNativeHashcode","0"
"reactor/reactor-core","reactor.core.CompositeDisposableHashcodeBenchmark.listWithCachingHashcode","0"
"reactor/reactor-core","reactor.AssemblyTraceBenchmark.withTracingOnJDK8","0"
"reactor/reactor-core","reactor.AssemblyTraceBenchmark.withTracingOnJDK11","0"
"reactor/reactor-core","reactor.AssemblyTraceBenchmark.withoutTracing","0"
"reactor/reactor-core","reactor.core.scrabble.ShakespearePlaysScrabbleRegular.measureThroughput","0"
"reactor/reactor-core","reactor.core.scrabble.ShakespearePlaysScrabbleParallelOpt.measureThroughput","0"
"reactor/reactor-core","reactor.core.scrabble.ShakespearePlaysScrabbleOpt.measureThroughput","0"
"reactor/reactor-core","reactor.AssemblyTraceBenchmark.withTracing","0"
"reactor/reactor-core","reactor.TailCallBenchmark.without","0"
"reactor/reactor-core","reactor.TailCallBenchmark.with","0"
"reaktivity/nukleus-tcp.java","org.reaktivity.nukleus.tcp.internal.bench.TcpServerBM.writer","0"
"reaktivity/nukleus-tcp.java","org.reaktivity.nukleus.tcp.internal.bench.TcpServerBM.reader","0"
"reaktivity/nukleus.java","org.reaktivity.nukleus.internal.bench.BufferBM.writer","0"
"reaktivity/nukleus.java","org.reaktivity.nukleus.internal.bench.BufferBM.reader","0"
"reaktivity/nukleus.java","org.reaktivity.nukleus.internal.bench.BufferBM.single","0"
"reaktivity/nukleus.java","org.reaktivity.nukleus.internal.bench.BufferBM.batched","0"
"reaktivity/nukleus.java","org.reaktivity.nukleus.internal.bench.TimestampBM.nanos","0"
"reaktivity/nukleus.java","org.reaktivity.nukleus.internal.bench.TimestampBM.millis","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.MatrixBenchmark.testReturnFactorsComputation","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.MatrixBenchmark.testStandardTotalReturnsComputation","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.MatrixBenchmark.testFastTotalReturnsComputation","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.MatrixBenchmark.testQuantilesComputation","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.CombinedStepsMatrixBenchmark.testQuantilesComputationStandard","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.CombinedStepsMatrixBenchmark.testQuantilesComputationFast","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneRingBufferBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneRingBufferBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneRingBufferBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.DisruptorBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.A1BaselineBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ConcurrentLinkedQueueBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ConcurrentLinkedQueueBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ConcurrentLinkedQueueBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.LinkedBlockingQueueBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.LinkedBlockingQueueBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.LinkedBlockingQueueBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToManyConcurrentArrayQueueBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToManyConcurrentArrayQueueBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToManyConcurrentArrayQueueBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneConcurrentLinkedQueueBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneConcurrentLinkedQueueBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneConcurrentLinkedQueueBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneConcurrentArrayQueueBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneConcurrentArrayQueueBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ManyToOneConcurrentArrayQueueBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ArrayBlockingQueueBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ArrayBlockingQueueBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.ArrayBlockingQueueBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.AeronIpcBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.AeronIpcBenchmark.test2Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.AeronIpcBenchmark.test3Producers","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.OneToOneRingBufferBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.AeronExclusiveIpcBenchmark.test1Producer","0"
"real-logic/benchmarks","uk.co.real_logic.benchmarks.latency.A1BaselineBenchmark.baselineTimingOverhead","0"
"real-logic/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark.testEncode","0"
"real-logic/simple-binary-encoding","uk.co.real_logic.protobuf.MarketDataBenchmark.testDecode","0"
"real-logic/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark.testEncode","0"
"real-logic/simple-binary-encoding","uk.co.real_logic.protobuf.CarBenchmark.testDecode","0"
"real-logic/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark.testEncode","0"
"real-logic/simple-binary-encoding","uk.co.real_logic.sbe.MarketDataBenchmark.testDecode","0"
"real-logic/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark.testEncode","0"
"real-logic/simple-binary-encoding","uk.co.real_logic.sbe.CarBenchmark.testDecode","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoStringSame","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoBraidSame","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoBraidSameDirect","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoBraidSameCommon","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoBraidSameCommonTwo","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoBraidSameRememberLastOne","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoBraidSameRememberLastTwo","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoStringRandom","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoBraidRandom","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoStringPermuted","0"
"reific/braid","org.reific.jmh.BraidJmhBenchmarks.pojoBraidPermuted","0"
"relayrides/pushy","com.relayrides.pushy.apns.util.ApnsPayloadBuilderBenchmark.testBuildWithMaximumLength","0"
"relayrides/pushy","com.relayrides.pushy.apns.ApnsClientBenchmark.testSendNotifications","0"
"relayrides/pushy","com.turo.pushy.apns.ApnsClientBenchmark.testSendNotifications","0"
"relayrides/pushy","com.turo.pushy.apns.util.ApnsPayloadBuilderBenchmark.testBuildWithMaximumLength","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0000","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0002","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0004","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0008","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0016","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0032","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0064","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0128","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0256","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0512","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_1024","0"
"ReneNeubert/gradle-java-template","org.softcake.one.SampleConsumeJmh.consume_0001","0"
"renoth/texxxxas","de.texxxxas.Benchmark.standardInvSqrt","0"
"renoth/texxxxas","de.texxxxas.Benchmark.fastInvSqrt","0"
"requery/requery","io.requery.test.BenchmarkTest.queryPerson","0"
"requery/requery","io.requery.test.BenchmarkTest.queryJdbc","0"
"rerorero/oleoleflake","com.github.rerorero.oleoleflake.jmh.Bench.nextId","0"
"resilience4j/resilience4j","javaslang.circuitbreaker.RingBitSetBenachmark.setBits","1"
"resilience4j/resilience4j","javaslang.circuitbreaker.CircuitBreakerBenchmark.invokeSupplier","1"
"resilience4j/resilience4j","javaslang.circuitbreaker.RateLimiterBenchmark.semaphoreBasedPermission","0"
"resilience4j/resilience4j","javaslang.circuitbreaker.RateLimiterBenchmark.timeBasedPermission","0"
"resilience4j/resilience4j","javaslang.circuitbreaker.RateLimiterBenchmark.atomicPermission","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.CircuitBreakerWithSubscriberBenchmark.invokeSupplier","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.CircuitBreakerBenchmark.invokeSupplier","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.RingBitSetBenchmark.concurrentSetBits","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.RingBitSetBenchmark.concurrentCardinality","0"
"resilience4j/resilience4j","io.github.robwin.ratelimiter.RateLimiterBenchmark.semaphoreBasedPermission","0"
"resilience4j/resilience4j","io.github.robwin.ratelimiter.RateLimiterBenchmark.atomicPermission","0"
"resilience4j/resilience4j","io.github.robwin.circularbuffer.CircularBufferBenchmark.circularBufferAddEvent","0"
"resilience4j/resilience4j","io.github.robwin.circularbuffer.CircularBufferBenchmark.circularBufferToList","0"
"resilience4j/resilience4j","io.github.robwin.circularbuffer.CircularBufferBenchmark.circularBufferSize","0"
"resilience4j/resilience4j","io.github.robwin.circularbuffer.CircularBufferBenchmark.circularBufferTakeEvent","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.CircuitBreakerBenchmark.directSupplier","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.CircuitBreakerBenchmark.protectedSupplier","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.CircuitBreakerBenchmark.protectedSupplierWithSubscriber","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.internal.RingBitSetBenchmark.concurrentSetBits","0"
"resilience4j/resilience4j","io.github.robwin.circuitbreaker.internal.RingBitSetBenchmark.concurrentCardinality","0"
"resilience4j/resilience4j","io.github.resilience4j.ratelimiter.RateLimiterBenchmark.semaphoreBasedPermission","0"
"resilience4j/resilience4j","io.github.resilience4j.ratelimiter.RateLimiterBenchmark.atomicPermission","0"
"resilience4j/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark.directSupplier","0"
"resilience4j/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark.protectedSupplier","0"
"resilience4j/resilience4j","io.github.resilience4j.circuitbreaker.CircuitBreakerBenchmark.protectedSupplierWithSubscriber","0"
"resilience4j/resilience4j","io.github.resilience4j.circuitbreaker.internal.RingBitSetBenchmark.concurrentSetBits","0"
"resilience4j/resilience4j","io.github.resilience4j.circuitbreaker.internal.RingBitSetBenchmark.concurrentCardinality","0"
"resilience4j/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark.circularBufferAddEvent","0"
"resilience4j/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark.circularBufferToList","0"
"resilience4j/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark.circularBufferSize","0"
"resilience4j/resilience4j","io.github.resilience4j.circularbuffer.CircularBufferBenchmark.circularBufferTakeEvent","0"
"resilience4j/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark.concurrentEvictingQueueAdd","0"
"resilience4j/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark.concurrentEvictingQueueSize","0"
"resilience4j/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark.concurrentEvictingQueuePoll","0"
"resilience4j/resilience4j","io.github.resilience4j.circularbuffer.ConcurrentEvictingQueueBenchmark.concurrentEvictingQueuePeek","0"
"resilience4j/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark.directSupplier","0"
"resilience4j/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark.protectedSupplier","0"
"resilience4j/resilience4j","io.github.resilience4j.bulkhead.BulkheadBenchmark.protectedSupplierWithSubscriber","0"
"restfb/restfb-benchmark","com.restfb.benchmark.DefaultJsonMapperBenchmark.toJavaObject","0"
"restfb/restfb-benchmark","com.restfb.benchmark.SimpleDateFormatBenchmark.measureSimpleDateFormat","0"
"restfb/restfb-benchmark","com.restfb.benchmark.SimpleDateFormatBenchmark.measurePrivateSimpleDateFormat","0"
"rgorodischer/microbenchmarks","benchmarks.LazyValsBenchmarks.measureJavaLazyCounterPerformance","0"
"rgorodischer/microbenchmarks","benchmarks.LazyValsBenchmarks.measureJavaEagerCounterPerformance","0"
"rgorodischer/microbenchmarks","benchmarks.LazyValsBenchmarks.measureScalaEagerCounterPerformance","0"
"rgorodischer/microbenchmarks","benchmarks.LazyValsBenchmarks.measureScalaLazyCounterPerformance","0"
"rgorodischer/microbenchmarks","benchmarks.TryFinallyBenchmarks.baseline","0"
"rgorodischer/microbenchmarks","benchmarks.TryFinallyBenchmarks.measureTryFinallyOverhead","0"
"rgorodischer/microbenchmarks","benchmarks.LazyValsBenchmarks.baseline","0"
"rgorodischer/microbenchmarks","benchmarks.LazyValsBenchmarks.lazyValCounter","0"
"ricdong/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter.runBenchmark","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLength","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStart","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLength","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartFromEnd","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLengthFromEnd","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkReverse","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLeftTrim","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkRightTrim","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkTrim","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkUpper","0"
"ricdong/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLower","0"
"ricdong/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLike","0"
"ricdong/presto","com.facebook.presto.operator.BenchmarkGroupByHash.groupByHashPreCompute","0"
"ricdong/presto","com.facebook.presto.operator.BenchmarkGroupByHash.addPagePreCompute","0"
"ricdong/presto","com.facebook.presto.operator.BenchmarkGroupByHash.bigintGroupByHash","0"
"ricdong/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baseline","0"
"ricdong/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baselineBigArray","0"
"ricdong/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.handCoded","0"
"ricdong/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.compiled","0"
"ricdong/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.monomorphicInvoke_warmup","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.monomorphicInvoke_measure","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.bimorphicInvoke_warmup","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.bimorphicInvoke_measure","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.megamorphicInvoke_warmup","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.megamorphicInvoke_measure","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.inlinableMonomorphicInvoke_warmup","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.inlinableMonomorphicInvoke_measure","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.inlinableBimorphicInvoke_warmup","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.inlinableBimorphicInvoke_measure","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.inlinableMegamorphicInvoke_warmup","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.PolymorphicBenchmark.inlinableMegamorphicInvoke_measure","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.virtualInvoke","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.finalInvoke","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableVirtualInvoke","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableFinalInvoke","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.parentMethod1","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.parentMethod2","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.parentMethod3","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.parentMethod4","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.parentFinalMethod1","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.parentFinalMethod2","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.parentFinalMethod3","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.parentFinalMethod4","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.alwaysOverriddenMethod","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableParentMethod1","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableParentMethod2","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableParentMethod3","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableParentMethod4","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableParentFinalMethod1","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableParentFinalMethod2","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableParentFinalMethod3","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableParentFinalMethod4","0"
"RichardWarburton/java-final-benchmark","com.insightfullogic.java_final_benchmarks.JavaFinalBenchmark.inlinableAlwaysOverriddenMethod","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren004","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren010","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren004","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010WithBackpressure","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren032","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren032","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren128","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren128","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren004","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren010","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren004","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren010","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren032","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren032","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren128","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren128","0"
"rkraneis/rtree","com.github.davidmoten.rtree.BenchmarksRTree.rStarTreeDeleteOneEveryOccurrenceFromGreekDataChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren004","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren004","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren004","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren010WithBackpressure","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren032","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren032","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren032","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeSearchOfGreekDataPointsMaxChildren128","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeInsertOneEntryIntoGreekDataEntriesMaxChildren128","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOfGreekDataPointsMaxChildren128","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren004","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren004","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren004","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren010","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren032","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren032","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren032","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.defaultRTreeSearchOf1000PointsMaxChildren128","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeInsertOneEntryInto1000EntriesMaxChildren128","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeSearchOf1000PointsMaxChildren128","0"
"rkraneis/rtree","de.rkraneis.rtree.BenchmarksRTree.rStarTreeDeleteOneEveryOccurrenceFromGreekDataChildren010","0"
"rmpestano/cukedoctor","com.github.cukedoctor.CukedoctorBenchmark.convert","0"
"rnc/jmh-benchmarks","org.goots.jmh_benchmarks.hashmapswitch.EnumSwitchBenchmark.testEnum","0"
"rnc/jmh-benchmarks","org.goots.jmh_benchmarks.hashmapswitch.EnumSwitchBenchmark.testSwitch","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.newand.worstcase.RoaringBitmapBenchmark.and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.newand.worstcase.RoaringBitmapBenchmark.inplace_and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.newand.worstcase.RoaringBitmapBenchmark.newand","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.newand.worstcase.RoaringBitmapBenchmark.inplace_newand","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.newand.bestcase.RoaringBitmapBenchmark.and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.newand.bestcase.RoaringBitmapBenchmark.inplace_and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.newand.bestcase.RoaringBitmapBenchmark.newand","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.newand.bestcase.RoaringBitmapBenchmark.inplace_newand","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark.and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark.inplace_and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.worstcase.MutableRoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark.and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark.inplace_and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.identical.MutableRoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark.and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark.inplace_and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.and.bestcase.MutableRoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark.andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark.inplace_andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.worstcase.MutableRoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark.andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark.inplace_andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.identical.MutableRoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark.andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark.inplace_andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.aggregation.andnot.bestcase.MutableRoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark.testDeserialize","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark.testMutableDeserializeMutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark.testSerialize","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.serialization.SerializationBenchmark.testMutableSerialize","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark.onefunction","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.SelectBenchmark.manyfunctions","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark.and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark.inplace_and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.worstcase.RoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark.and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark.inplace_and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.identical.RoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark.and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark.inplace_and","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.and.bestcase.RoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark.andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark.inplace_andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.worstcase.RoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark.andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark.inplace_andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.identical.RoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark.andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark.inplace_andNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.aggregation.andnot.bestcase.RoaringBitmapBenchmark.justclone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testStandard_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testFlyweight_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testStandard_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testFlyweight_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.bigunion_standard","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.bigunion_mutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.bigunion_immutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.toarray_standard","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.toarray_mutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.toarray_immutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.cardinality_standard","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.cardinality_mutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.cardinality_immutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.createBitmapOrdered_standard","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.createBitmapOrdered_mutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.createBitmapUnordered_standard","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.createBitmapUnordered_mutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AndBenchmark.andNotSmallBitmap","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AndBenchmark.andNotBigBitmap","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AndBenchmark.andNotSmallBitmapold","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AndBenchmark.andNotBigBitmapold","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AndNotBenchmark.andNotSmallBitmap","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AndNotBenchmark.andNotBigBitmap","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AndNotBenchmark.andNotSmallBitmapold","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AndNotBenchmark.andNotBigBitmapold","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip.tointUnsignedTime","1"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip.flipTime","1"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip.flipTimeNoCast","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark.orBitmapContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark.orBitmapContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark.part2_orRunContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark.part2_orBitmapContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark.part3_orArrayContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicOrContainerBenchmark.part3_orArrayContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAnd.pairwiseAnd_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAnd.pairwiseAnd_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAnd.pairwiseAnd_MutableRoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAnd.pairwiseAnd_MutableRoaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAnd.pairwiseAnd_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkHorizontal.horizontalOr_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkHorizontal.horizontalOr_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkHorizontal.horizontalOr_MutableRoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkHorizontal.horizontalOr_MutableRoaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkHorizontal.horizontalOr_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark.andBitmapContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark.andBitmapContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark.part2_andRunContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark.part2_andBitmapContainerVSBitmapContainer2","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark.part3_andArrayContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndContainerBenchmark.part3_andArrayContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.andNotBitmapContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.andNotBitmapContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.reverseAndNotBitmapContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.reverseAndNotBitmapContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part2_andNotRunContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part2_andNotBitmapContainerVSBitmapContainer2","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part2_reverseAndNotRunContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part2_reverseAndNotBitmapContainerVSBitmapContainer2","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part3_andNotArrayContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part3_andNotArrayContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part3_reverseAndNotArrayContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part3_reverseAndNotArrayContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark.horizontalOrRunContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark.horizontalOrBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkHorizontal.horizontalOr_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkHorizontal.horizontalOr_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkHorizontal.horizontalOr_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark.iteratorRunContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicIteratorBenchmark.iteratorBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_RoaringWithRun_flyweight","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_Roaring_flyweight","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_MutableRoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_MutableRoaringWithRun_flyweight","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_MutableRoaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_MutableRoaring_flyweight","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.toarray_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.toarray_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.toarray_MutableRoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.toarray_MutableRoaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.toarray_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark.xorBitmapContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark.xorBitmapContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark.part2_xorRunContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark.part2_xorBitmapContainerVSBitmapContainer2","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark.part3_xorArrayContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicXorContainerBenchmark.part3_xorArrayContainerVSBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkXor.pairwiseXor_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkXor.pairwiseXor_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkXor.pairwiseXor_MutableRoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkXor.pairwiseXor_MutableRoaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkXor.pairwiseXor_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkAnd.pairwiseAnd_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkAnd.pairwiseAnd_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkAnd.pairwiseAnd_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_MutableRoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_MutableRoaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAndNot.pairwiseAndNot_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAndNot.pairwiseAndNot_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAndNot.pairwiseAndNot_MutableRoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAndNot.pairwiseAndNot_MutableRoaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAndNot.pairwiseAndNot_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkIterate.iterate_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkIterate.iterate_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkIterate.iterate_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip.tointUnsignedTimeAvg","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip.flipTimeAvg","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip.flipTimeShort","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.bithacking.UnsignedVSFlip.flipTimeShortAvg","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.createSparseBitSetOrdered","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.createSparseBitSetUnordered","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrPQ.Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrPQ.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrPQ.Roaring_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrPQ.RoaringWithRun_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrPQ.Concise_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrPQ.WAH_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrPQ.EWAH_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrPQ.EWAH32_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark.XorRunContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark.XorBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayXorBenchmark.XorConcise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkReverseIterate.reverseIterate_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkReverseIterate.reverseIterate_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkReverseIterate.reverseIterate_Concise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkReverseIterate.reverseIterate_WAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkReverseIterate.reverseIterate_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkReverseIterate.reverseIterate_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkReverseIterate.reverseIterate_RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkReverseIterate.reverseIterate_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkReverseIterate.reverseIterate_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkReverseIterate.reverseIterate_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions.numberOfRunsLowerBound1281","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions.numberOfRunsLowerBound1282","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions.numberOfRunsAdjustment","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions.numberOfRunsLowerBoundThreshold1000","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions.runOptimize","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BitmapToRuncontainerConversions.runOptimize1","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrPQ.Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrPQ.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrPQ.Roaring_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrPQ.RoaringWithRun_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrPQ.Concise_whatever","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrPQ.Concise_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrPQ.EWAH_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrPQ.EWAH32_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAnd.pairwiseAnd_WAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAnd.pairwiseAnd_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAnd.pairwiseAnd_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrNaive.Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrNaive.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrNaive.Concise_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrNaive.WAH_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrNaive.EWAH_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideOrNaive.EWAH32_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideAnd.Roaring_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideAnd.RoaringWithRun_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideAnd.Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideAnd.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideAnd.Concise_whatever","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideAnd.Concise_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideAnd.EWAH_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideAnd.EWAH32_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrNaive.Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrNaive.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrNaive.Concise_whatever","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrNaive.Concise_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrNaive.EWAH_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkWideOrNaive.EWAH32_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark.OrRunContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark.OrBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayOrBenchmark.AndConcise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark.AndRunContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark.AndBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndBenchmark.AndConcise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark.AndNotRunContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark.AndNotBitmapContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunArrayAndNotBenchmark.AndNotConcise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideAnd.Roaring_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideAnd.RoaringWithRun_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideAnd.Roaring_withsort","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideAnd.RoaringWithRun_withsort","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideAnd.Concise_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideAnd.WAH_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideAnd.EWAH_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkWideAnd.EWAH32_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicHorizontalOrBenchmark.horizontalOrRunContainer_withconversion","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_WAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkIterate.iterate_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize.mutable_clone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize.mutable_cloneAndrunOptimize","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize.mutable_serializeToBAOSFromClone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize.mutable_serializeToBAOSNoClone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize.mutable_serializeToBAOSNoClonePreOpti","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkRunOptimize.mutable_runOptimizeAndserializeToBAOSFromClone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize.clone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize.cloneAndrunOptimize","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize.serializeToBAOSFromClone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize.serializeToBAOSNoClone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize.serializeToBAOSFromClonePreOpti","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize.serializeToBAOSNoClonePreOpti","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkRunOptimize.runOptimizeAndserializeToBAOSFromClone","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkXor.pairwiseOr_WAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkXor.pairwiseXor_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkXor.pairwiseXor_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkAnd.pairwiseAnd_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkAnd.pairwiseAnd_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_WAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_RoaringWithRun_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_Roaring_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_Concise_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_WAH_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_EWAH_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkOr.pairwiseOr_EWAH32_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAndNot.pairwiseAndNot_WAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAndNot.pairwiseAndNot_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.RunContainerRealDataBenchmarkAndNot.pairwiseAndNot_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark.OrConcise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark.OrImmutableConcise","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark.OrWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark.horizontalOr_Roaringwithrun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark.horizontalOr_Roaring","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark.horizontalOr_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.AllRunHorizontalOrBenchmark.horizontalOr_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkIterate.iterate_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkIterate.iterate_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_RoaringWithRun_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_Roaring_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_Concise_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_EWAH","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_EWAH32","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_EWAH_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.MappedRunContainerRealDataBenchmarkOr.pairwiseOr_EWAH32_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testStandard_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testFlyweight_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testReverseStandard_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testReverseFlyweight_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testReverseStandard_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testReverseFlyweight_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testReverseStandard_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testReverseFlyweight_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate1.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate1.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.needwork.SlowMappedORaggregate2.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate2.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAndNot.pairwiseAndNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideAndNaive.wideAnd_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrPq.wideOr_pq","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkXor.pairwiseXor","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIterate.iterate","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkWideOrNaive.wideOr_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkContains.contains","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkAnd.pairwiseAnd","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkReverseIterate.reverseIterate","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr.pairwiseOr","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkOr.pairwiseOr_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.needwork.SlowORaggregate3.RoaringWithRun","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkInot.flipLargeRange","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.needwork.RandomAccess.binarySearch","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark.BitSetToRoaringByAddingBitByBit","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BitSetUtilBenchmark.BitSetToRoaringUsingBitSetUtil","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkForEach.forEach","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkWideOrNaive.wideOr_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkAnd.pairwiseAnd","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkOr.pairwiseOr","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.spe150271.runroaring.RealDataBenchmarkOr.pairwiseOr_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkWideOrNaive.wideOr_naive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkAnd.pairwiseAnd","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkOr.pairwiseOr","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.spe150271.roaring.RealDataBenchmarkOr.pairwiseOr_NoCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.UtilBenchmark.galloping","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.UtilBenchmark.local","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.BufferUtilBenchmark.galloping","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.buffer.BufferUtilBenchmark.local","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testBoxed_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testBoxed_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark.testBoxed_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.computeCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.updateCardinality","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.iadd","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.iandNot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.iand","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.ior","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.ixor","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.iremove","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.inot","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.inotFull","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.RangeOperationBenchmark.inotBig","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkIOr.pairwiseIOr","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.map.MapBenchmark.testMap","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.map.MapBenchmark.testMapViaBitset","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark.runVsArrayEquals_FewRuns","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark.runVsArrayEquals_ManyRuns","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataBenchmarkCardinality.iterate","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testBoxed_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testStandard_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testBoxed_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testStandard_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testBoxed_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testStandard_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testReverseStandard_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testReverseStandard_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark64.testReverseStandard_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark.getCardinalityWithCache_Small","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark.getCardinalityWithCache_Big","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark.getCardinalityWithoutCache_Small","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark.getCardinalityWithoutCache_Big","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark.selectLastWithCache_Small","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark.selectLastWithCache_Big","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark.selectLastWithoutCache_Small","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.cardinality64.Cardinality64Benchmark.selectLastWithoutCache_Big","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.writer.WriteSequential.buildRoaringBitmap","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.writer.WriteSequential.incrementalNativeAdd","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.writer.WriteSequential.incrementalUseOrderedWriter","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered.setupCost","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered.bitmapOfUnordered","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered.sortThenBitmapOf","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered.bitmapOf","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.writer.WriteUnordered.partialSortThenBitmapOf","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.BasicAndNotContainerBenchmark.part4_andNotArrayContainerVSRunContainerContainer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.ArrayContainerAndNotRunContainerBenchmark.pairwiseACAndNotRC","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.runcontainer.ArrayContainerAndNotRunContainerBenchmark.immutablePairwiseACAndNotRC","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.createBitmapRange_standard","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.BasicBenchmark.createBitmapRange_mutable","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.parallelOr","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.parallelXor","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.groupByKey","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.fastOr","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.fastXor","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.bufferParallelOr","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.bufferParallelXor","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.bufferGroupByKey","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.bufferFastOr","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.ParallelAggregatorBenchmark.bufferFastXor","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testBoxed_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testStandard_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testFlyweight_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testBoxed_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testStandard_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testFlyweight_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testBoxed_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testStandard_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testFlyweight_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testReverseStandard_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testReverseFlyweight_a","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testReverseStandard_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testReverseFlyweight_b","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testReverseStandard_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.IteratorsBenchmark32.testReverseFlyweight_c","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark.forwards","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark.backwards","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark.forwardsBuffer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BitmapIteratorBenchmark.backwardsBuffer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.arraycontainer.AddBenchmark.add","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.arraycontainer.AddBenchmark.addBuffer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark.iterate","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark.batchIterate","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.range.ContainsRange.contains","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.range.ContainsRange.containsViaRank","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.Concatenation.bitset","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.Concatenation.roaringNaive","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.Concatenation.roaringOffset","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.Concatenation.roaringBatchOrderedWriter","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BitmapNextBenchmark.bitset_count","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BitmapNextBenchmark.roaring_count","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark.arrayVsArrayEquals","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.equals.EqualsBenchmark.equalBitmaps","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.iteration.BatchIteratorBenchmark.batchIterateAsIntIterator","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark.bufferBackedDataInput","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark.streamBackedDataInputWithBuffer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark.streamBackedDataInput","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark.directToBuffer","0"
"RoaringBitmap/RoaringBitmap","org.roaringbitmap.realdata.RealDataSerializationBenchmark.viaImmutable","0"
"robinst/autolink-java","org.nibor.autolink.AutolinkBenchmark.generatedText","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.PatternMatchParensBenchmark.timeLazy","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.PatternMatchParensBenchmark.timeDirect","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.StringFormatOrConcatBenchmark.timeFormat","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.StringFormatOrConcatBenchmark.timeConcat","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.SplitFastPathOrPrecompiledOrSplitter.timeSplitFastPath","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.SplitFastPathOrPrecompiledOrSplitter.timeSplitPrecompiled","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.SplitFastPathOrPrecompiledOrSplitter.timeSplitter","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.StringPlusOrBuilderBenchmark.timePlus","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.StringPlusOrBuilderBenchmark.timeBuilder","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.LambdaOrIntValueForUnboxingBenchmark.lambda","0"
"robinst/microbenchmarks","org.nibor.microbenchmarks.LambdaOrIntValueForUnboxingBenchmark.intValue","0"
"rodolfodpk/myeslib2","org.myeslib.jdbi.function.ApplyEventsMicroBench.multiMethodEngine","0"
"rodolfodpk/myeslib2","org.myeslib.jdbi.function.ApplyEventsMicroBench.eventBusEngine","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.data.SnapshotMicroBench.kryo","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.data.SnapshotMicroBench.gson","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.infra.ApplyEventsMicroBench.multiMethodEngine","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.infra.ApplyEventsMicroBench.eventBusEngine","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.infra.snapshot.SnapshotMicroBench.gson","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.infra.snapshot.SnapshotMicroBench.beanutils","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.infra.snapshot.SnapshotMicroBench.kryo","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.infra.snapshot.SnapshotMicroBench.spring","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.infra.snapshot.SnapshotMicroBench.cloning","0"
"rodolfodpk/myeslib2","org.myeslib.stack1.infra.snapshot.SnapshotMicroBench.core","0"
"RodrigoRubino/DC-UFSCar-ES2-201601-Grupo-Brainstorm","net.sf.jabref.benchmarks.Benchmarks.parse","0"
"RodrigoRubino/DC-UFSCar-ES2-201601-Grupo-Brainstorm","net.sf.jabref.benchmarks.Benchmarks.write","0"
"RodrigoRubino/DC-UFSCar-ES2-201601-Grupo-Brainstorm","net.sf.jabref.benchmarks.Benchmarks.search","0"
"RodrigoRubino/DC-UFSCar-ES2-201601-Grupo-Brainstorm","net.sf.jabref.benchmarks.Benchmarks.inferBibDatabaseMode","0"
"rolve/better-checks","ch.trick17.betterchecks.fluent.ReuseChecksBenchmark.fromThreadLocalMap","0"
"rolve/better-checks","ch.trick17.betterchecks.fluent.ReuseChecksBenchmark.fromThreadLocal","0"
"rolve/better-checks","ch.trick17.betterchecks.fluent.ReuseChecksBenchmark.createNew","0"
"rsby/gunmetal","io.gunmetal.benchmarks.Benchmark.benchmarkSingle","0"
"rsby/gunmetal","io.gunmetal.benchmarks.Benchmark.benchmarkSupplier","0"
"rslemos/cobolg","br.eti.rslemos.cobolg.RecordDescriptionEntryBenchmark.compile","0"
"rslemos/cobolg","br.eti.rslemos.cobolg.DataDescriptionEntryBenchmark.compile","0"
"rslemos/cobolg","br.eti.rslemos.cobolg.StmtIFBenchmark.compile","0"
"rslemos/pet-grammars","br.eti.rslemos.aet.AETBenchmark.compile","1"
"rslemos/pet-grammars","br.eti.rslemos.petgrammars.ExplicitTreeBenchmark.compile","0"
"rsocket/rsocket-java","io.reactivesocket.aeron.MpscSchedulerPerf.observableConsumption","0"
"rsocket/rsocket-java","io.reactivesocket.aeron.MpscSchedulerPerf.observableConsumption2","0"
"rsocket/rsocket-java","io.reactivesocket.ReactiveSocketPerf.requestResponseHello","0"
"rsocket/rsocket-java","io.reactivesocket.ReactiveSocketPerf.requestStreamHello1000","1"
"rsocket/rsocket-java","io.reactivesocket.ReactiveSocketPerf.fireAndForgetHello","1"
"rsocket/rsocket-java","io.reactivesocket.FramePerf.encodeNextCompleteHello","0"
"rsocket/rsocket-java","io.reactivesocket.FramePerf.encodeStaticHelloIntoFrame","0"
"rsocket/rsocket-java","io.reactivesocket.perf.RequestStreamPerf.requestStream","0"
"rsocket/rsocket-java","io.reactivesocket.perf.RequestResponsePerf.requestResponse","0"
"rsocket/rsocket-java","io.reactivesocket.perf.RequestResponseLargePayloadPerf.requestResponseLargePayload","0"
"rsocket/rsocket-java","io.rsocket.FragmentationPerf.smallFragmentationPerf","0"
"rsocket/rsocket-java","io.rsocket.FragmentationPerf.largeFragmentationPerf","0"
"rsocket/rsocket-java","io.rsocket.FragmentationPerf.smallFragmentationFrameReassembler","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.requestResponseHello","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.requestStreamHello1000","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.fireAndForgetHello","0"
"rsocket/rsocket-java","io.rsocket.fragmentation.FragmentationPerformanceTest.largeFragmentation","0"
"rsocket/rsocket-java","io.rsocket.fragmentation.FragmentationPerformanceTest.largeReassembly","0"
"rsocket/rsocket-java","io.rsocket.fragmentation.FragmentationPerformanceTest.smallFragmentation","0"
"rsocket/rsocket-java","io.rsocket.fragmentation.FragmentationPerformanceTest.smallReassembly","0"
"rsocket/rsocket-java","io.rsocket.framing.FrameTypePerf.lookup","0"
"rsocket/rsocket-java","io.rsocket.frame.FrameHeaderFlyweightPerf.encode","0"
"rsocket/rsocket-java","io.rsocket.frame.FrameHeaderFlyweightPerf.decode","0"
"rsocket/rsocket-java","io.rsocket.frame.PayloadFlyweightPerf.encode","0"
"rsocket/rsocket-java","io.rsocket.frame.PayloadFlyweightPerf.decode","0"
"rsocket/rsocket-java","io.rsocket.frame.FrameTypePerf.lookup","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.fireAndForget","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.requestResponse","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.requestStreamWithRequestByOneStrategy","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.requestStreamWithRequestAllStrategy","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.requestChannelWithRequestByOneStrategy","0"
"rsocket/rsocket-java","io.rsocket.RSocketPerf.requestChannelWithRequestAllStrategy","0"
"rsocket/rsocket-java","io.rsocket.metadata.WellKnownMimeTypePerf.fromIdArrayLookup","0"
"rsocket/rsocket-java","io.rsocket.metadata.WellKnownMimeTypePerf.fromIdValuesLoopLookup","0"
"rsocket/rsocket-java","io.rsocket.metadata.WellKnownMimeTypePerf.fromStringMapLookup","0"
"rsocket/rsocket-java","io.rsocket.metadata.WellKnownMimeTypePerf.fromStringValuesLoopLookup","0"
"rsocket/rsocket-java","io.rsocket.StreamIdSupplierPerf.benchmarkStreamId","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndFlatRecordBenchmark.fastGenericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndFlatRecordBenchmark.genericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndFlatRecordBenchmark.fastGenericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndFlatRecordBenchmark.genericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndFlatRecordBenchmark.fastSpecificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndFlatRecordBenchmark.specificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndFlatRecordBenchmark.fastSpecificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndFlatRecordBenchmark.specificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndDeepRecordBenchmark.fastGenericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndDeepRecordBenchmark.genericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndDeepRecordBenchmark.fastGenericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndDeepRecordBenchmark.genericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndDeepRecordBenchmark.fastSpecificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndDeepRecordBenchmark.specificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndDeepRecordBenchmark.fastSpecificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.LargeAndDeepRecordBenchmark.specificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndFlatRecordBenchmark.fastGenericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndFlatRecordBenchmark.genericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndFlatRecordBenchmark.fastGenericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndFlatRecordBenchmark.genericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndFlatRecordBenchmark.fastSpecificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndFlatRecordBenchmark.specificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndFlatRecordBenchmark.fastSpecificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndFlatRecordBenchmark.specificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndDeepRecordBenchmark.fastGenericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndDeepRecordBenchmark.genericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndDeepRecordBenchmark.fastGenericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndDeepRecordBenchmark.genericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndDeepRecordBenchmark.fastSpecificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndDeepRecordBenchmark.specificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndDeepRecordBenchmark.fastSpecificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.SmallAndDeepRecordBenchmark.specificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.UnionSmallAndDeepRecordBenchmark.fastGenericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.UnionSmallAndDeepRecordBenchmark.genericDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.UnionSmallAndDeepRecordBenchmark.fastGenericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.UnionSmallAndDeepRecordBenchmark.genericDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.UnionSmallAndDeepRecordBenchmark.fastSpecificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.UnionSmallAndDeepRecordBenchmark.specificDatumReader","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.UnionSmallAndDeepRecordBenchmark.fastSpecificDatumWriter","0"
"RTBHOUSE/avro-fastserde","com.rtbhouse.utils.avro.benchmark.UnionSmallAndDeepRecordBenchmark.specificDatumWriter","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.nativeDirectReLU","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.nativeHeapReLU","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.pureJavaReLU","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.nativeDirectGemv","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.nativeHeapGemv","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.pureJavaGemv","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.netlibJavaGemv","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.nativeDirectLinearForward","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.nativeHeapLinearForward","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.pureJavaLinearForward","0"
"RTBHOUSE/neural-network-native-ops","com.rtbhouse.model.natives.NNNOBenchmark.nativeDirectLinearBatchForward","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.JmhBenchmarkGuice.measure","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.JmhBenchmarkSalta.measure","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.SaltaThroughput.jit","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.SaltaThroughput.bind","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.SaltaStartup.jit","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.SaltaStartup.bind","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.GuiceThroughput.jit","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.GuiceThroughput.bind","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.GuiceStartup.jit","0"
"ruediste/salta-benchmark","com.github.ruediste.salta.benchmark.GuiceStartup.bind","0"
"runidle/runidle-testing","io.runidle.testing.benchmark.MicroBenchmarkBenchmark.testConcurrentHashMapPut","0"
"runidle/runidle-testing","io.runidle.testing.tests.others.UUIDGeneratorBenchmark.benchmarkJDKUUID1","0"
"runidle/runidle-testing","io.runidle.testing.tests.others.UUIDGeneratorBenchmark.benchmarkJDKUUID2","0"
"runidle/runidle-testing","io.runidle.testing.tests.others.UUIDGeneratorBenchmark.benchmarkRandomUUID1","0"
"runidle/runidle-testing","io.runidle.testing.tests.others.UUIDGeneratorBenchmark.benchmarkRandomUUID2","0"
"runidle/runidle-testing","io.runidle.testing.tests.others.UUIDGeneratorBenchmark.benchmarkEaioUUID1","0"
"runidle/runidle-testing","io.runidle.testing.tests.others.UUIDGeneratorBenchmark.benchmarkEaioUUID2","0"
"runidle/runidle-testing","io.runidle.testing.tests.others.UUIDGeneratorBenchmark.benchmarkEaioUUID3","0"
"runidle/runidle-testing","io.runidle.testing.tests.others.UUIDGeneratorBenchmark.benchmarkFastXMLUUID1","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testTrie_TextOf10Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testTrie_TextOf100Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testTrie_TextOf1000Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testTrie_TextOf10000Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testTrie_TextOf50000Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testBruteForce_TextOf10Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testBruteForce_TextOf100Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testBruteForce_TextOf1000Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testBruteForce_TextOf10000Symbols","0"
"ruslan-sverchkov/aho-corasick","org.rsverchk.ahocorasick.TrieBenchmark.testBruteForce_TextOf50000Symbols","0"
"rxin/jvm-unsafe-utils","com.databricks.jmh.DeadcodeTest.doNothing","0"
"rxin/jvm-unsafe-utils","com.databricks.jmh.DeadcodeTest.increment","0"
"rxin/jvm-unsafe-utils","com.databricks.jmh.DeadcodeTest.incrementAndReturn","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl.baseline","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl.blank","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl.dontinline","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl.inline","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_16_CompilerControl.exclude","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0000","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0001","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0002","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0004","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0008","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0016","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0032","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0064","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0128","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0256","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_0512","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_21_ConsumeCPU.consume_1024","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing.reader","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_22_FalseSharing.writer","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_20_Annotations.measure","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode.baseline","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode.measureWrong","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_08_DeadCode.measureRight","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping.measureWrong_1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping.measureWrong_2","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping.measureRight_1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_34_SafeLooping.measureRight_2","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun.baseline","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun.fork_1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_13_RunToRun.fork_2","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_06_FixtureLevel.measureRight","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_06_FixtureLevel.measureWrong","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_25_API_GA.test","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_24_Inheritance$AbstractBenchmark.bench","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_05_StateFixtures.measureRight","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_05_StateFixtures.measureWrong","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_27_Params.bench","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_31_InfraParams.measureDefault","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_31_InfraParams.measureFollowThreads","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_11_Loops.measureRight","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_11_Loops.measureWrong_1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_11_Loops.measureWrong_10","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_11_Loops.measureWrong_100","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_11_Loops.measureWrong_1000","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_11_Loops.measureWrong_10000","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_11_Loops.measureWrong_100000","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_04_DefaultState.measure","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_03_States.measureUnshared","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_03_States.measureShared","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_30_Interrupts.take","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_30_Interrupts.put","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Maps.test","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Classy.load","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_35_Profilers$Atomic.test","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_01_HelloWorld.wellHelloThere","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_29_StatesDAG.test","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_36_BranchPrediction.sorted","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_36_BranchPrediction.unsorted","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_37_CacheAccess.colFirst","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_37_CacheAccess.rowFirst","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers.baseline","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers.measureWrong","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_28_BlackholeHelpers.measureRight","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold.baseline","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold.measureWrong_1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold.measureWrong_2","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_10_ConstantFold.measureRight","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_15_Asymmetric.inc","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_15_Asymmetric.get","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes.measureThroughput","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes.measureAvgTime","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes.measureSamples","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes.measureSingleShot","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes.measureMultiple","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_02_BenchmarkModes.measureAll","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_07_FixtureLevelInvocation.measureHot","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_07_FixtureLevelInvocation.measureCold","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes.baseline","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes.measureWrong","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes.measureRight_1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_09_Blackholes.measureRight_2","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_33_SecurityManager.testWithSM","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_33_SecurityManager.testWithoutSM","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_12_Forking.measure_1_c1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_12_Forking.measure_2_c2","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_12_Forking.measure_3_c1_again","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_12_Forking.measure_4_forked_c1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_12_Forking.measure_5_forked_c2","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_17_SyncIterations.test","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_23_AuxCounters.splitBranch","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_23_AuxCounters.runSETI","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_18_Control.ping","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_18_Control.pong","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup.measureWrong","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup.measureNeutral","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_38_PerInvokeSetup.measureRight","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_32_BulkWarmup.measure_c1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_32_BulkWarmup.measure_c2","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize.measureWrong_1","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize.measureWrong_5","0"
"rybalkinsd/atom","org.openjdk.jmh.samples.JMHSample_26_BatchSize.measureRight","0"
"rybalkinsd/atom","jmh.MyBenchmark.testMethod","0"
"s4ke/moar","com.github.s4ke.moar.benchmark.HashMapBench.benchArray","0"
"s4ke/moar","com.github.s4ke.moar.benchmark.HashMapBench.benchMap","0"
"s4ke/moar","com.github.s4ke.moar.benchmark.MoaPatternBench.benchMoaPattern","0"
"s4ke/moar","com.github.s4ke.moar.benchmark.MoaPatternBench.benchMoaPatternEasy","0"
"s4ke/moar","com.github.s4ke.moar.benchmark.MoaPatternBench.benchMoaTwoPowerN","0"
"s4ke/moar","com.github.s4ke.moar.benchmark.JavaPatternBench.benchJavaPattern","0"
"s4ke/moar","com.github.s4ke.moar.benchmark.JavaPatternBench.benchJavaPatternEasy","0"
"sajato/logw","eu.sajato.logw.NameDiscovererBenchmark.nOpBenchmark","0"
"sajato/logw","eu.sajato.logw.NameDiscovererBenchmark.stackTraceMethod","0"
"sajato/logw","eu.sajato.logw.NameDiscovererBenchmark.stackTraceMethodWithError","0"
"sajato/logw","eu.sajato.logw.NameDiscovererBenchmark.throwableGetStackTrace","0"
"sajato/logw","eu.sajato.logw.NameDiscovererBenchmark.sleep10msec","0"
"sajato/logw","eu.sajato.logw.LogwBenchmark.nOpBenchmark","0"
"sajato/logw","eu.sajato.logw.LogwBenchmark.logwWithOutput","0"
"sajato/logw","eu.sajato.logw.LogwBenchmark.logwWithoutOutput","0"
"sajato/logw","eu.sajato.logw.LogwBenchmark.slf4jWithOutput","0"
"sajato/logw","eu.sajato.logw.LogwBenchmark.slf4jWithoutOutput","0"
"sajato/logw","eu.sajato.logw.LogwBenchmark.slf4jPlusGuardWithOutput","0"
"sajato/logw","eu.sajato.logw.LogwBenchmark.slf4jPlusGuardWithoutOutput","0"
"sajato/logw","eu.sajato.logw.LogwBenchmark.sleep10msec","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly1kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly10kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly100kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly1000kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly1000kBytesUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly10000kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly10000kBytesUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly1kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly10kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly100kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly1000kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly1000kCharsUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly10000kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly10000kCharsUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnlyCombinedChars200","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnlyCombinedChars500","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnlyCombinedChars5000","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnlyCombinedBytes500","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen1InMem","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen10InMem","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen100InMem","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen1000InMem","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen10000InMem","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen1InFile","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen10InFile","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen100InFile","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen1000InFile","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen10000InFile","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkGenerator.gen100000InFile","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnly1kIM","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnly10kIM","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnly100kIM","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnly1000kIM","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnly10000kIM","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnlyCombinedIM200","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnlyCombinedIM500","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnlyCombinedIM5000","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read1kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read10kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read100kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read1000kBytesUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read1000kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read10000kBytesUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read10000kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read1kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read10kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read100kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read1000kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read1000kCharsUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read10000kChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.read10000kCharsUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.readCombinedChars500","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.readCombinedChars5000","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.readCombinedBytes500","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly50000kBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnly50000kBytesUTF16","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnlyCombinedChars50000","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStructureParser.parseOnlyCombinedIM50000","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.readCombinedChars50000","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.readCombinedBytes5000","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.objectmodelapi.BenchmarkJsonReader.readCombinedBytes50000","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkStreamParser.parseOnlyCombinedBytes500FileInput","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.deserializeSimpleBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.deserializeSimpleChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.deserializeSimpleFile","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.serializeSimpleBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.serializeSimpleChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.deserializeCollectionBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.deserializeCollectionChars","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.deserializeCollectionFile","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.serializeCollectionBytes","0"
"salyh/jsr353-benchmark","de.saly.json.jsr353.benchmark.jmh.streamingapi.BenchmarkSerialize.serializeCollectionChars","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledHeapAllocAndFree","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledDirectAllocAndFree","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledHeapAllocAndFree","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledDirectAllocAndFree","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledHeapAllocAndFree","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledDirectAllocAndFree","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetInt","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetShort","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetLong","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetInt","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetShort","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetLong","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArray","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArrayWrapped","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiString","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringWrapped","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArray","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArrayWrapped","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAscii","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiWrapped","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArray","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArrayWrapped","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8String","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringWrapped","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArray","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArrayWrapped","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8Wrapped","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.http.HttpRequestDecoderBenchmark.testDecodeWholeRequestInMultipleStepsMixedDelimiters","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.concurrent.FastThreadLocalBenchmark.jdkThreadLocalGet","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.concurrent.FastThreadLocalBenchmark.fastThreadLocal","0"
"Sandyarathi/Lab2gRPC","io.netty.microbench.internal.RecyclableArrayListBenchmark.recycleSameThread","0"
"Sandyarathi/Lab2gRPC","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv4","0"
"Sandyarathi/Lab2gRPC","io.netty.microbenchmark.common.NetUtilBenchmark.useGetByNameIpv6","0"
"Sandyarathi/Lab2gRPC","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv6","0"
"Sandyarathi/Lab2gRPC","io.netty.microbenchmark.common.NetUtilBenchmark.useIsValidIpv4","0"
"sangupta/gather","com.sangupta.gather.TestGatherPerformance.testLikePerformance","0"
"sangupta/gather","com.sangupta.gather.TestGatherPerformance.testNumericPerformance","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.CachePerformanceTest.cachePerformanceTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.CachePerformanceTest.arHelperPerformanceTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.BasicReadWriteTest.basicWriteTestAutoCappingEnabled","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.BasicReadWriteTest.basicWriteTestAutoCappingDisabled","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.CachePerformanceInternalsTest.writeVectorTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.CachePerformanceInternalsTest.writeSynchronizedList","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.CachePerformanceInternalsTest.zReadVectorTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.CachePerformanceInternalsTest.zReadSynchronizedListTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.IteratorSpeedTest.defaultIteratorTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.IteratorSpeedTest.prefetchingIteratorTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.IteratorSpeedTest.bufferedIteratorTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.IteratorSpeedTest.oldPrefetchingIteratorTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.DriverPerformanceTest.inMemoryMTTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.DriverPerformanceTest.inMemorySTTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.DriverPerformanceTest.metaMTTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.DriverPerformanceTest.metaySTTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.DriverPerformanceTest.mongodbMTTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.DriverPerformanceTest.mongodbSTTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.DriverPerformanceTest.singleConnectThrMTTest","0"
"sboesebeck/morphium","de.caluga.test.mongo.suite.performance.DriverPerformanceTest.singleConnectThrSTTest","0"
"sbwdlihao/chainj","chainj.protocol.bc.AssetIDTest.measureComputeAssetID","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.RouterBenchmarks.roundRobinRouterAverageTime","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.RouterBenchmarks.roundRobinRouterThroughput","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.HeadAndTailBenchmarks.headAndTailAverageTime","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.HeadAndTailBenchmarks.headAndTailThroughput","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.HeadAndTailBenchmarks.flatMapAverageTime","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.HeadAndTailBenchmarks.flatMapThroughput","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.jmh.RouterBenchmarks.roundRobinRouterAverageTime","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.jmh.RouterBenchmarks.roundRobinRouterThroughput","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.jmh.HeadAndTailBenchmarks.headAndTailAverageTime","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.jmh.HeadAndTailBenchmarks.headAndTailThroughput","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.jmh.HeadAndTailBenchmarks.flatMapAverageTime","0"
"scalecube/scalecube","io.scalecube.services.benchmarks.jmh.HeadAndTailBenchmarks.flatMapThroughput","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkRandomAccess.testArrayList","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkRandomAccess.testVector","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkRandomAccess.testSequence","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkPushBack.testArrayList","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkPushBack.testVector","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkPushBack.testConcurrentLinkedDeque","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkPushBack.testSequence","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkHead.testArrayList","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkHead.testVector","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkHead.testConcurrentLinked","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkHead.testSequence","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkPushFront.testConcurrentLinkedDeque","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkPushFront.testSequence","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkIteration.testArrayList","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkIteration.testVector","0"
"SeanPMiller/containers","com.seanpatrickmiller.BenchmarkIteration.testSequence","0"
"SerCeMan/jmh-spring","ru.serce.benchtest.TestBenchmark.test1","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.insertJDBCOne","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.readJDBC","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.insertJDBCMany","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.insertJUDALMany","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.insertJUDALOneArray","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.insertJUDALOneMap","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.insertJUDALOnePojo","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.readJUDALArray","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.readJUDALMap","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.readJUDALPojo","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.insertHibernateOne","0"
"sergiomt/judal","org.judal.benchmark.java.jdbc.B01_WriteRead.readHibernate","0"
"shalinmangar/solr-jmh-tests","org.apache.solr.JavaBinCodecBenchmark.testDefaultWriteStr","0"
"shalinmangar/solr-jmh-tests","org.apache.solr.JavaBinCodecBenchmark.testDirectBufferWriteStr","0"
"shalinmangar/solr-jmh-tests","org.apache.solr.JavaBinCodecBenchmark.testDirectBufferNoScratchWriteStr","0"
"shalinmangar/solr-jmh-tests","org.apache.solr.JavaBinCodecBenchmark.testDoublePassWriteStr","0"
"shalinmangar/solr-jmh-tests","org.apache.solr.JavaBinCodecBenchmark.testDoublePassWriteWithScratchStr","0"
"shalinmangar/solr-jmh-tests","org.apache.solr.JavaBinCodecBenchmark.testDoublePassCountingOutputStream","0"
"shalinmangar/solr-jmh-tests","org.apache.lucene.GrowableByteArrayDataOutputBenchmark.testWriteStringDefault","0"
"shalinmangar/solr-jmh-tests","org.apache.lucene.GrowableByteArrayDataOutputBenchmark.testWriteString1","0"
"shalinmangar/solr-jmh-tests","org.apache.lucene.GrowableByteArrayDataOutputBenchmark.testWriteString2","0"
"shalinmangar/solr-jmh-tests","org.apache.lucene.GrowableByteArrayDataOutputBenchmark.testWriteString3","0"
"shunfei/indexr","test.StopThread.byVolatile","0"
"shunfei/indexr","test.StopThread.byThread","0"
"shunfei/indexr","test.Cast.cast_obj","0"
"shunfei/indexr","test.Cast.cast_interface","0"
"shunfei/indexr","test.Cast.cast_origin","0"
"shunfei/indexr","test.LoopyBenchmarks.goodOldLoop","0"
"shunfei/indexr","test.LoopyBenchmarks.sweetLoop","0"
"shunfei/indexr","test.LoopyBenchmarks.goodOldLoopReturns","0"
"shunfei/indexr","test.LoopyBenchmarks.sumOldLoop","0"
"shunfei/indexr","test.LoopyBenchmarks.sumSweetLoop","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_malloc_jna","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_malloc_jna2","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_malloc_jna3","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_malloc_java","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_malloc_java2","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_invoke_java","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_malloc_free_unsafe","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_malloc_free_jna","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_get_set_pointer","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_get_set_directbytebuffer","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_double_bytebuffer","0"
"shunfei/indexr","io.indexr.JNABenchmark.memory_double_unsafe","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.test_byte","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.test_byte_np","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.test_short","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.test_int","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.test_long","0"
"shunfei/indexr","io.indexr.segment.pack.BufferSliceBenchmark.array","0"
"shunfei/indexr","io.indexr.segment.pack.BufferSliceBenchmark.slice","0"
"shunfei/indexr","io.indexr.segment.pack.SegmentBenchmark$Insert.insert","0"
"shunfei/indexr","io.indexr.segment.pack.SegmentBenchmark$TravelNotCached.travel_stream_forEach","0"
"shunfei/indexr","io.indexr.segment.pack.SegmentBenchmark$TravelNotCached.travel_stream_forEachOrdered","0"
"shunfei/indexr","io.indexr.segment.pack.SegmentBenchmark$TravelNotCached.travel_iterator","0"
"shunfei/indexr","io.indexr.segment.pack.SegmentBenchmark$TravelNotCached.travel_by_pack","0"
"shunfei/indexr","io.indexr.segment.pack.SegmentBenchmark$TravelOnCached.travel_stream_forEach","0"
"shunfei/indexr","io.indexr.segment.pack.SegmentBenchmark$TravelOnCached.travel_by_pack","0"
"shunfei/indexr","io.indexr.util.WildcardBenchmark.wildcard_String","0"
"shunfei/indexr","io.indexr.util.WildcardBenchmark.wildcard_DirectCharBuffer","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.compressByte","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.decompressByte","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.compressShort","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.decompressShort","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.compressInt","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.decompressInt","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.compressLong","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.decompressLong","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.compressString","0"
"shunfei/indexr","io.indexr.compress.bh.BHCompressBenchmark.decompressString","0"
"shunfei/indexr","test.Memory.heap","0"
"shunfei/indexr","test.Memory.heap2","0"
"shunfei/indexr","test.Memory.offheap0","0"
"shunfei/indexr","test.Memory.offheap0_1","0"
"shunfei/indexr","test.Memory.offheap1","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.lang.NumberValueOfBenchmark.newInstance","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.lang.NumberValueOfBenchmark.newInstanceGaussian","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.lang.NumberValueOfBenchmark.valueOf","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.lang.NumberValueOfBenchmark.valueOfGaussian","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.collection.ForLoopOverListBenchmark.forInLoop","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.collection.ForLoopOverListBenchmark.forIndexLoop","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.collection.ForLoopOverListBenchmark.forIndexLinkedLoop","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.collection.ForLoopOverListBenchmark.forIndexOptimizedLoop","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.core.NewArrayBenchmark.usingNew","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.core.NewArrayBenchmark.reflection","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.core.NewArrayBenchmark.cloneKnownType","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.math.SineBenchmark.math","0"
"simonpatrick/stepbystep-java","com.hedwig.jmh.math.SineBenchmark.lookupTable","0"
"SlimRoms/android_external_okhttp","com.squareup.okio.benchmarks.BufferPerformanceBench.threads1hot","0"
"SlimRoms/android_external_okhttp","com.squareup.okio.benchmarks.BufferPerformanceBench.threads2hot","0"
"SlimRoms/android_external_okhttp","com.squareup.okio.benchmarks.BufferPerformanceBench.threads4hot","0"
"SlimRoms/android_external_okhttp","com.squareup.okio.benchmarks.BufferPerformanceBench.threads8hot","0"
"SlimRoms/android_external_okhttp","com.squareup.okio.benchmarks.BufferPerformanceBench.threads16hot","0"
"SlimRoms/android_external_okhttp","com.squareup.okio.benchmarks.BufferPerformanceBench.threads32hot","0"
"SlimRoms/android_external_okhttp","com.squareup.okio.benchmarks.BufferPerformanceBench.thinkReadHot","0"
"SlimRoms/android_external_okhttp","com.squareup.okio.benchmarks.BufferPerformanceBench.thinkWriteCold","0"
"smarr/GraalCompiler","com.oracle.graal.virtual.bench.PartialEscapeBench.benchPartialEscape","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.normalArraycopy","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.arraysCopyOf","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.cloneObjectArray","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark.nullness","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark.search","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark.nullness","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark.search","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.getNodeClass","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.inputs","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.usages","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.nonNullInputs","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueEquals_STRING_EQUALS","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueEquals_HASHMAP_COMPUTE_IF_ABSENT","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueNumberLeaf_HASHMAP_COMPUTE_IF_ABSENT","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueNumberLeaf_STRING_EQUALS","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.stringEquals","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_LATEST_OPTIMAL","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_LATEST_OUT_OF_LOOPS_OPTIMAL","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_EARLIEST_OPTIMAL","0"
"smarr/GraalCompiler","com.oracle.graal.microbenchmarks.graal.FrameStateAssigmentPhaseBenchmark.nextToken","0"
"smoketurner/graphiak","com.smoketurner.graphiak.benchmarks.GraphiteMetricDecoderBenchmark.testDecode","0"
"smoketurner/notification","com.smoketurner.notification.application.benchmarks.NotificationStoreBenchmark.tryFind","0"
"smoketurner/notification","com.smoketurner.notification.application.benchmarks.NotificationStoreBenchmark.indexOf","0"
"smoketurner/notification","com.smoketurner.notification.application.benchmarks.RollupBenchmark.rollupNoRules","0"
"smoketurner/notification","com.smoketurner.notification.application.benchmarks.RollupBenchmark.rollupNoMatches","0"
"smoketurner/notification","com.smoketurner.notification.application.benchmarks.RollupBenchmark.rollupEveryMatch","0"
"smoketurner/notification","com.smoketurner.notification.application.benchmarks.NotificationStoreBenchmark.setUnseenState","0"
"smoketurner/uploader","com.smoketurner.uploader.application.benchmarks.UploaderBenchmark.generateKey","0"
"smoketurner/uploader","com.smoketurner.uploader.benchmarks.UploaderBenchmark.generateKey","0"
"smoketurner/uploader","com.smoketurner.uploader.benchmarks.BatchBenchmark.getKey","0"
"snazy/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark.getNonExisting","0"
"snazy/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark.containsNonExisting","0"
"snazy/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark.putSingleThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark.putMultiThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark.getSingleThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.ProtoBenchmark.getMultiThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.OHCBenchmark.getNonExisting","0"
"snazy/ohc","org.caffinitas.ohc.jmh.OHCBenchmark.containsNonExisting","0"
"snazy/ohc","org.caffinitas.ohc.jmh.OHCBenchmark.putSingleThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.OHCBenchmark.putMultiThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.OHCBenchmark.getSingleThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.OHCBenchmark.getMultiThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.AllocatorBenchmark.allocateSingleThreaded","0"
"snazy/ohc","org.caffinitas.ohc.jmh.AllocatorBenchmark.allocateMultiThreaded","0"
"snikiforov4/try-geolocation","ua.nykyforov.geoip.GeoBenchmark.maxMind","0"
"snikiforov4/try-geolocation","ua.nykyforov.geoip.GeoBenchmark.dbIp","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.anonymous_class","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.lambda","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.method_reference","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.stream_anonymous_class","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.stream_lambda","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.stream_method_ref","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.parallel_anonymous_class","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.parallel_lambda","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.parallel_method_reference","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.parallel_stream_anonymous_class","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.parallel_stream_lambda","0"
"SoatGroup/benchamrk-lambda","fr.soat.LambdaVsAnonymousBenchmark.parallel_stream_method_ref","0"
"SoatGroup/benchamrk-lambda","fr.soat.ArrayCopyBenchmark.copy_array","0"
"SoatGroup/benchamrk-lambda","fr.soat.AnonymousBaselineBenchmark.anonymous_class","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.HashBenchmark.commonsCodecMd5","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.HashBenchmark.commonsCodecSha1","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.HashBenchmark.xxhash32","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.HashBenchmark.xxhash32Jni","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.HashBenchmark.xxhash32Unsafe","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.HashBenchmark.xxhash64","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.HashBenchmark.xxhash64Jni","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.HashBenchmark.xxhash64Unsafe","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark.container","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark.delimiters","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark.codedstream_container","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark.codedstream_container_known_size","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.FileSourceDbBenchmark.codedstream_delimiters","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.SerializationBenchmark.write_gson","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.SerializationBenchmark.write_protobuf","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.SerializationBenchmark.write_serializable","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.SerializationBenchmark.write_externalizable","0"
"SonarSource/sonarqube","org.sonar.microbenchmark.SerializationBenchmark.write_kryo","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.AppendableBenchmark.plain","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.AppendableBenchmark.prevayler","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.AppendableBenchmark.proxy","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.AppendableBenchmark.stashQuick","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.AppendableBenchmark.stashQuick2","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.AppendableBenchmark.stashVerify","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankylerBenchmark.mixed_10","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankylerBenchmark.mixed_20","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankylerBenchmark.mixed_50","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankylerBenchmark.readonly","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankylerBenchmark.transfer","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankBenchmark.mixed_10","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankBenchmark.mixed_20","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankBenchmark.mixed_50","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankBenchmark.readonly","0"
"sormuras/treasure","com.github.sormuras.stash.benchmark.BankBenchmark.transfer","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CastBench.intFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CastBench.longFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CastBench.longDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ExceptionBench.exceptionThrow","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchMulti.arrayInt","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchMulti.arrayLong","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchMulti.arrayFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchMulti.arrayObject","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectBase","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectSimple","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectSimpleConstructor","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectSimple1Field","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectSimple2Field","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectSimple4Field","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectSimple4fField","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectSimple4LField","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectSublclass","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectComplex","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CreateBenchSingle.objectComplexConstructor","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.addInt","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.addLong","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.addFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.addDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.multiplyInt","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.multiplyLong","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.multiplyFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.multiplyDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.divideInt","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.divideLong","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.divideFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ArithBench.divideDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.sameScalarLocal","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.sameScalarInstance","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.sameScalarClass","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.sameArrayLocal","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.sameArrayInstance","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.sameArrayClass","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.otherScalarInstance","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.otherScalarClass","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.otherArrayInstance","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.AssignBench.otherArrayClass","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section2.CryptBench.idea","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.CastBench.intDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.SerialBenchArrayRead.readingArray","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.SerialBenchLinkListRead.readingLinklist","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.SerialBenchVectorRead.readingVector","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.absInt","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.absLong","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.absFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.absDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.maxInt","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.maxLong","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.maxFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.maxDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.minInt","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.minLong","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.minFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.minDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.sinDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.cosDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.tanDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.asinDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.acosDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.atanDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.atan2Double","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.floorDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.ceilDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.sqrtDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.expDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.logDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.powDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.rintDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.random","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.roundFloat","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.roundDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MathBench.ieeeRemainderDouble","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ExceptionBench.exceptionNew","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.ExceptionBench.exceptionMethod","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.SerialBenchLinkListWrite.writingLinklist","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.SerialBenchBinaryTreeRead.readingBinaryTree","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.SerialBenchArrayWrite.writingArray","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.SerialBenchBinaryTreeWrite.writingBinaryTree","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.SerialBenchVectorWrite.writingVector","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.LoopBench.forLoop","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.LoopBench.reverseForLoop","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.LoopBench.whileLoop","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MethodBench.sameInstance","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MethodBench.sameSynchronizedInstance","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MethodBench.sameFinalInstance","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MethodBench.sameClass","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MethodBench.sameSynchronizedClass","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MethodBench.otherInstance","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MethodBench.otherInstanceOfAbstract","0"
"sparkoo/Java-Grande-JMH","cz.sparko.javagrandejmh.v2.section1.MethodBench.otherClass","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise39$AtomicIntegerArray.calc","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise39$SimpleIntegerArrayWithGlobalLock.calc","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise39$SimpleIntegerArrayWithElementLevelLocks.calc","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise39$SimpleIntegerArrayWithGeneLevelLocks.calc","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise40$ReaderWriterLockedHashMapBenchmark.read","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise40$ReaderWriterLockedHashMapBenchmark.write","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise40$ReaderWriterSynchronizedHashMapBenchmark.read","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise40$ReaderWriterSynchronizedHashMapBenchmark.write","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise40$ReaderWriterConcurrentHashMapBenchmark.read","0"
"spiffykahuna/TIJ4-code_idea","org.sample.Exercise40$ReaderWriterConcurrentHashMapBenchmark.write","0"
"spiffykahuna/TIJ4-code_idea","org.sample.MyBenchmark.testMethod","0"
"spiffykahuna/TIJ4-code_idea","concurrency.exercises.Exercise39.inc","0"
"spiffykahuna/TIJ4-code_idea","concurrency.exercises.Exercise39.get","0"
"spotify/apollo","com.spotify.apollo.meta.model.benchmark.GathererBenchmark.doRequest","0"
"spotify/completable-futures","com.spotify.futures.jmh.AllAsListBenchmark.actual","0"
"spotify/completable-futures","com.spotify.futures.jmh.AllAsListBenchmark.stream","0"
"spotify/completable-futures","com.spotify.futures.jmh.AllAsListBenchmark.instantiateAndFor","0"
"spotify/completable-futures","com.spotify.futures.jmh.AllAsListBenchmark.instantiateAndForeach","0"
"spotify/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark.originalMethod","0"
"spotify/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark.fromHashMap","0"
"spotify/missinglink","com.spotify.missinglink.benchmarks.PrimitiveTypeDescriptorBenchmark.dumbIteration","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.parsingToMessageV1","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.parsingToMessageV2","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.discardingV1","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.discardingV2","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.encodingV1","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.encodingV2","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.parsingToMessageZMTP10","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.parsingToMessageZMTP20","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.discardingZMTP10","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.discardingZMTP20","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.encodingZMTP10","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.benchmarks.CodecBenchmark.encodingZMTP20","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark.parsingToMessageZMTP10","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark.parsingToMessageZMTP20","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark.discardingZMTP10","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark.discardingZMTP20","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark.encodingZMTP10","0"
"spotify/netty-zmtp","com.spotify.netty4.handler.codec.zmtp.CodecBenchmark.encodingZMTP20","0"
"spotify/sparkey-java","com.spotify.sparkey.system.AppendBenchmark.testSmall","0"
"spotify/sparkey-java","com.spotify.sparkey.system.AppendBenchmark.testMedium","0"
"spotify/sparkey-java","com.spotify.sparkey.system.FsyncBenchmark.testFsync","0"
"spotify/sparkey-java","com.spotify.sparkey.system.WriteHashBenchmark.test","0"
"spotify/sparkey-java","com.spotify.sparkey.system.LookupBenchmark.test","0"
"spotify/sparkey-java","com.spotify.sparkey.SortHelperBenchmark.measureRealE1_E1","0"
"spotify/sparkey-java","com.spotify.sparkey.SortHelperBenchmark.measureRealE1_E2","0"
"spotify/sparkey-java","com.spotify.sparkey.SortHelperBenchmark.measureRealE2_E1","0"
"spotify/sparkey-java","com.spotify.sparkey.SortHelperBenchmark.measureRealE1_E3","0"
"spotify/sparkey-java","com.spotify.sparkey.SortHelperBenchmark.measureRealE1_E4","0"
"spriet2000/handlers","com.github.spriet2000.handlers.tests.BenchMark1.reportHandlers","0"
"spriet2000/handlers","com.github.spriet2000.handlers.tests.BenchMark1.reportBiHandlers","0"
"spriet2000/handlers","com.github.spriet2000.railways.tests.BenchMarks.report","0"
"spriet2000/vertx-http-router","com.github.spriet2000.vertx.httprouter.BenchmarkCompare.reportTree","0"
"spriet2000/vertx-http-router","com.github.spriet2000.vertx.httprouter.BenchmarkCompare.reportRegex","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.AsyncBenchmarks.asyncMethodWithoutSleuth","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.AsyncBenchmarks.asyncMethodWithSleuth","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.RestTemplateBenchmark.syncEndpointWithoutSleuth","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.RestTemplateBenchmark.syncEndpointWithSleuth","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.HttpFilterBenchmarks.filterWithoutSleuth","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.HttpFilterBenchmarks.filterWithSleuth","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.HttpFilterBenchmarks.asyncWithoutSleuth","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.HttpFilterBenchmarks.asyncWithSleuth","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.AnnotationBenchmarks.manuallyCreatedSpans","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.AnnotationBenchmarks.spanCreatedWithAnnotations","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.StartupBenchmark.withAnnotations","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.StartupBenchmark.withoutAnnotations","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.StartupBenchmark.withoutAsync","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.StartupBenchmark.withoutScheduled","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.StartupBenchmark.withoutWeb","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.SpringWebFluxBenchmarks.client_get","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.SpringWebFluxBenchmarks.unsampledClient_get","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.SpringWebFluxBenchmarks.tracedClient_get","0"
"spring-cloud/spring-cloud-sleuth","org.springframework.cloud.sleuth.benchmarks.jmh.benchmarks.SpringWebFluxBenchmarks.tracedClient_get_resumeTrace","0"
"springside/springside4","org.springside.jmh.EnumMapTest.hashMapWithStringKey","0"
"springside/springside4","org.springside.jmh.EnumMapTest.hashMapWithEnumKey","0"
"springside/springside4","org.springside.jmh.EnumMapTest.enumMap","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBench.threads1hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBench.threads2hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBench.threads4hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBench.threads8hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBench.threads16hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBench.threads32hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBench.thinkReadHot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBench.thinkWriteCold","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads1hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads2hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads4hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads8hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads16hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads32hot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.thinkReadHot","0"
"square/okio","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.thinkWriteCold","0"
"square/okio","com.squareup.okio.benchmarks.IndexOfElementBenchmark.indexOfByte","0"
"square/okio","com.squareup.okio.benchmarks.IndexOfElementBenchmark.indexOfByteString","0"
"square/okio","com.squareup.okio.benchmarks.IndexOfElementBenchmark.indexOfElement","0"
"square/okio","com.squareup.okio.benchmarks.BufferCursorSeekBenchmark.seekBeginning","0"
"square/okio","com.squareup.okio.benchmarks.BufferCursorSeekBenchmark.seekEnd","0"
"square/okio","com.squareup.okio.benchmarks.BufferCursorSeekBenchmark.seekForward","0"
"square/okio","com.squareup.okio.benchmarks.BufferCursorSeekBenchmark.seekBackward","0"
"square/okio","com.squareup.okio.benchmarks.GetByteBenchmark.getByteBeginning","0"
"square/okio","com.squareup.okio.benchmarks.GetByteBenchmark.getByteEnd","0"
"square/okio","com.squareup.okio.benchmarks.GetByteBenchmark.getByteMiddle","0"
"square/okio","com.squareup.okio.benchmarks.SelectBenchmark.select","0"
"square/okio","com.squareup.okio.benchmarks.BufferUtf8Benchmark.writeUtf8","0"
"square/okio","com.squareup.okio.benchmarks.BufferUtf8Benchmark.readUtf8","0"
"square/okio","com.squareup.okio.benchmarks.Utf8Benchmark.stringToBytesOkio","0"
"square/okio","com.squareup.okio.benchmarks.Utf8Benchmark.stringToBytesJava","0"
"square/okio","com.squareup.okio.benchmarks.Utf8Benchmark.bytesToStringOkio","0"
"square/okio","com.squareup.okio.benchmarks.Utf8Benchmark.bytesToStringJava","0"
"square/okio","com.squareup.okio.benchmarks.SegmentedByteStringBenchmark.substring","0"
"square/okio","com.squareup.okio.benchmarks.SegmentedByteStringBenchmark.md5","0"
"square/okio","com.squareup.okio.benchmarks.SegmentedByteStringBenchmark.indexOfUnknown","0"
"square/okio","com.squareup.okio.benchmarks.SegmentedByteStringBenchmark.lastIndexOfUnknown","0"
"square/okio","com.squareup.okio.benchmarks.SegmentedByteStringBenchmark.indexOfEarly","0"
"square/okio","com.squareup.okio.benchmarks.SegmentedByteStringBenchmark.lastIndexOfEarly","0"
"square/okio","com.squareup.okio.benchmarks.WriteHexadecimalBenchmark.writeHex","0"
"Squarespace/less-compiler","com.squarespace.less.RecognizerBenchmark.regexLiteralOk","0"
"Squarespace/less-compiler","com.squarespace.less.RecognizerBenchmark.recognizerLiteralOk","0"
"Squarespace/less-compiler","com.squarespace.less.RecognizerBenchmark.regexLiteralFail","0"
"Squarespace/less-compiler","com.squarespace.less.RecognizerBenchmark.recognizerLiteralFail","0"
"Squarespace/less-compiler","com.squarespace.less.RecognizerBenchmark.regexPercentOk","0"
"Squarespace/less-compiler","com.squarespace.less.RecognizerBenchmark.recognizerPercentOk","0"
"Squarespace/less-compiler","com.squarespace.less.RecognizerBenchmark.regexPercentFail","0"
"Squarespace/less-compiler","com.squarespace.less.RecognizerBenchmark.recognizerPercentFail","0"
"Squarespace/less-compiler","com.squarespace.less.ParserBenchmark.parseSelector","0"
"Squarespace/template-compiler","com.squarespace.template.FormatterBenchmark.embeddedTemplate","0"
"Squarespace/template-compiler","com.squarespace.template.FormatterBenchmark.nativeFormatter","0"
"Squarespace/template-compiler","com.squarespace.template.ExecutorBenchmark.variableInst","0"
"Squarespace/template-compiler","com.squarespace.template.ExecutorBenchmark.dotVariableInst","0"
"Squarespace/template-compiler","com.squarespace.template.ExecutorBenchmark.bracketVariableInst","0"
"Squarespace/template-compiler","com.squarespace.template.ExecutorBenchmark.formatterInst","0"
"Squarespace/template-compiler","com.squarespace.template.ExecutorBenchmark.sectionInst","0"
"Squarespace/template-compiler","com.squarespace.template.ExecutorBenchmark.repeatedSectionInst","0"
"Squarespace/template-compiler","com.squarespace.template.ExecutorBenchmark.ifInst","0"
"Squarespace/template-compiler","com.squarespace.template.ExecutorBenchmark.simpleTemplate","0"
"Squarespace/template-compiler","com.squarespace.template.WrightBenchmark.compile","0"
"Squarespace/template-compiler","com.squarespace.template.WrightBenchmark.execute","0"
"Squarespace/template-compiler","com.squarespace.template.CompilerBenchmark.variableInst","0"
"Squarespace/template-compiler","com.squarespace.template.CompilerBenchmark.dotVariableInst","0"
"Squarespace/template-compiler","com.squarespace.template.CompilerBenchmark.bracketVariableInst","0"
"Squarespace/template-compiler","com.squarespace.template.CompilerBenchmark.formatterInst","0"
"Squarespace/template-compiler","com.squarespace.template.CompilerBenchmark.sectionInst","0"
"Squarespace/template-compiler","com.squarespace.template.CompilerBenchmark.repeatedSectionInst","0"
"Squarespace/template-compiler","com.squarespace.template.CompilerBenchmark.ifInst","0"
"Squarespace/template-compiler","com.squarespace.template.CompilerBenchmark.simpleTemplate","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.DateBenchmark.genericDate","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.DateBenchmark.internationalDateFull","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.FormatBenchmark.format","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.FormatBenchmark.plural","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark.format","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark.formatCompactLength","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark.formatSequenceLength1","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark.formatSequenceLength2","0"
"Squarespace/template-compiler","com.squarespace.template.plugins.platform.i18n.UnitBenchmark.formatSequenceLength3","0"
"SquidPony/SquidLib","squidpony.performance.FOVCacheBenchmark.measureCachedFOV","0"
"SquidPony/SquidLib","squidpony.performance.FOVCacheBenchmark.measureFOV","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureScan","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePath","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.measurePath","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLight","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLightInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLightR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLightIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureRandom","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureRandomInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measurePermuted","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measurePermutedInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measurePermutedR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measurePermutedIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureXor","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureXorInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureXorR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureXorIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureMT","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureMTInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureMTR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureMTIntR","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measurePack","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureUnion","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureIntersect","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureFringe","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureExpand","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureSurface","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureRetract","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.measurePath2","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.measurePath3","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.measureWaypoint","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.measureWaypoint2","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.measureWaypoint3","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.countWaypoint","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.countWaypoint2","0"
"SquidPony/SquidLib","squidpony.performance.WaypointBenchmark.countWaypoint3","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThreadLocalRandom","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThreadLocalRandomInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureChaosR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureChaosRInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureXoRo","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureXoRoInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureXoRoR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureXoRoIntR","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathAStar","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathPlannedAStar","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureScanDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureScanBoxedDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathBoxedDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measurePackG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureUnionG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureIntersectG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureFringeG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureExpandG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureSurfaceG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureRetractG","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLightBetweenR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLightBetweenHastyR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureGDX","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureGDXInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureIsaac","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureIsaacInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureIsaacR","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureFlood","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureFloodG","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureFNV","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureFNVInt","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureSip","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureSipInt","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureLightning","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureLightningInt","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureJVMInt","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureStorm","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureStormInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThunder","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThunderInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThunderR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThunderIntR","0"
"SquidPony/SquidLib","squidpony.performance.LOSBenchmark.measureBresenham","1"
"SquidPony/SquidLib","squidpony.performance.LOSBenchmark.measureDDA","1"
"SquidPony/SquidLib","squidpony.performance.LOSBenchmark.measureRay","1"
"SquidPony/SquidLib","squidpony.performance.LOSBenchmark.measureOrtho","1"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureFalcon","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureFalconInt","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureControl","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathGDXAStar","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureWisp","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureWispInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.a_measurePint","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.a_measurePintInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.a_measurePintR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.a_measurePintIntR","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureTinyPathDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathCustomDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureTinyPathCustomDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathAStar2","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureTinyPathAStar2","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureTinyPathGDXAStar","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureChariotInt","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measurePerlin2D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measurePerlin3D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureMerlin2D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureMerlin3D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirling2D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirling3D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirlingAlt2D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirlingAlt3D","1"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measurePint","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measurePintInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measurePintR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measurePintIntR","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureScanCustomDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureScanOptDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathOptDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureTinyPathOptDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLFSR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLFSRInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLFSRR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLFSRIntR","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureScanOldCustomDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureScanOldDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathOldCustomDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measurePathOldDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureTinyPathOldDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.measureTinyPathOldCustomDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureWispDouble32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureWispDouble32Alt","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureWispDouble64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureWispDouble64Alt","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureControlDouble","0"
"SquidPony/SquidLib","squidpony.performance.ConvertBenchmark.measureControl","0"
"SquidPony/SquidLib","squidpony.performance.ConvertBenchmark.measureJDK","0"
"SquidPony/SquidLib","squidpony.performance.ConvertBenchmark.measureCustom","0"
"SquidPony/SquidLib","squidpony.performance.ConvertBenchmark.measureCustomAlt","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measurePerlin4D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirling4D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSeeded2D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSeeded3D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSeeded4D","1"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSeeded6D","1"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureMist","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureMistInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureFlap","1"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureFlapInt","1"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureFlapR","1"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureFlapIntR","1"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureSketch","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.measureSketchInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.a__measureThrust","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.a__measureThrustInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.a__measureThrustR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.a__measureThrustIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureMathUtils","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureMathUtilsInt","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doScanDijkstra","1"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doScanCustomDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doPathDijkstra","1"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doTinyPathDijkstra","1"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doPathCustomDijkstra","1"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doTinyPathCustomDijkstra","1"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doPathGDXAStar","1"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doTinyPathGDXAStar","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertLinkedHashMap","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertSquidOM","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertSquidOM2","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertSquidOM3","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertGdxOM","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertGdxOM2","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertGdxOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertLinkedHashSet","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertSquidOS","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertSquidOS2","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertSquidOS3","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertGdxOS","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertGdxOS2","1"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertGdxOS3","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayRandomizedDouble","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayRandomizedFloat","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayDouble","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayFloat","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayBitDouble","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayBitFloat","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayDoubleTight","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayFloatTight","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayBitDoubleTight","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureSwayBitFloatTight","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureZigzagDouble","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureZigzagFloat","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureZigzagBitDouble","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureZigzagBitFloat","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureFastNoise2D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureFastNoise3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureFastNoise4D","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureBaseline","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureMathCos","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureMathSin","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureMathASin","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureASinApprox","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureCosApproxOld","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureSinApproxOld","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureCosApproxFloat","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureSinApproxFloat","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureSinApprox","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureCosApprox","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureSinApproxNickBit","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureCosApproxNickBit","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureSinApproxNickBitF","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureCosApproxNickBitF","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureSinGdx","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureCosGdx","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureMathCosDeg","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureMathSinDeg","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureCosApproxDeg","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureSinApproxDeg","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureSinGdxDeg","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureCosGdxDeg","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertLinkedHashMap2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertLinkedHashSet2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilOS3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilFairOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilFairOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilFairOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilFairOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilFairOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertFastUtilFairOS3","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureMathAtan2","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureApproxAtan2","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureApproxAtan2Float","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureGdxAtan2","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLongPeriod","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLongPeriodInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLongPeriodR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLongPeriodIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLap","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLapInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLapR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLapIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrust","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustAlt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustAltInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustAltR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustAltIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureVortex","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureVortexInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureVortexR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureVortexIntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustAlt32","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustAlt32Int","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustAlt32R","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThrustAlt32IntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLight32","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLight32Int","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLight32R","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLight32IntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureZag32","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureZag32Int","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureZag32R","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureZag32IntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureOriole32","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureOriole32Int","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureOriole32R","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureOriole32IntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLathe32","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLathe32Int","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLathe32R","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureLathe32IntR","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureGWTRNG","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureGWTRNGInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureJDK","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureJDKInt","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThreadLocal","0"
"SquidPony/SquidLib","squidpony.performance.RNGBenchmark.measureThreadLocalInt","0"
"SquidPony/SquidLib","squidpony.performance.LOSBenchmark.measureElias","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureApproxAtan2Alt","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureApproxAtan2AltFloat","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doWisp64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doWisp32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLightning64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLightning32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doFalcon64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doFalcon32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doMist64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doMist32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doJDK32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doJDK32Mixed","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharWisp64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharWisp32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharLightning64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharLightning32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharFalcon64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharFalcon32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharMist64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharMist32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharJDK32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharJDK32Mixed","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doJolt64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doJolt32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doHive64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doHive32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharJolt64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharJolt32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharHive64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharHive32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongWisp64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongWisp32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongLightning64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongLightning32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongFalcon64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongFalcon32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongMist64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongMist32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongJDK32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongJDK32Mixed","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongJolt64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongJolt32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongHive64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongHive32","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doScanOtherDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doPathOtherDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.DijkstraBenchmark.doTinyPathOtherDijkstra","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureAtan2Baseline","0"
"SquidPony/SquidLib","squidpony.performance.MathBenchmark.measureAtan2BaselineFloat","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doPack","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doUnion","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doIntersect","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doFringe","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doExpand","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doSurface","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doRetract","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doFlood","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doRandom","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doPackG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doUnionG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doIntersectG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doFringeG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doExpandG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doSurfaceG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doRetractG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doFloodG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doRandomG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureMixedSeparatedG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureMixedSeparatedAltG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureMixedRegionG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureZCurveRegionG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.measureQuasiRegionG","0"
"SquidPony/SquidLib","squidpony.performance.CoordPackerBenchmark.doRandomA","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark$BenchmarkState.measurePointHash2D","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark$BenchmarkState.measurePointHash3D","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark$BenchmarkState.measurePointHash4D","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark$BenchmarkState.measurePointHash6D","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark$BenchmarkState.measureHastyPointHash2D","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark$BenchmarkState.measureHastyPointHash3D","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark$BenchmarkState.measureHastyPointHash4D","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark$BenchmarkState.measureHastyPointHash6D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureClassicNoise2D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureClassicNoise3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureClassicNoise4D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureJitterNoise2D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureJitterNoise3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureJitterNoise4D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureFast3Octave3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureFast5Octave3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureFast3Octave4D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureFast5Octave4D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirling3Octave3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirling5Octave3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirling3Octave4D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureWhirling5Octave4D","0"
"SquidPony/SquidLib","squidpony.performance.FOVCacheBenchmark.measureReuseFOV","0"
"SquidPony/SquidLib","squidpony.performance.FOVCacheBenchmark.measureCachedFOV16","0"
"SquidPony/SquidLib","squidpony.performance.FOVCacheBenchmark.measureFOV16","0"
"SquidPony/SquidLib","squidpony.performance.FOVCacheBenchmark.measureReuseFOV16","0"
"SquidPony/SquidLib","squidpony.performance.WorldBenchmark.measureWhirling","0"
"SquidPony/SquidLib","squidpony.performance.WorldBenchmark.measureClassic","0"
"SquidPony/SquidLib","squidpony.performance.WorldBenchmark.measureFast","0"
"SquidPony/SquidLib","squidpony.performance.WorldBenchmark.measureSeeded","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doSquish64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doSquish32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharSquish64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharSquish32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongSquish64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongSquish32","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureFastNoise6D","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doSirocco64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharSirocco64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongSirocco64","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureOpenSimplex2D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureOpenSimplex3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureOpenSimplex4D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureEasySimplex2D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureEasySimplex3D","0"
"SquidPony/SquidLib","squidpony.performance.NoiseBenchmark.measureEasySimplex4D","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerLinkedHashMap","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerLinkedHashMap2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerLinkedHashSet","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerLinkedHashSet2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerGdxOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerGdxOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerGdxOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerGdxOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidOS3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidDefaultOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidDefaultOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidDefaultOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidDefaultOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidDefaultOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidDefaultOS3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidMildOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidMildOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidMildOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidMildOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidMildOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidMildOS3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidPrimitiveOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidPrimitiveOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertIntegerSquidPrimitiveOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringLinkedHashMap","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringLinkedHashMap2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringLinkedHashSet","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringLinkedHashSet2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringGdxOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringGdxOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringGdxOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringGdxOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidDefaultOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidDefaultOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidDefaultOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidDefaultOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidDefaultOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidDefaultOS3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidMildOM","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidMildOM2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidMildOM3","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidMildOS","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidMildOS2","0"
"SquidPony/SquidLib","squidpony.performance.DataStructureBenchmark.insertStringSquidMildOS3","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntWisp64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntWisp32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntLightning64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntLightning32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntJolt64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntJolt32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntMist64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntMist32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntHive64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntHive32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doSirocco32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntSirocco64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntSirocco32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharSirocco32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongSirocco32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doWater64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doWater32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntWater64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntWater32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharWater64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doCharWater32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongWater64","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doLongWater32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntJDK32","0"
"SquidPony/SquidLib","squidpony.performance.HashBenchmark.doIntJDK32Mixed","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.QueueBenchmark.producer1","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.QueueBenchmark.consumer1","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.QueueBenchmark.producer4","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.QueueBenchmark.consumer4","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.QueueBenchmark.producer8","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.QueueBenchmark.consumer8","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.QueueBenchmark.producer16","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.QueueBenchmark.consumer16","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.IterableBenchmark.iterator","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.IterableBenchmark.walk","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.SynchronizedMapBenchmark.producer1","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.SynchronizedMapBenchmark.consumer1","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.SynchronizedMapBenchmark.producer4","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.SynchronizedMapBenchmark.consumer4","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.SynchronizedMapBenchmark.producer8","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.SynchronizedMapBenchmark.consumer8","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.SynchronizedMapBenchmark.producer16","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.SynchronizedMapBenchmark.consumer16","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.JcToolsSpScQueueBenchmark.producer1","0"
"srvaroa/jbcnconf","com.github.srvaroa.queue.JcToolsSpScQueueBenchmark.consumer1","0"
"srvaroa/jbcnconf","com.github.srvaroa.jmh.AkkaBenchmark.akka","0"
"ssaarela/javersion","org.javersion.benchmark.DiffBenchmark.mapDiff","0"
"ssaarela/javersion","org.javersion.benchmark.DiffBenchmark.sortedDiff","0"
"ssaarela/javersion","org.javersion.benchmark.DiffBenchmark.mapDiffOnly","0"
"ssaarela/javersion","org.javersion.benchmark.DiffBenchmark.sortedDiffOnly","0"
"ssaarela/javersion","benchmark.ClojureHashMap.entryIteratorJaversion","0"
"ssaarela/javersion","benchmark.ClojureHashMap.entryIteratorClojure","0"
"ssaarela/javersion","benchmark.MergeBenchmark.concurrentVersions","0"
"ssaarela/javersion","benchmark.MergeBenchmark.sequentialVersions","0"
"ssaarela/javersion","benchmark.DiffBenchmark.mapDiff","0"
"ssaarela/javersion","benchmark.DiffBenchmark.sortedDiff","0"
"ssaarela/javersion","benchmark.DiffBenchmark.mapDiffOnly","0"
"ssaarela/javersion","benchmark.DiffBenchmark.sortedDiffOnly","0"
"stagemonitor/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark.noProfiling","0"
"stagemonitor/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark.theoreticalOptimum","0"
"stagemonitor/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark.manual","0"
"stagemonitor/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark.javassistDeactivated","0"
"stagemonitor/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark.javassist","0"
"stagemonitor/stagemonitor","org.stagemonitor.benchmark.profiler.ProfilerBenchmark.byteBuddy","0"
"stagemonitor/stagemonitor","org.stagemonitor.benchmark.profiler.VariableMethodsBenchmark.testManualProfiling","0"
"stagemonitor/stagemonitor","org.stagemonitor.MetricNameBenchmark.buildMetricTemplateSingleValue","0"
"stagemonitor/stagemonitor","org.stagemonitor.MetricNameBenchmark.buildMetricNameSingleValue","0"
"stagemonitor/stagemonitor","org.stagemonitor.MetricNameBenchmark.buildMetricTemplateMultipleValues","0"
"stagemonitor/stagemonitor","org.stagemonitor.MetricNameBenchmark.buildMetricNameMultipleValues","0"
"stagemonitor/stagemonitor","org.stagemonitor.MetricNameBenchmark.matchMetricName","0"
"stagemonitor/stagemonitor","org.stagemonitor.ElasticsearchReporterBenchmark.reportMetrics","0"
"stewsters/stewsters-util","com.stewsters.util.benchmark.SearchingBenchmark.timeSearching2d","0"
"stewsters/stewsters-util","com.stewsters.util.benchmark.SearchingBenchmark.timeSearching3d","0"
"stewsters/stewsters-util","com.stewsters.util.benchmark.PathfindingBenchmark.timePathing2d","0"
"stewsters/stewsters-util","com.stewsters.util.benchmark.PathfindingBenchmark.timePathing3d","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structLogger1CallWithParametrizedMessage","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structLogger8CallsWithParametrizedMessage","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structLogger16CallsWithParametrizedMessage","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structLogger32CallsWithParametrizedMessage","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structLogger64CallsWithParametrizedMessage","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structuredLogging1Call","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structuredLogging8Calls","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structuredLogging16Calls","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structuredLogging32Calls","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.structuredLogging64Calls","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.notStructuredLogging1Call","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.notStructuredLogging8Calls","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.notStructuredLogging16Calls","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.notStructuredLogging32Calls","0"
"structlogging/structlogger","cz.muni.fi.Slf4jToFileBenchmark.notStructuredLogging64Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger1CallWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger10CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger20CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger30CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger40CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger50CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger60CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger70CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger80CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger90CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLogger100CallsWithParametrizedMessage","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging1Call","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging10Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging20Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging30Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging40Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging50Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging60Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging70Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging80Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging90Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structuredLogging100Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging1Call","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging10Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging20Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging30Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging40Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging50Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging60Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging70Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging80Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging90Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.notStructuredLogging100Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging1Call","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging10Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging20Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging30Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging40Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging50Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging60Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging70Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging80Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging90Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.structLoggerLogging100Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging1Call","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging10Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging20Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging30Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging40Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging50Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging60Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging70Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging80Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging90Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredParametrizedMessageLogging100Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging1Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging10Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging20Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging30Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging40Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging50Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging60Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging70Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging80Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging90Calls","0"
"structlogging/structlogger","com.github.structlogging.Slf4jToFileBenchmark.logstashStructuredLogging100Calls","0"
"sujanctg2005/test-project","com.test.utility.benchmarks.HelloWorld.helloWorld","0"
"svenruppert/rapidpm-microservice","perf.org.rapidpm.microservice.demo.FullPerfTest.testApplicationPath","0"
"svenruppert/rapidpm-microservice","perf.org.rapidpm.microservice.demo.FullPerfTest.benchmarkRuntimeOverhead","0"
"Swrve/rate-limited-logger","com.swrve.ratelimitedlogger.benchmarks.BenchWithStringKey.testMethod","0"
"Swrve/rate-limited-logger","com.swrve.ratelimitedlogger.benchmarks.BenchRateLimitedLogWithPattern.testMethod","0"
"Swrve/rate-limited-logger","com.swrve.ratelimitedlogger.benchmarks.BenchLogWithPatternAndLevel.testMethod","0"
"sybila/ode-generator","cz.muni.fi.ode.generator.SuccessorBenchmarks.TCBBSuccessorBenchmark","0"
"taichi/jmh-gradle-ide","example.benchmark.HelloBenchmark.doNothing","0"
"taichi/jmh-gradle-ide","example.benchmark.HelloBenchmark.simpleLoop","0"
"taichi/jmh-gradle-ide","example.benchmark.HelloBenchmark.complexLoop","0"
"taichi/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark.reader","0"
"taichi/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.immutables.GsonBenchmark$ParserBenchmark.bufferedReader","0"
"taichi/json-benchmarks","json.benchmark.immutables.GsonBenchmark$SerializerBenchmark.string","0"
"taichi/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark.url","0"
"taichi/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark.stream","0"
"taichi/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark.bufferdStream","0"
"taichi/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark.reader","0"
"taichi/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$ParserBenchmark.bufferedReader","0"
"taichi/json-benchmarks","json.benchmark.immutables.JacksonBenchmark$SerializerBenchmark.string","0"
"taichi/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark.stream","0"
"taichi/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$ParserBenchmark.bufferdStream","0"
"taichi/json-benchmarks","json.benchmark.immutables.MoshiBenchmark$SerializerBenchmark.string","0"
"taichi/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark.reader","0"
"taichi/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.GsonBenchmark$ParserBenchmark.bufferedReader","0"
"taichi/json-benchmarks","json.benchmark.GsonBenchmark$SerializerBenchmark.string","0"
"taichi/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark.url","0"
"taichi/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark.stream","0"
"taichi/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark.bufferdStream","0"
"taichi/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark.reader","0"
"taichi/json-benchmarks","json.benchmark.JacksonBenchmark$ParserBenchmark.bufferedReader","0"
"taichi/json-benchmarks","json.benchmark.JacksonBenchmark$SerializerBenchmark.string","0"
"taichi/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark.stream","0"
"taichi/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.LoganSquareBenchmark$ParserBenchmark.bufferdStream","0"
"taichi/json-benchmarks","json.benchmark.LoganSquareBenchmark$SerializerBenchmark.string","0"
"taichi/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark.stream","0"
"taichi/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark.bufferdStream","0"
"taichi/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark.reader","0"
"taichi/json-benchmarks","json.benchmark.BoonBenchmark$ParserBenchmark.bufferedReader","0"
"taichi/json-benchmarks","json.benchmark.BoonBenchmark$SerializerBenchmark.string","0"
"taichi/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark.stream","0"
"taichi/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.MoshiBenchmark$ParserBenchmark.bufferdStream","0"
"taichi/json-benchmarks","json.benchmark.MoshiBenchmark$SerializerBenchmark.string","0"
"taichi/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark.url","0"
"taichi/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark.stream","0"
"taichi/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark.parse2Map","0"
"taichi/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark.bufferdStream","0"
"taichi/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark.reader","0"
"taichi/json-benchmarks","json.benchmark.AutoBenchmark$ParserBenchmark.bufferedReader","0"
"taichi/json-benchmarks","json.benchmark.AutoBenchmark$SerializerBenchmark.string","0"
"takari/bpm","jet.bpm.benchmark.PersistenceBenchmark.test","0"
"takari/bpm","jet.bpm.benchmark.Linear10DelegateBenchmark.test","0"
"takari/bpm","jet.bpm.benchmark.Linear10JuelInMemBenchmark.test","0"
"takari/bpm","io.takari.bpm.benchmark.PersistenceBenchmark.test","0"
"takari/bpm","io.takari.bpm.benchmark.Linear10DelegateBenchmark.test","0"
"takari/bpm","io.takari.bpm.benchmark.Linear10JuelInMemBenchmark.test","0"
"tallerjavaunicen/TallerJava","unice.tallerjava.ejemplojmh.JMHMaximumInt.testIntegers","0"
"tallerjavaunicen/TallerJava","unice.tallerjava.ejemplojmh.JMHMaximumInt.testInts","0"
"tallerjavaunicen/TallerJava","unice.tallerjava.ejemplojmh.MapMemoryUsage.testIntegers","0"
"tallerjavaunicen/TallerJava","unicen.tallerjava.ejemplojmh.JMHMaximumInt.testIntegers","0"
"tallerjavaunicen/TallerJava","unicen.tallerjava.ejemplojmh.JMHMaximumInt.testInts","0"
"tallerjavaunicen/TallerJava","unicen.tallerjava.ejemplojmh.MapMemoryUsage.testIntegers","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledHeapAllocAndFree","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.unpooledDirectAllocAndFree","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledHeapAllocAndFree","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.pooledDirectAllocAndFree","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledHeapAllocAndFree","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufAllocatorBenchmark.defaultPooledDirectAllocAndFree","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetInt","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetShort","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.SwappedByteBufBenchmark.swappedByteBufSetLong","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetInt","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetShort","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.SwappedByteBufBenchmark.unsafeSwappedByteBufSetLong","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArray","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringViaArrayWrapped","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiString","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiStringWrapped","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArray","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiViaArrayWrapped","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAscii","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeAsciiWrapped","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArray","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringViaArrayWrapped","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8String","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8StringWrapped","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArray","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8ViaArrayWrapped","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8","0"
"taojiaenx/netty-source-study","io.netty.microbench.buffer.ByteBufUtilBenchmark.writeUtf8Wrapped","0"
"taojiaenx/netty-source-study","io.netty.microbench.http.HttpRequestDecoderBenchmark.testDecodeWholeRequestInMultipleStepsMixedDelimiters","0"
"taojiaenx/netty-source-study","io.netty.microbench.concurrent.FastThreadLocalBenchmark.jdkThreadLocalGet","0"
"taojiaenx/netty-source-study","io.netty.microbench.concurrent.FastThreadLocalBenchmark.fastThreadLocal","0"
"taojiaenx/netty-source-study","io.netty.microbench.internal.RecyclableArrayListBenchmark.recycleSameThread","0"
"tdunning/t-digest-benchmark","com.tdunning.Benchmark.add","0"
"tdunning/t-digest-benchmark","com.tdunning.ArrayBench.add","0"
"tdunning/t-digest-benchmark","com.tdunning.TDigestBench.timeAdd","0"
"tdunning/t-digest-benchmark","com.tdunning.MergeBench.add","0"
"tdunning/t-digest-benchmark","com.tdunning.FloatHistogramBench.add","0"
"Techcable/Event4J","net.techcable.event4j.benchmark.EventBenchmark.testMethodHandleSpeed","0"
"Techcable/Event4J","net.techcable.event4j.benchmark.EventBenchmark.testReflectionSpeed","0"
"Techcable/Event4J","net.techcable.event4j.benchmark.EventBenchmark.testASMSpeed","0"
"TechEmpower/misc","rnd.ConcatBenchmark.reduce","0"
"TechEmpower/misc","rnd.ConcatBenchmark.balance","0"
"TechEmpower/misc","rnd.ConcatBenchmark.flatmap","0"
"TechEmpower/misc","rnd.ConcatBenchmark.overboard","0"
"tempredirect/GeoFun","com.ean.geofun.benchmarks.SearchBench.measureLinearSearch","0"
"tempredirect/GeoFun","com.ean.geofun.benchmarks.SearchBench.measureParrellelLinearSearch","0"
"tempredirect/GeoFun","com.logicalpractice.geofun.benchmarks.SearchBench.measureLinearSearch","0"
"tempredirect/GeoFun","com.logicalpractice.geofun.benchmarks.SearchBench.measureParallelLinearSearch","0"
"tempredirect/GeoFun","com.logicalpractice.geofun.benchmarks.SearchBench.measureGeoHashSearch","0"
"tempredirect/GeoFun","com.logicalpractice.geofun.benchmarks.SearchBench.measureGeoHashSearch2","0"
"terma/fast-select","com.github.terma.fastselect.MultiGroupCountBenchmark.test","0"
"terma/fast-select","com.github.terma.fastselect.CountBenchmark.groupAndCountFiltered10G5R4C20S40D","0"
"terma/fast-select","com.github.terma.fastselect.SingleGroupCountBenchmark.countFiltered10G5R4C20S40D","0"
"terma/fast-select","com.github.terma.fastselect.CountBenchmark.countByFiltered10G5R4C20S40D","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.ForkUpdateBenchmark.countFiltered10G5R4C20S40D","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.SelectByStringBenchmark.countFilterOneItemByString","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.SingleGroupCountBenchmark.countFiltered10G5R4C20S40D","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByGAndR","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByBsIdAndR","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.detailsByGAndRAndSorting","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.MultiGroupCountBenchmark.test","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.CountBenchmark.countByFiltered10G5R4C20S40D","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.CreatingBenchmark.create","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByGAndR_5_Threads","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByGAndR_50_Threads","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.SelectByStringCompressedByteBenchmark.countFilterOneItemByString","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.CopyBenchmark.oneColumn","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.CopyBenchmark.scalarColumns","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DirectAccessArrayVsBitSetVsRoaringBitmapBenchmark.array","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DirectAccessArrayVsBitSetVsRoaringBitmapBenchmark.bitSet","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DirectAccessArrayVsBitSetVsRoaringBitmapBenchmark.roaringBitmap","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.LongBufferVsPutLongBenchmark.putLong","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.LongBufferVsPutLongBenchmark.putLongByIndex","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.LongBufferVsPutLongBenchmark.putLongByLongView","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.StringGetBytesBenchmark.createString","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.StringGetBytesBenchmark.createStringGetBytes","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.CompressedStringVsStringLoadBenchmark.loadStringData","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.CompressedStringVsStringLoadBenchmark.loadStringCompressedData","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.AddAllBenchmark.create","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.MappedVsBufferBenchmark.mapped","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.MappedVsBufferBenchmark.buffer","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereSimple","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereManySimple","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereIn","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereHugeIn","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereManyIn","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereManyIn5Threads","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereManyIn50Threads","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereRange","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereManyRange","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereStringLike","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereSpareStringLike","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereManyStringLike","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereString","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereManyString","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereSimpleRangeInStringLike","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.groupByWhereManyHugeIn","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.selectLimit","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DemoBenchmark.selectOrderByLimit","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.CopyBenchmark.stringColumns","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DynamicBenchmark.adding1PerTimeUpToVolume","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.DynamicBenchmark.adding100PerTimeUpToVolume","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.StringGetBytesBenchmark.createStringGetBytesAscII","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.StringGetBytesBenchmark.createStringGetBytesUtf8","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.AggregateCallbackBenchmark.fullVolumeTwoColumns","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.HashCodeBenchmark.objectAndObjectsHashCode","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.HashCodeBenchmark.dataHashCode","0"
"terma/fast-select","com.github.terma.fastselect.benchmark.MultiGroupCountBenchmark.fullVolume","0"
"terma/mutable-fast-select","com.github.terma.fastselectmutable.MutableFastSelectConcurrentBenchmark.mixedAdd","0"
"terma/mutable-fast-select","com.github.terma.fastselectmutable.MutableFastSelectConcurrentBenchmark.mixedSelect","0"
"terma/mutable-fast-select","com.github.terma.fastselectmutable.MutableFastSelectConcurrentBenchmark.readonlySelect","0"
"terma/mutable-fast-select","com.github.terma.fastselectmutable.MutableFastSelectBenchmark.add","0"
"thaibui/algorithms-core","org.bui.algorithms.MergesortBenchmark.sortSimpleStringArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.MergesortBenchmark.sortSimpleStringArray02","0"
"thaibui/algorithms-core","org.bui.algorithms.MergesortBenchmark.sortRandomIntArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.JavasortBenchmark.sortSimpleStringArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.JavasortBenchmark.sortSimpleStringArray02","0"
"thaibui/algorithms-core","org.bui.algorithms.JavasortBenchmark.sortRandomIntArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortRandomIntArray01_04Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortRandomIntArray01_08Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortRandomIntArray01_16Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortMediumRandomIntArray01_04Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortMediumRandomIntArray01_08Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortMediumRandomIntArray01_16Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortLargeRandomIntArray01_08Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortLargeRandomIntArray01_16Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortLargeRandomIntArray01_4Threads_1000Granularity","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortLargeRandomIntArray01_4Threads_5000Granularity","0"
"thaibui/algorithms-core","org.bui.algorithms.ParallelMergesortBenchmark.sortLargeRandomIntArray01_4Threads_20000Granularity","0"
"thaibui/algorithms-core","org.bui.algorithms.MergesortBenchmark.sortMediumRandomIntArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.MergesortBenchmark.sortLargeRandomIntArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.JavasortBenchmark.sortMediumRandomIntArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.JavasortBenchmark.sortLargeRandomIntArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortRandomIntArray01_04Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortRandomIntArray01_08Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortRandomIntArray01_16Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortMediumRandomIntArray01_04Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortMediumRandomIntArray01_08Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortMediumRandomIntArray01_16Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortLargeRandomIntArray01_08Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortLargeRandomIntArray01_16Threads","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortLargeRandomIntArray01_4Threads_1000Granularity","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortLargeRandomIntArray01_4Threads_5000Granularity","0"
"thaibui/algorithms-core","org.bui.algorithms.ForkJoinMergesortBenchmark.sortLargeRandomIntArray01_4Threads_20000Granularity","0"
"thaibui/algorithms-core","org.bui.algorithms.Java8ParallelSortBenchmark.sortRandomIntArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.Java8ParallelSortBenchmark.sortMediumRandomIntArray01","0"
"thaibui/algorithms-core","org.bui.algorithms.Java8ParallelSortBenchmark.sortLargeRandomIntArray01","0"
"thejotta/CloudSimPlusModificado","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark.testCreateNeighbor","0"
"thejotta/CloudSimPlusModificado","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark.testGetCost_FirstCall","0"
"thejotta/CloudSimPlusModificado","org.cloudsimplus.heuristics.CloudletToVmMappingSolutionBenchmark.testGetCost_SecondCall","0"
"thesmythgroup/SiftXml","org.tsg.siftxml.SiftXmlBench.parseUser","0"
"thesmythgroup/SiftXml","org.tsg.siftxml.SiftXmlBench.parserRssItem","0"
"thesmythgroup/SiftXml","org.tsg.siftxml.IndexBench.create","0"
"thesmythgroup/SiftXml","com.codesmyth.siftxml.SiftXmlBench.parseUser","0"
"thesmythgroup/SiftXml","com.codesmyth.siftxml.SiftXmlBench.parserRssItem","0"
"thesmythgroup/SiftXml","com.codesmyth.siftxml.IndexBench.create","0"
"thheller/shadow-pgsql","shadow.pgsql.benchmark.ParseBenchmark.parseManual","0"
"thheller/shadow-pgsql","shadow.pgsql.benchmark.ParseBenchmark.parseToCharArray","0"
"thheller/shadow-pgsql","shadow.pgsql.benchmark.ParseBenchmark.parseRegexp","0"
"thheller/shadow-pgsql","shadow.pgsql.benchmark.ShadowBenchmark.selectPojos","0"
"thheller/shadow-pgsql","shadow.pgsql.benchmark.JDBCBenchmark.selectPojos","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.ExecutorBenchmark.roundTripJDK","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.ExecutorBenchmark.roundTripVMLens","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.ExecutorBenchmark.fireAndForgetJDK","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.ExecutorBenchmark.fireAndForgetVMLens","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.ReentrantLockBenchmark.testSynchronizedThreadContended","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.ReentrantLockBenchmark.testUnfairLockContended","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.ReentrantLockBenchmark.testFairLockContended","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.MonitorAndLockBenchmark.contended","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.MonitorAndLockBenchmark.contendedLock","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.MonitorAndLockBenchmark.unContended","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.MonitorAndLockBenchmark.baseLineUnContended","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.QueueBenchmark.writing","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.QueueBenchmark.reading","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.FileReadingBenchmark.readFromFile","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.NonBlockingQueueBenchmark.jdkQueue","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.NonBlockingQueueBenchmark.akkaQueue","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.NonBlockingQueueBenchmark.vmlens","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.SynchronizedVsAtomicInteger.updateSynchronized","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.SynchronizedVsAtomicInteger.updateAtomicInteger","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.SynchronizedVsAtomicInteger.getSynchronized","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.SynchronizedVsAtomicInteger.getAtomicInteger","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.FileWritingBenchmark.write2File","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.AgentBenchmark.fieldAccess","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.BlockingQueueBenchmark.offerVMLens","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.BlockingQueueBenchmark.takeVMLens","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.BlockingQueueBenchmark.offerJDK","0"
"ThomasKrieger/benchmarks","com.anarsoft.vmlens.benchmarks.BlockingQueueBenchmark.takeJDK","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDays1","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDaysInline","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDays1Better1","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDays1Better2","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDays1Better3a","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDays1Better3b","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDays1Better3c","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDays1Better4","0"
"ThreeTen/threeten-bench","org.threeten.LocalDateBenchmark.bmkPlusDays1Better5","0"
"ThreeTen/threeten-bench","org.threeten.LeapYearBenchmark.bmkLeapYear1","0"
"ThreeTen/threeten-bench","org.threeten.LeapYearBenchmark.bmkLeapYear2","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark01.GTVGProductComments.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark01.GTVGOrderList.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark01.GTVGHome.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark01.GTVGProductList.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark01.GTVGOrderDetails.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark02.GTVGProductComments.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark02.GTVGOrderList.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark02.GTVGHome.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark02.GTVGProductList.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark02.GTVGOrderDetails.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark03.GTVGProductComments.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark03.GTVGOrderList.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark03.GTVGHome.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark03.GTVGProductList.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark03.GTVGOrderDetails.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark04.GTVGProductComments.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark04.GTVGOrderList.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark04.GTVGHome.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark04.GTVGProductList.benchmark","0"
"thymeleaf/thymeleaf-benchmarks","org.thymeleaf.benchmarks.benchmark04.GTVGOrderDetails.benchmark","0"
"tinyj/tinyj-lazy","org.tinyj.lazy.LazyBenchmark.Lazy","0"
"tinyj/tinyj-lazy","org.tinyj.lazy.LazyBenchmark.Eager","0"
"tinyj/tinyj-lazy","org.tinyj.lazy.LazyBenchmark.Lazy_throwing","0"
"tinyj/tinyj-lazy","org.tinyj.lazy.LazyBenchmark.Eager_throwing","0"
"titorenko/quick-csv-streamer","uk.elementarysoftware.quickcsv.benchmarks.BenchmarkParserAndMapperInMemory.benchmarkParallelParser","0"
"titorenko/quick-csv-streamer","uk.elementarysoftware.quickcsv.benchmarks.BenchmarkParserAndMapperInMemory.benchmarkSequentialParser","0"
"titorenko/quick-csv-streamer","uk.elementarysoftware.quickcsv.benchmarks.BenchmarkParserAndMapperInMemory.benchmarkOpenCSVParser","0"
"titorenko/quick-csv-streamer","uk.elementarysoftware.quickcsv.benchmarks.BenchmarkParserAndMapperInMemory.benchmarkParallelParserWithHeader","0"
"titorenko/quick-csv-streamer","uk.elementarysoftware.quickcsv.benchmarks.BenchmarkParserAndMapperInMemory.benchmarkSequentialParserWithQuotes","0"
"tkowalcz/openjdk-jmh","openjdk.java.lang.StringContainsMicrobenchmark.shortStringContainsCharSequence","0"
"tkowalcz/openjdk-jmh","openjdk.java.lang.StringContainsMicrobenchmark.shortStringContainsString","0"
"tkowalcz/openjdk-jmh","openjdk.java.lang.StringContainsMicrobenchmark.mediumStringContainsCharSequence","0"
"tkowalcz/openjdk-jmh","openjdk.java.lang.StringContainsMicrobenchmark.mediumStringContainsString","0"
"tkowalcz/openjdk-jmh","openjdk.java.lang.StringContainsMicrobenchmark.longStringContainsCharSequence","0"
"tkowalcz/openjdk-jmh","openjdk.java.lang.StringContainsMicrobenchmark.longStringContainsString","0"
"tkowalcz/presentations","pl.codewise.geecon.IteratorEscapeAnalysis.sumEnumerationOverList","0"
"tkowalcz/presentations","pl.codewise.geecon.IteratorEscapeAnalysis.sumIteratorOverList","0"
"tkowalcz/presentations","pl.codewise.hyperion.histogram.hyperion.CounterMicroBenchmark.scalableCounterIncrement","0"
"tkowalcz/presentations","pl.codewise.hyperion.histogram.hyperion.CounterMicroBenchmark.scalableCounterDecrement","0"
"tkowalcz/presentations","pl.codewise.hyperion.histogram.hyperion.CounterMicroBenchmark.fastCounterIncrement","0"
"tkowalcz/presentations","pl.codewise.hyperion.histogram.hyperion.CounterMicroBenchmark.fastCounterDecrement","0"
"tkowalcz/presentations","pl.codewise.hyperion.histogram.hyperion.CounterMicroBenchmark.spCounterIncrement","0"
"tkowalcz/presentations","pl.codewise.hyperion.histogram.hyperion.CounterMicroBenchmark.spCounterDecrement","0"
"tmontgomery/nuklei","org.kaazing.nuklei.jmh.MpscRingBufferBasic.write","0"
"tmontgomery/nuklei","org.kaazing.nuklei.jmh.MpscRingBufferBasic.read","0"
"tmontgomery/nuklei","org.kaazing.nuklei.jmh.MpscArrayBufferBasic.write","0"
"tmontgomery/nuklei","org.kaazing.nuklei.jmh.MpscArrayBufferBasic.read","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXorShift128Plus.xorShift128PlusLong","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXorShift128Plus.xorShift128PlusDouble","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXorShift128Plus.xorShift128PlusInt","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXorShift1024Star.xorShift1024StarLong","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXorShift1024Star.xorShift1024StarDouble","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXorShift1024Star.xorShift1024StarInt","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXoroshiro128Plus.xoroshiro128PlusLong","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXoroshiro128Plus.xoroshiro128PlusDouble","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkXoroshiro128Plus.xoroshiro128PlusInt","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkSplitMix64.splitMix64Long","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkSplitMix64.splitMix64Double","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkSplitMix64.splitMix64Int","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkJdk8SplitableRandom.jdk8SplitableRandomLong","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkJdk8SplitableRandom.jdk8SplitableRandomDouble","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkJdk8SplitableRandom.jdk8SplitableRandomInt","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkJdkUtilRandom.jdkUtilRandomLong","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkJdkUtilRandom.jdkUtilRandomDouble","0"
"tobijdc/PRNG-Performance","com.tobijdc.playground.prngperformance.benchmark.BenchmarkJdkUtilRandom.jdkUtilRandomInt","0"
"tobijdc/PRNG-Performance","benchmark.RandomBenchmark.testRandom","0"
"tobijdc/PRNG-Performance","benchmark.RandomBenchmark.testThreadLocalRandom","0"
"tobijdc/PRNG-Performance","benchmark.RandomBenchmark.testSplittableRandom","0"
"togglz/togglz","org.togglz.benchmark.TogglzOverheadBenchmark.aSimpleBooleanIfStatement","0"
"togglz/togglz","org.togglz.benchmark.TogglzOverheadBenchmark.featureManagerStateLookup","0"
"togglz/togglz","org.togglz.benchmark.TogglzOverheadBenchmark.isActiveMethodOnEnum","0"
"togglz/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark.scriptEngineThatAlwaysReturnsTrue","0"
"togglz/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark.scriptEngineDoingDynamicThings","0"
"togglz/togglz","org.togglz.benchmark.ScriptEngineActivationStrategyBenchmark.disabledFeatureWithNoScriptEngineInvolved","0"
"togglz/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark.alwaysOnActivationStrategyBenchMark","0"
"togglz/togglz","org.togglz.benchmark.SystemPropertyActivationStrategyBenchmark.systemPropertyActivationStrategyBenchMark","0"
"togglz/togglz","org.togglz.benchmark.FeatureStateBenchmarks.releaseDateStrategyEnabled","0"
"togglz/togglz","org.togglz.benchmark.FeatureStateBenchmarks.releaseDateStrategyConfiguredButNotEnabled","0"
"togglz/togglz","org.togglz.benchmark.FeatureStateBenchmarks.noFeatureStateSetBaseline","0"
"togglz/togglz","org.togglz.benchmark.FeatureStateBenchmarks.disabledByAFeatureStateExplicitly","0"
"togglz/togglz","org.togglz.benchmark.FeatureStateBenchmarks.enabledByDefaultByAnAnnotation","0"
"togglz/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark.stateSetExplicitlyInStateRepository","0"
"togglz/togglz","org.togglz.benchmark.AbstractStateRepositoryBenchmark.stateNotSet","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThunder","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThunderInt","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThunderR","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThunderIntR","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoRo","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoRoInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoRoR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoRoIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLight","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLightInt","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLightR","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLightIntR","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDash","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDashInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDashR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDashIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureFlap","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureFlapInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureFlapR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureFlapIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLap","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLapInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLapR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLapIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureSlap","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureSlapInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureSlapR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureSlapIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLongPeriod","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLongPeriodInt","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLongPeriodR","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLongPeriodIntR","1"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureHorde","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureHordeInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureHordeR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureHordeIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureHerd","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureHerdInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureHerdR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureHerdIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureBeard","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureBeardInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureBeardR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureBeardIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureBird","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureBirdInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureBirdR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureBirdIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLongPeriod","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLongPeriodInt","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLongPeriodR","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLongPeriodIntR","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLight","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLightInt","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLightR","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLightIntR","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureFlap","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureFlapInt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureFlapR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureFlapIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLap","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLapInt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLapR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLapIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBird","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBirdInt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBirdR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBirdIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBeard","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBeardInt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBeardR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBeardIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaac","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacInt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaac32","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaac32Int","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaac32R","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaac32IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacAlt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacAltInt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacAltR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacAltIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacAlt32","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacAlt32Int","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacAlt32R","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.aa_measureIsaacAlt32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureHorde","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureHordeInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureHordeR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureHordeIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBird","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBirdInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBirdR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBirdIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBard","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBardInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBardR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBardIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLight32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLight32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLight32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLight32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureThrust","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureThrustInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureThrustR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureThrustIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureHerd","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureHerdInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureHerdR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureHerdIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBeard","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBeardInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBeardR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBeardIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a_measureLight32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a_measureLight32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a_measureLight32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a_measureLight32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureThrust32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureThrust32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureThrust32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.aa_measureThrust32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureJet","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureJetInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureJetR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measureJetIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measure90","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measure90Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measure90R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a__measure90IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a____measureXoRo","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a____measureXoRoInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a____measureXoRoR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a____measureXoRoIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureThrust","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureThrustInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureThrustR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureThrustIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureAltThrust","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureAltThrustInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureAltThrustR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureAltThrustIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureJab63","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureJab63Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureJab63R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a______measureJab63IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrust32","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrust32Int","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrust32R","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrust32IntR","1"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJet","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJetInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJetR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJetIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLunge32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLunge32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLunge32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLunge32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a_____measureJab63","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a_____measureJab63Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a_____measureJab63R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a_____measureJab63IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a________measureVortex","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a________measureVortexInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a________measureVortexR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.a________measureVortexIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLFSR","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLFSRInt","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLFSRR","1"
"tommyettinger/sarong","sarong.UncommonBenchmark.a________measureNLFSR27","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.a________measureNLFSR27Int","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.a________measureNLFSR27R","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.a________measureNLFSR27IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.a________measureNLFSR25","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.a________measureNLFSR25Int","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.a________measureNLFSR25R","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.a________measureNLFSR25IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrust","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureInlineThrust","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureAltThrustDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVortexDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVortexDetermineBare","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureAltThrustRandomize","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAlt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAltInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAltR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAltIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureInlineThrustAlt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureInlineThrustAltOther","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJab63","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJab63Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJab63R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJab63IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureInlineJab63","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureInlineVortex","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVortex","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVortexInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVortexR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVortexIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJDK","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureJDKInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMesh","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMeshInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMeshR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMeshIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiral","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSFC64","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSFC64Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSFC64R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSFC64IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureIsaac","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureIsaacInt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureIsaacR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureIsaacIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureIsaac32","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureIsaac32Int","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureIsaac32R","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureIsaac32IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLFSRIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureNLFSR27","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureNLFSR27Int","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureNLFSR27R","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureNLFSR27IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureNLFSR25","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureNLFSR25Int","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureNLFSR25R","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureNLFSR25IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureJDK","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureJDKInt","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureBaseline","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureMathCos","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureMathSin","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureCosApproxOld","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSinApproxOld","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureCosApproxFloat","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSinApproxFloat","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSinApprox","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureCosApprox","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSinApproxNickBit","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureCosApproxNickBit","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSinApproxNickBitF","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureCosApproxNickBitF","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureCosApproxClimatiano","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureCosApproxClimatianoLP","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAlt32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAlt32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAlt32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAlt32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMotor","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMotorInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMotorR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMotorIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZig32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZig32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZig32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZig32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZag32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZag32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZag32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZag32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZog32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZog32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZog32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureZog32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoRo32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoRo32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoRo32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoRo32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOriole32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOriole32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOriole32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOriole32IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureMathAtan2","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureApproxAtan2","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureApproxAtan2Float","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLightDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDervishDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLathe32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLathe32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLathe32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLathe32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDervish","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDervishInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDervishR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDervishIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLinnorm","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLinnormInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLinnormR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLinnormIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMizuchi","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMizuchiInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMizuchiR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMizuchiIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureVDC3_A","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureVDC5_A","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureVDC19_A","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureVDC0xDE4D_A","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureVDC3_B","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureVDC5_B","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureVDC19_B","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureVDC0xDE4D_B","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLathe64","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLathe64Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLathe64R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLathe64IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLinnormDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLinnormRandomize","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralA","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralB","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralC","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralD","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralE","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralF","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralG","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralH","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSpiralI","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbit","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureQuixotic","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureQuixoticInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureQuixoticR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureQuixoticIntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureTweakLFSR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureXSBasic","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureXSBasic2","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLong65537","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLong655537655537","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLong7","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongUnknown","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOther65537","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOther655537655537","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOther7","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOtherUnknown","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOriginal65537","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOriginal655537655537","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOriginal7","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOriginalUnknown","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOroboro65537","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOroboro655537655537","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOroboro7","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureLinnormRangedLongOroboroUnknown","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTangle","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTangleInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTangleR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTangleIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitA","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitB","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitC","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitD","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitE","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitF","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitG","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitH","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitI","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitJ","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitK","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitL","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitM","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitN","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOrbitO","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTangleA","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTangleB","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTangleC","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTangleD","0"
"tommyettinger/sarong","sarong.Atan2.baselineDouble","0"
"tommyettinger/sarong","sarong.Atan2.baselineFloat","0"
"tommyettinger/sarong","sarong.Atan2.math","0"
"tommyettinger/sarong","sarong.Atan2.apache","0"
"tommyettinger/sarong","sarong.Atan2.riven","0"
"tommyettinger/sarong","sarong.Atan2.dspFast","0"
"tommyettinger/sarong","sarong.Atan2.dspOpt","0"
"tommyettinger/sarong","sarong.Atan2.dspAccurate","0"
"tommyettinger/sarong","sarong.Atan2.kappa","0"
"tommyettinger/sarong","sarong.Atan2.icecore","0"
"tommyettinger/sarong","sarong.Atan2.diamond","0"
"tommyettinger/sarong","sarong.Atan2.squidRough","0"
"tommyettinger/sarong","sarong.Atan2.squid","0"
"tommyettinger/sarong","sarong.Atan2.gdx","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMover32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMover32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMover32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMover32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureStarfish32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureStarfish32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureStarfish32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureStarfish32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureChurro32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureChurro32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureChurro32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureChurro32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDizzy32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDizzy32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDizzy32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDizzy32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDizzy32IntNative1","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDizzy32IntNative2","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroStarStar32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroStarStar32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroStarStar32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroStarStar32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroStarPhi32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroStarPhi32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroStarPhi32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroStarPhi32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroXara32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroXara32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroXara32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroXara32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroAra32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroAra32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroAra32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroAra32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePaperweight","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePaperweightInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePaperweightR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePaperweightIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSeaSlater64","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSeaSlater64Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSeaSlater64R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSeaSlater64IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBasicRandom64","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBasicRandom64Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBasicRandom64R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBasicRandom64IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBasicRandom32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBasicRandom32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBasicRandom32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBasicRandom32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMover64","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMover64Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMover64R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMover64IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOverdrive64","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOverdrive64Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOverdrive64R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOverdrive64IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDirk","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDirkInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDirkR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDirkIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOtter32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOtter32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOtter32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureOtter32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLobster32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLobster32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLobster32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLobster32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSeaSlater32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSeaSlater32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSeaSlater32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureSeaSlater32IntR","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measurePointHash2","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measurePointHash3","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measurePointHash4","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measurePointHash6","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureHastyPointHash2","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureHastyPointHash3","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureHastyPointHash4","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureHastyPointHash6","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureSzudzikPointHash2","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureSzudzikPointHash3","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureSzudzikPointHash4","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureSzudzikPointHash6","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureGoldenPointHash2","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureGoldenPointHash3","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureGoldenPointHash4","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureGoldenPointHash6","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureCantorPointHash2","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureCantorPointHash3","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureCantorPointHash4","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureCantorPointHash6","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureGolden2PointHash2","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureGolden2PointHash3","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureGolden2PointHash4","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureGolden2PointHash6","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_4_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_5_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_6_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_7_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_8_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_9_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_10_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_11_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_12_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_13_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_14_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_15_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_16_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_17_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSNSIS_255_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSNSIS_257_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSNSIS_256_Bound","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDirkDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureIsaac","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureIsaacInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureIsaacR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureIsaacIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureIsaac32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureIsaac32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureIsaac32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureIsaac32IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSIS_17_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSIS_257_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSIS_1025_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSIS_16_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSIS_256_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSIS_1024_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSNSIS_17_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSNSIS_257_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSNSIS_1025_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSNSIS_16_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSNSIS_256_Bound","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureSNSIS_1024_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSNSIS_15_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSNSIS_17_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSNSIS_16_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_257_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_1025_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_256_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSIS_1024_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSNSIS_1025_Bound","0"
"tommyettinger/sarong","sarong.ShufflerBenchmark.measureSNSIS_1024_Bound","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMolerat32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMolerat32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMolerat32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMolerat32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMiniMover64","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMiniMover64Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMiniMover64R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMiniMover64IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter64","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter64Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter64R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter64IntR","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measureLathePointHash2","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDiverDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureAltThrustDeCorrelatedDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLightDeCorrelatedDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLinnormDeCorrelatedDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDiverDeCorrelatedDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureStarfish32NextInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureGWT","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureGWTInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureGWTNextInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDiver","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDiverInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDiverR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDiverIntR","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measurePelotonPointHash2","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measurePelotonPointHash3","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measurePelotonPointHash4","0"
"tommyettinger/sarong","sarong.PointHashBenchmark.measurePelotonPointHash6","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDonutDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureGlowDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePelicanDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePelican2Determine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePelican3Determine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAlt32Determine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMoverCounter64Alt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePelican","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePelicanInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePelicanR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePelicanIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureThrustAlt32DetermineInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVelvet","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVelvetInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVelvetR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureVelvetIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDuelist","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDuelistInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDuelistR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureDuelistIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureCake32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureCake32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureCake32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureCake32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMegaMover32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMegaMover32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMegaMover32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureMegaMover32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroSushi32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroSushi32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroSushi32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureXoshiroSushi32IntR","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureAsinDKC","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureAcosDKC","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureAsinJOH","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureAcosJOH","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureAsinJDK","0"
"tommyettinger/sarong","sarong.UncommonBenchmark.measureAcosJDK","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLadder32","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLadder32Int","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLadder32R","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureLadder32IntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBright","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBrightInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBrightR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureBrightIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePulleyDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureToppingDetermine","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePulley","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePulleyInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePulleyR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measurePulleyIntR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureTopping","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureToppingInt","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureToppingR","0"
"tommyettinger/sarong","sarong.RNGBenchmark.measureToppingIntR","0"
"tomwhoiscontrary/sarcoptic","li.earth.urchin.twic.sarcoptic.PerformanceTests.getValueFromBean","0"
"tomwhoiscontrary/sarcoptic","li.earth.urchin.twic.sarcoptic.PerformanceTests.getValueFromStruct","0"
"tomwhoiscontrary/sarcoptic","li.earth.urchin.twic.sarcoptic.PerformanceTests.getValueFromMap","0"
"tomwhoiscontrary/sarcoptic","li.earth.urchin.twic.sarcoptic.PerformanceTests.getValueFromInterface","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AllTypeBenchmark.doubles","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AllTypeBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AllTypeBenchmark.immitableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AllTypeBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AllTypeBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpIntLongRoundingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpIntLongRoundingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpIntLongRoundingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpIntLongRoundingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongLongTruncatingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongLongTruncatingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongLongTruncatingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongLongTruncatingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongLongRoundingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongLongRoundingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongLongRoundingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongLongRoundingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.PowBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.PowBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.PowBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.PowBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.DoubleBenchmark.add","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.DoubleBenchmark.subtract","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.DoubleBenchmark.multiply","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.DoubleBenchmark.divide","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.DoubleBenchmark.avg","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.DoubleBenchmark.sqrt","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpPositiveLongRoundingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpPositiveLongRoundingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpPositiveLongRoundingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpPositiveLongRoundingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpIntLongRoundingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpIntLongRoundingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpIntLongRoundingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpIntLongRoundingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpIntLongValRoundingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpIntLongValRoundingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpIntLongValRoundingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpIntLongValRoundingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.ConvertToDoubleBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.ConvertToDoubleBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.ConvertToDoubleBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.ConvertToDoubleBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongValTruncatingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongValTruncatingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongValTruncatingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongValTruncatingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.ConvertFromDoubleBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.ConvertFromDoubleBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.ConvertFromDoubleBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.ConvertFromDoubleBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongValRoundingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongValRoundingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongValRoundingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpLongValRoundingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpIntLongValRoundingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpIntLongValRoundingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpIntLongValRoundingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractBinaryOpIntLongValRoundingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpPositiveLongValRoundingBenchmark.bigDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpPositiveLongValRoundingBenchmark.immutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpPositiveLongValRoundingBenchmark.mutableDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.AbstractUnaryOpPositiveLongValRoundingBenchmark.nativeDecimals","0"
"tools4j/decimal4j","ch.javasoft.decimal.jmh.PowBenchmark.bigDecimals_ANSI_X3_274","0"
"tools4j/decimal4j","org.decimal4j.jmh.AvgBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AvgBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AvgBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AvgBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SqrtBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SqrtBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SqrtBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SqrtBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SubtractBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SubtractBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SubtractBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SubtractBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AddBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AddBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AddBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AddBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToDoubleBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToDoubleBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToDoubleBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToDoubleBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SquareBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SquareBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SquareBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SquareBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SubtractCheckedBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SubtractCheckedBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SubtractCheckedBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SubtractCheckedBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.PowBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.PowBenchmark.bigDecimals_ANSI_X3_274","0"
"tools4j/decimal4j","org.decimal4j.jmh.PowBenchmark.decimalDoubleDecimal","0"
"tools4j/decimal4j","org.decimal4j.jmh.PowBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.PowBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.PowBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyCheckedBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyCheckedBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyCheckedBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyCheckedBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertFromDoubleBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertFromDoubleBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertFromDoubleBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertFromDoubleBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SquareCheckedBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SquareCheckedBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SquareCheckedBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.SquareCheckedBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideCheckedBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideCheckedBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideCheckedBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideCheckedBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AddCheckedBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AddCheckedBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AddCheckedBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.AddCheckedBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleBenchmark.add","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleBenchmark.subtract","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleBenchmark.multiply","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleBenchmark.divide","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleBenchmark.avg","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleBenchmark.sqrt","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleRounderBenchmark.staticRoundDefault","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleRounderBenchmark.staticRoundDown","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleRounderBenchmark.roundDefault","0"
"tools4j/decimal4j","org.decimal4j.jmh.DoubleRounderBenchmark.roundDown","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyExactBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyExactBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyExactBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyExactBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideLongBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideLongBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideLongBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.DivideLongBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyLongBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyLongBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyLongBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.MultiplyLongBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ScaleBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ScaleBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ScaleBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ScaleBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.RoundBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.RoundBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.RoundBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.RoundBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToStringBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToStringBenchmark.bigDecimalsToPlainString","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToStringBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToStringBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToStringBenchmark.nativeDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertToStringBenchmark.nativeDecimalsToAppendable","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertFromStringBenchmark.bigDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertFromStringBenchmark.immutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertFromStringBenchmark.mutableDecimals","0"
"tools4j/decimal4j","org.decimal4j.jmh.ConvertFromStringBenchmark.nativeDecimals","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.compression.SnappyPerfTest.xerialCompress","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.compression.SnappyPerfTest.iq80Compresss","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.compression.SnappyPerfTest.xerialDecompress","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.compression.SnappyPerfTest.iq80Decompresss","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.cachetests.get.PerfTestApplyCommand.applyDefaultKetamaHashAlgoTest","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.cachetests.get.PerfTestApplyCommand.applyJenkinsHashAlgoTest","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.cachetests.get.PerfTestApplyCommand.applyXXHashAlgoTest","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.cachetests.get.PerfTestApplyCommand.applyFolsomTest","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.cache.LotsOfSets.applySets","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.spy.extensions.memcached.NodeLocatorPerfTest.testKetemaNodeLocator","0"
"tootedom/herdcache","org.greencheek.caching.herdcache.perf.benchmarks.spy.extensions.memcached.NodeLocatorPerfTest.testCeilingKeyNodeLocator","0"
"tramchamploo/buffer-slayer","io.bufferslayer.AsyncReporterBenchmark.no_contention_report","0"
"tramchamploo/buffer-slayer","io.bufferslayer.AsyncReporterBenchmark.mild_contention_report","0"
"tramchamploo/buffer-slayer","io.bufferslayer.AsyncReporterBenchmark.high_contention_report","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchedJdbcTemplateBenchmark.no_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchedJdbcTemplateBenchmark.no_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchedJdbcTemplateBenchmark.mild_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchedJdbcTemplateBenchmark.mild_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchedJdbcTemplateBenchmark.high_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchedJdbcTemplateBenchmark.high_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.SizeBoundedQueueBenchmark.no_contention_offer","0"
"tramchamploo/buffer-slayer","io.bufferslayer.SizeBoundedQueueBenchmark.no_contention_drain","0"
"tramchamploo/buffer-slayer","io.bufferslayer.SizeBoundedQueueBenchmark.mild_contention_offer","0"
"tramchamploo/buffer-slayer","io.bufferslayer.SizeBoundedQueueBenchmark.mild_contention_drain","0"
"tramchamploo/buffer-slayer","io.bufferslayer.SizeBoundedQueueBenchmark.high_contention_offer","0"
"tramchamploo/buffer-slayer","io.bufferslayer.SizeBoundedQueueBenchmark.high_contention_drain","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchJdbcTemplateBenchmark.no_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchJdbcTemplateBenchmark.no_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchJdbcTemplateBenchmark.mild_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchJdbcTemplateBenchmark.mild_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchJdbcTemplateBenchmark.high_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.bufferslayer.BatchJdbcTemplateBenchmark.high_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AsyncReporterBenchmark.no_contention_report","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AsyncReporterBenchmark.mild_contention_report","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AsyncReporterBenchmark.high_contention_report","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.SizeBoundedQueueBenchmark.no_contention_offer","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.SizeBoundedQueueBenchmark.no_contention_drain","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.SizeBoundedQueueBenchmark.mild_contention_offer","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.SizeBoundedQueueBenchmark.mild_contention_drain","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.SizeBoundedQueueBenchmark.high_contention_offer","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.SizeBoundedQueueBenchmark.high_contention_drain","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.BatchJdbcTemplateBenchmark.no_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.BatchJdbcTemplateBenchmark.no_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.BatchJdbcTemplateBenchmark.mild_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.BatchJdbcTemplateBenchmark.mild_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.BatchJdbcTemplateBenchmark.high_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.BatchJdbcTemplateBenchmark.high_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractReporterBenchmark.no_contention_report","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractReporterBenchmark.mild_contention_report","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractReporterBenchmark.high_contention_report","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractBatchJdbcTemplateBenchmark.no_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractBatchJdbcTemplateBenchmark.no_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractBatchJdbcTemplateBenchmark.mild_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractBatchJdbcTemplateBenchmark.mild_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractBatchJdbcTemplateBenchmark.high_contention_batched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractBatchJdbcTemplateBenchmark.high_contention_unbatched_insert","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractSizeBoundedQueueBenchmark.no_contention_offer","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractSizeBoundedQueueBenchmark.no_contention_drain","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractSizeBoundedQueueBenchmark.mild_contention_offer","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractSizeBoundedQueueBenchmark.mild_contention_drain","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractSizeBoundedQueueBenchmark.high_contention_offer","0"
"tramchamploo/buffer-slayer","io.github.tramchamploo.bufferslayer.AbstractSizeBoundedQueueBenchmark.high_contention_drain","0"
"traneio/future","io.futures.FutureBenchmark.newPromise","0"
"traneio/future","io.futures.FutureBenchmark.newPromiseTwitter","0"
"traneio/future","io.futures.FutureBenchmark.value","0"
"traneio/future","io.futures.FutureBenchmark.valueTwitter","0"
"traneio/future","io.futures.FutureBenchmark.mapConst","0"
"traneio/future","io.futures.FutureBenchmark.mapConstTwitter","0"
"traneio/future","io.futures.FutureBenchmark.mapPromise","0"
"traneio/future","io.futures.FutureBenchmark.mapPromiseTwitter","0"
"traneio/future","io.futures.FutureBenchmark.flatMapConst","0"
"traneio/future","io.futures.FutureBenchmark.flatMapConstTwitter","0"
"traneio/future","io.futures.FutureBenchmark.flatMapPromise","0"
"traneio/future","io.futures.FutureBenchmark.flatMapPromiseTwitter","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.newPromise","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.value","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.exception","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.mapConst","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.mapConstN","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.mapPromise","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.mapPromiseN","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.flatMapConst","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.flatMapConstN","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.flatMapPromise","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.ensureConst","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.ensureConstN","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.ensurePromise","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.setValue","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.setValueWithContinuations","0"
"traneio/future","io.futures.JavaAsyncFutureBenchmark.setValueWithNestedContinuation","0"
"traneio/future","io.futures.FutureBenchmark.exception","0"
"traneio/future","io.futures.FutureBenchmark.mapConstN","0"
"traneio/future","io.futures.FutureBenchmark.mapPromiseN","0"
"traneio/future","io.futures.FutureBenchmark.flatMapConstN","0"
"traneio/future","io.futures.FutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.futures.FutureBenchmark.ensureConst","0"
"traneio/future","io.futures.FutureBenchmark.ensureConstN","0"
"traneio/future","io.futures.FutureBenchmark.ensurePromise","0"
"traneio/future","io.futures.FutureBenchmark.ensurePromiseN","0"
"traneio/future","io.futures.FutureBenchmark.setValue","0"
"traneio/future","io.futures.FutureBenchmark.setValueWithContinuations","0"
"traneio/future","io.futures.FutureBenchmark.setValueWithNestedContinuation","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.newPromise","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.value","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.exception","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.mapConst","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.mapConstN","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.mapPromise","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.mapPromiseN","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.flatMapConst","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.flatMapConstN","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.flatMapPromise","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.ensureConst","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.ensureConstN","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.ensurePromise","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.setValue","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.setValueWithContinuations","0"
"traneio/future","io.futures.JavaSyncFutureBenchmark.setValueWithNestedContinuation","0"
"traneio/future","io.futures.TwitterFutureBenchmark.newPromise","0"
"traneio/future","io.futures.TwitterFutureBenchmark.value","0"
"traneio/future","io.futures.TwitterFutureBenchmark.exception","0"
"traneio/future","io.futures.TwitterFutureBenchmark.mapConst","0"
"traneio/future","io.futures.TwitterFutureBenchmark.mapConstN","0"
"traneio/future","io.futures.TwitterFutureBenchmark.mapPromise","0"
"traneio/future","io.futures.TwitterFutureBenchmark.mapPromiseN","0"
"traneio/future","io.futures.TwitterFutureBenchmark.flatMapConst","0"
"traneio/future","io.futures.TwitterFutureBenchmark.flatMapConstN","0"
"traneio/future","io.futures.TwitterFutureBenchmark.flatMapPromise","0"
"traneio/future","io.futures.TwitterFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.futures.TwitterFutureBenchmark.ensureConst","0"
"traneio/future","io.futures.TwitterFutureBenchmark.ensureConstN","0"
"traneio/future","io.futures.TwitterFutureBenchmark.ensurePromise","0"
"traneio/future","io.futures.TwitterFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.futures.TwitterFutureBenchmark.setValue","0"
"traneio/future","io.futures.TwitterFutureBenchmark.setValueWithContinuations","0"
"traneio/future","io.futures.TwitterFutureBenchmark.setValueWithNestedContinuation","0"
"traneio/future","io.futures.ScalaFutureBenchmark.newPromise","0"
"traneio/future","io.futures.ScalaFutureBenchmark.value","0"
"traneio/future","io.futures.ScalaFutureBenchmark.exception","0"
"traneio/future","io.futures.ScalaFutureBenchmark.mapConst","0"
"traneio/future","io.futures.ScalaFutureBenchmark.mapConstN","0"
"traneio/future","io.futures.ScalaFutureBenchmark.mapPromise","0"
"traneio/future","io.futures.ScalaFutureBenchmark.mapPromiseN","0"
"traneio/future","io.futures.ScalaFutureBenchmark.flatMapConst","0"
"traneio/future","io.futures.ScalaFutureBenchmark.flatMapConstN","0"
"traneio/future","io.futures.ScalaFutureBenchmark.flatMapPromise","0"
"traneio/future","io.futures.ScalaFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.futures.ScalaFutureBenchmark.ensureConst","0"
"traneio/future","io.futures.ScalaFutureBenchmark.ensureConstN","0"
"traneio/future","io.futures.ScalaFutureBenchmark.ensurePromise","0"
"traneio/future","io.futures.ScalaFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.futures.ScalaFutureBenchmark.setValue","0"
"traneio/future","io.futures.ScalaFutureBenchmark.setValueWithContinuations","0"
"traneio/future","io.futures.ScalaFutureBenchmark.setValueWithNestedContinuation","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.newPromise","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.value","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.exception","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.mapConst","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.mapConstN","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.mapPromise","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.mapPromiseN","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.flatMapConst","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.flatMapConstN","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.flatMapPromise","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.flatMapPromiseN","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.ensureConst","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.ensureConstN","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.ensurePromise","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.ensurePromiseN","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.setValue","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.setValueN","0"
"traneio/future","io.trane.future.MonixSyncTaskBenchmark.recursiveConst","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.newPromise","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.value","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.exception","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.mapConst","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.mapConstN","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.mapPromise","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.mapPromiseN","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.flatMapConst","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.flatMapConstN","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.flatMapPromise","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.flatMapPromiseN","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.ensureConst","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.ensureConstN","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.ensurePromise","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.ensurePromiseN","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.setValue","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.setValueN","0"
"traneio/future","io.trane.future.MonixAsyncTaskBenchmark.recursiveConst","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.newPromise","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.value","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.exception","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.mapConst","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.mapConstN","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.mapPromise","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.mapPromiseN","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.flatMapConst","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.flatMapConstN","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.flatMapPromise","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.ensureConst","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.ensureConstN","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.ensurePromise","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.setValue","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.setValueN","0"
"traneio/future","io.trane.future.JavaAsyncFutureBenchmark.recursiveConst","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.newPromise","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.value","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.exception","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.mapConst","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.mapConstN","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.mapPromise","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.mapPromiseN","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.flatMapConst","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.flatMapConstN","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.flatMapPromise","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.ensureConst","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.ensureConstN","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.ensurePromise","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.setValue","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.setValueN","0"
"traneio/future","io.trane.future.JavaSyncFutureBenchmark.recursiveConst","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.newPromise","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.value","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.exception","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.mapConst","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.mapConstN","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.mapPromise","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.mapPromiseN","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.flatMapConst","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.flatMapConstN","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.flatMapPromise","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.ensureConst","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.ensureConstN","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.ensurePromise","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.setValue","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.setValueN","0"
"traneio/future","io.trane.future.TwitterFutureBenchmark.recursiveConst","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.newPromise","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.value","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.exception","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.mapConst","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.mapConstN","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.mapPromise","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.mapPromiseN","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.flatMapConst","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.flatMapConstN","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.flatMapPromise","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.ensureConst","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.ensureConstN","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.ensurePromise","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.setValue","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.setValueN","0"
"traneio/future","io.trane.future.TraneIOFutureBenchmark.recursiveConst","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.newPromise","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.value","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.exception","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.mapConst","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.mapConstN","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.mapPromise","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.mapPromiseN","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.flatMapConst","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.flatMapConstN","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.flatMapPromise","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.flatMapPromiseN","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.ensureConst","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.ensureConstN","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.ensurePromise","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.ensurePromiseN","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.setValue","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.setValueN","0"
"traneio/future","io.trane.future.ScalaFutureBenchmark.recursiveConst","0"
"trautonen/logback-ext","org.eluder.logback.ext.lmax.appender.AppenderBenchmark.throughput","0"
"trautonen/logback-ext","org.eluder.logback.ext.lmax.appender.AppenderBenchmark.latency","0"
"TridentSDK/Trident","net.tridentsdk.server.TestPlayerThreads.put","0"
"TridentSDK/Trident","net.tridentsdk.server.TestPlayerThreads.remove","0"
"TridentSDK/Trident","net.tridentsdk.server.AsmVsSun.asm","0"
"TridentSDK/Trident","net.tridentsdk.server.AsmVsSun.sun","0"
"TridentSDK/Trident","net.tridentsdk.server.PlayerThreadTest.benchASingle","0"
"TridentSDK/Trident","net.tridentsdk.server.PlayerThreadTest.benchEvery","0"
"TridentSDK/Trident","test.net.tridentsdk.server.AsmVsSun.asm","0"
"TridentSDK/Trident","test.net.tridentsdk.server.AsmVsSun.sun","0"
"TridentSDK/Trident","test.net.tridentsdk.server.EventBusPerformance.AregisterEb","0"
"TridentSDK/Trident","test.net.tridentsdk.server.EventBusPerformance.AregisterEm","0"
"TridentSDK/Trident","test.net.tridentsdk.server.EventBusPerformance.BdoCallEb","0"
"TridentSDK/Trident","test.net.tridentsdk.server.EventBusPerformance.BdoCallEm","0"
"TridentSDK/Trident","test.net.tridentsdk.server.ObjectCreationTest.create","0"
"TridentSDK/Trident","test.net.tridentsdk.server.PlayerThreadTest.benchASingle","0"
"TridentSDK/Trident","test.net.tridentsdk.server.PlayerThreadTest.benchEvery","0"
"TridentSDK/Trident","test.net.tridentsdk.server.TestPlayerThreads.put","0"
"TridentSDK/Trident","test.net.tridentsdk.server.TestPlayerThreads.remove","0"
"TridentSDK/Trident","net.tridentsdk.server.AsmVsSun.control","0"
"TridentSDK/Trident","net.tridentsdk.server.AsmVsSun.normal","0"
"TridentSDK/Trident","net.tridentsdk.server.EventBusPerformance.control","0"
"TridentSDK/Trident","net.tridentsdk.server.EventBusPerformance.eventBusRegister","0"
"TridentSDK/Trident","net.tridentsdk.server.EventBusPerformance.aeventManagerRegister","0"
"TridentSDK/Trident","net.tridentsdk.server.EventBusPerformance.eventBusDispatch","0"
"TridentSDK/Trident","net.tridentsdk.server.EventBusPerformance.eventManagerDispatch","0"
"TridentSDK/Trident","net.tridentsdk.server.SchedulerTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.SchedulerTest.tick","0"
"TridentSDK/Trident","net.tridentsdk.server.TaskExecTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.TaskExecTest.serviceEquivalent","0"
"TridentSDK/Trident","net.tridentsdk.server.TaskExecTest.executorService","0"
"TridentSDK/Trident","net.tridentsdk.server.TaskExecTest.concurrentTaskExecutor","0"
"TridentSDK/Trident","net.tridentsdk.server.CacheTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.CacheTest.retrieve","0"
"TridentSDK/Trident","net.tridentsdk.server.CacheTest.chmRetrieve","0"
"TridentSDK/Trident","net.tridentsdk.server.CHMTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.CHMTest.v8CHMPut","0"
"TridentSDK/Trident","net.tridentsdk.server.CHMTest.v8CHMRemove","0"
"TridentSDK/Trident","net.tridentsdk.server.CHMTest.CHMPut","0"
"TridentSDK/Trident","net.tridentsdk.server.CHMTest.CHMRemove","0"
"TridentSDK/Trident","net.tridentsdk.server.BenchmarkTemplate.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.AsmVsSun.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.AsmVsSun.asm","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.AsmVsSun.sun","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.AsmVsSun.normal","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.EventBusPerformance.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.EventBusPerformance.eventBusRegister","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.EventBusPerformance.eventManagerRegister","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.EventBusPerformance.eventBusDispatch","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.EventBusPerformance.eventManagerDispatch","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TickTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TickTest.tick","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SchedulerTest.tick","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TaskExecTest.executorFactory","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TaskExecTest.zexecutorService","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TaskExecTest.concurrentTaskExecutor","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.CacheTest.retrieve","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.CHMTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.CHMTest.v8CHMPut","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.CHMTest.v8CHMRemove","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.CHMTest.CHMPut","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.CHMTest.CHMRemove","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.PaddingTest.normal","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.PaddingTest.padded","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.PlayerThreadTest.benchASingle","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.PlayerThreadTest.benchEvery","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.BenchmarkTemplate.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.LatchTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.LatchTest.down","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.LatchTest.wait","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.MapTest.weakPut","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.MapTest.regPut","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TaskExecTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TaskExecTest.tridentExecute","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TaskExecTest.javaExecute","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.TaskExecTest.tridentThreadExecute","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SubstanceTest.testLowSubstanceSlow","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SubstanceTest.testMidSubstanceSlow","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SubstanceTest.testHighSubstanceSlow","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SubstanceTest.testLowSubstanceFast","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SubstanceTest.testMidSubstanceFast","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SubstanceTest.testHighSubstanceFast","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SubstanceTest.testSlowSubstanceAggregate","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.SubstanceTest.testFastSubstanceAggregate","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.DefaultGeneratorTest.testSimplex","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.DefaultGeneratorTest.testSimplex2","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.MetaTest.control","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.MetaTest.map","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.MetaTest.set","0"
"TridentSDK/Trident","net.tridentsdk.server.bench.GenTest.gen","0"
"TridentSDK/Trident","net.tridentsdk.server.command.LoggerTest.log","0"
"TridentSDK/Trident","net.tridentsdk.server.packet.InstantiationTest.baseLine","0"
"TridentSDK/Trident","net.tridentsdk.server.packet.InstantiationTest.normalInstantiation","0"
"TridentSDK/Trident","net.tridentsdk.server.packet.InstantiationTest.funcInstantiation","0"
"TridentSDK/Trident","net.tridentsdk.server.packet.InstantiationTest.reflectionInstantiation","0"
"TridentSDK/Trident","net.tridentsdk.server.BlockBenchmark.testWrite","0"
"TridentSDK/Trident","net.tridentsdk.server.BlockBenchmark.testRead","0"
"TridentSDK/Trident","net.tridentsdk.server.EventTest.run","0"
"TridentSDK/TridentSDK","net.tridentsdk.base.VectorsTest.addT","0"
"ttsiodras/HexSpeak","com.mycompany.MyBenchmark.testMethod","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.EncodePolicyBenchmark.encodeRandomPolicy","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.EncodePolicyBenchmark.encodeSuccessivePolicy","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.RequestParserBenchmark.streamParseRandomRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.RequestParserBenchmark.domParseRandomRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.RequestParserBenchmark.streamParseSuccessiveRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.RequestParserBenchmark.domParseSuccessiveRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.PolicyParserBenchmark.domParseRandomPolicy","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.PolicyParserBenchmark.streamParseRandomPolicy","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.EncodeRequestBenchmark.encodeRandomRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.general.EncodeRequestBenchmark.encodeSuccessiveRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.balana.NoCacheFinderBenchmark.findPolicyRandomRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.balana.CacheFinderBenchmark.findPolicyRandomRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.balana.NoCacheExtendedPDPBenchmark.processRandomRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.balana.NoCacheExtendedPDPBenchmark.processSuccessiveRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.balana.CacheExtendedPDPBenchmark.processRandomRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.balana.CacheExtendedPDPBenchmark.processSuccessiveRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.balana.TargetMatchBenchmark.matchRandomPolicyRequest","0"
"TU-Berlin-SNET/tresor-pdp-caching","ilhn.xacml.benchmark.balana.EvaluationBenchmark.evaluate","0"
"tudorv91/SparkJNI","stream.StreamBenchmark.mainJava","0"
"tudorv91/SparkJNI","stream.StreamBenchmark.mainNative","0"
"tudorv91/SparkJNI","pairhmm.PairHmmBenchmark.main","0"
"tweakers-dev/objectpool-benchmarks","net.tweakers.objectpool.SingleThreadedFormatBench.formatThread01","0"
"tweakers-dev/objectpool-benchmarks","net.tweakers.objectpool.AbstractMultiThreadedFormatBench.formatThread01","0"
"tweakers-dev/objectpool-benchmarks","net.tweakers.objectpool.AbstractMultiThreadedFormatBench.formatThread02","0"
"tweakers-dev/objectpool-benchmarks","net.tweakers.objectpool.AbstractMultiThreadedFormatBench.formatThread04","0"
"tweakers-dev/objectpool-benchmarks","net.tweakers.objectpool.AbstractMultiThreadedFormatBench.formatThread08","0"
"tweakers-dev/objectpool-benchmarks","net.tweakers.objectpool.AbstractMultiThreadedFormatBench.formatThread16","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.readHashMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.readShapeMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.readShapeMapAccessor","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.readShapeMapAccessorFallback","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.putHashMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.putShapeMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.putShapeMapAccessor","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.putShapeMapAccessorSetOnly","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.readHashMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.readShapeMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.readShapeMapAccessor","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.readShapeMapAccessorFallback","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.putHashMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.putShapeMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.putShapeMapAccessor","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.putShapeMapAccessorSetOnly","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.readHashMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.readShapeMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.readShapeMapAccessor","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.readShapeMapAccessorFallback","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.putHashMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.putShapeMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.putShapeMapAccessor","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.putShapeMapAccessorSetOnly","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.readHashMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.readShapeMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.readShapeMapAccessor","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.readShapeMapAccessorFallback","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.putHashMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.putShapeMap","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.putShapeMapAccessor","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.putShapeMapAccessorSetOnly","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.hashMap_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.shapeMap_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.accessor_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.shapeMap_geta","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.fallback_accessor_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.hashMap_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.shapeMap_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.acessor_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.shapeMap_puta","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.accessor_set","0"
"twineworks/collections","com.twineworks.collections.shapemap.BigMapBenchmark.shapeMap_seta","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.hashMap_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.shapeMap_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.accessor_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.shapeMap_geta","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.fallback_accessor_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.hashMap_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.shapeMap_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.acessor_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.shapeMap_puta","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.accessor_set","0"
"twineworks/collections","com.twineworks.collections.shapemap.MediumMapBenchmark.shapeMap_seta","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.hashMap_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.shapeMap_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.accessor_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.shapeMap_geta","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.fallback_accessor_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.hashMap_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.shapeMap_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.acessor_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.shapeMap_puta","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.accessor_set","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapWithCollisionsBenchmark.shapeMap_seta","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.hashMap_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.shapeMap_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.accessor_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.shapeMap_geta","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.fallback_accessor_get","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.hashMap_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.shapeMap_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.acessor_put","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.shapeMap_puta","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.accessor_set","0"
"twineworks/collections","com.twineworks.collections.shapemap.SmallMapBenchmark.shapeMap_seta","0"
"twitter/hpack","com.twitter.hpack.microbench.DecoderBenchmark.decode","0"
"twitter/hpack","com.twitter.hpack.microbench.EncoderBenchmark.encode","0"
"txazo/java","org.txazo.jvm.jit.DoEscapeAnalysisTest.testDoEscapeAnalysis","0"
"txazo/java","org.txazo.jvm.jit.DoEscapeAnalysisTest.testDonotEscapeAnalysis","0"
"txazo/java","org.txazo.jmh.JMHHelloWorld.test","0"
"txazo/java","org.txazo.jmh.JMHDefaultState.measure","0"
"txazo/java","org.txazo.jmh.JMHState.measureShared","0"
"txazo/java","org.txazo.jmh.JMHState.measureUnshared","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.client.PhTreeKNNBenchmark.basicSearchAllNeighbours","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.client.PhTreeKNNBenchmark.rectangleRangeSearch","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.client.PhTreeKNNBenchmark.rectangleRangeSearchFiltered","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.client.PhTreeKNNBenchmark.rectangleRangeKNNSearch","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.encoding.EncodingBenchmark.encodeResponseDefault","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.encoding.EncodingBenchmark.encodeResponseKryo","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.encoding.EncodingBenchmark.encodeMapDefault","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.encoding.EncodingBenchmark.encodeMapKryo","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.cloning.CloningBenchmark.deepClone_Cloning","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.cloning.CloningBenchmark.deepClone_Kryo","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.cloning.CloningBenchmark.deepClone_Manual","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.client.PhTreeWithZMappingKNNBenchmark.rectangleRangeSearch","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.client.PhTreeWithZMappingKNNBenchmark.rectangleRangeSearchFiltered","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.client.PhTreeWithZMappingKNNBenchmark.rectangleRangeKNNSearch","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.serialization.SerializationBenchmark.serialize_FullTree","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.serialization.SerializationBenchmark.serialize_Iterative","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.serialization.SerializationBenchmark.deserialize_FullTree","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.serialization.SerializationBenchmark.deserialize_IterativeTree","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.MultiThreadedBenchmark_Insert.putRandom_COW","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.MultiThreadedBenchmark_Insert.putRandom_HandOverHand","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.MultiThreadedBenchmark_Insert.putRandom_OL","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.SingleThreadBenchmark_Insert.putRandom_NoConcurrent","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.SingleThreadBenchmark_Insert.putRandom_COW","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.SingleThreadBenchmark_Insert.putRandom_HandOverHand","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.SingleThreadBenchmark_Insert.putRandom_OL","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.ConcurrencyBenchmark.putRandom_NoConcurrent","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.ConcurrencyBenchmark.putRandom_COW","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.ConcurrencyBenchmark.putRandom_HandOverHand","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.ConcurrencyBenchmark.putRandom_OL","0"
"tzaeschke/distributed-phtree","ch.ethz.globis.distindex.phtree.ConcurrencyBenchmark.putRandom_BigLock","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3SetToMultiPolygonBenchmark.benchmarkH3SetToMultiPolygon2","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3SetToMultiPolygonBenchmark.benchmarkH3SetToMultiPolygon20","0"
"uber/h3-java","com.uber.h3core.benchmarking.KRingBenchmark.benchmarkHexRingsCore","0"
"uber/h3-java","com.uber.h3core.benchmarking.KRingBenchmark.benchmarkHexRangeCore","0"
"uber/h3-java","com.uber.h3core.benchmarking.KRingBenchmark.benchmarkHexRingsCoreNearPentagon","0"
"uber/h3-java","com.uber.h3core.benchmarking.KRingBenchmark.benchmarkHexRangeCoreNearPentagon","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3ParentChildBenchmark.benchmarkH3GetResolution","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3ParentChildBenchmark.benchmarkH3ToParent","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3ParentChildBenchmark.benchmarkH3ToChildrenRes10","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3ParentChildBenchmark.benchmarkH3ToChildrenRes11","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3ParentChildBenchmark.benchmarkH3ToChildrenPentagon","0"
"uber/h3-java","com.uber.h3core.benchmarking.PolyfillBenchmark.benchmarkPolyfill","0"
"uber/h3-java","com.uber.h3core.benchmarking.PolyfillBenchmark.benchmarkPolyfillWithHole","0"
"uber/h3-java","com.uber.h3core.benchmarking.PolyfillBenchmark.benchmarkPolyfillWithTwoHoles","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3CoreBenchmark.benchmarkCreateH3Core","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3CoreBenchmark.benchmarkGeoToHex","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3CoreBenchmark.benchmarkGetCenterCoordinates","0"
"uber/h3-java","com.uber.h3core.benchmarking.H3CoreBenchmark.benchmarkGetBoundary","0"
"uber/tchannel-java","com.uber.tchannel.benchmarks.PingPongServerBenchmark.benchmark","0"
"uber/tchannel-java","com.uber.tchannel.benchmarks.PingPongMultiServerBenchmark.benchmark","0"
"uber/tchannel-java","com.uber.tchannel.benchmarks.LargePayloadBenchmark.benchmark","0"
"uchuhimo/kotlin-playground","com.uchuhimo.volatilePattern.YDependBenchmark.testOnce","0"
"uchuhimo/kotlin-playground","com.uchuhimo.volatilePattern.YDependBenchmark.testAtLeastOnce","0"
"udoprog/scribe","eu.toolchain.scribe.Basic.simple","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.Immediate.tiny","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.Immediate.guava","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.CollectMany.tiny","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.CollectMany.guava","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.CollectFew.tiny","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.CollectFew.guava","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyListeners.tiny","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyListeners.guava","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyThreads.tiny","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyThreads.guava","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyThreadsAddingListeners.tiny","1"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyThreadsAddingListeners.guava","1"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.CollectMany.completable","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyListeners.completable","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyThreads.completable","0"
"udoprog/tiny-async-java","eu.toolchain.perftests.jmh.ManyThreadsAddingListeners.completable","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.FSTPerformance.testSerializeToNull","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.FSTPerformance.testSerializeToMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.FSTPerformance.testDeserializeFromMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.KryoPerformance.testSerializeToNull","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.KryoPerformance.testSerializeToMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.KryoPerformance.testDeserializeFromMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.MessagePackPerformance.testSerializeToNull","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.MessagePackPerformance.testSerializeToMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.MessagePackPerformance.testDeserializeFromMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyPerformance.testSerializeToNull","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyPerformance.testSerializeToMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyPerformance.testDeserializeFromMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyAutoMatterPerformance.testSerializeToNull","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyAutoMatterPerformance.testSerializeToMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyAutoMatterPerformance.testDeserializeFromMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyPerformanceImmediate.testSerializeToNull","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyPerformanceImmediate.testSerializeToMemory","0"
"udoprog/tiny-serializer-java","eu.toolchain.serializer.perftests.benchmarks.TinyPerformanceImmediate.testDeserializeFromMemory","0"
"uliashkevich/native-struct","net.nativestruct.benchmark.Benchmarks.pointsObject","0"
"uliashkevich/native-struct","net.nativestruct.benchmark.Benchmarks.pointsObjectWithAlloc","0"
"uliashkevich/native-struct","net.nativestruct.benchmark.Benchmarks.pointsObjectWithAllocSmall","0"
"uliashkevich/native-struct","net.nativestruct.benchmark.Benchmarks.pointsStruct","0"
"uliashkevich/native-struct","net.nativestruct.benchmark.Benchmarks.pointsStructWithAlloc","0"
"uliashkevich/native-struct","net.nativestruct.benchmark.Benchmarks.pointsStructWithAllocSmall","0"
"uliashkevich/native-struct","net.nativestruct.benchmark.Benchmarks.pointsStructIndexed","0"
"user405/test","org.numenta.nupic.benchmarks.SpatialPoolerLocalInhibitionBenchmark.measureAvgCompute_7_Times","0"
"user405/test","org.numenta.nupic.benchmarks.SpatialPoolerGlobalInhibitionBenchmark.measureAvgCompute_7_Times","0"
"user405/test","org.numenta.nupic.benchmarks.TemporalMemoryBenchmark.measureAvgCompute_7_Times","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.HashTest.randomBaseline","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.HashTest.queryHash","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.HashTest.joinHash","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryExistsInTest.queryFirstByOic","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryExistsInTest.queryFirstByOicAndLvalue","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryExistsInTest.queryFirstByOicAndSvalue","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.randomBaseline","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.createIdQuery","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.createExistsQuery","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.createUniqueExistsQuery","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.createQueryOptions","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.randomList1Baseline","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.randomList5Baseline","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.randomList10Baseline","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.BaselineTest.randomList100Baseline","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryTest.existsJoin","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryTest.existsJoinWithSubquery","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryTest.iteratorJoinByEID","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryTest.streamJoinByEID","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryTest.iteratorJoinByEIDWithClose","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryTest.joinByEID","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryTest.cubeExistsJoinFirstEntry","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryTest.uniqueQuery","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryValueObjectTest.randomBaseline","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryValueObjectTest.sizeById","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryValueObjectTest.queryById","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryValueObjectTest.queryByIdStream","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryValueObjectTest.queryIn","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryValueObjectTest.queryInDeduplicate","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryValueObjectTest.queryInStream","0"
"uujava/cqengine-query-jmh","ru.programpark.tests.perf.query.QueryValueObjectTest.queryInStreamDeduplicate","0"
"Vanilla-Java/Microservices","net.openhft.samples.microservices.ComponentsBenchmark.benchmarkComponents","0"
"Vanilla-Java/Microservices","net.openhft.samples.microservices.orders.ComponentsBenchmark.benchmarkComponents","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test1_apacheToInputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test2_guavaCharStreams","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test3_jdkScanner","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test4_jdkJava8","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test5_jdkJava8parallel","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test6_inputStreamReaderAndStringBuilder","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test7_apacheStringWriterAndIOUtilsCopy","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test8_readByteArrayOutputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test9_bufferedReaderReadLine","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test10_bufferedInputStreamAndByteArrayOutputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBenchmark.test11_inputStreamReadAndStringBuilder","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.apacheToInputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.guavaCharStreams","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.jdkScanner","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.jdkJava8","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.jdkJava8parallel","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.inputStreamReaderAndStringBuilder","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.apacheStringWriterAndIOUtilsCopy","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.readByteArrayOutputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.bufferedReaderReadLine","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.bufferedInputStreamAndByteArrayOutputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertInputStreamToStringBigBenchmark.inputStreamReadAndStringBuilder","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.countMatches","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.countOccurrencesOf","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.replace","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.replaceAll1","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.replaceAll2","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.split","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.java8","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.java8_1","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.FindCountOfOccurrencesBenchmark.stringTokenizer","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertBigStringToInputStreamBenchmark.apacheToInputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertBigStringToInputStreamBenchmark.jdkByteArrayInputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertBigStringToInputStreamBenchmark.apacheReaderInputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertBigStringToInputStreamBenchmark.apacheInputStreamReader","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertStringToInputStreamBenchmark.apacheToInputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertStringToInputStreamBenchmark.jdkByteArrayInputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertStringToInputStreamBenchmark.apacheReaderInputStream","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.ConvertStringToInputStreamBenchmark.apacheInputStreamReader","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test1_UsingWhileAndMapEntry","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test2_UsingForEachAndMapEntry","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test3_UsingForEachAndJava8","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test4_UsingKeySetAndForEach","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test5_UsingKeySetAndIterator","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test6_UsingForAndIterator","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test7_UsingJava8StreamApi","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test8_UsingJava8StreamApiParallel","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test9_UsingApacheIterableMap","0"
"Vedenin/java_in_examples","com.github.vedenin.perfomace_test.iteratemap.IterateThroughHashMapTest.test10_UsingEclipseMap","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.noExceptionWithAutoCatch","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.noExceptionWithAutoCatchWithUnDeclare","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.noExceptionWithDirectForwardExceptionHandlerInvocation","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.noExceptionWithDirectUndeclaredExceptionHandlerInvocation","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.noExceptionWithAutoCatchOldGeneration","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.noExceptionWithNothing","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.noExceptionWithTryCatch","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.exceptionWithAutoCatch","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.exceptionWithAutoCatchOldGeneration","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.exceptionWithNothing","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPerformance.exceptionWithTryCatch","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPredicatePerformance.base","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPredicatePerformance.noExceptionWithNothing","0"
"vgalloy/autocatch","com.github.vgalloy.autocatch.TestPredicatePerformance.noExceptionWithAutoCatch","0"
"vibneiro/dispatching","vibneiro.DispatchBenchmark.dispatchWorkStealingSameKey","0"
"vibneiro/dispatching","vibneiro.DispatchBenchmark.dispatchWorkStealingUniqueId","0"
"vibneiro/dispatching","vibneiro.ThreadBoundHashDispatcherBenchmark.dispatcSameKey","0"
"vibneiro/dispatching","vibneiro.ThreadBoundHashDispatcherBenchmark.dispatchUniqueId","0"
"vibneiro/dispatching","vibneiro.ThreadBoundHashDispatcherBenchmark.dispatchRandomly","0"
"vibneiro/dispatching","vibneiro.CaffeinedDispatcherBenchmark.dispatchSameKey","0"
"vibneiro/dispatching","vibneiro.CaffeinedDispatcherBenchmark.dispatchUniqueId","0"
"vibneiro/dispatching","vibneiro.CaffeinedDispatcherBenchmark.dispatchRandomly","0"
"vibneiro/dispatching","vibneiro.WorkStealingDispatcherBenchmark.dispatchSameKey","0"
"vibneiro/dispatching","vibneiro.WorkStealingDispatcherBenchmark.dispatchUniqueId","0"
"vibneiro/dispatching","vibneiro.WorkStealingDispatcherBenchmark.dispatchRandomly","0"
"victor-cr/template-text-parser","com.codegans.ttp.jmh.PatternBenchmark.simpleBuildCompile","0"
"victor-cr/template-text-parser","com.codegans.ttp.jmh.PatternBenchmark.unboundBuildCompile","0"
"victor-cr/template-text-parser","com.codegans.ttp.jmh.RegExTemplateBuilderBenchmark.simpleBuildCompile","0"
"victor-cr/template-text-parser","com.codegans.ttp.jmh.RegExTemplateBuilderBenchmark.unboundBuildCompile","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customGet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customRemoveGet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customGetGet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customSet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customRemoveSet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customGetSet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customRemove","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customGetRemove","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.customRemoveRemove","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalGet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalRemoveGet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalGetGet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalSet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalRemoveSet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalGetSet","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalRemove","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalGetRemove","0"
"victor-cr/threadlocal-benchmark","com.oracle.jdk.benchmark.CustomThreadLocalBenchmark.originalRemoveRemove","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.UpdateBenchmark.poolPreparedBatchUpdate","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.SingleSelectBenchmark.poolPreparedQuery","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.SingleSelectBenchmark.pooledConnectionPreparedQuery","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.SingleSelectBenchmark.pooledConnectionPreparedStatementQuery","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.LargeSelectBenchmark.poolPreparedQuery","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.LargeSelectBenchmark.pooledConnectionPreparedQuery","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.LargeSelectBenchmark.pooledConnectionPreparedStatementQuery","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.PipelineBenchmark.test1","0"
"vietj/reactive-pg-client","com.julienviet.pgclient.PipelineBenchmark.test2","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.UpdateBenchmark.poolPreparedBatchUpdate","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.SingleSelectBenchmark.poolPreparedQuery","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.SingleSelectBenchmark.pooledConnectionPreparedQuery","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.SingleSelectBenchmark.pooledConnectionPreparedStatementQuery","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.LargeSelectBenchmark.poolPreparedQuery","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.LargeSelectBenchmark.pooledConnectionPreparedQuery","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.LargeSelectBenchmark.pooledConnectionPreparedStatementQuery","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.PipelineBenchmark.test1","0"
"vietj/reactive-pg-client","io.reactiverse.pgclient.PipelineBenchmark.test2","0"
"viniciusfbarbosa/DC-UFSCar-ES2-201601-Grupo-AMTV-","net.sf.jabref.benchmarks.Benchmarks.parse","0"
"viniciusfbarbosa/DC-UFSCar-ES2-201601-Grupo-AMTV-","net.sf.jabref.benchmarks.Benchmarks.write","0"
"viniciusfbarbosa/DC-UFSCar-ES2-201601-Grupo-AMTV-","net.sf.jabref.benchmarks.Benchmarks.search","0"
"viniciusfbarbosa/DC-UFSCar-ES2-201601-Grupo-AMTV-","net.sf.jabref.benchmarks.Benchmarks.inferBibDatabaseMode","0"
"virsox/cepsim","ca.uwo.eng.sel.cepsim.bench.CepSimBenchmark.testMethod","0"
"virsox/cepsim","ca.uwo.eng.sel.cepsim.bench.ParametersBenchmark.testMethod","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmark.b0","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmark.b1","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmark.b2","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmark.b3","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.add","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.subtract","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.multiply","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.divide","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.toPrimArr0","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.toPrimArr1","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.toPrimArr2","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.toPrimArr3","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.createNew","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.deBytes","0"
"VitrifiedCode/JavaUtilities","com.github.vitrifiedcode.javautilities.test.Benchmarker.deJson","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bandwidthlimiter.BenchmarkingThreadSafeAndUnsafeImplementationForCornerCaseOfSingleThread.benchmarkLocalThreadSafe","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bandwidthlimiter.BenchmarkingThreadSafeAndUnsafeImplementationForCornerCaseOfSingleThread.benchmarkLocalUnsafe","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bandwidthlimiter.BenchmarkingMilisendsAndNanotimePrecision.benchmarkNanosecondPrecision","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bandwidthlimiter.BenchmarkingMilisendsAndNanotimePrecision.benchmarkMillisecondPrecision","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bandwidthlimiter.BenchmarkingWithGuavaRateLimiter.baseline","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bandwidthlimiter.BenchmarkingWithGuavaRateLimiter.benchmarkLocalThreadSafe","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bandwidthlimiter.BenchmarkingWithGuavaRateLimiter.benchmarkGuavaLimiter","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bucket4j.BenchmarkingMilisendsAndNanotimePrecision.benchmarkNanosecondPrecision","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bucket4j.BenchmarkingMilisendsAndNanotimePrecision.benchmarkMillisecondPrecision","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bucket4j.BenchmarkingWithGuavaRateLimiter.baseline","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bucket4j.BenchmarkingWithGuavaRateLimiter.benchmarkLocalThreadSafe","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bucket4j.BenchmarkingWithGuavaRateLimiter.benchmarkGuavaLimiter","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bucket4j.BenchmarkingWithGuavaRateLimiter.benchmarkLocalLockFree","0"
"vladimir-bukhtoyarov/bucket4j","com.github.bucket4j.BenchmarkingWithGuavaRateLimiter.benchmarkLocalSynchronized","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.TryConsumeMostlySuccess.tryConsumeOneToken_mostlySuccess_LockFree","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.TryConsumeMostlySuccess.tryConsumeOneToken_mostlySuccess_Synchronized","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.TryConsumeMostlySuccess.tryConsumeOneToken_mostlySuccess_GuavaLimiter","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.BaseLineWithoutSynchronization.tryConsumeOneToken_alwaysSuccess","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.BaseLineWithoutSynchronization.tryConsumeOneToken_alwaysSuccess_withoutRefill","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.BaseLineWithoutSynchronization.baseLineGetCurrentTimeMillis","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.ConsumeMostlySuccess.consumeOneToken_mostlySuccess_LockFree","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.ConsumeMostlySuccess.consumeOneToken_mostlySuccess_Synchronized","0"
"vladimir-bukhtoyarov/bucket4j","io.github.bucket4j.ConsumeMostlySuccess.consumeOneToken_mostlySuccess_GuavaLimiter","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.hitratio.SmoothlyDecayingHitRatioBenchmark.update","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.hitratio.SmoothlyDecayingHitRatioBenchmark.readRatio","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.hitratio.ResetPeriodicalyHitRatioBenchmark.update","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.hitratio.ResetPeriodicalyHitRatioBenchmark.readRatio","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.hitratio.UniformHitRatioBenchmark.update","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.hitratio.UniformHitRatioBenchmark.readRatio","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.hitratio.ResetAtSnapshotHitRatioBenchmark.update","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.hitratio.ResetAtSnapshotHitRatioBenchmark.readRatio","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.SmoothlyDecayingRollingCounterBenchmark.add","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.SmoothlyDecayingRollingCounterBenchmark.readSum","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.baseLineCurrentTimeMillis","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.baseLineIncrementAtomic","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.benchmarkAddToCounterWithLongResettingPeriod","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.benchmarkAddToCounterWithShortResettingPeriod","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.readSum","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.ResetAtSnapshotCounterBenchmark.add","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.ResetAtSnapshotCounterBenchmark.readSum","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.ResetPeriodicallyCounterBenchmark.add","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.counter.ResetPeriodicallyCounterBenchmark.readSum","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.ResetByChunksAccumulatorPerOperationBenchmark.baseLine","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.ResetByChunksAccumulatorPerOperationBenchmark.metricsCoreAdd","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.ResetByChunksAccumulatorPerOperationBenchmark.chunkedHistogramAdd","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.ResetByChunksAccumulatorPerOperationBenchmark.chunkedUpperLimitedHistogramAdd","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.ResetByChunksAccumulatorPerOperationBenchmark.hdrHistogramAdd","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.ResetByChunksAccumulatorPerOperationBenchmark.getMetricsCoreSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.ResetByChunksAccumulatorPerOperationBenchmark.getChunkedUpperLimitedHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.ResetByChunksAccumulatorPerOperationBenchmark.getChunkedHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getMetricsCoreHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getUniformHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getResetPeriodicallyHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getResetOnSnapshotHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getChunkedHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getChunkedUpperLimitedHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramRecordingBenchmark.baseLine","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramRecordingBenchmark.updateMetricsCoreHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramRecordingBenchmark.updateUniformHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramRecordingBenchmark.updateResetPeriodicallyHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramRecordingBenchmark.updateResetOnSnapshotHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramRecordingBenchmark.updateChunkedHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.accumulator.HistogramRecordingBenchmark.updateChunkedUpperLimitedHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.CountAtPercentileExtractionBenchmark.calculatePercentile_7","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.histogram.CountAtPercentileExtractionBenchmark.calculatePercentile_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.util.CostOfThreadUnpark.unpark","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.util.BackgroundExecutionUtilBenchmark.baseLine","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.util.BackgroundExecutionUtilBenchmark.costOfScheduling","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.util.BackgroundExecutionUtilBenchmark.costOfSchedulingOnJdkExecutor","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.util.BackgroundExecutionUtilBenchmark.fullCycle","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.metricscore.hdr.util.BackgroundExecutionUtilBenchmark.fullCycleOnJdkExecutor","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.baseLine","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.update_chunkedTop_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.getSnapshot_chunkedTop_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.update_chunkedTop_10","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.getSnapshot_chunkedTop_10","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.update_periodicallyTop_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.getSnapshot_periodicallyTop_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.update_periodicallyTop_10","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.getSnapshot_periodicallyTop_10","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.update_resetOnSnapshotTop_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.getSnapshot_resetOnSnapshotTop_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.update_resetOnSnapshotTop_10","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.getSnapshot_resetOnSnapshotTop_10","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.update_uniformTop_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.getSnapshot_uniformTop_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.update_uniformTop_10","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.top.TopBenchmark.getSnapshot_uniformTop_10","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.hitratio.SmoothlyDecayingHitRatioBenchmark.update","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.hitratio.SmoothlyDecayingHitRatioBenchmark.readRatio","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.hitratio.ResetPeriodicalyHitRatioBenchmark.update","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.hitratio.ResetPeriodicalyHitRatioBenchmark.readRatio","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.hitratio.ResetOnSnapshotHitRatioBenchmark.update","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.hitratio.ResetOnSnapshotHitRatioBenchmark.readRatio","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.hitratio.UniformHitRatioBenchmark.update","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.hitratio.UniformHitRatioBenchmark.readRatio","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.SmoothlyDecayingRollingCounterBenchmark.add","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.SmoothlyDecayingRollingCounterBenchmark.readSum","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.ResetOnSnapshotCounterBenchmark.add","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.ResetOnSnapshotCounterBenchmark.readSum","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.baseLineCurrentTimeMillis","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.baseLineIncrementAtomic","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.benchmarkAddToCounterWithLongResettingPeriod","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.benchmarkAddToCounterWithShortResettingPeriod","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.SmoothlyDecayingRollingCounterPerOperationBenchmark.readSum","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.ResetPeriodicallyCounterBenchmark.add","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.counter.ResetPeriodicallyCounterBenchmark.readSum","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getMetricsCoreHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getUniformHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getResetPeriodicallyHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getResetOnSnapshotHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getChunkedHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramSnapshotExtractionBenchmark.getChunkedUpperLimitedHistogramSnapshot","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramRecordingBenchmark.baseLine","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramRecordingBenchmark.updateMetricsCoreHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramRecordingBenchmark.updateUniformHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramRecordingBenchmark.updateResetPeriodicallyHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramRecordingBenchmark.updateResetOnSnapshotHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramRecordingBenchmark.updateChunkedHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.accumulator.HistogramRecordingBenchmark.updateChunkedUpperLimitedHistogram","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.CountAtPercentileExtractionBenchmark.calculatePercentile_7","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.histogram.CountAtPercentileExtractionBenchmark.calculatePercentile_1","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.util.CostOfThreadUnpark.unpark","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.util.BackgroundExecutionUtilBenchmark.baseLine","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.util.BackgroundExecutionUtilBenchmark.costOfScheduling","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.util.BackgroundExecutionUtilBenchmark.costOfSchedulingOnJdkExecutor","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.util.BackgroundExecutionUtilBenchmark.fullCycle","0"
"vladimir-bukhtoyarov/rolling-metrics","com.github.rollingmetrics.util.BackgroundExecutionUtilBenchmark.fullCycleOnJdkExecutor","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.GFLoggerBenchmark.payloadAlone","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.GFLoggerBenchmark.writeLogAppending","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.GFLoggerBenchmark.writeRawMessage","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.FormattingBenchmark.formatDoubleFull","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.FormattingBenchmark.formatDoubleWith3Digits","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.FormattingBenchmark.formatDoubleWith10Digits","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.FormattingBenchmark.formatDoubleWith16Digits","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.FormattingBenchmark.formatLong","0"
"vladimirdolzhenko/gflogger","org.gflogger.benchmarks.FormattingBenchmark.formatInt","0"
"vladimirdolzhenko/hashCodeLegend","com.UsernameCollisionLoadTest.fillMap","0"
"vladimirdolzhenko/hashCodeLegend","com.UsernameCollisionPerfTest.lookupUsername","0"
"vladimirdolzhenko/hashCodeLegend","com.UsernameCollisionStrLoadTest.fillMap","0"
"vladimirdolzhenko/hashCodeLegend","com.UsernameCollisionStrLoadTest.fillCmpMap","0"
"vladimirdolzhenko/hashCodeLegend","com.StringBufferPerfTest.buffer","0"
"vladimirdolzhenko/hashCodeLegend","com.StringBufferPerfTest.bufferWithIdHashCode","0"
"vladimirdolzhenko/hashCodeLegend","com.AllocationPerfTest.allocate","0"
"vladimirdolzhenko/hashCodeLegend","com.MultPerfTest.mult31","0"
"vladimirdolzhenko/hashCodeLegend","com.MultPerfTest.shift4","0"
"vladimirdolzhenko/hashCodeLegend","com.MultPerfTest.shift4AndSub","0"
"vladimirdolzhenko/hashCodeLegend","com.BaseHashLoad.fillMap","0"
"vladimirdolzhenko/hashCodeLegend","com.ScalePerfTest.mod","0"
"vladimirdolzhenko/hashCodeLegend","com.ScalePerfTest.and","0"
"vladimirdolzhenko/hashCodeLegend","com.MallocPerfTest.tlabAllocator","0"
"vladimirdolzhenko/hashCodeLegend","com.MallocPerfTest.javaAllocation","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.hashPcoll","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.treeDexx","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.treeDexxSmart","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.hashDexx","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.hashDexxSmart","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.hashClj","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.treeClj","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.hashBase","0"
"vlsi/compactmap","com.github.vlsi.compactmap.MyBenchmark.treeBase","0"
"volkodava/disruptor-benchmark-tests","com.disruptor.benchmark.DisruptorBenchmarks.processOneMlnEvents","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.ZephyrThreadRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.ForkJoinTaskRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.AkkaActorRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.QuasarActorRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.QuasarFiberRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.JavaThreadRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.ScalaForkJoinTaskRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.Jsr166ForkJoinTaskRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.ActiveObjectRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.AkkaTypedActorRingBenchmark.benchmark","0"
"volodarsky/zephyr-benchmark","org.jvnet.zephyr.benchmark.ZephyrActiveObjectRingBenchmark.benchmark","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringBenchmark.constConst","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringBenchmark.varVar","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringBenchmark.newNew","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringBenchmark.constConstFast","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringBenchmark.varVarFast","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringBenchmark.newNewFast","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.constConstString","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.varVarString","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.newNewString","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.constConstFast","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.varVarFast","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.newNewFast","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.constConstJdk9","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.varVarJdk9","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.newNewJdk9","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.initNewString","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.initNewFast","0"
"volodin-aa/openjdk-benchmark","su.tweak.openjdk.StringEqualsIgnoreCaseBenchmark.initNewJdk9","0"
"vongosling/jvm-serializer","com.creative.commons.utils.benchmark.JdkCodecBencmark.javaCodecMultiTest","0"
"vongosling/jvm-serializer","com.creative.commons.utils.benchmark.KryoBenchmark.kryoCodecMultiTest","0"
"vongosling/jvm-serializer","com.creative.commons.utils.benchmark.FastJsonBenchmark.jsonCodecMultiTest","0"
"vongosling/jvm-serializer","com.creative.commons.utils.benchmark.MsgPackBenchmark.msgPackCodecMultiTest","0"
"vongosling/jvm-serializer","com.creative.commons.utils.benchmark.HessianBenchmark.hessianCodecMultiTest","0"
"vsch/flexmark-java","org.commonmark.test.SpecBenchmark.wholeSpec","0"
"vsch/flexmark-java","org.commonmark.test.SpecBenchmark.examples","0"
"vsch/flexmark-java","org.commonmark.integration.PegDownBenchmark.wholeSpec","0"
"vsch/flexmark-java","org.commonmark.integration.PegDownBenchmark.examples","0"
"vsch/flexmark-java","com.vladsch.flexmark.test.SpecBenchmark.wholeSpec","0"
"vsch/flexmark-java","com.vladsch.flexmark.test.SpecBenchmark.examples","0"
"vsch/flexmark-java","com.vladsch.flexmark.integration.PegDownBenchmark.wholeSpec","0"
"vsch/flexmark-java","com.vladsch.flexmark.integration.PegDownBenchmark.examples","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashMapPut.timePut","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashMapRemove.timeRemove","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkBigramCounting.timeLibrary","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkPopCnt.timeLongBitCount","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkPopCnt.timeHdPopCnd","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkPopCnt.timeRank9","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkPopCnt.timeNaivePopCnt","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkCollectionsSort.timeIndirectMergeSort","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkCollectionsSort.timeLegacySort","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkCollectionsSort.timeNewSort","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkCollectionsSort.timeIndirectQuickSort","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashMapContains.timeContains","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashCollisions.timeSet_AddAll","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashCollisions.timeSet_AddAll_Successive","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashCollisions.timeSet_Direct_iteration_add_all","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashCollisions.timeSet_Direct_iteration_reversed_add_all","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashCollisions.timeSet_ForEach_add_all","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.ObjectArrayListBenchmark.testSimpleGetLoop","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.ObjectArrayListBenchmark.testDirectBufferLoop","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.ObjectArrayListBenchmark.testIterableCursor","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.ObjectArrayListBenchmark.testWithProcedureClosure","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.ObjectArrayListBenchmark.testDirectBufferWithNewFor","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.IterationSpeedBenchmark.testSimpleGetLoop","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.IterationSpeedBenchmark.testDirectBufferLoop","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.IterationSpeedBenchmark.testIterableCursor","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.IterationSpeedBenchmark.testWithProcedureClosure","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.IterationSpeedBenchmark.testDirectBufferWithNewFor","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.ArrayDequeBenchmark.testPushPops","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BitSetBenchmark.testCardinalityHPPC","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BitSetBenchmark.testCardinalityJRE","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BitSetBenchmark.testBitSetIteratorHPPC","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BitSetBenchmark.testIntCursorIteratorHPPC","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BitSetBenchmark.testIteratorHPPC","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BitSetBenchmark.testIteratorJRE","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.CardinalityBenchmark.testCardinality_dlinked","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.CardinalityBenchmark.testCardinality_hset","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.CardinalityBenchmark.testCardinality_bset","0"
"vsonnier/hppcrt","com.carrotsearch.hppcrt.jmh.BenchmarkHashMapExistingKeysPut.timeExistingKeysPut","0"
"waffle/waffle","waffle.windows.auth.WindowsAuthProviderLoadTests$St.benchmark","0"
"waffle/waffle","waffle.servlet.NegotiateSecurityFilterLoadTests$St.benchmark","0"
"wallerlab/yoink","sample.SampleBenchmark.testYoink","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.exceptions.EidIT.control","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.exceptions.EidIT.eid","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.utils.EidPreconditionsIT.testCheckArgument","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.utils.EidPreconditionsIT.testCheckState","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.utils.EidPreconditionsIT.testCheckNotNull","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.utils.EidPreconditionsIT.testCheckArgumentEid","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.utils.EidPreconditionsIT.testCheckStateEid","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.utils.EidPreconditionsIT.testCheckNotNullEid","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.utils.EidPreconditionsIT.testTryToExecuteSupplier","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.EidIT.control","0"
"wavesoftware/java-eid-exceptions","pl.wavesoftware.eid.EidIT.eid","0"
"wenerme/seq","me.wener.seq.internal.BenchAtomicLong.get","0"
"wenerme/seq","me.wener.seq.internal.ZKPSupplierPerformance.get","0"
"wesamhaboush/furmat","com.codebreeze.serialization.FormattingPerformanceTest.MessageFormatNoTypes","0"
"wesamhaboush/furmat","com.codebreeze.serialization.FormattingPerformanceTest.MessageFormatWithTypes","0"
"wesamhaboush/furmat","com.codebreeze.serialization.FormattingPerformanceTest.StringFormatNoTypes","0"
"wesamhaboush/furmat","com.codebreeze.serialization.FormattingPerformanceTest.StringFormatWithTypes","0"
"wesamhaboush/furmat","com.codebreeze.serialization.FormattingPerformanceTest.Furmat","0"
"wesleyegberto/courses-projects","com.airhacks.cdivsejb.stress.CDIvsEJBBenchmark.request","0"
"wesleyegberto/courses-projects","com.airhacks.logging.LoggerBenchmark.info","0"
"whitingjr/batch-rewrite-statements-perf","org.jboss.perf.pg.MultiInsertStatementTest.doSMALLMultirowInserts","0"
"whitingjr/batch-rewrite-statements-perf","org.jboss.perf.pg.MultiInsertStatementTest.doMEDIUMMultirowInserts","0"
"whitingjr/batch-rewrite-statements-perf","org.jboss.perf.pg.MultiInsertStatementTest.doLARGEMultirowInserts","0"
"whitingjr/batch-rewrite-statements-perf","org.jboss.perf.pg.IndividualStatementsTest.doSMALLMultiStatementInserts","0"
"whitingjr/batch-rewrite-statements-perf","org.jboss.perf.pg.IndividualStatementsTest.doMEDIUMMultiStatementInserts","0"
"whitingjr/batch-rewrite-statements-perf","org.jboss.perf.pg.IndividualStatementsTest.doLARGEMultiStatementInserts","0"
"willhaben/blog","at.willhaben.blog.jmh.Main.subtractWithDefaultLambda","0"
"willhaben/blog","at.willhaben.blog.jmh.Main.subtractArrayList","0"
"willhaben/blog","at.willhaben.blog.jmh.Main.subtractArrayListBinarySearch","0"
"willhaben/blog","at.willhaben.blog.jmh.Main.subtractLinkedList","0"
"willhaben/blog","at.willhaben.blog.jmh.Main.subtractLinkedListBinarySearch","0"
"witi83/jmh-primitive-data-types","de.witi.PrimitiveBenchmark.intMul","0"
"witi83/jmh-primitive-data-types","de.witi.PrimitiveBenchmark.byteMul","0"
"witi83/jmh-primitive-data-types","de.witi.PrimitiveBenchmark.shortMul","0"
"witi83/jmh-primitive-data-types","de.witi.PrimitiveBenchmark.intArray","0"
"witi83/jmh-primitive-data-types","de.witi.PrimitiveBenchmark.byteArray","0"
"witi83/jmh-primitive-data-types","de.witi.PrimitiveBenchmark.shortArray","0"
"witi83/jmh-streams","de.witi.StreamBenchmark.stream","0"
"witi83/jmh-streams","de.witi.StreamBenchmark.parallelStream","0"
"witi83/jmh-streams","de.witi.StreamBenchmark.classic","0"
"wondee/faststring","de.unifrankfurt.faststring.XalanBenchmarks.checkAttribQNameBenchmark","0"
"wondee/faststring","de.unifrankfurt.faststring.XalanBenchmarks.instantiateURIBenchmark","0"
"wondee/faststring","de.unifrankfurt.faststring.XalanBenchmarks.xNumberToString","0"
"wondee/faststring","de.unifrankfurt.faststring.XalanBenchmarks.compileXPath","0"
"wondee/faststring","de.unifrankfurt.faststring.ExampleBenchmark.exampleParser","0"
"wondee/faststring","de.unifrankfurt.faststring.XalanBenchmarks.xNumberToStringPositive","0"
"wondee/faststring","de.unifrankfurt.faststring.XalanBenchmarks.xNumberToStringNegative","0"
"wondee/faststring","de.unifrankfurt.faststring.XalanBenchmarks.xNumberToStringInteger","0"
"wondee/faststring","de.unifrankfurt.faststring.XalanBenchmarks.xNumberToStringExponent","0"
"Workiva/frugal","com.workiva.frugal.benchmarks.NatsBenchmark.testPublisher","0"
"wotifgroup/wotif-logutils","com.wotifgroup.logging.util.CardMaskingBenchmark.benchmark","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.ParserBenchmark.parseNestedList","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.ParserBenchmark.parseString100k","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.XmlFriendlyBenchmark.noCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.XmlFriendlyBenchmark.dollarCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.XmlFriendlyBenchmark.escapedUnderscoreCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.XmlFriendlyBenchmark.safeCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.ConverterTypeBenchmark.reflection","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.ConverterTypeBenchmark.javaBean","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.ConverterTypeBenchmark.custom","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.ParserBenchmark.parseBigText","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.ParserBenchmark.parseNestedElements","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.ParserBenchmark.parseManyChildren","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.StringConverterBenchmark.nonCaching","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.StringConverterBenchmark.intern","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.StringConverterBenchmark.unlimitedSynchronizedWeakCache","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.StringConverterBenchmark.limitedSynchronizedWeakCache","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.StringConverterBenchmark.unlimitedConcurrentMap","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.StringConverterBenchmark.limitedConcurrentMap","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.NameCoderBenchmark.noCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.NameCoderBenchmark.dollarCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.NameCoderBenchmark.escapedUnderscoreCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.NameCoderBenchmark.cachedEscapedUnderscoreCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.NameCoderBenchmark.xmlFriendlyCoding","0"
"x-stream/xstream","com.thoughtworks.xstream.benchmark.jmh.Base64Benchmark.run","0"
"xiajunsongfan/scud","com.xj.scud.JMHSampleTest.lock","0"
"xiajunsongfan/scud","com.xj.JMHSampleTest.lock","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSByte","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPByte","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSInt","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPInt","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSLong","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPLong","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testBOSMixed","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testBDOSPMixed","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyStringBOS","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyStringBDOSP","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMTinyLegacyWriteUTF","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallStringBOS","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallStringBDOSP","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMSmallLegacyWriteUTF","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeStringBOS","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeStringBDOSP","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testMLargeLegacyWriteUTF","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyStringBOS","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyStringBDOSP","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testTinyLegacyWriteUTF","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallStringBOS","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallStringBDOSP","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testSmallLegacyWriteUTF","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeStringBOS","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeStringBDOSP","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.OutputStreamBench.testRLargeLegacyWriteUTF","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.PendingRangesBench.searchToken","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.PendingRangesBench.searchTokenForOldPendingRanges","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.Sample.lz4","0"
"XueweiKent/LockedTransaction","org.apache.cassandra.test.microbench.Sample.snappy","0"
"xzy256/grpc-java-mips64","io.grpc.DecompressorRegistryBenchmark.dynamicAcceptEncoding","0"
"xzy256/grpc-java-mips64","io.grpc.DecompressorRegistryBenchmark.staticAcceptEncoding","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.TransportBenchmark.unaryCall1024","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.CallOptionsBenchmark.withOption","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.CallOptionsBenchmark.withOptionDuplicates","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.netty.StreamingPingPongsPerSecondBenchmark.pingPong","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.netty.HandlerRegistryBenchmark.lookupMethod","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.netty.UnaryCallResponseBandwidthBenchmark.unary","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.netty.SingleThreadBlockingQpsBenchmark.blockingUnary","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.netty.FlowControlledMessagesPerSecondBenchmark.stream","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.netty.UnaryCallQpsBenchmark.unary","0"
"xzy256/grpc-java-mips64","io.grpc.benchmarks.netty.StreamingResponseBandwidthBenchmark.stream","0"
"xzy256/grpc-java-mips64","io.grpc.netty.HeadersBenchmark.convertClientHeaders","0"
"xzy256/grpc-java-mips64","io.grpc.netty.HeadersBenchmark.convertServerHeaders","0"
"xzy256/grpc-java-mips64","io.grpc.netty.HeadersBenchmark.encodeClientHeaders","0"
"y-lan/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.handCoded","0"
"y-lan/presto","com.facebook.presto.sql.gen.BenchmarkPageProcessor.compiled","0"
"y-lan/presto","com.facebook.presto.operator.BenchmarkGroupByHash.runBenchmark","0"
"y-lan/presto","com.facebook.presto.BenchmarkHashPagePartitionFunction.runBenchmark","0"
"y-lan/presto","com.facebook.presto.BenchmarkPagesIndexPageSorter.runBenchmark","0"
"y-lan/presto","com.facebook.presto.operator.BenchmarkGroupByHash.groupByHashPreCompute","0"
"y-lan/presto","com.facebook.presto.operator.BenchmarkGroupByHash.addPagePreCompute","0"
"y-lan/presto","com.facebook.presto.operator.BenchmarkGroupByHash.bigintGroupByHash","0"
"y-lan/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baseline","0"
"y-lan/presto","com.facebook.presto.operator.BenchmarkGroupByHash.baselineBigArray","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLength","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStart","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLength","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartFromEnd","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkSubstringStartLengthFromEnd","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkReverse","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLeftTrim","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkRightTrim","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkTrim","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkUpper","0"
"y-lan/presto","com.facebook.presto.operator.scalar.StringFunctionsBenchmark.benchmarkLower","0"
"y-lan/presto","com.facebook.presto.operator.scalar.RegexpFunctionsBenchmark.benchmarkLike","0"
"y-lan/presto","com.facebook.presto.spi.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"y-lan/presto","com.facebook.presto.sql.gen.InCodeGeneratorBenchmark.benchmark","0"
"y-lan/presto","com.facebook.presto.spi.predicate.BenchmarkSortedRangeSet.benchmarkBuilder","0"
"y-lan/presto","com.facebook.presto.operator.scalar.BenchmarkArrayDistinct.arrayDistinct","0"
"y-lan/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.rowOriented","0"
"y-lan/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.columnOriented","0"
"y-lan/presto","com.facebook.presto.sql.gen.PageProcessorBenchmark.columnOrientedDictionary","0"
"y-lan/presto","com.facebook.presto.execution.BenchmarkNodeScheduler.benchmark","0"
"yanchith/pattern","pattern.benchmarks.AOptionalAPatternsBenchmark.benchmark","0"
"yanchith/pattern","pattern.benchmarks.ArrayBenchmark.mapped2DArrayBenchmark","0"
"yanchith/pattern","pattern.benchmarks.ArrayBenchmark.native2DArrayBenchmark","0"
"yanchith/pattern","pattern.benchmarks.BasicRegexBenchmark.measure","0"
"yanchith/pattern","pattern.benchmarks.AOptionalARegexBenchmark.measure","0"
"yanchith/pattern","pattern.benchmarks.BasicPatternsBenchmark.benchmark","0"
"yanchith/pattern","pattern.benchmarks.LongRegexBenchmark.benchmark","0"
"yanchith/pattern","pattern.benchmarks.LongPatternsBenchmark.benchmark","0"
"yanchith/pattern","pattern.benchmarks.BasicRegexBenchmark.benchmark","0"
"yanchith/pattern","pattern.benchmarks.AOptionalARegexBenchmark.benchmark","0"
"yanchith/pattern","pattern.benchmarks.pattern.StandardBenchmark.regexFind","0"
"yanchith/pattern","pattern.benchmarks.pattern.StandardBenchmark.patternFind","0"
"yanchith/pattern","pattern.benchmarks.pattern.StandardBenchmark.patternFindAll","0"
"yanchith/pattern","pattern.benchmarks.pattern.PathologicalBenchmark.patternFindAll","0"
"yanchith/pattern","pattern.benchmarks.pattern.PathologicalBenchmark.regexFind","0"
"yanchith/pattern","pattern.benchmarks.array.ArrayBenchmark.mapped2DArrayBenchmark","0"
"yanchith/pattern","pattern.benchmarks.array.ArrayBenchmark.native2DArrayBenchmark","0"
"yanchith/pattern","pattern.benchmarks.array.IterationBenchmark.nativeBenchmark","0"
"yanchith/pattern","pattern.benchmarks.array.IterationBenchmark.boxedBenchmark","0"
"yanchith/pattern","pattern.benchmarks.array.IterationBenchmark.listBenchmark","0"
"yanchith/pattern","pattern.benchmarks.array.IterationBenchmark.listIterBenchmark","0"
"yanchith/pattern","pattern.benchmarks.pattern.StandardBenchmark.measureRegexFind","0"
"yanchith/pattern","pattern.benchmarks.pattern.StandardBenchmark.measurePatternFind","0"
"yanchith/pattern","pattern.benchmarks.pattern.StandardBenchmark.measurePatternFindAll","0"
"yanchith/pattern","pattern.benchmarks.pattern.PathologicalBenchmark.measurePatternFindAll","0"
"yanchith/pattern","pattern.benchmarks.pattern.PathologicalBenchmark.measureRegexFind","0"
"yanchith/pattern","pattern.benchmarks.array.ArrayBenchmark.measureMapped2DArrayCopy","0"
"yanchith/pattern","pattern.benchmarks.array.ArrayBenchmark.measureNative2DArrayCopy","0"
"yanchith/pattern","pattern.benchmarks.array.IterationBenchmark.measurePrimitiveArray","0"
"yanchith/pattern","pattern.benchmarks.array.IterationBenchmark.measureBoxedArray","0"
"yanchith/pattern","pattern.benchmarks.array.IterationBenchmark.measureBoxedList","0"
"yanchith/pattern","pattern.benchmarks.array.IterationBenchmark.measureBoxedListIter","0"
"yandex/yoctodb","com.yandex.yoctodb.util.mutable.impl.LongArrayBitSetBenchmarks.onesIterator","0"
"yandex/yoctodb","com.yandex.yoctodb.util.mutable.impl.LongArrayBitSetBenchmarks.interleavedIterator","0"
"yandex/yoctodb","com.yandex.yoctodb.util.mutable.impl.LongArrayBitSetBenchmarks.randomIterator","0"
"yandex/yoctodb","com.yandex.yoctodb.util.mutable.impl.LongArrayBitSetBenchmarks.zerosIterator","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.fixed","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.variable","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.trie","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.bitSetGet","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.listSetGet","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.ascendingSetGet","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.bitSetFrom","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.listSetFrom","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.ascendingSetFrom","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.bitSetUntil","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.listSetUntil","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.IndexToIndexMultiMapBenchmark.ascendingSetUntil","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.random_8bytes_64K_fixed","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.random_8bytes_64K_variable","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.random_8bytes_64K_trie","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.random_prefixed_string_100K_fixed","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.random_prefixed_string_100K_variable","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.random_prefixed_string_100K_trie","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.price_fixed","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.price_variable","0"
"yandex/yoctodb","com.yandex.yoctodb.util.immutable.ByteArraySortedSetBenchmarks.price_trie","0"
"yshahun/probabilistic-util","ys.metric.benchmark.CardinalityMeterBenchmark.count_1","0"
"yshahun/probabilistic-util","ys.metric.benchmark.CardinalityMeterBenchmark.count_2","0"
"yshahun/probabilistic-util","ys.metric.benchmark.CardinalityMeterBenchmark.count_4","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsBS256MPS4MUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsBS256MPS8MUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsBS512MPS4MUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsBS512MPS8MUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeSNAPPY","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.ReadBenchmarks.read1MRowsDefaultBlockAndPageSizeGZIP","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsBS256MPS4MUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsBS256MPS8MUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsBS512MPS4MUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsBS512MPS8MUncompressed","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeSNAPPY","0"
"yulang/Modified-Parquet","org.apache.parquet.benchmarks.WriteBenchmarks.write1MRowsDefaultBlockAndPageSizeGZIP","0"
"Zappos/zappos-json","com.zappos.json.benchmark.SimpleSerializationBenchmark.serializeUsingGson","0"
"Zappos/zappos-json","com.zappos.json.benchmark.SimpleSerializationBenchmark.serializeUsingJackson","0"
"Zappos/zappos-json","com.zappos.json.benchmark.SimpleSerializationBenchmark.serializeUsingBoon","0"
"Zappos/zappos-json","com.zappos.json.benchmark.SimpleSerializationBenchmark.serializeUsingZapposJson","0"
"Zappos/zappos-json","com.zappos.json.benchmark.SimpleDeserializationBenchmark.deserializeUsingGson","0"
"Zappos/zappos-json","com.zappos.json.benchmark.SimpleDeserializationBenchmark.deserializeUsingJackson","0"
"Zappos/zappos-json","com.zappos.json.benchmark.SimpleDeserializationBenchmark.deserializeUsingBoon","0"
"Zappos/zappos-json","com.zappos.json.benchmark.SimpleDeserializationBenchmark.deserializeUsingZapposJson","0"
"zapster/graal-core","com.oracle.graal.virtual.bench.PartialEscapeBench.benchPartialEscape","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.normalArraycopy","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.arraysCopyOf","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.ArrayDuplicationBenchmark.cloneObjectArray","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark.nullness","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.ConditionalEliminationBenchmark.search","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark.nullness","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.GraphCopyBenchmark.search","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.getNodeClass","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.inputs","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.usages","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.nonNullInputs","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueEquals_STRING_EQUALS","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueEquals_HASHMAP_COMPUTE_IF_ABSENT","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueNumberLeaf_HASHMAP_COMPUTE_IF_ABSENT","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.valueNumberLeaf_STRING_EQUALS","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.stringEquals","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_LATEST_OPTIMAL","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_LATEST_OUT_OF_LOOPS_OPTIMAL","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.intersection_EARLIEST_OPTIMAL","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.FrameStateAssigmentPhaseBenchmark.nextToken","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark.setAgeCond","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark.getAge","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SimpleSyncBenchmark.getAndIncAge","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.TestJMH.testJMH","0"
"zapster/graal-core","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench.doMinMaxInJava","0"
"zapster/graal-core","com.oracle.graal.truffle.bench.interop.JavaInteropSpeedBench.doMinMaxWithInterOp","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.nodeBitmap","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute1","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute2","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute3","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.SchedulePhaseBenchmark.cfgCompute4","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark.lsra_STRING_equals","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark.lsra_HASHMAP_computeIfAbsent","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark.tracera_STRING_equals","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.RegisterAllocationTimeBenchmark.tracera_HASHMAP_computeIfAbsent","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark.compile","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark.frontend","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.CompileTimeBenchmark.backend","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.trace.TraceBuilderBenchmark.uniDirectionalTraceBuilder","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.trace.TraceBuilderBenchmark.biDirectionalTraceBuilder","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.dataEquals","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.replaceFirstInput","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.inputsEquals","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.acceptInputs","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.createAndDeleteAdd","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.NodeBenchmark.createAndDeleteConstant","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathLog","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathLog10","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathSin","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathCos","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.graal.MathFunctionBenchmark.mathTan","0"
"zapster/graal-core","com.oracle.graal.microbenchmarks.lir.trace.TraceLSRAIntervalBuildingBench.buildIntervals","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads1hot","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads2hot","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads4hot","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads8hot","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads16hot","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.threads32hot","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.thinkReadHot","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.BufferPerformanceBenchmark.thinkWriteCold","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.IndexOfElementBenchmark.indexOfByte","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.IndexOfElementBenchmark.indexOfByteString","0"
"zzuhtzy/okio-source-read","com.squareup.okio.benchmarks.IndexOfElementBenchmark.indexOfElement","0"
